cset: moving following pidspec: 27076
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.397521291 seconds)
loading group "string"... done (took 0.500650607 seconds)
loading group "linalg"... done (took 8.461833795 seconds)
loading group "parallel"... done (took 0.174008547 seconds)
loading group "find"... done (took 3.017603046 seconds)
loading group "tuple"... done (took 1.854583037 seconds)
loading group "dates"... done (took 1.332318212 seconds)
loading group "micro"... done (took 0.190905115 seconds)
loading group "io"... done (took 0.499560815 seconds)
loading group "scalar"... done (took 50.609059264 seconds)
loading group "sparse"... done (took 13.732581786 seconds)
loading group "broadcast"... done (took 1.188467445 seconds)
loading group "union"... done (took 9.237860594 seconds)
loading group "simd"... done (took 3.006024099 seconds)
loading group "random"... done (took 11.25313992 seconds)
loading group "problem"... done (took 2.192819439 seconds)
loading group "array"... done (took 24.987182927 seconds)
loading group "misc"... done (took 1.101740879 seconds)
loading group "sort"... done (took 3.725289927 seconds)
loading group "collection"... done (took 19.127406823 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.597237965 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126890691 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.201926955 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.278728932 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.233137808 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166275805 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142863129 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.239695245 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.683684256 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.200676168 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137009281 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415751894 seconds)
done (took 6.242005448 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253201977 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.238970241 seconds)
    (2/2) benchmarking "String"...
    done (took 0.16182496 seconds)
  done (took 1.166266504 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077326748 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157593463 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108876238 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094864848 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093704963 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10892923 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094154788 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109064237 seconds)
  done (took 1.535557167 seconds)
done (took 3.801030456 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.508624974 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.852615074 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.492394452 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141863447 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.309395072 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.290863736 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.269236312 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.200917528 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.095301101 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.092255571 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174505267 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.389634537 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.381901982 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.932433596 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088033182 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093823516 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.129711593 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.762206444 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080326921 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.121752156 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.489499828 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.187926607 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.099591873 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.120556187 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.18518102 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132915269 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159209673 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102558892 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.666514607 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131930077 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.176421059 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098405254 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.156669646 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.185410301 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.191898746 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.113892504 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680900791 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201122198 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095974899 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10174076 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684743013 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118466662 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.184608348 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103323695 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089723403 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184213075 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.101271507 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.094693231 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095256923 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085883519 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16608057 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.437031321 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107920052 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.169116804 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094459323 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.690517963 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098880476 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.271786169 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.129851095 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.093424982 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091894886 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088781736 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157118499 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095676275 seconds)
  done (took 19.924051912 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145210814 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.164245617 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.079383279 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155924093 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123213966 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079915994 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102496462 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078610223 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124829226 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178400502 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138139287 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150478021 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092437718 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.091268958 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126836907 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249254075 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108725335 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121042608 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089772826 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08994026 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139990518 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096979067 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108421628 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093615918 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170040366 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205352953 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.1138464 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126161398 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.093963424 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099677753 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145249566 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150401257 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093158746 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089417389 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.18762929 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107671223 seconds)
  done (took 5.295266879 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.200095265 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121641788 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.222083007 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.195552004 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1313524 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181484028 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151834492 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.268780369 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.208556929 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1797129 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113741063 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114765824 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081098085 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080829785 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078261846 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.461161792 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149764441 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.18820111 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163787503 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110446943 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08268409 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370710103 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101480606 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084902703 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109080757 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063404343 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.196683414 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093501427 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.127895758 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083735673 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119271834 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132434729 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193776556 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124485555 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138871754 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092850733 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.101264807 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.206863393 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118013166 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078255096 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132231575 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117488431 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13174938 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.105663841 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.106744507 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222238279 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086667072 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127828544 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.027095004 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.185352779 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194922512 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.122408303 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.104424589 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292960408 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.107221564 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.116772207 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.090692887 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.802924451 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.116527675 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084446221 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.105124436 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081551455 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095864527 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.100841683 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.432026561 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104100155 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.182306356 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086248148 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158335718 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096054169 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.118023681 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086854751 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100725454 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.109136298 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085186594 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096849062 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086833401 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079254509 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105860219 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113501884 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10076664 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081976899 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147422731 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113263867 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108560558 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124254578 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.089860725 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086659755 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131305423 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083344616 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.106579016 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.146345794 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.105127558 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09994961 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084646019 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.134622679 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113098408 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128754539 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.104249939 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.232999792 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085041467 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125074905 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101780583 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128375535 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100020411 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079682235 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101712693 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080113254 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081932079 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163248409 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.088741467 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082525163 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.106536314 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096063799 seconds)
  done (took 28.39585056 seconds)
done (took 54.381759978 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.43005354 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080159321 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079251797 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099967281 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081491794 seconds)
  done (took 1.610885152 seconds)
done (took 2.4281254 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.320428713 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190893267 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102294589 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187804513 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085678494 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19286424 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.179261817 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.09431393 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205382193 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083623494 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185562279 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084639095 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104169268 seconds)
  done (took 2.857149902 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101120951 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108104916 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10273486 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122107875 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085384773 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102784434 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121622001 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113574907 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102103487 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114804638 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087045707 seconds)
  done (took 1.974566778 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098591451 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104984411 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097357628 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115576303 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083813122 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095719471 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113589487 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108003915 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09765665 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111740115 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0848074 seconds)
  done (took 1.928127759 seconds)
done (took 7.572274014 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.076077876 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.425780477 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.166799273 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.209796795 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.349014787 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.233982622 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.555435272 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.153770584 seconds)
  done (took 14.133093274 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.125980621 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.154195283 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091240111 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092994378 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091791405 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.114981535 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.09061325 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093895336 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.111098885 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092188341 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.092309261 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.110310422 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091136012 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09583883 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09125587 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.113019744 seconds)
  done (took 2.527903079 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143253742 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.14246717 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098259926 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099120183 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.113819894 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098579234 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102126316 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.115278706 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094683103 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094083103 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.119465177 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09932117 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097192875 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.111114541 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10016425 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118009053 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.11092274 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100419172 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116042793 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.116497193 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100572294 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095471823 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115783807 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099788186 seconds)
  done (took 3.505412871 seconds)
done (took 20.98521149 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148323618 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10279143 seconds)
  done (took 1.073267421 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.13925956 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.155932594 seconds)
  done (took 1.120551523 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111132422 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089659421 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136883497 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.102547655 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091003065 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108739894 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114675434 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108180432 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092787412 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091538161 seconds)
  done (took 1.875638938 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095245859 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095059496 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122104843 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.134127634 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117879558 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094008926 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094824838 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.093646331 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.115657827 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09099175 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094778036 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.126296062 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094886024 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12648152 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095550643 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095224253 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117378243 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094232124 seconds)
  done (took 2.726676551 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091130785 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092398488 seconds)
  done (took 1.0128581 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09320929 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091023938 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091325007 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109853442 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089802822 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088591987 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.11041281 seconds)
  done (took 1.504797348 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.483278249 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.379821597 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.35351798 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108165335 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.145614918 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.349055912 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.146532991 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104241356 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101469175 seconds)
  done (took 3.035466776 seconds)
done (took 13.177095657 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092573236 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.224132754 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.607060937 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.113686165 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090032828 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.160183641 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.28554112 seconds)
done (took 2.410436141 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340083378 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141547642 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082715655 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091099134 seconds)
  done (took 1.484851589 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083528405 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099977215 seconds)
  done (took 1.022415075 seconds)
done (took 3.344842842 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090894577 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089147066 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.088049256 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.106538907 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.089593821 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088687642 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087545154 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.121309823 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.088403316 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.106973806 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.091187807 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089483676 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087111804 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107726721 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089075533 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089145858 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.107362025 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089727428 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088473302 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08695594 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106949249 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088743464 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087687603 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.106629788 seconds)
  done (took 3.162340218 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107968102 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090378385 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109511337 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094072388 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093580098 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110254904 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092921482 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09074195 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109924536 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091139815 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092848687 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.11034834 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091872447 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093679421 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108695149 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095210992 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093177207 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091311527 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108873977 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094554488 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092849952 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1090183 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093372226 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091940011 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111248178 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093721056 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089599247 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108455829 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093441112 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093450979 seconds)
  done (took 3.787203221 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097685325 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085907898 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089556419 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116408588 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086446324 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089250632 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103677941 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088101885 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090395456 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08750786 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109215692 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089383337 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086943065 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108216501 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092378726 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093865954 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114704123 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08724421 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087353791 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089670521 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.110581942 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088092841 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089088837 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.10778698 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.090682043 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087067547 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089218425 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108123804 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091866316 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088409218 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110779947 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093498612 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090511181 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.118018442 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093163953 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089657465 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093754053 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104678686 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09055726 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086950731 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.104613642 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.08999199 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086715028 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.095632455 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.109371819 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09063381 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086137456 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108749661 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090684648 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092850208 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.10410513 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.087648568 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091891801 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090472877 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110152472 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088339999 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090401863 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.104155025 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09115129 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089580856 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086029961 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.105179578 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094861198 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089041825 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.121656322 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09690756 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087092697 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.109607032 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091089352 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094703669 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.109653804 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100398665 seconds)
  done (took 7.751635705 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102869025 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097769336 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090725208 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109910803 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090700802 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08922318 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113925052 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092062961 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090904773 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113770297 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09095068 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090753448 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108773667 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092773666 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091277452 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090474269 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.1142696 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091259875 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089900859 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109458155 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091056494 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095112501 seconds)
  done (took 2.996333976 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235480819 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097007224 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138819713 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122215531 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107343099 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120843722 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095194499 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097301969 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112129016 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100270137 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103004522 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113480515 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108962645 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116235467 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102669124 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100461137 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113086989 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102247901 seconds)
  done (took 2.936162227 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103670724 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091869452 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.130039522 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093297918 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092367259 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09484636 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116481574 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111201208 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109876839 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093970678 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098837728 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109434916 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09365175 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092889369 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091407981 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111490027 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093257434 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091136498 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11701938 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099301831 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096744982 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119005414 seconds)
  done (took 3.102680878 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106111012 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091941309 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127588782 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096830632 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09177515 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10900359 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.100131006 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092425553 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.115957098 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093009574 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092331728 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090143724 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125494136 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093111529 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095965538 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111470598 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09229474 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09259215 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112111099 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093393003 seconds)
  done (took 2.875488889 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.168396686 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12600371 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108586955 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115666034 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126721725 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108560535 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11439537 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127134134 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107722986 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13784837 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10887662 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107396851 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134457064 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112735124 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126205551 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115686822 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115345375 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133516798 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107229157 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126403162 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120976997 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108151358 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133802907 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108119893 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107695473 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126333348 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107517469 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130182946 seconds)
  done (took 4.226119148 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092602081 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090312607 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090023683 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.10878313 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091869299 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090019843 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089531893 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110509369 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091005857 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091722943 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109902101 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091639187 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09125878 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09055511 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10902537 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091411133 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090684806 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109364838 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092082339 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090878869 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090363998 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109874818 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091215261 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091171881 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108340678 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09149569 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090516772 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089459294 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109508143 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092131385 seconds)
  done (took 3.731808241 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103116938 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101556255 seconds)
  done (took 1.063972622 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099747638 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104595061 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090584087 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10998761 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100033668 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090924654 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119252503 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097954983 seconds)
  done (took 1.672259237 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.141078101 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.162073445 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096920371 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10164496 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.160236366 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.15215763 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133432181 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096608511 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108785555 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085679797 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.154590563 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084735803 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091752038 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08931169 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.112984974 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097912115 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.091947402 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.12161068 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100037076 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.092964639 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115448987 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097527117 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093902483 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.123044215 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086971281 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093988108 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115267943 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104195395 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088242418 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113633863 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090187794 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091347692 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.11446096 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095692233 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092720541 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.160428339 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098015656 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109252203 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09354937 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095615035 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.144122941 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093877422 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.093854714 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109292261 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097180592 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095257043 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.115362682 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093823811 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085136256 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106635651 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094263064 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08865647 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090935388 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112383802 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093013625 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11531656 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094691597 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088736522 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087749812 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106706651 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091960566 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087620355 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.1136576 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095114335 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091801819 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.112454558 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092662535 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.091824634 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.113383335 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093724624 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091224012 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126015302 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094553348 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.096088372 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116417809 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093854855 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088822611 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116551917 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091829338 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092394396 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.115474261 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122461122 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094015467 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107411185 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089491775 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099346767 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.112712732 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095635528 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086026091 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119514971 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095140127 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093805048 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084820009 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110685144 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088879704 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.095244663 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.105599843 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093168318 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091740368 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.116270014 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098571165 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090630096 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113375012 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097814166 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097761763 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109881896 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.13774788 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08895216 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108108591 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094389269 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096005408 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.106879673 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.093207488 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091484597 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109297409 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089244961 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096706963 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.11136228 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096007021 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096347335 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113429458 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.0956342 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094011655 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.109783324 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091287089 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095964018 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099421043 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.113779287 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.095089273 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093051275 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.113269415 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093429975 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.0955868 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.108985031 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098854319 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090830438 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.112483759 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096152854 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097499035 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.110508816 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089652394 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091447665 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111522063 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093702857 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095429951 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11247559 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089548018 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085877213 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111280938 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090358518 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093733744 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118773916 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090572081 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095577278 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088588338 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120172116 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090969927 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096992741 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115127381 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098648516 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097435808 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.105099246 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090612461 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095653199 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.113837552 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.091485492 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094780793 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.111220942 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101344085 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086497969 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096502034 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105432565 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090517413 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.096678982 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.114775795 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097224326 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089718075 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152130696 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105700985 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098121579 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.11143001 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09367545 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.096238588 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.111480801 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09856471 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098004268 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.116518955 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09110719 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091576455 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116912648 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.091028893 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09587444 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090616865 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115089218 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085586078 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.093084854 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105076176 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09843464 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09482881 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.117713687 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.098513647 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094840501 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111092777 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102821285 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089789701 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.115877239 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086613169 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.097869679 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.121471739 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101632144 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097906855 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112846519 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092015702 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093933143 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100408331 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114495635 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094998498 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094329475 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106334508 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088498983 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.098228115 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.113710562 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091176318 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09284796 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.121351712 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096538888 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09085952 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.10484153 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099492237 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096962998 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088314521 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114834499 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088995911 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091534347 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120782433 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086131557 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088744024 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115826951 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099667567 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093242099 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112562694 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095899391 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098395732 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.114385629 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096908654 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090853175 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11998386 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093242426 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092695851 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.116556222 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097914689 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087239602 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09601961 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.113134082 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092483091 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088659051 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116515014 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099758398 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.096783629 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112359182 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098101338 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099946327 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.117674385 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09235018 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098605385 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107429111 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087908453 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090333779 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104863363 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096345647 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089178767 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.098624521 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111947548 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093192581 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.096997745 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114679862 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091287006 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098598991 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123907639 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088081447 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086550626 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111679572 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094240908 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090341705 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.110343792 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096389801 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094927823 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.117838833 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098040332 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090317965 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.113240169 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10111008 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090678997 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.118392585 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101256853 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100364052 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108250251 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099806192 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092056073 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116457033 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089270689 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093605782 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093398236 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114583011 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091399464 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09224128 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109927311 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08888474 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090733799 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.119708246 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.093290816 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098439657 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112735663 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092786579 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090933734 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109786107 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100929338 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093663227 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.120239514 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095707859 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087567116 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087777467 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.119198227 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095160444 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099416034 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.111013983 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099595627 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100411799 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.117242675 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096203877 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102566047 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121324947 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102526967 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10039116 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.108033513 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.093372002 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098197899 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.11481402 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098557989 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095915659 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08752445 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117141848 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099656717 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094423029 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113409613 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088462352 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094522156 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.119244947 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098742053 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098514207 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.115411636 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097074371 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089278726 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097405894 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.11962573 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094857882 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100167349 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114620699 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.09859298 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090506779 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.120011098 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097513356 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088670173 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.108500373 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092751881 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100711733 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.107323179 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100013907 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099359419 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092070326 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.114272786 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099525297 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092128544 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118081954 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100874533 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092239242 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124579765 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.097076011 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091928127 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.119255834 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100410546 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088903067 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112584203 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094588968 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10138987 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112798743 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101335441 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094654116 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098979355 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.119128385 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099516193 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099299855 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.120339146 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090092189 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10155901 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118459528 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098517318 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09213981 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114280054 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.091608787 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094178453 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.119620058 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.0938395 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103593518 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100402904 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.114461418 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09428124 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100059785 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11577803 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102986436 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090952373 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.1172134 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.09015167 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096444528 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.114126914 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102904796 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092089843 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.110641226 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102297772 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099036191 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118545867 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.099657437 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101511775 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.107838282 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090560311 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099177815 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091843313 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124366749 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098483618 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092867282 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114066736 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097676065 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096680903 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120957779 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091084982 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091518767 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.117357791 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097643594 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092971712 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.109377734 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100358728 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094705533 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11609583 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.095637334 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0899341 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113052379 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102827871 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094561422 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090734171 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.113087964 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101943591 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094149971 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.112880438 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090167234 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10006334 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.117390107 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101990227 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092014507 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.116227371 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093481914 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097360071 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.124679445 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094699661 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095132185 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.113427089 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101371521 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100196187 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108459566 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.094117367 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104478907 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118957915 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.098773347 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.09751633 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.114754347 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103823764 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102100451 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097626345 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.109952826 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090956511 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094089901 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.11106909 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098965416 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100767624 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114353357 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094589602 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09939299 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11883084 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099677014 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098776419 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089557011 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123023019 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093006733 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098738971 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.109924121 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090500209 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097606449 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120663894 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096135031 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096790643 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.116957035 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100018652 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092430047 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092936173 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120085684 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100352683 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100603941 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115517163 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094306099 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098133026 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125329635 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097705558 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094893663 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123048329 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102757487 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095711511 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115928228 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100708235 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101600374 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.118654585 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102958374 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093816348 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.115654313 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103044449 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103240257 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124883438 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095749532 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08999497 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.119585817 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094687758 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090184756 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.118693182 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104354463 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102613116 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.095597381 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.114423854 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104449815 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099873259 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117023021 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.094167837 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092590725 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.122070459 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094711851 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098690425 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113397471 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104411584 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10229273 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121561319 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104507369 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090949496 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120775783 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099915314 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103764317 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.116214075 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.09199738 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090392909 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098464143 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.124321521 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102473301 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098464366 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.119960881 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101329099 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096645432 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11688151 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094620662 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102254617 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.120865309 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098754429 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098245794 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094256403 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118605219 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099172575 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100830316 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.123726719 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097949182 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105081361 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.123497146 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095712528 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094716685 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117142331 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099424906 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096804615 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120468047 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094218569 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090425746 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101116704 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.124986533 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095958077 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103154503 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124853183 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095399881 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.0986887 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124235874 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10321913 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097474028 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.118563403 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10012017 seconds)
  done (took 61.922326272 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145639596 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104870482 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118820985 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09891518 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115442205 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121282835 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098781696 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099800319 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120611644 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108645938 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097663538 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118173733 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115559257 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138397675 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116884264 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107748034 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120313966 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100765325 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099065944 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119744042 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115765742 seconds)
  done (took 3.292592616 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117171969 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111176187 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130003444 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113675891 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104380076 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.13096871 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109951849 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129839256 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113652266 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105435217 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133461973 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110029698 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127908072 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10838689 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107072823 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128983463 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113391784 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105408633 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131608707 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109475106 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12806113 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111705951 seconds)
  done (took 3.49319316 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129191856 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101601402 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096382334 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119542348 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103123267 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098950094 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122838436 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100293757 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106174276 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.113465065 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.09189653 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094488148 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096176453 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.120186031 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093788537 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099376394 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125684052 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10286208 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10236286 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097509751 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111297671 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099640604 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098711374 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110364956 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103711437 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102830511 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119267168 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103352341 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090397578 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101068443 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120006631 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093629786 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090102041 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110253029 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091350322 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101961967 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101135049 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119861228 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.09980638 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089596132 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.120444234 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103900789 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090911662 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.11867416 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100827199 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.0934766 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100776157 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.119594398 seconds)
  done (took 5.937374957 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127589918 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164392755 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103590803 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.137363842 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135264454 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108932109 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.123724458 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137243975 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.1013767 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.12392058 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115307839 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.133938719 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10596189 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.10697666 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.125890577 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105069474 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.342028093 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.121636081 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109687197 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10355017 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126811337 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105754782 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112510852 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132234352 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105365764 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102052862 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124444911 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106584036 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110025694 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.130720342 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106230821 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125895358 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.115362849 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104458864 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123966087 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104443616 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114214468 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124820883 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.10403861 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100346721 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.124253884 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107315467 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103862596 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13563296 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104212207 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102819112 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124244874 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101040985 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.131579273 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105967179 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109654741 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.13371149 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106182523 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103743233 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127004735 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.114374953 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.106819699 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.122380795 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105229765 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110317112 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.122344524 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106127341 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.130569804 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104888808 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108432916 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133116538 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105147002 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105575378 seconds)
  done (took 9.140414448 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133752952 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104953056 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134593898 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114985891 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106043668 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127432886 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106248722 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105387337 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128003722 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111159689 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126758464 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.197202506 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12507459 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112890172 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106314985 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127975429 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107171015 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106483538 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127871797 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106386969 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.105931181 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.136826069 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106018023 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133808463 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117426905 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102347725 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127257414 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106131055 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13375477 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108514112 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116692405 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126910245 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108878251 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114312051 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138325743 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107086252 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122476616 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108074818 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106747632 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127729431 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104220302 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113256743 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.127984627 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10465507 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106654257 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128239254 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115370469 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138878954 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112543555 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111306452 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128246452 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115278342 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105639755 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12970519 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115659356 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143357714 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11544164 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134028894 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107554732 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.1138172 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134984552 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121565993 seconds)
  done (took 8.325106798 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100868617 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099170318 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100095812 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120502198 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100447455 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099962483 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098795557 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.123656455 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100657893 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09905741 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120879875 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100865867 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099970675 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098699215 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121653494 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100151472 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098955871 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.12139567 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101520957 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100478666 seconds)
  done (took 3.036593101 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109924335 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116974404 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122549757 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109063923 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101948719 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129194161 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102978272 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102610157 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100891233 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125765476 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110032604 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130530844 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103439806 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108262993 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129853327 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108885149 seconds)
  done (took 2.7417127 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120890397 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117334779 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.187588461 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103216691 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123836588 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109763799 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102725715 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.12536686 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102021692 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107689485 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104460942 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127912333 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103750223 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10185523 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12413905 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106261152 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100868105 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12739828 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103358593 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.184296709 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106574344 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104319937 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123659599 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106583767 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104571683 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126547896 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108930812 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103000548 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124450835 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104776975 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104960086 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.1290086 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102859017 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107851429 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103632645 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.12557335 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103191957 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10233433 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126683981 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103423683 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104436304 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124465921 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103916015 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106017057 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121794932 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103920821 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100513614 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.128587102 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10540724 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105050047 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101998326 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.131137107 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106663184 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109326746 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131190248 seconds)
  done (took 7.22476281 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113997296 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104026258 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13410778 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103350116 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104175968 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103467063 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125700471 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105000677 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103001699 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121868739 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10486664 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104067261 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125918835 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103874522 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104344761 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.12544835 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102400413 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104462789 seconds)
  done (took 2.927121775 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107874677 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103019302 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105555945 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124257891 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102705405 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10157347 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123058026 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10215723 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100808729 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123942842 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104374999 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103432842 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101570618 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123659807 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103905547 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103172928 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124634723 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102895938 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10234126 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.12252872 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104889393 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10249336 seconds)
  done (took 3.33254675 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113290381 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.182412223 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10821986 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.189943953 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098832037 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097426898 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130220808 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099945376 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.11402147 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.12070425 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099869264 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097248298 seconds)
  done (took 2.390278267 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129993268 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139108276 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12431827 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104345437 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109579852 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129311553 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108154809 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107341888 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136604942 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117921701 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128644632 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116516775 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113268175 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136476437 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110878794 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132667036 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107815402 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106988588 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124674109 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123030474 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106693184 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13674094 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106726084 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12838355 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109826081 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115185845 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135483708 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119770005 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107064929 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13864041 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111142915 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128108096 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116447307 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117656534 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12647702 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115017689 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128108977 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123967403 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111437654 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137076228 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104469418 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110522419 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136734302 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112880393 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13649101 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109263787 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111130479 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129524609 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108248318 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149321172 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112505665 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115281186 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133731669 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115675068 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13616612 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129837985 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141254635 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116826913 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110312549 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140208104 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11554582 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133389529 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1161017 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139522369 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114309334 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114948495 seconds)
  done (took 8.96338209 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146560874 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104413979 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130730508 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120065044 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136675299 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110014076 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107838648 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128807305 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110595773 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1042637 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171032519 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108705856 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138020251 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118352702 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108549799 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129305242 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109647245 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115234021 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127012447 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128045941 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129334385 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116268977 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115424186 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137598709 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118056056 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133296848 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108827087 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108423692 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130492615 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108431794 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113753615 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131031576 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11582547 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125797688 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117725424 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10844429 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13035746 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115241705 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107535817 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135171129 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117171475 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144304812 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108678796 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108564523 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1414682 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108672967 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107407357 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127899126 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109164989 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103701906 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141985962 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11922106 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141809241 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116401152 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129064499 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110024474 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108396095 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130918833 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109662681 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113107638 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13814884 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109731274 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150742165 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109488263 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109004087 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138308916 seconds)
  done (took 8.960662885 seconds)
done (took 169.834244255 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.148254762 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.184474407 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.143517513 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179623323 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094924003 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128773739 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.149121765 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147308707 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093191808 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116741996 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095954119 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095411919 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183854632 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09598646 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094271992 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.117778785 seconds)
  done (took 3.008845577 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.192781944 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305960618 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108807142 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119912219 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100870798 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098114765 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120915485 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101227999 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098913388 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12755062 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100898656 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094630066 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126681652 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096336284 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099344503 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120488137 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10686195 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099087129 seconds)
  done (took 3.167652809 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118527632 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144049881 seconds)
  done (took 1.217553947 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129279915 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.210894139 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278405912 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168306106 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119622916 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139565748 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147315122 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133199461 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.18801556 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133538834 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112164943 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096863153 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147165251 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105189801 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.137131735 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098534741 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125837475 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13539563 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114458746 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101889099 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144711338 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103742665 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103597354 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13522913 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.176997249 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134179279 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.1039056 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10221474 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124256142 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113647219 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.127355396 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117941752 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111311756 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177578369 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101596263 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174321987 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.128079241 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.10172267 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114135313 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122190883 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104688206 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103772824 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135901022 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099710171 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.101935029 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128614874 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103997785 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101354017 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129260561 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107211456 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128707578 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107871693 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.171728688 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10848911 seconds)
  done (took 7.926532145 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.85127083 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140317383 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099839751 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.999059831 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15051023 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114174206 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.847565907 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147607059 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251710311 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.87533099 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11657122 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11266377 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.256634415 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.255970878 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.284126494 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.353105352 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.713303165 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114910971 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128015826 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162849251 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108843236 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148367315 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120115027 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.514422301 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101962388 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121643226 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11019184 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111858396 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.1755958 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099678082 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.131993711 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196152402 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.267634176 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206038135 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124438078 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100477402 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099565 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184284981 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264169225 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214255273 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.197571984 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098036391 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099433166 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133170117 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119484216 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119192122 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155959167 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190567048 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189362139 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104819771 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.136893466 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113274143 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129923313 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.156105218 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120372922 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.355618445 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358458769 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100513805 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131666464 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115776278 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262111941 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124488258 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231746991 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126896307 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209198146 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121494813 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82852255 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160980731 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122242127 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108996713 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107609511 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129996135 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.109662993 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.189468828 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.476778638 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13610203 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104575328 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121875721 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208044675 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124145937 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100752276 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18063461 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101616242 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130613246 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116253543 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113213648 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188431747 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.270190537 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.113105996 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133660205 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106720236 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135234603 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103005567 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.229544402 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224210567 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.171964862 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207881112 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133142471 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179718974 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162688753 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130425976 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.165123269 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130623026 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117032919 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1306865 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221780279 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133399534 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.128258994 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106891727 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109312277 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159551786 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105086786 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132106794 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.16254194 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.549703406 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182840648 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097233301 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128356894 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112077028 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178352865 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108430859 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258516022 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132089988 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161680946 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131057758 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.099054383 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109262484 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179276177 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132840974 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110867237 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10835748 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134697596 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.276225134 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219431068 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114836316 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250070865 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.199358346 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110090667 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192791912 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109588126 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187369209 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110447494 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131810376 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103149434 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817784013 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137926788 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110507718 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105521127 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205992777 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100362797 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125863506 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10293181 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09836958 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811213566 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104695592 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.123034104 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103940122 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107122064 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.132597116 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109507397 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128823558 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156005317 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.262745962 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115892828 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108660476 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125349118 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.154623525 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.126012349 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101721187 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101345464 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124813143 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11147138 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105967635 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128871078 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189772196 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154271689 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.224469111 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.67006189 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103266607 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101767151 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236722368 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123921904 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.323400402 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109804713 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228363732 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183789766 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098760375 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.376369443 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16236443 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.206470507 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105938839 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189229793 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098713307 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132270796 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.154698601 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125030234 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109315682 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175751062 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.117020955 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1383166 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.274901543 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101634901 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250099026 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098100067 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.187983335 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102320088 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133140009 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322848641 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101069541 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142730138 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.177962814 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109249405 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104242007 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.625990611 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102107869 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137271387 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109474295 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229426542 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.182869512 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131908623 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112792658 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.1143894 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.17907701 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228212288 seconds)
  done (took 47.682263103 seconds)
done (took 63.949558003 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.263091443 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174862281 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.280589483 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.175435718 seconds)
  done (took 1.941326043 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.239630665 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156469426 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.199640076 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.121025885 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.204350913 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.121183889 seconds)
  done (took 2.023492751 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.173293289 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166503081 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144088493 seconds)
  done (took 1.456690182 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199026172 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214971813 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.322665205 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.230576243 seconds)
  done (took 2.035088495 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.260937819 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117024574 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125826929 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.206016175 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.218991938 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.197260324 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123237657 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.169956663 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129385473 seconds)
  done (took 2.57151663 seconds)
done (took 11.004306246 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.379204272 seconds)
    (2/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.219046369 seconds)
    (3/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.333372397 seconds)
    (4/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.170897638 seconds)
    (5/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.109671444 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.139025439 seconds)
    (7/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.304602502 seconds)
    (8/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.257621573 seconds)
    (9/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.229133711 seconds)
    (10/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.191076579 seconds)
    (11/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.28315198 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.220355875 seconds)
    (13/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.133693501 seconds)
    (14/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.274506348 seconds)
    (15/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.368560467 seconds)
    (16/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.332212349 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.201069489 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.152543101 seconds)
    (19/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.359618843 seconds)
    (20/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152838608 seconds)
    (21/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.096810048 seconds)
    (22/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.217048087 seconds)
    (23/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.188364203 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.144021871 seconds)
    (25/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105965328 seconds)
    (26/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.179584957 seconds)
    (27/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.20314224 seconds)
    (28/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.128115829 seconds)
    (29/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.153790661 seconds)
    (30/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.169827384 seconds)
    (31/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.184571189 seconds)
    (32/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149762818 seconds)
    (33/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111398996 seconds)
    (34/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.192338632 seconds)
    (35/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109661203 seconds)
    (36/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.079473847 seconds)
    (37/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.076286135 seconds)
    (38/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.206503145 seconds)
    (39/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.083485798 seconds)
    (40/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.125047023 seconds)
    (41/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.154904299 seconds)
    (42/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.081920928 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.193605155 seconds)
    (44/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.111720904 seconds)
    (45/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110252666 seconds)
    (46/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.158489147 seconds)
    (47/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.164962453 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111373723 seconds)
    (49/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.076148612 seconds)
    (50/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.140606548 seconds)
    (51/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.139500446 seconds)
    (52/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.152357223 seconds)
    (53/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.144125364 seconds)
    (54/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.169400176 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.082596238 seconds)
    (56/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.103629376 seconds)
    (57/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.083955615 seconds)
    (58/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109880147 seconds)
    (59/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.311383908 seconds)
    (60/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.159935035 seconds)
    (61/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.103866782 seconds)
    (62/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.142588573 seconds)
    (63/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.106210997 seconds)
    (64/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.081866809 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.147702236 seconds)
    (66/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.177559086 seconds)
    (67/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.133140532 seconds)
    (68/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.077652272 seconds)
    (69/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100864626 seconds)
    (70/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.144882086 seconds)
    (71/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.268285724 seconds)
    (72/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.14783592 seconds)
    (73/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.210643168 seconds)
    (74/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.116990343 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.127370025 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.107454724 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122087329 seconds)
    (78/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.133976379 seconds)
    (79/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.191186783 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117521762 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.130520418 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.130446186 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102041085 seconds)
    (84/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.154085002 seconds)
    (85/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078093456 seconds)
    (86/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.076909727 seconds)
    (87/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.122955102 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.145950054 seconds)
    (89/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084694181 seconds)
    (90/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.082434479 seconds)
    (91/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.082708326 seconds)
    (92/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.137516202 seconds)
    (93/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.13621893 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098308386 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.135465742 seconds)
    (96/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.085757006 seconds)
    (97/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.080973017 seconds)
    (98/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.209418129 seconds)
    (99/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.123210805 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125668376 seconds)
    (101/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084528817 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.128072911 seconds)
    (103/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.084476897 seconds)
    (104/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.080408431 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.101967126 seconds)
    (106/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.104173062 seconds)
    (107/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.085493699 seconds)
    (108/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.140123702 seconds)
    (109/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.142845572 seconds)
    (110/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.138481131 seconds)
    (111/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.080513388 seconds)
    (112/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.082568432 seconds)
    (113/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.152519598 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110533496 seconds)
    (115/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100988772 seconds)
    (116/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.077417337 seconds)
    (117/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.13460879 seconds)
    (118/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.161517934 seconds)
    (119/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.083314429 seconds)
    (120/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.127444667 seconds)
    (121/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.084504047 seconds)
    (122/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.109820096 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.082857904 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.129946304 seconds)
    (125/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108461062 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102698286 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.101107315 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.113386643 seconds)
    (129/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.136894833 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.083468591 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.148005478 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123878957 seconds)
    (133/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109249947 seconds)
    (134/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.103482019 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104543574 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.102387983 seconds)
    (137/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.0804179 seconds)
    (138/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.134518524 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111675542 seconds)
    (140/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.081863098 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.129382293 seconds)
    (142/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.10665943 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103661619 seconds)
    (144/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.078108593 seconds)
    (145/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.126709404 seconds)
    (146/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.084474478 seconds)
    (147/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112118502 seconds)
    (148/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077898364 seconds)
    (149/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.133758522 seconds)
    (150/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078638298 seconds)
    (151/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.079304257 seconds)
    (152/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.137422446 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.126305603 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104327303 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100721177 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.127282475 seconds)
    (157/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.130414847 seconds)
    (158/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.082932211 seconds)
    (159/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083563141 seconds)
    (160/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.124709659 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109978616 seconds)
    (162/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077859483 seconds)
    (163/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.102167121 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.147469276 seconds)
    (165/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.077610515 seconds)
    (166/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077245117 seconds)
    (167/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.078300408 seconds)
    (168/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.106691014 seconds)
    (169/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.14034574 seconds)
    (170/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.111620205 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.103043179 seconds)
    (172/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.103307985 seconds)
    (173/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.08194547 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.10336623 seconds)
    (175/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.077113599 seconds)
    (176/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.101204967 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123570932 seconds)
    (178/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080278659 seconds)
    (179/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.080450095 seconds)
    (180/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.076846335 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.134113167 seconds)
    (182/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.134328779 seconds)
    (183/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100016657 seconds)
    (184/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.135549743 seconds)
    (185/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.078663009 seconds)
    (186/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.081561206 seconds)
    (187/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.099762022 seconds)
    (188/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.108422492 seconds)
    (189/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.083489821 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10332441 seconds)
    (191/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.079718882 seconds)
    (192/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.07684579 seconds)
  done (took 26.411201183 seconds)
done (took 27.394386936 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.203715715 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126093968 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111119691 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109125304 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.200215002 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115890498 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.150918018 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111833314 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119504129 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.133895954 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101344299 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122242151 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133381765 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.178330819 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.13595092 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103869075 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100977413 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.120189952 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.151291141 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125700861 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.201653251 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104112841 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119562438 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.126971342 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.175674004 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128149643 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110069265 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111067747 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.147152795 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111969076 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.11095427 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126788747 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127762251 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.125309796 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125787556 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112470605 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101401256 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084002545 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.135906063 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112506487 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121879439 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136269868 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11148743 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102014147 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.136371638 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111335152 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102047683 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138347456 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101715989 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111123871 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128379205 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127331826 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110643249 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.12368141 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102298544 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102771116 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.144404046 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103799798 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123447081 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101679132 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.128145896 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102569543 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11221361 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12658148 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111999531 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102592344 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.135609343 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117596325 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109796306 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128492159 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104075517 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110298421 seconds)
done (took 9.903284514 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108738916 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147691839 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.199118399 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.209964743 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129938425 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115703932 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.143034204 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126970592 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138781258 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12252859 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139556664 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158306786 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.182380377 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.143395467 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118475989 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113312863 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.139524001 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110976452 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.207547896 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126875198 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150925849 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119434204 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129467114 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143985928 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106537875 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.136882606 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.136157427 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115915881 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105902573 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.139962187 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127301745 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105216329 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.1349598 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124796442 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123624057 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.141551712 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117391966 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.137405665 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108897697 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106925982 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.138077728 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12269773 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106838225 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.14183943 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115404931 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120619637 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.138017237 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120564504 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108159433 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.13750338 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109513916 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132183606 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143855939 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12409012 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118749676 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.143505355 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121281436 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118467878 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.134232751 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119702026 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106743117 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.130840083 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109691391 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.12770891 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.134579677 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119898896 seconds)
  done (took 9.65357439 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126227608 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135607879 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140762662 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118378287 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110419272 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125811357 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101364843 seconds)
  done (took 1.88872461 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103154881 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184047512 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208892819 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209025435 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.179794652 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.217798569 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149853692 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103117722 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136707709 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137798038 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185771729 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.237506908 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112027041 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142874683 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.186605839 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.128247598 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.186889943 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.129745754 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116563075 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210809838 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118695535 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.157575347 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117293921 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10222341 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.20529995 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102877239 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.261174064 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119819478 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13757898 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.117538983 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116633773 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204657757 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.206088248 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116579946 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109751818 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210021838 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.206270207 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117411693 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.219819405 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106963599 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.204970344 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117472026 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117632314 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.141496285 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119353716 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.195915154 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122440454 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.117496902 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.140366494 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.189543037 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.137476504 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183153566 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.13915877 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117438355 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11254017 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142656742 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125793137 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117427478 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.215704633 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119371916 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.21008279 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210664694 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.18293686 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210096893 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125914032 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210227468 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.20005687 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116558999 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111980004 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.143184846 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186011861 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.140258832 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115933165 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.199201387 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120602032 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.211324092 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.186027885 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141880101 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.11635909 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.105743948 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.141006761 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104389419 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.201065938 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117189994 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114577579 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145231241 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117275392 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116461562 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.133537727 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127922493 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115982213 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.138618615 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122742957 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115992892 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143879227 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.212938775 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114225611 seconds)
  done (took 15.760369485 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.10673207 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105335146 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108053663 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130362473 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104637772 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103874912 seconds)
  done (took 1.705097112 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142011094 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117609141 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150500775 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120031183 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16118812 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.216315482 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.21945611 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111657615 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.157816964 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128363434 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.215088059 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.191903473 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.216246977 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120100645 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.219719321 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118835419 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.221522843 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115361251 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.15169854 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11609072 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117119116 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146961815 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115741446 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.20831976 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119776921 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.11835675 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138022153 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127290621 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.151197084 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113179435 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120616178 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143888053 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.131837719 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.113106056 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.220700473 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110596511 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139792996 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121352494 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120189072 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.145077986 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.194148256 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.141120799 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124531727 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119893535 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.139023611 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111159659 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.145622748 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113714395 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.220980787 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121952288 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121284359 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.143933354 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120830131 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121024652 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.138559667 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113551553 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121083384 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.222665065 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120956891 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.139417388 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118944301 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.11939638 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.139468197 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121581333 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143237959 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122565155 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110178578 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144330904 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116965085 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117933486 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147610678 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120179366 seconds)
  done (took 11.300323013 seconds)
done (took 41.32775835 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.651957038 seconds)
  done (took 2.694089211 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.881874537 seconds)
  done (took 1.921643157 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.375781967 seconds)
  done (took 19.446425875 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.425314379 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.469247355 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.119020405 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148696882 seconds)
  done (took 3.2062256 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.821412165 seconds)
  done (took 1.884531948 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.280641909 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.25756331 seconds)
  done (took 1.582590173 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.736660292 seconds)
  done (took 1.796110559 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.502586979 seconds)
  done (took 2.553214847 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.283522422 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.240935815 seconds)
  done (took 1.588271138 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.605076398 seconds)
  done (took 1.669364129 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.706513886 seconds)
  done (took 20.772227946 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.257058083 seconds)
  done (took 1.321811391 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287701654 seconds)
  done (took 1.35553844 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.631158982 seconds)
  done (took 4.700424106 seconds)
done (took 67.548090807 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115901814 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117033278 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115821211 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.141474604 seconds)
  done (took 1.545753383 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123112834 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119047928 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145105683 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119327885 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125668325 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.143507665 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119863328 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119529935 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117513951 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147596794 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12036426 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116624601 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146070741 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116966075 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115158009 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145685965 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121255616 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11717977 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143727242 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119824476 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118273348 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145442647 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121774588 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120048374 seconds)
  done (took 4.119948095 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115734162 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108220869 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110827366 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133202513 seconds)
  done (took 1.542341992 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127210946 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.12913141 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15321179 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125135612 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128802762 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155160721 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11926953 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115029609 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143213897 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125584549 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.13300613 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15634281 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128477684 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118645157 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154972959 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112287488 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118636545 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154840883 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124818454 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.150603368 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119931029 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124173851 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.147145085 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128342583 seconds)
  done (took 4.262236645 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190312245 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128373961 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173875412 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160555324 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.17643523 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.116169284 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.144596175 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148853976 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124529253 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.118446489 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146259615 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160737582 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150337329 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120047371 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11774717 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148793974 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129266926 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123125688 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.189486662 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123702834 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149648845 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131538229 seconds)
  done (took 4.248616254 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122020643 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108853269 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.13009706 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.111652538 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12088203 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.135567228 seconds)
  done (took 1.807117331 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10930832 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103697519 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104490912 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.12869359 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108725765 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103208418 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.12716237 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.104322169 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103006069 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102993688 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129037418 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103273205 seconds)
  done (took 2.399211101 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.331628344 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108559726 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135237627 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111450128 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113928833 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105768918 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.146011365 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107393857 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.267676572 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102796252 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.131972313 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195811175 seconds)
  done (took 2.939293934 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199005272 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145919879 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251209087 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365491262 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185901818 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158320127 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.294745288 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189229056 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174505876 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162376303 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182358207 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185755417 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150701916 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208986515 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137262608 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.18174582 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160346548 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230516493 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164504429 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206331524 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181655854 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171112779 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211524076 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172811243 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138783509 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183681044 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120004717 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126632138 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189043857 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161093913 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194917852 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17220467 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141383707 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213079828 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222690032 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196776358 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270054375 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158275042 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167114592 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.215549014 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253623555 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14128086 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212021311 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150185411 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155290709 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179767889 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178915566 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.206016883 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134131268 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143205281 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203590622 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201339492 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173502412 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160740579 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305224018 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133794429 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141107388 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191149952 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209703998 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197087475 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201180937 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121474337 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202971315 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21537198 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206281801 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168564581 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.18441303 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125527789 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162828125 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.227107887 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204492974 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157670203 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.225679831 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156208479 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168496457 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193712327 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151764031 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227654473 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193332126 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120046713 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147656009 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159220827 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126589154 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.212132542 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121954456 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238355044 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130744309 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342173886 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2095441 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154858 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18578788 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155663853 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187539922 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145268408 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126759009 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142673204 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184805613 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157865064 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126449512 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181720875 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138303274 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.152900166 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150337461 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.146568674 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168787372 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13039452 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189337127 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19169091 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132475267 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201592739 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148911107 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.186132782 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165543288 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217214308 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129745015 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157995895 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215980197 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196240006 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136480475 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199429816 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219207565 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.149146156 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131719658 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188808847 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21846415 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142039522 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223798671 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136438214 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161689956 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135710132 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196802727 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157206235 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.181985963 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127310727 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.190457197 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187863268 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153626711 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13924943 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206377041 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133277305 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12279283 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165521217 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134450431 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.16827419 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146954975 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.164122129 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154031701 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189223987 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164686403 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179908421 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134325414 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195480537 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131017823 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.192669666 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150204745 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117642947 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.198731373 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221188733 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128840584 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204869652 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160949144 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210866284 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197574822 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129283018 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207010988 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128187369 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119962947 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183521346 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169352753 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186500653 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210684671 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180527533 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191231798 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187320129 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147708538 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191773025 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.180072209 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181138824 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142112405 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197433277 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165696303 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.14821784 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123516535 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.125975321 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164058406 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128453754 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162607868 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172601054 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189320799 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205036972 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165877739 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162675747 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188320968 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.151230194 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158558459 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.199665809 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138238068 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214380621 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186425088 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202794225 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138927126 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185461211 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119998015 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153770624 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13288094 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1882958 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137676943 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13452596 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167758483 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215699975 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17040693 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173032577 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219211449 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163102734 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224930504 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119697715 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.18475632 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167605616 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19170483 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182202521 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133432004 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.185812169 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.214882838 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141214315 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218016296 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166803516 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203678809 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218554534 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164004704 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128769954 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17429581 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158431103 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163974712 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160407727 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172667345 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131103481 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177143341 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137301735 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138633213 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205929308 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16936105 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174597966 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.185725395 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167897444 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153836258 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139211828 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200859037 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143201083 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103330146 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19390367 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218210849 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147244609 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181216557 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170576709 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157782445 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314027663 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213032856 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198870369 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135733669 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135360873 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196699632 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159012348 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188544381 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209107326 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141233445 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229235085 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167110239 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.170427148 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130208089 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171619129 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14956406 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133918741 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.178095465 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.186583004 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14458848 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207678632 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13674539 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195165965 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173722119 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.170750075 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.150013516 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136093985 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246310298 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193586105 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169361266 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.191085582 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162406942 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20834212 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121934396 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154440095 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133233099 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211413886 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130404565 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200962561 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.170431866 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213729059 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201628969 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159941954 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168438692 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127469971 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191695658 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148213683 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212385506 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134154416 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165749902 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185230294 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.154305258 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129614065 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187210787 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273614028 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175323018 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168376627 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.132522334 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27014709 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157274421 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131848853 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186072195 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168233655 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.157876178 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18298425 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173121458 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168594362 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159819936 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162553912 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207219695 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185977265 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189534107 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168599854 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.172962831 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158998161 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186675145 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198092506 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146062821 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145506038 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185408294 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218049712 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.18072647 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130123703 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195783775 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193372257 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169851467 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197345035 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1394064 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209468897 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128624865 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187247242 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137413287 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123465676 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187840862 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.195033168 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129849842 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201093644 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167903775 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156531635 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128472855 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144054382 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190593422 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137566119 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.155378574 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178619474 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.15723808 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177266078 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231294822 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129592744 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192532805 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144710297 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156733816 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138785699 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140904294 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159159208 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172629808 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207859538 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131028982 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201524116 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161191389 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190472149 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154224133 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169634772 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.33277389 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.154082087 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188469745 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177810255 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194192232 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179334006 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171641685 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197011892 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147069395 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188941118 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145474883 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.24720366 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159615967 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.193701464 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129980812 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170522342 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138080244 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.160109242 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152856085 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192486511 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141754579 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134362107 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.193910918 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14337942 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.174452663 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14146536 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226646718 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148780897 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211418651 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213483244 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13792103 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200208135 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171802483 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157597512 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.162566338 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198372759 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142396919 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178296965 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135163997 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.135488362 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236578256 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124540688 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18652935 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170323486 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196205195 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19620303 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.13621787 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199807469 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141170928 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197587869 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127518608 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150388051 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198901297 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133267119 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.153016602 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169615025 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183609713 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.163562399 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168130571 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176145586 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220182952 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125774286 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131589808 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300519797 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158555463 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220843178 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.133320313 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165680967 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143189262 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185280047 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.162478072 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198047738 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128654536 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155762522 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.145273292 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.178904601 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.14118032 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167043626 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198656842 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184986042 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183876447 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.130678662 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279573901 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140071888 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197831864 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114039039 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.156999777 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141188305 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133037217 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169291244 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209426042 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210029253 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.191492377 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.145528533 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162788152 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.128347106 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131169138 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193064804 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148085307 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195213621 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145092907 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.131208956 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140753217 seconds)
  done (took 85.320034702 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162347868 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153532843 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168538109 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223172102 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195700523 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289782542 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229141621 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248946165 seconds)
  done (took 2.833974048 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119777239 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160088381 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142131038 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146192017 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109946141 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.440656218 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.131031516 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.148894384 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159641847 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151009408 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.13609917 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.525546222 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116525602 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143467199 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121581154 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136525599 seconds)
  done (took 4.045156574 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.656064599 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.551018463 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.035102684 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.293437329 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.259493373 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.199086436 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.757431318 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194591811 seconds)
  done (took 12.105665578 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.155923674 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147520176 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.415142094 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.7504981 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.202025626 seconds)
  done (took 2.835892225 seconds)
done (took 131.057894444 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124708139 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122806938 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122505734 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152596026 seconds)
  done (took 1.672779845 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.176140528 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089852837 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092077798 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117234542 seconds)
  done (took 1.639124367 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.420328836 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089786096 seconds)
  done (took 1.702531092 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.148741192 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135530058 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165372054 seconds)
  done (took 1.628791127 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.140330337 seconds)
  done (took 1.305945954 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.12174645 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.115100337 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.23696214 seconds)
  done (took 1.647283178 seconds)
done (took 10.764084764 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120957889 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.921913452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.433259142 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13324852 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709928518 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.426773696 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.460842391 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174567263 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173238309 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138240519 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131395435 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.689108775 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.478710329 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873680171 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.434123264 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.901833207 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695131993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110679662 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145983108 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112395003 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.440993016 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137517478 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111387625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110060988 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.717313474 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418825972 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10859083 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.917013945 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109520924 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111765227 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.427558705 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109948544 seconds)
  done (took 21.141951324 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117559937 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.165387002 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146123161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112079898 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112095982 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138286471 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123359245 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121511843 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201721903 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109664085 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.16028368 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109495278 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115020618 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138522121 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136126358 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109798793 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141723248 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112877991 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117217058 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141223099 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132615462 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108153883 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140537498 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112772978 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109267187 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160100754 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111691483 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121880324 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138480747 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114740186 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113565596 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139092073 seconds)
  done (took 5.309965686 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15841299 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175284514 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149303424 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147388226 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186349727 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112424868 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.223713701 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148516558 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201949621 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114398574 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131242112 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138709335 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150708634 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110712528 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165597258 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109913165 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112769119 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141240802 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118046953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111043875 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162361114 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11015827 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112058892 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142419788 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110815406 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159766726 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111516238 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122971173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.13698469 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115955052 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115772104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138608296 seconds)
  done (took 5.620103069 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12472658 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125638478 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131203767 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162821073 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120968627 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123103332 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15359423 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121252053 seconds)
  done (took 2.240163589 seconds)
done (took 35.48384356 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133242534 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128213617 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129250943 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153363555 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.187926413 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145459987 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125701461 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114240428 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150906591 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130820195 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110303718 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115617348 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156848038 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119003547 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.217950992 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125301401 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.221640895 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.189723462 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146037032 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124221542 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117353908 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.223179664 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120488126 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.114901976 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.220302788 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113041005 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.21292011 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119048638 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.1480381 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113488724 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.189042201 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.152243344 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116681805 seconds)
  done (took 6.054924249 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.207067809 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.12013735 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149803622 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119597838 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120616846 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148175273 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.209916025 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147517072 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120462781 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119306424 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117873529 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.221761323 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123750894 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.144882116 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122341213 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108780575 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.239162477 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121621033 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110204883 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.121384446 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116794638 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118540886 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.251279173 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115767809 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.118712988 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.149209323 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122462001 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.123375579 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.149728487 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121298815 seconds)
  done (took 5.473317617 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125678787 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133108512 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.164968022 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18661417 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147548091 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160884687 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139323823 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13367311 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169860544 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11470101 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126930802 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.17805524 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129685652 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.1230284 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146673072 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131646791 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134528847 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143385044 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121937605 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129395489 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162856199 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131595715 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135578744 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151204753 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112153869 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119758638 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.153136602 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128229825 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121185958 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.156119589 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115423625 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116082037 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.143113327 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.148986265 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115035501 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.15634189 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138776488 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124969964 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157163275 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.146651433 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116546446 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.144414127 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139802475 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167032915 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.144930711 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126553057 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125850554 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.157763074 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112712196 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132041496 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.185142648 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114255225 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133788769 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.141962463 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.114105675 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122310122 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.143038564 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118954598 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128537527 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116137953 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.166246175 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121505087 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124150299 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.145895606 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.12450476 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111304789 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.142318415 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118611061 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138753312 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.150551697 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.151180221 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.1136493 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.154670105 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.12873386 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124063176 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.153777453 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.114736266 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124528782 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123434434 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.149711632 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125957079 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115877262 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.147360787 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130936628 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132994736 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.15721401 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126265771 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126340576 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.147273344 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115886446 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129400715 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.144505803 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119692982 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126390744 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.143197126 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.11905826 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127159073 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.15338259 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112946278 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140421347 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116224764 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.144805625 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139010285 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116690947 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.1495019 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12476347 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.154796901 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.144700045 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125881803 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126254551 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.144527407 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122926764 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116511997 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.14382815 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133681353 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129367715 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.150453156 seconds)
  done (took 17.065996123 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.318819467 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.272542083 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.212878993 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.307599597 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157578007 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.208032338 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.300402097 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.303516536 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114148331 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181078086 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163455647 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.272723066 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.145350612 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143494178 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.30456643 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.35470191 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173460098 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151207217 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181455724 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128127526 seconds)
  done (took 5.590918598 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.138352878 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147714982 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166254606 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14224874 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12392682 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161252721 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114985818 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135811012 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155974039 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124900083 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115758439 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160800951 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127578441 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129452093 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.16042222 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.146192003 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121424847 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149244801 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136630351 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119070805 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131476737 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139415266 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121801551 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166345731 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132975018 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124018908 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143679008 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120300797 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121303866 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.153722181 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119314658 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132223554 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151221064 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107272858 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124961217 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.157695686 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.12181748 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117306 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.11847798 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.148719461 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128963618 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126922225 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.152902886 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098489116 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133158533 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108631002 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.158670883 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127394518 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105575886 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.163862579 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127727727 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128361291 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.150316627 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.139729664 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.12066409 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.159423699 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12777229 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129198484 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.148563321 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114369377 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112113335 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116656869 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.15344117 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129758853 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126041224 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.163962656 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131281555 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.113548149 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.149595923 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118791336 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.118257975 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.158494404 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134751214 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.123410508 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.151778836 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127974015 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122335301 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.09411071 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.154106826 seconds)
  done (took 11.796157584 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139998502 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122058844 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131770446 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.18076067 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126599966 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119866237 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154959293 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134722973 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126549326 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162637688 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128328765 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126462775 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167942091 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12442491 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122348869 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160543456 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126922009 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151258789 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163451949 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142223156 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.157042477 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121038372 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127067396 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124594726 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17371439 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126331389 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170123558 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.128290702 seconds)
  done (took 5.156230228 seconds)
done (took 52.319214223 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.33299357 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.539743268 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.3063193 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.30299848 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.304678556 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.318470599 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.301469931 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.300882437 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.923516354 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.274481814 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.307323534 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.305129086 seconds)
done (took 29.718197093 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.420154863 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.877142404 seconds)
    (2/2) benchmarking "String"...
    done (took 1.58529397 seconds)
  done (took 4.654207003 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.295454451 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.297292645 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.551843197 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.298742336 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.317313298 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.299333508 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.301098034 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.304204604 seconds)
  done (took 16.564879754 seconds)
done (took 27.125080942 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.348325703 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.465701374 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.54114843 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.301574076 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.30280811 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.323031082 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.296229416 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.319987529 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.310487826 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.29508976 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.713608078 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.558461493 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.304669167 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.671645883 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.298430233 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.301789468 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.315449809 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.52573568 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.302275057 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.32938552 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.277242031 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.278627602 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.335433314 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.299202698 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.308726676 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.302095627 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.336654198 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.302152231 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.470662943 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.341061879 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.334783977 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.299190144 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.341313387 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.303551372 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.31193079 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.307420698 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.480789625 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.305432642 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.281310883 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.3190258 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.485245914 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.301248365 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.302285227 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.317833725 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.304296374 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.347115101 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.28559291 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.434686351 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.32255087 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.300471343 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.325197114 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.665516784 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.311252435 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.307388644 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.303656216 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.505691337 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.320416404 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.351056212 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.323892153 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.307790312 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.303187233 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.299909226 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.32305905 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.313308585 seconds)
  done (took 149.921174914 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.305553474 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.311539459 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.308001942 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.324913257 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.305840694 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.306349798 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.304901379 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.302762345 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.306823048 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.327587251 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.306790898 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.303936057 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.305907314 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.253839201 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.316668168 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.32467157 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.312069409 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.302100399 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.311586708 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.301154157 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.334733619 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.305400124 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.32061585 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.3002322 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.352174887 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.385608842 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.332426982 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.335454028 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.315998551 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.304123163 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.344738299 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.30982884 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.935117576 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.175036967 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.305086795 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.324635457 seconds)
  done (took 84.023501166 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.303283735 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.301211337 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.307679971 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.337159307 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.302899468 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.89516147 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.900651095 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.289822313 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.407118808 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.698933136 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.542149567 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.303734229 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.398283502 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.315908846 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.307761222 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.31815319 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.33075249 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.309394181 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.303168814 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.893406516 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.319047383 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.514373869 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.4855444 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.322160079 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.340638206 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.698341717 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.304519763 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.339842772 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.641798645 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.355584306 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.305804523 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.661321129 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.674000432 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.418256971 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.303914565 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.339737169 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.303744327 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.593602342 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.307816573 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.308884499 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.312637749 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.952255685 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.310241504 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.900342696 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.313162781 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.274353474 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.308772553 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.309504245 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.300232247 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.309431784 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.012608191 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.309480196 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.307619364 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.308635639 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.303988456 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.305706488 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.340155244 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.269255803 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.405580805 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.305814634 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.307484216 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.310363624 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.342290146 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.306125935 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.45216951 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.307311868 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.035224323 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.370772089 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.413502705 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.901262116 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.312375426 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.403984049 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.424954572 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.311021056 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.309408936 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.307681912 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.309079545 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.418285113 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.307815156 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.007095634 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.485841479 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.324953438 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.712136521 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.408695781 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.307950251 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.6589389 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.311471837 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.308025978 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.025425009 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.403670632 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.307218565 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.311217867 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.310721655 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.30815831 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.308392551 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.0055155 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.906688036 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.568590288 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.313926395 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.84721319 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.315656151 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.183648898 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.886915037 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.973583261 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.314609309 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.425085873 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.48964234 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.330454255 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.308978226 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.719306442 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.314271523 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.369436591 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.313401179 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.714493045 seconds)
  done (took 386.321130455 seconds)
done (took 621.458172733 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.193703738 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.141872263 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.289393415 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.151388706 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.128775991 seconds)
  done (took 12.108167987 seconds)
done (took 13.313967919 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.50497581 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.504024912 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.375236773 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.511540172 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.342516309 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.525522995 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.492549259 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.326237395 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.421770114 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.394518373 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420438328 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.36468217 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.347209491 seconds)
  done (took 19.735168404 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.603174477 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.319558296 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.371801996 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.580623801 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.354157309 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.61740406 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.650661299 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.322415626 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.466516 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.342531773 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.332487222 seconds)
  done (took 19.165063867 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.615014758 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.319388165 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.377404778 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.581508616 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.354431681 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.600609894 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.629858017 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.319937329 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.456820077 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.354988611 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.328762918 seconds)
  done (took 19.144706118 seconds)
done (took 59.247913714 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.353169893 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.412894541 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.342163455 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.331571016 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.328733355 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.329367699 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.333286734 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.329829685 seconds)
  done (took 11.968494866 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.332230866 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.32746123 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.328660726 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.328500014 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.328911917 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.326762401 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.32826409 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.328360824 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.330466072 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.329623762 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.326998531 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.328650209 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.327717155 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.333577573 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.330248963 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.331073135 seconds)
  done (took 22.475688565 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.331045273 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.329674944 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.329986707 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.328352637 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.327970482 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.329492606 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.329998428 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.327641016 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.326723616 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.331892305 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.33174558 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.329159403 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.330049673 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.330565037 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.328434341 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.331078089 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.330186722 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.32885195 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.333927646 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.330762303 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.328580314 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.330583355 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.331249586 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.332327705 seconds)
  done (took 33.127403655 seconds)
done (took 68.775773771 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.318363203 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.330793444 seconds)
  done (took 5.859434212 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.392998387 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.387805613 seconds)
  done (took 3.990549523 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.334896908 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.33179417 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.332333211 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.332538892 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.330151752 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.329573993 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.333150265 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.333880977 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.332246743 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.335455385 seconds)
  done (took 14.535623607 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.336820082 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.333642751 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.33467384 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.333500629 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.333377265 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.333701935 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.335512151 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.332963288 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.333249663 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.333566353 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.332293996 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.335320047 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.336347302 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.337284713 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.334630423 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.334309647 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.333709567 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.334412946 seconds)
  done (took 25.229117422 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.351253742 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.354056631 seconds)
  done (took 3.912396774 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.464333976 seconds)
    (2/7) benchmarking "second"...
    done (took 1.375180783 seconds)
    (3/7) benchmarking "month"...
    done (took 1.440340295 seconds)
    (4/7) benchmarking "year"...
    done (took 1.431940512 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.376590557 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.356531799 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.37821915 seconds)
  done (took 11.033179365 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.338956956 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.545228277 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.667881848 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.937626663 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.335772324 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.338712001 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.243145272 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.337076145 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.336885005 seconds)
  done (took 15.292214374 seconds)
done (took 81.06109335 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.322209935 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.349403041 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.339062979 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.333849737 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.673862217 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.346294491 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.32466148 seconds)
done (took 16.902298807 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.307863071 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.300867106 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.315064386 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.330714328 seconds)
  done (took 10.4634719 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.331490261 seconds)
    (2/2) benchmarking "read"...
    done (took 1.65068109 seconds)
  done (took 5.1935542 seconds)
done (took 16.871333162 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335329366 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.335834332 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.335993657 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.335113533 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.335456127 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.336230244 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.33549226 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.336473811 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.335529602 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.334100917 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.336643424 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336051536 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.337267476 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.337398782 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33520174 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.334417952 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.335010192 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335975384 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.335777538 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.336813952 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.339078174 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.338028357 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.335568045 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.334680711 seconds)
  done (took 33.275459981 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.339163152 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.334295046 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.336548816 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.336298322 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.336012604 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.334215223 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.334813633 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.334828017 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.336451038 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.334958737 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334314878 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.334103214 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.334148483 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.334757505 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33295974 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.333120514 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.335249196 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335367262 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338982386 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.334217803 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.334162548 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334999424 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.335082698 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.335545358 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.335206502 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.336349812 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.335385105 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.335937529 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.336830702 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.336584986 seconds)
  done (took 41.273078914 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.342635593 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.33937913 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.338710641 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.339628669 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.337924991 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.340667337 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.340704432 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.33918056 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.337333973 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.3399723 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.338490797 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.339326701 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.338380971 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.339980007 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.337091171 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.339113644 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.339649594 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.339165943 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.338205835 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.338509005 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.338766921 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.337292355 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.33784539 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.33755033 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.337948029 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.338202281 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.334748915 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.335024616 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.333631907 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.336199731 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.335369908 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.336269383 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.336653824 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.332831929 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.331640861 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.334187816 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.333502647 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.333150178 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.332015313 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.33658463 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.333178574 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.331426834 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.334539442 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.331635998 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.334178095 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.331729152 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.333619818 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.33495242 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.333754599 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.332957479 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.332417687 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.332309539 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.333752514 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.333468028 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.338799179 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.330993542 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.331630737 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.330852774 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.331684485 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.332962612 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.332419883 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.333066798 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.331633202 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.33118441 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.330342333 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.330780124 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.331908126 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.330994551 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.33104421 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.333477588 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.330287817 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.332726821 seconds)
  done (took 97.34850605 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.333273023 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.333216027 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.334528906 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.331088046 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334826285 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.331967333 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.333016929 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332678311 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329664325 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.331432467 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330699622 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.331328569 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329293963 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.333121414 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331391645 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.332465388 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.331290429 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.32730325 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.33054237 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.331487518 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.332296582 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.32918399 seconds)
  done (took 30.505002393 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.3331435 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.331737872 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.331637681 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.335146315 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.334894981 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.332677135 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.33151592 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.33349914 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331740371 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.332071731 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333290666 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333038835 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.333146561 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333728205 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.331610868 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.333030061 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.331118264 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.332780529 seconds)
  done (took 25.200247557 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.333530998 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.331784243 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.33254122 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.331984323 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.334028139 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.329899898 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334113464 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.332136029 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.334024622 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.333320329 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.33478693 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335123499 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.333680633 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334351423 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333853473 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.335410021 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.335887457 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334498983 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.335488339 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.335363138 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.335299033 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.333288276 seconds)
  done (took 30.5524341 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.336099792 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.335210421 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.333843134 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.33511975 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.335851963 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.336887266 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.333614808 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.33348526 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.335423153 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.336185777 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.333858823 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.330410328 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.336765436 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.333996825 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.335523881 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336184704 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.335340528 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.334780922 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.335261271 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.333000947 seconds)
  done (took 27.907420998 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.335554118 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337078284 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.334733772 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.335941005 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.33551471 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.334304934 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.341087015 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.335451172 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.336561862 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.336423418 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.336045521 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.336061447 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.335236636 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.334860194 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.33470597 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.336959573 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.334910649 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.336012496 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.338455923 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.334721312 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.333788064 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.33545193 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.334460621 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.335437193 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.335533095 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.335748226 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.336623528 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.337708486 seconds)
  done (took 38.616028901 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.338533906 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.337130912 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.33785478 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.337035022 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.335276677 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.336884135 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.341084429 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.337952751 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.336810765 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.336419799 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.336566385 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.336555909 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.34025715 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.338233808 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.340037837 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.33822712 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33544126 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.339528765 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.338030723 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335795589 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.338014097 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338198767 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.338671064 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.336427099 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338172879 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.33825942 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.338383589 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.340955243 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.338744569 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.338577312 seconds)
  done (took 41.349445142 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.356831919 seconds)
    (2/2) benchmarking "in"...
    done (took 1.35473421 seconds)
  done (took 3.925098329 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.3404863 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.339961155 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.338437227 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.341277396 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.338440569 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.341958758 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.339511994 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.339637287 seconds)
  done (took 11.934816555 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.333102701 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.343566213 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.34114248 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.340689381 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.343787185 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.332581726 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.339458881 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.342475564 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.331536508 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.33163405 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.334670532 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.335539248 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.337344683 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.333764737 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.335691862 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.338262784 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.343439469 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.338881565 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.339886646 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.343876826 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.34056406 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.33327017 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.341213711 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.345977378 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.335026925 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.34405597 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.342881052 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.345993451 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.335829143 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.341796624 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.337467818 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.344648873 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.340487735 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.34160855 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.344757691 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.340147617 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.345658408 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.342870423 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.344335313 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.345000895 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.343272699 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.347031611 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.338686579 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.340532524 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.341060901 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.345593532 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.34329467 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.344640585 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.337295741 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.338389722 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.344587033 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.335383956 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.345138158 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.340843587 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.340272183 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.345369166 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.349194589 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.334794654 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.337389145 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.343998831 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.349195884 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.344928523 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.340856204 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.346368291 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.338041221 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.341443182 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.343332641 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.347982209 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.342238081 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.342021056 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.341582182 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.355442277 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.347362905 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.348414451 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.344668351 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.341673346 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.335318732 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.345611572 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.343535476 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.346713331 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.34972143 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.346552546 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.337624228 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.342029816 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.338435354 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.350836072 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.346425413 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.345756258 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.33485613 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.345823714 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.35155689 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.342340808 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.334531075 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.338972538 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.340991626 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.349168494 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.333601233 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.339421651 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.347585466 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.343071033 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.345200184 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.33937665 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.34015489 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.350976174 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.345262561 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.344558774 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.349758746 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.334333666 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.347992001 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.351551758 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.345475218 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.335228503 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.342860713 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.347515354 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.335302403 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.34165228 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.347676014 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.340205953 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.349440295 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.345487329 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.341238379 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.350955727 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.34911887 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.346721808 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.33759186 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.349237744 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.343191751 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.339996234 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.350600562 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.346597027 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.347088807 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.338307205 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.350504556 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.3391405 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.349055406 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.337610205 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.348648684 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.343322002 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.348599682 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.34169604 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.343549487 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.341286273 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.342867386 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.347830228 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.35366648 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.341092877 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.353020731 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.342894676 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.342135684 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.349573599 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.351551981 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.346674701 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.339697922 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.349740307 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.337342475 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.347997153 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.336666282 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.348622795 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.347038894 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.34671708 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.347304013 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.336796983 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.340214732 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.347372413 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.343861389 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.344885961 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.346828767 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.346546389 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.347132366 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.335989369 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.348757995 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.336186717 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.341400528 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.348270529 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.346434289 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.343287358 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.341083566 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.354003977 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.347565233 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.348680418 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.338064529 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.342717387 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.354361769 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.347300324 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.357229677 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.347002246 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.344473587 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.338993991 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.343189978 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.349548262 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.336885519 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.352080745 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.351725453 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.352710683 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.341512859 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.349870464 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.33889138 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.351412773 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.346059702 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.356817316 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.346931415 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.347541813 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.341191657 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35032118 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.342265352 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.351356445 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.339393039 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.349752256 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.349161763 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.349331378 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.346946691 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.341297078 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.346265678 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.352971406 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.347894253 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.348091386 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.343024476 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.351681082 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.340026989 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.343468002 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.351825226 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.351324707 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.348414478 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.357682022 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.346310127 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.354089183 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.349740303 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.344101765 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.353589825 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.344157458 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.349484297 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.354138258 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.352155136 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.346026676 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.354759926 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.348837035 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.344158871 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.352014222 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.35729987 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.349945261 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.3415366 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.351594836 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.351600646 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.351543868 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.351696325 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.342252934 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.353292725 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.353079015 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.358766916 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.342519004 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.351564484 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.343772852 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.353283582 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.344473186 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.351237148 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.348664447 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.352894579 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.359574697 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.349389629 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.345677082 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.352568517 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.349210809 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.352473997 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.344040825 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.354224779 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.351108561 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.353862974 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.348499436 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.348480774 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.353105291 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.343746773 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.354222608 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.344909136 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.357475353 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.367731424 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.354852286 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.353561009 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.354400278 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.352668812 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.353703093 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.34647598 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.34666463 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.350853097 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.346404258 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.34721326 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.356105376 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.348503999 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.356349268 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.349776165 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.351945772 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.354815434 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.350406211 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.344000003 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.356118295 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.353213743 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.352367215 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.344728378 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.353912252 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.346508855 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.353072194 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.354029116 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.348832312 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.360582318 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.358104724 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.350620478 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.350120268 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.3522252 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.347762187 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.354270819 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.358344187 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.347878882 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.357438776 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.345322795 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.349982723 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.349193233 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.357936403 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.367230641 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.346029728 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.356693057 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.354273828 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.346680177 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.348320851 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.357559754 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.35831252 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.363793764 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.345837347 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.357781797 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.355709963 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.354933169 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.354749571 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.355071172 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.35442883 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.355085024 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.356210759 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.357758486 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.34987606 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.356060566 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.360410204 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.35447556 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.355262712 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.346185364 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.356350585 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.361900251 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.348448818 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.35170958 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.349950689 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.356560525 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.353803612 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.354637261 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.356918408 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.354966507 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.358427404 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.36018758 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.357324057 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.354426694 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.358189426 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.363286285 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.359407247 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.367432414 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.349022334 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.362657607 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.355794124 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.349950605 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.349518709 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.352658507 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.359336689 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.345935406 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.361008301 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.351269204 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.350587196 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.356907565 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.36063516 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.349521999 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.354875581 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.363144146 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.352021972 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.360310833 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.35574065 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.349611914 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.357902837 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.352758267 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.349586824 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.352790401 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.35549058 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.360934826 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.35079821 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.361172724 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.351012573 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359451399 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.358316059 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.357449218 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.354683407 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.358380277 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.349881773 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.358303938 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.356310969 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.368519137 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.352668039 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.354708137 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.352465782 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.360277704 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.366972058 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.353080894 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.363650995 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.360135915 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.346037969 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.353068345 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.361518751 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.349736126 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.358680278 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.350511762 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.353031723 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.354663391 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.355894775 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.359461197 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.360730181 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.349079225 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.353857395 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.358654978 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.356416049 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.356717175 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.353432204 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.362001486 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.351087887 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.349815722 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.360000834 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.354245623 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.359273118 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.352017975 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.355721928 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.354417688 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.357579762 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.3563418 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.357986169 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.352217319 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.351409451 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.363230528 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.36091583 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.352831421 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.351772868 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.360692327 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.350698844 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.354288098 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.354928409 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.353284434 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.357265026 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.359830764 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.352163873 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.353180408 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.353990621 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.361338852 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.362842438 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.360272596 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.354710737 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.364785039 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.364045715 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.366883939 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.351403942 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.353911874 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.35275923 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.362006583 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.355942176 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.35459817 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.369667091 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.367079205 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.360446739 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.361646263 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.362245081 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.354682423 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.361240186 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.360933888 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.359534176 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.366342207 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.359413773 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.366755764 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.36137947 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.358974506 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.354409867 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.360183029 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.357883331 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.357034152 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.365075186 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.361086317 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.365698376 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.361444271 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.364910094 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.360869476 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.362268631 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.362009564 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.354644388 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.364899239 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.355321716 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.362740565 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.367097028 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.358375232 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.362770538 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359689104 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.355378465 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.357088986 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.362966398 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.361090061 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.350946998 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.359471719 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.365101247 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.369470485 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.359336425 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.355275529 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.36218104 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.360976823 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.360140903 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.358624193 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.353993726 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.369791479 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.369746685 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.352856031 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.361516547 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.363263757 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.369025065 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.359137673 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.359636547 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.359448572 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.356923577 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.365194712 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.358513003 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.364050294 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.367274829 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.357891597 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.363259433 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.35345361 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.357377328 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.360802787 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.371181619 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.362004001 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.355374927 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.364646236 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.372834994 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.358362815 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.375104457 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.367228971 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.360391315 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.366166926 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.351276882 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.363555312 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.357061317 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.36702425 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.358718387 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.361295572 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.36128558 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.352985695 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.360498511 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.367823235 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.372659902 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.358173751 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.351731189 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.356706313 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.362371344 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.360192017 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.359946872 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.35985221 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.359210623 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.359892142 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.3547185 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.370357888 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.375174879 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.362940212 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.360316379 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.363720127 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.362079293 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.364490242 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.358637706 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.363047111 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.358947745 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.361497 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.358349519 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.370383024 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.363801604 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.356212937 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.356548729 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.358835048 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.363697799 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.369471612 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.379705529 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.365125056 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.366502835 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.365512878 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.362530165 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.355834038 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.364749513 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.362850632 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.355398788 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.358409756 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.363936207 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.363462334 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.363462858 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.356815625 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.366214369 seconds)
  done (took 806.994806477 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.361949575 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.364078375 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.361468186 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.364072468 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.363248622 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361960225 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.364222447 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.364946792 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.361020291 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.361448635 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.363927562 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.364260564 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.361973312 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.365873884 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.362993243 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.363533659 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.359212791 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.362391864 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.362806608 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.36285723 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.362055593 seconds)
  done (took 29.851649688 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.363205993 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.363645099 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.360996015 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.36324345 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.362378765 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.360532254 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.362441005 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.360044037 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.36367685 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364788436 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.36299882 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364715571 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.362974196 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.367080174 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363243958 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.364157626 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.362598993 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.366400213 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.364677132 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.364615724 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.36482487 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.366729206 seconds)
  done (took 31.230820851 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.36352975 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.363735 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.358211798 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.369405498 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.36503053 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.366407749 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.361958185 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.361654106 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.362657438 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.357719735 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.358995624 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.358739268 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.359861581 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.366053759 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.357935506 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.36839833 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.364063418 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.364226005 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.362065835 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.364020438 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.370572775 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.375516819 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.365918881 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.356954254 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.365346495 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.359724089 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.361877158 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.366503244 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.354866082 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.36840255 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.36550252 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.356944099 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.368455574 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.366250173 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.362222471 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.365538937 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.366460701 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.365043445 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.361965724 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.362239299 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.376044361 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.365273931 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.370919434 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.379610085 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.365851918 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.360726761 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.367816064 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.367914086 seconds)
  done (took 66.726713529 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.366591107 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.363414235 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.361129032 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.367030094 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.364384228 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.363492972 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.365749096 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.366187806 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.363597461 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.368694725 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.367704854 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.367556772 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.363444021 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.366394581 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.362483471 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.368110967 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.367239387 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.365903154 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.36597411 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.363971751 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.365156425 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.367743364 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.367280121 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.366223281 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.366407972 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.366913724 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.365743234 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.366305909 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.36411446 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.368280484 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.369024022 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.367611403 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.368356504 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.366990338 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.368040631 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.36727201 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.365982281 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.367433622 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.366955291 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.367066332 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.366630359 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.36686594 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.367105714 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.366865128 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.368662286 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.369972236 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.370470657 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.371705941 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.371909312 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.370135584 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.37095422 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.37123005 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.369620257 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.371809782 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.371353104 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.371424633 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.372478736 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.367695183 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.371657252 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.368933162 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.367143624 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.370685668 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.36967459 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.370539048 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.372057222 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.368181621 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.371184147 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.372502391 seconds)
  done (took 94.241978841 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.369075669 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.369662518 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.368414666 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.368583141 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.368232063 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.369220957 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.370504008 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.37199916 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.372035713 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.368669789 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.369205696 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.372192445 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.367731455 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.371339746 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.369924792 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.367847029 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.368479233 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.371005917 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.369925622 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.370873541 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.371608679 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.37196973 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.370022148 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.37216396 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.370966382 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.371631468 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.369930418 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.369679015 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.370869459 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.371896948 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.373680422 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.369283815 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.371934312 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.371125039 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.371274446 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.37317576 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.371792849 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.372227549 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.376051257 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.370711441 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.37206533 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.370120731 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.375664965 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.371703071 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.373121899 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.37231952 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.371070253 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.371665804 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.373961262 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.374520381 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.372949905 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.373548691 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.374148727 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.373060895 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.372051152 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.374680528 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.372782167 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.375353151 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.37277711 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.376318894 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.374118004 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.375523332 seconds)
  done (took 86.280629978 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.375210005 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.37315939 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.376193008 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.372514192 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.372855315 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.376308892 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.371447706 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.373925572 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.373668538 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.37353916 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.374791022 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.37550226 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.375630562 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.376788576 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.375449697 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.375672131 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.377052949 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.374392757 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.376373224 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.374605215 seconds)
  done (took 28.734210363 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.377283801 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.377908998 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.375031143 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.376627512 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.377192775 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.375723017 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.377226543 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377613562 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.376651258 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37709326 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.376428196 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.37617624 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.376319407 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.377909876 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.378407272 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.377198687 seconds)
  done (took 23.270902242 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.377878609 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.379459884 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.373368832 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.378387193 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.37580976 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.374847246 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.376960187 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.374512336 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.375058152 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.37676388 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.374077149 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.376537131 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.375612204 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.376029539 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.373394484 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.374064636 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.374503923 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.373207704 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.373648522 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.37876392 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.376325347 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.374314926 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.377487924 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.375983961 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.374114057 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.374707656 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.376248186 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.375955553 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.37604252 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.375195081 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.37745912 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.376724439 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.377858926 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.376653749 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.378601148 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.375484036 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.377368058 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.377263948 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.378279793 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.377492835 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.378801189 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.377057642 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.378946409 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.380258505 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.377143368 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.378488385 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.376267318 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.376915901 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.379278828 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.378581029 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.376563671 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.379244416 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.379799892 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.37986543 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.379388393 seconds)
  done (took 76.960235339 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.378396817 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.37822134 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.37802091 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.377306299 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.378687971 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.377739232 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.382697477 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.381771493 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.383603863 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.381730784 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.381849664 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.383099035 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.37872769 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.376790201 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.380557468 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.379465638 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.37954767 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.37805211 seconds)
  done (took 26.077905804 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.380384876 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.378106999 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.38060208 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.381127208 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.376635838 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.380922875 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.377553126 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.376832648 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379205104 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.381789401 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378859598 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.380437686 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378808681 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.380096566 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.378399506 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.382384892 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.382329794 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.386020314 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.383595299 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.383857398 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.38481226 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.383429273 seconds)
  done (took 31.620776173 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.376045805 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.373989063 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.371501787 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.387729142 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.384375672 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.377154129 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.373005986 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.375928987 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.391615884 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.398033644 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.394820426 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.382698622 seconds)
  done (took 17.832875428 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384967955 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383288932 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.382551105 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382488792 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384087013 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383185091 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382238812 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38214068 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382878483 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382975253 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383393721 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382642065 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380914764 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382174581 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382046574 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381716874 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381325591 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382150689 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380986435 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383270214 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381418944 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38177376 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38263662 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382136948 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382480229 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382903856 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38429539 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384025438 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382803766 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385052768 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382440966 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382893827 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382101135 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383884558 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385323116 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384673425 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383663221 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385300197 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383910504 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384647553 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.386462607 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386750595 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387570832 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.388073965 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387622713 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387293275 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387760828 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388430046 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.389590304 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390365764 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386880499 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.388421533 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.388057425 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389182714 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.388481621 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390451722 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387929598 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387497434 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.388657282 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389710836 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389179684 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388087356 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387471276 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389996304 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39063009 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38988096 seconds)
  done (took 92.668818546 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387007007 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.383895228 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387526616 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389307279 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.386497144 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387280418 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387727921 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388302423 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386110691 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386977767 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386390435 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386697103 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385657961 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387229158 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386941737 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385734142 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387400033 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387607448 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388903104 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386978299 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387863661 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388412321 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387623968 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387061787 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388426522 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388362062 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.388651388 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388949072 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387395272 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389719962 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.389416641 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387717607 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.388242985 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.388090275 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389091893 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.389052961 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388877924 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386234688 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.388789319 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390312267 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386957415 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387310697 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389069631 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390803541 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389428568 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39116916 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389015424 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.388477106 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388425218 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387073195 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.388797885 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390452838 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390971086 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391371268 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.391442811 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390303742 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.386761792 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389260657 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388816707 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38895098 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392399918 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388680595 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389627673 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390984229 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391330186 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390783935 seconds)
  done (took 92.888871292 seconds)
done (took 1888.48074881 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.547064156 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.501798731 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.381494687 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.403212803 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.381503054 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.385709703 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.387228221 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.375385695 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.380539386 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.374392356 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.375550064 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.56467957 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.405818615 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.374137043 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.376903493 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.469723603 seconds)
  done (took 27.938474079 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.40128787 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.380709564 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.484011544 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.382314715 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.406967359 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.561285614 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.43832979 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.380420718 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.534824543 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.39607617 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.374617665 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.403229645 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.37831459 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.374266536 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.394021987 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.555747258 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.616363645 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.382497796 seconds)
  done (took 30.089887358 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.777318037 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.377876924 seconds)
  done (took 5.397183927 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.389712559 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.369961305 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.366651249 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.367117171 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.366206603 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.357828562 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.363983704 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.372377279 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.36441454 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.478176221 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.365118094 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.370425459 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.374547447 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.355705313 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.371382458 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.403280515 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.522090374 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.359714966 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.36010798 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.361384797 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.354414658 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.451394596 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.396329194 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.367975928 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.468826234 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.362980699 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.359611501 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.361784573 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.467955172 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.367445629 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.355324127 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.352674718 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.354094983 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.276856743 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.881387324 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.353083151 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.374864638 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.358194802 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.359650354 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.500906042 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.351969655 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.357091211 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.354722093 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.877546135 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.452555062 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.457079975 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.362973086 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.353222774 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.345818632 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.408076949 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.350191657 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.345246142 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.401749938 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.139044547 seconds)
  done (took 86.563222412 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.390770451 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.334193261 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.514798782 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.355280067 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.334927815 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.33497684 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.335985893 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.594084989 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.345144023 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.329472816 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.64004222 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.932517777 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.332949154 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.395670688 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.366493521 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.380079226 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325309102 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.325772275 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.326415631 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.328008738 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879962116 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329866498 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.330628927 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.400811769 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.362481373 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.840099695 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.321943323 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.33570755 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.322768369 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.321850166 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.89574978 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.334811979 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.378658829 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.32189559 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.598156899 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.691691334 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.650129822 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.327969268 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.342528462 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.320024013 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.343984212 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827245889 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.667402239 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.317007756 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.316553961 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.83058712 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.316799377 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.312120323 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.313466445 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.57864233 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.3177822 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.317609655 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.312046984 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.315344643 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.314360766 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.369032523 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.364915799 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.830158297 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311561687 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.309095873 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.351766039 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.308724247 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.313554301 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.313955453 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.310283695 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.661533059 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.550282678 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.310843499 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.659750107 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.866691788 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.307000442 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.95682955 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.306422218 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.318592616 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.339099378 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.306107989 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.319730798 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.821456343 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.323890514 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.305426621 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.635290886 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.307618522 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.60169293 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.320783067 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.305626202 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.880532757 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.307211228 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.35190524 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.305237186 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.309964896 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.304554119 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.306215172 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.589865214 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.353094865 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.30482378 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.306644775 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.338462304 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.30381273 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.320504853 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.313310291 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.939077756 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.316461235 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.304171146 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.318733169 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.301625979 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.302938053 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.305918615 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.302526145 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.584508171 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.302077832 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.316919437 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.304859256 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.301292224 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.302835228 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.381375128 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.310028265 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.596288153 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.307988132 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.301958329 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.306516993 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.300178998 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.320961564 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.303381752 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.326120688 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.301364302 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.603472602 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.320592218 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.317485617 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.302536031 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.303027907 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.316099585 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305331382 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.370458655 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.307930795 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08550909 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.346872507 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.306370688 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.303773048 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.313387198 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.304682151 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.325852906 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305301795 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.60089971 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.586472457 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.528089303 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.305704976 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.304530171 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.105744215 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.336175421 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486300208 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.325154453 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.304342628 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.586543353 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.531942508 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.305274909 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.304820377 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.307170004 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.581423879 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.312776911 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.623736069 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.894818747 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.308871039 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.305325885 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.086844178 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.118787335 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.306930659 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.304089732 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.595893973 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.320157114 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.305170694 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.304031754 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.30396246 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.305219222 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.309220097 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.305090907 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.306366983 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.305858004 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.647084401 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.49957176 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.320215899 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.307825861 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.822655025 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.327753935 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.304504952 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.313262876 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.304694554 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.306066943 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.357453304 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.307051543 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.333577437 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.305039196 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.305910336 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.84592685 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.30506221 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.307001845 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.49993495 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030102032 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.310654626 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.307297543 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.306240132 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.365585292 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.854945884 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.348182457 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.597088594 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.307812024 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.344846692 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.303497951 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.319519608 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.85114238 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.30567229 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.302728848 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.030126624 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.306258086 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.750375823 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.299916224 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.302347483 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936386519 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.304734584 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.300749511 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.304090111 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.30106304 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.618882576 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.300495253 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.305997531 seconds)
  done (took 493.229881816 seconds)
done (took 644.471612571 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.300612316 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.30076468 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.305913826 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.305850938 seconds)
  done (took 10.40777657 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.319775071 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.307131745 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.315389475 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.307153899 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.317521592 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.3060655 seconds)
  done (took 9.069748905 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.301235945 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.305911171 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.306792539 seconds)
  done (took 8.109356562 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.49946068 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.322787337 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.646095588 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.31512121 seconds)
  done (took 8.979899516 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.317735301 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.318468939 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.319073476 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.31946595 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.319093372 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.320033817 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.320726111 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.319325271 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.319615853 seconds)
  done (took 13.070556793 seconds)
done (took 50.833556632 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.368176618 seconds)
    (2/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.369241792 seconds)
    (3/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.424997458 seconds)
    (4/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.484690912 seconds)
    (5/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.339508423 seconds)
    (6/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.336949483 seconds)
    (7/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.456150243 seconds)
    (8/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.280093096 seconds)
    (9/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.281255174 seconds)
    (10/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.282887561 seconds)
    (11/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.507952174 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.428024513 seconds)
    (13/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.457151666 seconds)
    (14/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.451066989 seconds)
    (15/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.311395973 seconds)
    (16/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.523196577 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.468955866 seconds)
    (18/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.385385876 seconds)
    (19/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.299217076 seconds)
    (20/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.514953686 seconds)
    (21/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.64758049 seconds)
    (22/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.457528987 seconds)
    (23/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.455558061 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.457962908 seconds)
    (25/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.380235112 seconds)
    (26/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.399952566 seconds)
    (27/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.466987477 seconds)
    (28/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.38415092 seconds)
    (29/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.385444288 seconds)
    (30/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.315372706 seconds)
    (31/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.485645263 seconds)
    (32/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.405442988 seconds)
    (33/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.377314069 seconds)
    (34/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.287067808 seconds)
    (35/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.339720318 seconds)
    (36/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.535589177 seconds)
    (37/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.362368319 seconds)
    (38/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.3803412 seconds)
    (39/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.546282627 seconds)
    (40/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.538405443 seconds)
    (41/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.282298091 seconds)
    (42/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.485632091 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.283551607 seconds)
    (44/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.292176174 seconds)
    (45/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.339848568 seconds)
    (46/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.282339987 seconds)
    (47/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.382054165 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.4133701 seconds)
    (49/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.283001344 seconds)
    (50/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.310032321 seconds)
    (51/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.495782462 seconds)
    (52/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.282046499 seconds)
    (53/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.305780031 seconds)
    (54/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.301086474 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.490050926 seconds)
    (56/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.581090697 seconds)
    (57/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.518236953 seconds)
    (58/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.340148012 seconds)
    (59/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.30129121 seconds)
    (60/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.44855057 seconds)
    (61/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.459018148 seconds)
    (62/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.483380416 seconds)
    (63/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.409636472 seconds)
    (64/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.427291499 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.395919535 seconds)
    (66/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.283427994 seconds)
    (67/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.347302825 seconds)
    (68/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.283018745 seconds)
    (69/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.486702384 seconds)
    (70/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.423288492 seconds)
    (71/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.464884688 seconds)
    (72/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.313851661 seconds)
    (73/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.527972155 seconds)
    (74/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.337300679 seconds)
    (75/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.413688935 seconds)
    (76/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.373844183 seconds)
    (77/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.389339314 seconds)
    (78/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.340770689 seconds)
    (79/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.717208689 seconds)
    (80/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.548344849 seconds)
    (81/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.419548239 seconds)
    (82/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.3950554 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.417072773 seconds)
    (84/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.459993997 seconds)
    (85/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.284854518 seconds)
    (86/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.285458905 seconds)
    (87/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.444330727 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.450652545 seconds)
    (89/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.294967719 seconds)
    (90/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.610673497 seconds)
    (91/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.284760519 seconds)
    (92/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.454819127 seconds)
    (93/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.287059295 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.430821828 seconds)
    (95/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.340886161 seconds)
    (96/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.317164459 seconds)
    (97/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.544192597 seconds)
    (98/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.61157709 seconds)
    (99/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.548657774 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.384806004 seconds)
    (101/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.286140897 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.475959448 seconds)
    (103/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.291548324 seconds)
    (104/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.460852109 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.421670093 seconds)
    (106/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.547108206 seconds)
    (107/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.594910549 seconds)
    (108/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.336906015 seconds)
    (109/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.310376306 seconds)
    (110/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.515176445 seconds)
    (111/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.393713144 seconds)
    (112/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.425250396 seconds)
    (113/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.377016966 seconds)
    (114/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.347916499 seconds)
    (115/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.422493172 seconds)
    (116/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.379153375 seconds)
    (117/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.350484128 seconds)
    (118/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.559727066 seconds)
    (119/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.725846162 seconds)
    (120/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.338654779 seconds)
    (121/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.65561057 seconds)
    (122/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.35289783 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.611762838 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.550545033 seconds)
    (125/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.416233676 seconds)
    (126/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.311003964 seconds)
    (127/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.299951439 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.423447431 seconds)
    (129/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.4009315 seconds)
    (130/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.298533976 seconds)
    (131/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.441038091 seconds)
    (132/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.402101453 seconds)
    (133/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.343679347 seconds)
    (134/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.410623629 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.319289639 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.420187614 seconds)
    (137/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.299581695 seconds)
    (138/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.349790848 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.378011557 seconds)
    (140/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.545342037 seconds)
    (141/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.423077294 seconds)
    (142/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.372707926 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.461567547 seconds)
    (144/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.389590619 seconds)
    (145/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.325284977 seconds)
    (146/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.616641862 seconds)
    (147/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.384307403 seconds)
    (148/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.438362389 seconds)
    (149/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.344991207 seconds)
    (150/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.28992046 seconds)
    (151/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.31709939 seconds)
    (152/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.42822807 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.415381107 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.457205762 seconds)
    (155/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.37189738 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.465506993 seconds)
    (157/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.377443555 seconds)
    (158/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.521985951 seconds)
    (159/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.557382941 seconds)
    (160/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.447805958 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.367656379 seconds)
    (162/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.289397443 seconds)
    (163/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.31367696 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.439202606 seconds)
    (165/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.303357525 seconds)
    (166/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.29412221 seconds)
    (167/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.293226719 seconds)
    (168/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.524941132 seconds)
    (169/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.523841455 seconds)
    (170/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.385550024 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.314187519 seconds)
    (172/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.353779954 seconds)
    (173/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.290804093 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.59066452 seconds)
    (175/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.373482811 seconds)
    (176/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.343012611 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.515641865 seconds)
    (178/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.4693619 seconds)
    (179/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.408291016 seconds)
    (180/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.291549871 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.351707427 seconds)
    (182/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.343572454 seconds)
    (183/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.399102674 seconds)
    (184/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.388981896 seconds)
    (185/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.391338058 seconds)
    (186/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.396151479 seconds)
    (187/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.432551151 seconds)
    (188/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.529229088 seconds)
    (189/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.429240415 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.435230513 seconds)
    (191/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.407162351 seconds)
    (192/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.298801606 seconds)
  done (took 319.58784528 seconds)
done (took 320.785360604 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.342897636 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.418410105 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.322182469 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.322567654 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323333448 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.314448454 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.348029174 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.324067909 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.336890985 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.338009861 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.323946216 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.33209483 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.338474449 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.333009999 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.356643323 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.323805786 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.323801134 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.332959202 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.338550014 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.342160448 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.325687413 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.325606325 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.351801859 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.324362314 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.33206723 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.331155864 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.329710632 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.319912633 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.332266224 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.339183445 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.32148695 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.331658515 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.34128121 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.335285829 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.327454199 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.334435323 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.324970618 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.418806544 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.347013627 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.33580495 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.333461144 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.34284249 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.331044067 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.331208189 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.337466456 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.354071609 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.334035984 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.341919635 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.322176005 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.320452258 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346695217 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.337680367 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.3334781 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.31971946 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.319077622 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.342429152 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.336676486 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347541416 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.333238309 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.329078633 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.361084225 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.346901242 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.33862736 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.335254877 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.333640489 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.343700311 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.33625352 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.342666394 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.334108522 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.328729358 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.329385591 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.334908908 seconds)
done (took 105.43725214 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.450118494 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.323057618 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.483000247 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.334985188 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.491626537 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.450501886 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.334411187 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.337360403 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.335093422 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.125266796 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.333993162 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.335150994 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.324943135 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.336010061 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.448143683 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.337128539 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.334767601 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.024457177 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.336945323 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.467973128 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.325454665 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.335815298 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.337228745 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.125398113 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.326175233 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.321442748 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.468860403 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.336367943 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.023414681 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.319854566 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.323756345 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.022204847 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.468260067 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.356462735 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.346727218 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.346487468 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.495113592 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.339387917 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.454381583 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.454928739 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.487017663 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.375077919 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.321542936 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.32664641 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.339352843 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.33841281 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.33672187 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.366097735 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.327523477 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.338106246 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.025837869 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.345813097 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.337569888 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.338532265 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.338586983 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.366889458 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.338522765 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.338878735 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.470526395 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.33860827 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.454148045 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.126079578 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.126958286 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.337637934 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.325279495 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.338497313 seconds)
  done (took 108.191772162 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.39815039 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.404562328 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.439116741 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.329369057 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.378575239 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.44011155 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.330048122 seconds)
  done (took 10.934883308 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.336042786 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.340706398 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.380929452 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.378850867 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.338816904 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.501294018 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.338400813 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.341921282 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.338357451 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.381371064 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.339631031 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.339604408 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.34887342 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.328919002 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.377313702 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.341941687 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.449850669 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.332157016 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.339821322 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.483807289 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.340073378 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.349480091 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.379836665 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.343846608 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.340603601 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.337692497 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.11896678 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.341014497 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.339391238 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.339999701 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339770341 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.397261526 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.340898044 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.330734183 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.342179907 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.444746986 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.340617669 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.341943087 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.341486757 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.333564258 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.341251962 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.34152452 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.342433655 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.341766304 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.342014075 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.355652908 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.342495341 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.341602901 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.341793462 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.342195743 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.383778643 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.342287455 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.344103632 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.341905042 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.386883124 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352350668 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.342533572 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.341466313 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.342829177 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.341711101 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.485234235 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.378330517 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.340700218 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.380157732 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345567167 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.342494017 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.342275862 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.34109404 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421746982 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.343268284 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.381205467 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.343986973 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.51492554 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.358890762 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.343541507 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.336596716 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.337061544 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.342954858 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.330264212 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.340893595 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.343948084 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.335260807 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.341041228 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.343330003 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.344610275 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.492491375 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.441340413 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.343733733 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.350706283 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.341747564 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.343105502 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.386705408 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.342991746 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.344075845 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385203373 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.454647719 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.386709091 seconds)
  done (took 137.987664963 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.348023914 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.347524964 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.339121951 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.362973407 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.337269279 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.335257784 seconds)
  done (took 9.291561123 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.337829311 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.34806939 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.345200506 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.345433728 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.345919531 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.346702132 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.344363595 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.33791074 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.348869882 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.346037033 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.346065826 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.346290259 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.349073441 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.346770526 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.346894263 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.346731769 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.346485984 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.346699229 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.347360229 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347154751 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.335084168 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.348029509 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.346166841 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.340196999 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.350753965 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.346405837 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.362190092 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.346521388 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.347726097 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.345262062 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.351042108 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.347537143 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.340877455 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.342597988 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.351026874 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.3408021 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350784513 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.349078541 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.347821603 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.348795109 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.348615499 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347624641 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.347625289 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.350637281 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.340357498 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.344458945 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.352619326 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.363902334 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.348118885 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.34932265 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.350443636 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.348700548 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.34889791 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.350900281 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.342229902 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343417937 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.353596791 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.349767448 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.350856391 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.341252653 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.352044111 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.350100636 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.341716492 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.352505046 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.350366863 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.349851768 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.342839546 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.353326017 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.350865769 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.349739896 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.35166964 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.349955382 seconds)
  done (took 99.246945558 seconds)
done (took 366.864967485 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.539898202 seconds)
  done (took 3.765578087 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.619213156 seconds)
  done (took 3.845118743 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.106419151 seconds)
  done (took 22.578115416 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.35260575 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.35699936 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.352994355 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.342775217 seconds)
  done (took 10.63152247 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.604663874 seconds)
  done (took 3.831167902 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.346741304 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.351836259 seconds)
  done (took 5.927259076 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.516227131 seconds)
  done (took 3.741182645 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.526739441 seconds)
  done (took 3.753543657 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.364286937 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.352191396 seconds)
  done (took 5.950540499 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.313629891 seconds)
  done (took 3.540257792 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.505383107 seconds)
  done (took 20.731763091 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.357890943 seconds)
  done (took 3.586447536 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.371605952 seconds)
  done (took 3.598426355 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.8167469 seconds)
  done (took 6.042794108 seconds)
done (took 102.749866595 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.336993816 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.341903382 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.339979797 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.336858581 seconds)
  done (took 10.582231483 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.415610898 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.415437041 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.424053023 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.410436189 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.410473806 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.419455467 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.379244766 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.377063571 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.408509535 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.403143595 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.42030145 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.410614185 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.418477699 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.394881526 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.403733657 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.420313068 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.406863115 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.425014802 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.37746081 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.41090971 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.354926994 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.411616501 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.405069244 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.353552259 seconds)
  done (took 34.905501459 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.839226115 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.413208138 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.497037598 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.394816453 seconds)
  done (took 7.372071292 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.457257858 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.459130072 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.475236521 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.511611542 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.560382557 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.472692201 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.379090668 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.374294622 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.361758364 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.458219006 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.543621019 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.457748911 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.672844792 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.354379652 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.672003938 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.353810365 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.355271116 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.458782271 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.509126689 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.53671289 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.354682768 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.457864363 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.463807976 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.459048966 seconds)
  done (took 36.38925969 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.363545206 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.371957335 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.357557253 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.369928475 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.355153942 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.357427873 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.357745572 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.363979376 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.35521174 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.356246108 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.356445921 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.369528916 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.356228836 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.356294786 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.363661162 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.357284425 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.359698726 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.364071697 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.36452449 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.357730907 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.356862747 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.363677477 seconds)
  done (took 31.165079171 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.340765229 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.341486235 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.692668542 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.595693719 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.342899507 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.341150042 seconds)
  done (took 13.886114763 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.41540819 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.550456819 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.347524694 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.686633756 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.772239154 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.353692487 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.348933052 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.587506716 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.875478417 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.87145138 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.403885263 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.417246987 seconds)
  done (took 19.864298407 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.354532311 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.348284022 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.357947297 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.362556993 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.400581811 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.352516248 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.35565068 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.342351106 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.407074858 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.40718286 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.352327672 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.402906419 seconds)
  done (took 21.676038227 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434311734 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354367546 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.365112679 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376633979 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356212412 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352692591 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369467033 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.07690936 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.362055134 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628498823 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352953815 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43633434 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599467496 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353399821 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.36014157 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.297813019 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.586193037 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853153048 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35464321 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36550588 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386544685 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.364530781 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3592218 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.561910682 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361087155 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355380344 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.620251017 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356065786 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641212268 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619628365 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.620322763 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362301849 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631180199 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983797489 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465851672 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561277546 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357648181 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373474578 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.324222244 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.360136193 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357214693 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.357110351 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.613595878 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361857257 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356446441 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35738092 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094755611 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.367754923 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.356247346 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357032631 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618710018 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442897814 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.361229107 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35753072 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400158768 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36199883 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.363505275 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478623126 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996542049 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356411255 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389161879 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.356123662 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360102449 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358429465 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018209997 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.36940157 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.362215133 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.363423783 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357332036 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357501209 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396794791 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35864616 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.378842119 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357729973 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144419633 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.360683088 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360561741 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908227927 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358938383 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.359937498 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583738905 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359050972 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359877526 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.356574791 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.358957317 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085957937 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369701182 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.327052571 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419852133 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.078923417 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.569415352 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383912317 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388786899 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.579936466 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.326159101 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359793929 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.360010422 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360754359 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381503995 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.090021035 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36349081 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.365379113 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605711517 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.569986466 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371176263 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.32573503 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.839289465 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370938795 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.38467579 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37114419 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.565231219 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.998179411 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.63011947 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368233582 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392920669 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360088227 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142411561 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364987266 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.368158504 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363337637 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6362128 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.177584103 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363963471 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434444454 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372391024 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362462059 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361865923 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378896275 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.362349202 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.54549276 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374330896 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622939939 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.368045287 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361547166 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.371528069 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375834724 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.363496489 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.582297457 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365192547 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636255517 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361611624 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361868774 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362621133 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.578893542 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.373765064 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.36752338 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701145309 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369488237 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368876113 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625297729 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398201202 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474241592 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395151591 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.368632368 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.607570994 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.369060095 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.367018197 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376735019 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365271714 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366850322 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.370949942 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359789059 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01619455 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345072476 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37100439 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.364150896 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.377928183 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43777231 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371358199 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571162026 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.368849775 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358981479 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.371252903 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.377328909 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592236066 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626595943 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.372662032 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540600795 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.843827255 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.003977578 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384542623 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.364982181 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.364586989 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.364540316 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367252603 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365332728 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.365073793 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573058494 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635578533 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385744361 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.006036992 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374229905 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375466022 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.373168181 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626176278 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.37988983 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366979435 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.369908618 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377713853 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370405775 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634632494 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591628823 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.383169455 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366925513 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.884382946 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374313671 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368225133 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365399083 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393042222 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376112283 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255578628 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711600458 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372056053 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630392336 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378936934 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.386414107 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.362518168 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367494615 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370708133 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.376688998 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378504668 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.574604622 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374256227 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36960842 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009180597 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167331835 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947478717 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374267812 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.387149391 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37455337 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.099746164 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372240434 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368777677 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614338339 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098271048 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373432084 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84721649 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.387354208 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123576085 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631841578 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596875219 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382262633 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.376237648 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634043733 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586711558 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394005678 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372152737 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374564039 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.337294073 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933876507 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37743456 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.549290845 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096713781 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375922074 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371443398 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.439337807 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.373596724 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750405496 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373660307 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369447321 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376663802 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383665464 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256345589 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381171827 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369969018 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03481414 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387088461 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.857591791 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374823877 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.576206722 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637584401 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.614258098 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.375643172 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.382016944 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.614425199 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632903147 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377506527 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384200942 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960934298 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.228197787 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.376942864 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372023117 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155219926 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373820316 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66358302 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.377419387 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.375700082 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380598155 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372204446 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371686983 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.371534438 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378712822 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348583591 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868294769 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.366974746 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386459352 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379830516 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379344951 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.619010807 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.388265261 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010319766 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604042971 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38833357 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403509343 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.377119033 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382110847 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.341960255 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37246687 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372780216 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394807611 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.597168232 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.388239173 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.34428032 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.438007947 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588372297 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374144847 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383486865 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595552963 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.37749438 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.384091292 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176195477 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404114966 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383206515 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376022479 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368686311 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42689894 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4460417 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.582136195 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.643576344 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643863775 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758628114 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387982273 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375367344 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.388796769 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455468048 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374048143 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.376233251 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.375304885 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010912965 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176149416 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.020089136 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648117349 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38174602 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385050857 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374711805 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614933697 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375069781 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650741103 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375922242 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.367352735 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39638916 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385186002 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386454006 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584966709 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650516571 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375664171 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379277605 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376451217 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.376573534 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644610446 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.590436202 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877070677 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925827133 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376907545 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38681448 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.111413731 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655363998 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375724437 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375807084 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376668076 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.396723235 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.381897189 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.388982754 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376716285 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616349913 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640216727 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027217997 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.645574159 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.566240786 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.377763551 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377633823 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.623908831 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213575938 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.584653394 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026453192 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.126794184 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628259361 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451636258 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586996014 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.380093723 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615057126 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.381557844 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377657393 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379831242 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379200882 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.377522481 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.64154504 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025999003 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634030617 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.383971358 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.380781373 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407776651 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.587301191 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604009132 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113763326 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600247459 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.645997949 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390692895 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379014474 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030351189 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651355524 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384689639 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.383929107 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598540436 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385182626 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41514046 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.258559876 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.379838555 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935579757 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.590024082 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40044279 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378886519 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.135827574 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026394561 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.389210776 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887053199 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381943784 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380740595 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677608972 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.388055697 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384481771 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668029728 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.386693462 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387808601 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597117292 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.025086519 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143989611 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.405537628 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386240013 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.388252127 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38126623 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380753107 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386317488 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392253401 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.76281257 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386842996 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381412907 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39475553 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.388311364 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381832411 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.38079912 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38164785 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.389089634 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.368860231 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.353228252 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415865643 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503266589 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948196607 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388880337 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.993014075 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.715362369 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629631229 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.385816763 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.356661733 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.388847216 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385340205 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383268967 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383931999 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375664417 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954869079 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.383583716 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.654392993 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395423091 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.593568745 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.594656598 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397428841 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594617217 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388113158 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409246846 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.350950057 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383352776 seconds)
  done (took 980.249197847 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.388696997 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.383061255 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.381942339 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.445398038 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.395474833 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.388984528 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.392988206 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.453335266 seconds)
  done (took 20.489864011 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.389099654 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.389151946 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.387525789 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.388362757 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.382910076 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.921194267 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.379091366 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.383482525 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.396203107 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.389335052 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.386485201 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.050543845 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.384255305 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.385783588 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.389404158 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.389221935 seconds)
  done (took 32.652806216 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.105984459 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.403016708 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.936518419 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.415772832 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.415062318 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.377187992 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.522208355 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.378192898 seconds)
  done (took 25.816324759 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.390049638 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.389683474 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.39059629 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.38904394 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.391588899 seconds)
  done (took 8.213059599 seconds)
done (took 1244.490087896 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.391095137 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.392295761 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.391816468 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.394001086 seconds)
  done (took 6.830498423 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.353617529 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.353645114 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.354707699 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.372525606 seconds)
  done (took 9.695320073 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.073262667 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.888572314 seconds)
  done (took 5.22420021 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.940797545 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.933593284 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.929172858 seconds)
  done (took 7.066120969 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.675905028 seconds)
  done (took 2.937977743 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.376924158 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.392364478 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.119083637 seconds)
  done (took 8.152291345 seconds)
done (took 41.168363469 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.380770364 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.138707461 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.533632454 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.380026932 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.538310304 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.533003898 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.629103383 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.393872812 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.387410165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.393820962 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.384361595 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.539900001 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.616622566 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.142602029 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.616837768 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.14234317 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.540970904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.380586654 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.381618652 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.405000349 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.630234201 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.382970361 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.377940516 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.383926724 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.544465875 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.522454022 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.378625712 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.140147938 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.378866635 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.402213074 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.528995823 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.387436092 seconds)
  done (took 82.781232407 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.378610167 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.401010391 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.391248862 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.379360267 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.37955182 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.396288868 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.380550702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.379295069 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.3842723 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.383926103 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.396121189 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.396400377 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.395983565 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.37981483 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.397136596 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.380003273 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.39574016 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.39499267 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.381709385 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.394933943 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.382336052 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.380501785 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.386883767 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.379986955 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.384882766 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.38223173 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.398735737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.380933737 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.381150057 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.383163322 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.382555423 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.396556502 seconds)
  done (took 77.651523652 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.379392436 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.380565864 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.404982354 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.392151191 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.390915795 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.391751461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.382092558 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.381679935 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.382354031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.414307023 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.390852531 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.385295961 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.384436153 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.398288224 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.382706592 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.398255708 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.386535487 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.396684388 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.388090372 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.386125188 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.384459038 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.38882166 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.383790832 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.382155625 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.40396335 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.385252664 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.383922709 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.384775085 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.383697734 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.387188109 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.386296688 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.387005565 seconds)
  done (took 77.706539312 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.625417313 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.398536693 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.40121338 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.393683633 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.402195937 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.400244671 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.394732151 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.628859361 seconds)
  done (took 14.912590489 seconds)
done (took 254.313944016 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.406232706 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.872451126 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.424489366 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.406251196 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.410059368 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.419564828 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.609869988 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.419299943 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.61193298 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.413267919 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.407606627 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.391641831 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.177901454 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.541277242 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.205294412 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.323935739 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.261832395 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.385232222 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.940291213 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.671906378 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.420292546 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.386981997 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.209635119 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.276879762 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.365901802 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.47198299 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.487090177 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.613174144 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.550208406 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.469366971 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.889716024 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.398997665 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.39858527 seconds)
  done (took 64.508613684 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.392788763 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.400791954 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.40016787 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.402898199 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.400624204 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.40127565 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.390854408 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.401061056 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.401510871 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.401214991 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.401490758 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.403033489 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.402297611 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.402224051 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.401929807 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.374355247 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.393256612 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.403010472 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.393234389 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.373665142 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.402666181 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.404106727 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.40335336 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.402741842 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.402016654 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.402450678 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.403247744 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.402758197 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.403542585 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.403141612 seconds)
  done (took 43.242654566 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.404078265 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.950962439 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.125240768 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.406944034 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.393875657 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.399063028 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.679094613 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.409257778 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.397333178 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.397879563 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.851933858 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.413304058 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.428707085 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.130256828 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.402187573 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.404950975 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.403598155 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.396437113 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.956114846 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.410357159 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.676919414 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.410100497 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.677995932 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.410016281 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.398164851 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.396093945 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.400833947 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.222509156 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.422195619 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.854375431 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.167157853 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.678102621 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.16075398 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.17913945 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.172645283 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.41196909 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.405590063 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.860085219 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.404829394 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.396929688 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.677183017 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.403874423 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.132912062 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.081891959 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.415034798 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.407058422 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.256749542 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.86462627 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.639847239 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.409598001 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.164220432 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.405583306 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.408393285 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.399493373 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.635688473 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.407320635 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.398576348 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.236996258 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.403501502 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.678791885 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.412525674 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.39876523 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.950153028 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.404482853 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.950291897 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.407415673 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.406929812 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.398664025 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.13791356 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.405875711 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.095960486 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.420411628 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.408003033 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.857028189 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.955347026 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.302139732 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.40577767 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.956420022 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.189275063 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.701252009 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.408792113 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.198812673 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.706607207 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.409830872 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.410087037 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.410829652 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.410371996 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.47411147 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.677981123 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.017772164 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.095585416 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.260261886 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.688256413 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.413226213 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.401011051 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.250965574 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.415647444 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.409597318 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.134928242 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.104326254 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.423561048 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.407733706 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.085063092 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.424946457 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.683573462 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.41332082 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.172017239 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.40942749 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.477079812 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.41170009 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.408297078 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.406009193 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.685425145 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.412615138 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.411426362 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.083129542 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.889402674 seconds)
  done (took 195.439539556 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.398289895 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.397623648 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.397382881 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.397482687 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.396246499 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.404004914 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.39603566 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.398206981 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.402892028 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.396992522 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.397837016 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.40616425 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.403282972 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.396449803 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.400398005 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.397512903 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.398346233 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.405327972 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.398328147 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.399654629 seconds)
  done (took 45.268277881 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.414037132 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.956843426 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.926109452 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.418931611 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.412825234 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.403701373 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.459487857 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.413934827 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.4131968 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.699994275 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.577546233 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.419327213 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.413542505 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.41273702 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.920835135 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.390352811 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.700548835 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.963041932 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.419741273 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.958505658 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.389716089 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.413190109 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.402844828 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.956833606 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.719273869 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.690094625 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.466748512 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.958829781 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.41982131 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.415750394 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.959947934 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.4198794 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.405456871 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.945373339 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.420860204 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.429048004 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.414295289 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.461979336 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.46508378 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.704706388 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.969778426 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.701342716 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.430685376 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.571787938 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.416242054 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.385392307 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.971009769 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.421819882 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.386856333 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.416754931 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.420479692 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.93555277 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.411534489 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.936764676 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.421365065 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.414903346 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.963197709 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.943426199 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.931405164 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.579366066 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.411656373 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.686767339 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.422432061 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.972990325 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.422701355 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.41705651 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.416004115 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.578454585 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.955927037 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.689889287 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.709241911 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.709457582 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.422710321 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.473729586 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.420542876 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.706587742 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.479079114 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.817619764 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.705233254 seconds)
  done (took 127.48429332 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.673657906 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.522611432 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.791468768 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.994114606 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.919473651 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.55611684 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.521758987 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.655080971 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.416140721 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.537897032 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.062927505 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.508010334 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.17506855 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.475707013 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.517347762 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.534718832 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.80140034 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.364776867 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.043994254 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.042938492 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.416602647 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.528750488 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.922671984 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.604290157 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.422685487 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.991244358 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.35127318 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.931294698 seconds)
  done (took 53.570976358 seconds)
done (took 530.783563008 seconds)
SAVING RESULT...
DONE!
