cset: moving following pidspec: 31267
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.099287855 seconds)
loading group "string"... done (took 0.498319458 seconds)
loading group "linalg"... done (took 9.520449412 seconds)
loading group "parallel"... done (took 0.172738359 seconds)
loading group "find"... done (took 6.455708691 seconds)
loading group "tuple"... done (took 2.109064256 seconds)
loading group "dates"... done (took 1.421841147 seconds)
loading group "micro"... done (took 0.196605747 seconds)
loading group "io"... done (took 0.545578549 seconds)
loading group "scalar"... done (took 58.212542697 seconds)
loading group "sparse"... done (took 14.033172079 seconds)
loading group "broadcast"... done (took 1.347197943 seconds)
loading group "union"... done (took 10.654394045 seconds)
loading group "simd"... done (took 3.609743842 seconds)
loading group "random"... done (took 13.418249651 seconds)
loading group "problem"... done (took 2.199285085 seconds)
loading group "array"... done (took 24.632776614 seconds)
loading group "misc"... done (took 1.162188344 seconds)
loading group "sort"... done (took 3.744965665 seconds)
loading group "collection"... done (took 22.239973191 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.620719174 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13050628 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.208209367 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.229341739 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.231572843 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.169884882 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146812662 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.240591625 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.573425078 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.197633222 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.157541755 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.427741801 seconds)
done (took 6.092454171 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.256623257 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.24561944 seconds)
    (2/2) benchmarking "String"...
    done (took 0.167878829 seconds)
  done (took 1.11438822 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07904213 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159949615 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110651503 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096905291 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096057355 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112397542 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096917598 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111710373 seconds)
  done (took 1.491883183 seconds)
done (took 3.647718268 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.507966975 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.855929498 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.489058977 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.147751922 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.316953031 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.294845799 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.27012233 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.201550062 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093632068 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091640301 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178512038 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.383086315 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.401201789 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.929944296 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091940607 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.111523351 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.119916158 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.76181314 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08180634 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.122650264 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.505709932 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.195002731 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116358825 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106196037 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.188075412 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140009108 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.162940266 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104243471 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664412417 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133966359 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.18055477 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099877428 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.16014025 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.188053292 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.215982343 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.096266509 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678189869 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201771672 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099640222 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103286632 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67607479 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118919064 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.188539248 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106848533 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089151439 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.180979925 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.102324428 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.095260477 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09691926 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.088542359 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.165236522 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.43489665 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106997398 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.173020577 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094516185 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.68923897 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098379727 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.2780247 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128251227 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095809983 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094788644 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089960676 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.161928312 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095601158 seconds)
  done (took 19.982402124 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.150650909 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.168811685 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.080335707 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159379842 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.124483094 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.08217681 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.104008982 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080046852 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.127461198 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179732587 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.141545518 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.156421445 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09444029 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092502777 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.149695484 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233747116 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110099175 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123665414 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.092177423 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.09220887 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142146924 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099704836 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110672433 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095073532 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171928969 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20587393 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110240484 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124719875 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092166877 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098610906 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144642517 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146556103 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093438101 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091610839 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.191446291 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108591414 seconds)
  done (took 5.295539739 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.224200431 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105924099 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.230926463 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.201636683 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138296023 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.186763073 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.170307767 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260581952 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.216358886 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181542863 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115941108 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11487727 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08091483 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08361467 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096028596 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.467420123 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.151217628 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.195287212 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.168579598 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114968181 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084597958 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367437996 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10402663 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087414482 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113681867 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065145377 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.206441999 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096046917 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.137436096 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086354536 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.123617565 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134025894 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199693836 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126294767 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142030591 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096975952 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.105249714 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.207616835 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122293218 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.08052371 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.135157597 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118771632 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131719521 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108687847 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.113291261 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225479809 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.105527742 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11717617 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.047540712 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196610289 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.156254298 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.106675963 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.297929303 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111452805 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121968832 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094664164 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.792521511 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.089773218 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113943292 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101562843 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081686067 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113035559 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083137105 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.434721603 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111252587 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.182855771 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.100291961 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.143138409 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116236151 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121330584 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088413089 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087025248 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.12927355 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087685888 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097731195 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089271252 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080271387 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.108918341 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114870128 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101383413 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083872007 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148002653 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.115095531 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.110474346 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125856919 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091999114 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.088722815 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131487164 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087100847 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098114535 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.094581487 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.167689825 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100652531 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.160030873 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.1142109 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118150666 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144077318 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089907247 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.227284698 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.099011593 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125044781 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100370957 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08663324 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127649482 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.103605303 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082392867 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103966272 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081369996 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081815813 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16291767 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089474093 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081501845 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10672929 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095369163 seconds)
  done (took 28.638636713 seconds)
done (took 54.620056731 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.451396138 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083091885 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082666084 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102688097 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083991104 seconds)
  done (took 1.583822399 seconds)
done (took 2.341705249 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.328877418 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.201740418 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104870564 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19248802 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0883746 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196432887 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183466689 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102006812 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209629516 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085774448 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.188089891 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086148771 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106802038 seconds)
  done (took 2.855710868 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105155484 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107052009 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121373167 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.104015759 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087448364 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102591667 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.12035313 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109544383 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101408882 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114831297 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086838078 seconds)
  done (took 1.9181922 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101798125 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106390493 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093420735 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117536196 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087629968 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101903947 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115530027 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108394337 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099419093 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113237234 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087247878 seconds)
  done (took 1.889648016 seconds)
done (took 7.418127643 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.078365298 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.593540709 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.148890049 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.211740055 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.349079959 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.240927363 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.571850908 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.155706759 seconds)
  done (took 14.252788225 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.171218381 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.111325987 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097158042 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094600514 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094573276 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.112968919 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092450297 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095303947 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.114385455 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095532252 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095610059 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.108722388 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.092981015 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092050862 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.109783704 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09276667 seconds)
  done (took 2.494268094 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.145498527 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.144905602 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099628073 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099905669 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.114951827 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099881771 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102979833 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117921514 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09712096 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097582453 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.12007593 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100701043 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100584691 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.112530908 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099851156 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118157392 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.112391896 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.101388353 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117924304 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.118485833 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100397104 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097612771 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115437941 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101195378 seconds)
  done (took 3.482507946 seconds)
done (took 20.988475703 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150611974 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103591354 seconds)
  done (took 1.017878104 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.14316956 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.159538741 seconds)
  done (took 1.06932276 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113169999 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092044823 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138945521 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103541329 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091849051 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108661698 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119768295 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.10909753 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094197496 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092951809 seconds)
  done (took 1.835119182 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096253826 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096790231 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125521579 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.137733513 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117585308 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096008375 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097046467 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09417233 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11588788 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091833128 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096254646 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.128417457 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09617166 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12764598 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096270922 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.21580385 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118312703 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096169401 seconds)
  done (took 2.816866822 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092368732 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094165403 seconds)
  done (took 0.959203668 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.096059215 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091664007 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093732418 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110318555 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091472686 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090531309 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10801626 seconds)
  done (took 1.45449824 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.500677647 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.26300809 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.360505831 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110594888 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.151301708 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.353357559 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.154261633 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105230106 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.124618159 seconds)
  done (took 2.93034644 seconds)
done (took 12.855136994 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093785088 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.228080504 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.611551853 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114961987 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090743957 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.15989507 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.290327019 seconds)
done (took 2.36621845 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346566819 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141674947 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082478848 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092436806 seconds)
  done (took 1.431653794 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083884266 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100130266 seconds)
  done (took 0.963177235 seconds)
done (took 3.172655247 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091615219 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090828611 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.09093477 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.106352574 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.089739236 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.089252731 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.140441396 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089905488 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089238577 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.10944391 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.089544024 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08949645 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.088861368 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108508148 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090064861 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088847716 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108270645 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.091097282 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090262483 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089010025 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106468377 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089785022 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090333332 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.106604736 seconds)
  done (took 3.127980333 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107786313 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092820139 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111107598 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095826613 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095795574 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.111459889 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094388364 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091363111 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112158825 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09301153 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095287414 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.111042895 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092682613 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095868911 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1097717 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.098002375 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094447732 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108726913 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093163412 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094686743 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.111052666 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09301673 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095526129 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111205495 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.095701852 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095415604 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.108564234 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.093372245 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09496312 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093841595 seconds)
  done (took 3.770161716 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.100462437 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087656261 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090620406 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115754566 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087964346 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091088481 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106011857 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089056652 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092523327 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090850429 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110090952 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09236921 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087778007 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109152667 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091714721 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093848778 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116482959 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08945844 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088074244 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090475364 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111634542 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088988213 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091024065 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.107834548 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092192331 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089503405 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.1067655 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.09056584 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09180184 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090592226 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110673144 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094021504 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089472419 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.118401283 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094932185 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090885174 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.112788123 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088551305 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091658374 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08788384 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.10513913 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090064902 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087807548 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.114171755 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091255963 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092473265 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087685629 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108904951 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091915838 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097606228 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.105145963 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08792763 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092357945 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.109441898 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093790637 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087853377 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092042547 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.10469859 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092374978 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090516355 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.104583624 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088071601 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095350677 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.108498416 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.107338727 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097118179 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.104766293 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094141324 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092633514 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097233514 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.110290371 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10130001 seconds)
  done (took 7.771362745 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103780492 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099224641 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.092287435 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109292771 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091967695 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090649143 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113375144 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091406518 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093135607 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116223637 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092891809 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092094446 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109565859 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093546331 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092643742 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109283715 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099356585 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092165713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090887964 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109400005 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09216728 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095843254 seconds)
  done (took 2.960623299 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.240084997 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097829102 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141520977 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123696185 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113244454 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123027161 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097161703 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098182452 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113078523 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101246845 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101745044 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113162124 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111901932 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118034459 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103371906 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101138873 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113891882 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.1020578 seconds)
  done (took 2.90455023 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105859826 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093917722 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129925925 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093348543 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093837032 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.113355459 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100241515 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112522854 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110658182 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09521049 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.10066176 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111589126 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094524337 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093508649 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110699009 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094649845 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093737587 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093078235 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118867853 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098794007 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116320465 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101315042 seconds)
  done (took 3.069315926 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106527171 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094792671 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12804449 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096532649 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093184005 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110534263 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099122015 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09403625 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.116827376 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094730687 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094395719 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093241209 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126038143 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094275524 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099045392 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112022988 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094344939 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093404831 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110884393 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093281476 seconds)
  done (took 2.83728769 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.173123376 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127356644 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.11062761 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119333957 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12874504 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110907433 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136409471 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111028901 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110268415 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140058367 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110219619 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109546902 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135494433 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117209658 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127619218 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119636523 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136954276 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120523141 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110577072 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128024929 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12339459 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128631499 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119651622 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109530867 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127278422 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110150045 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110841019 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134309231 seconds)
  done (took 4.241303873 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093568581 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09142578 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091584006 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109225249 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091652347 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09212869 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.109398662 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.092805224 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092092453 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091383995 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.10988766 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09286 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091521435 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.108622358 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092820502 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092807483 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092344955 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.109330065 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093141621 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092432842 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.108779644 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093516796 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091753816 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091654453 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109257776 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092457771 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0928836 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10970769 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092594677 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091649028 seconds)
  done (took 3.699859287 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10565651 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102697614 seconds)
  done (took 1.005504119 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100930949 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106399611 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092016321 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109754412 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099868829 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092637544 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119473205 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099447572 seconds)
  done (took 1.618598957 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.143339534 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.164233392 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09772558 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105683776 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.163174345 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.154143771 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134700815 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097539279 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10905649 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085703937 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.158502429 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08651057 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092982959 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109537625 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093159343 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099494487 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111982045 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103291061 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098951216 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.111763689 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098227578 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099321215 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11262441 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104070791 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.087852287 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.112866195 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097639767 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104430003 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10791116 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09511254 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090968036 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.111685829 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096605896 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096755004 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.110543941 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.146435771 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101109903 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108611175 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094217198 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09746499 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.14430388 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093560353 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095558123 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110212927 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096818445 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09756615 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.115628898 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093806703 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085572553 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106513324 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09456228 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088975155 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.111832932 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095375605 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.094780149 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118301429 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097443297 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090475499 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108389372 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090358002 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092166796 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10699712 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09661842 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097112027 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113256637 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094522268 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09406291 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111097773 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096823735 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095297174 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110561281 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110287137 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094905118 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.115916536 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.09898708 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095056357 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108702107 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100311342 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092969523 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111614018 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097717003 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122909738 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112655709 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090132449 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089310004 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.116953305 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097548801 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097241652 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085573422 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120924537 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097026696 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094322351 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.104895667 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092872529 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089222313 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.116025565 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088321015 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094047432 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.110775247 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099022498 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098814028 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110448045 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096190214 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098430134 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117561717 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092299506 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156937551 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092252945 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089613365 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094808979 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117849757 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087841787 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092681585 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.110962681 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091864992 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089570106 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.116086993 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094135358 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.094657633 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.117055882 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097101979 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095222733 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.11355567 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093820885 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091124928 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.115756101 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10339254 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096142931 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.113627942 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096241566 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094585979 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093824982 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.115765158 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091908396 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099236512 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109324476 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094144662 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095432238 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.116144988 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095803881 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.090370735 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111812181 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.097123125 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093567292 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.114110473 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.095569335 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08905782 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104678601 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.096649116 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090087621 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.113179993 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1023641 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090632676 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113996908 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092179511 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102322039 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.109588674 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101828682 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097272369 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.116778419 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100034617 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08738329 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092928697 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.115935468 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096859975 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.091201364 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.114475255 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094702776 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100231119 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.106870611 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099293809 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087343655 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.110434963 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.108007432 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095585592 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.114907665 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.09114976 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135885601 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123459664 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099943363 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09474637 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111531278 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098988718 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094427983 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097290258 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119039294 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099998044 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092048938 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111761929 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099372083 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090156787 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.116853252 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093484588 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095411387 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.106095791 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095221448 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087109939 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.117035856 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.09684996 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097641893 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.117581574 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097723319 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09333753 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121663613 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091375334 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099109799 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08660854 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.118148804 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.114108701 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100265429 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118906069 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.096678734 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091700465 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.114983636 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102298432 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097006559 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114638233 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09626353 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088353465 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10769717 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100388091 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097648271 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109008708 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.0950724 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097350541 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114850296 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093710082 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087957452 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099591578 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117629967 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090295918 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114395445 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092439459 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093169162 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120701776 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088537597 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091031987 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115125123 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100654512 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095178585 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094586346 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.117838357 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100630754 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097555746 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.115878799 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092650491 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103709025 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112666377 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095382154 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091508645 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.115855616 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.090060179 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096220632 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094465169 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111311943 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090866977 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098906681 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119383568 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.099738453 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093137916 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.117996745 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099820428 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100057794 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112135475 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101139075 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089918667 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.106573659 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092066488 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087316699 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.114737412 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091293297 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099969969 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111017295 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094134788 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098413339 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116116522 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.093972387 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100873737 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126175562 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089382824 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088349733 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111688185 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095562357 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091647697 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.111170881 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09679579 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096836486 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.11809734 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099171096 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091097374 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095072084 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.12053409 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092368827 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101154164 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.119932771 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102264803 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091114406 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.118418563 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092539172 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09934905 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.109112081 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094952106 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094187398 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115323143 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092420771 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093903585 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.109954489 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090574584 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091922067 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.120758965 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09447089 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100083781 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113458273 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.094030464 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092376162 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109750939 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102808758 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094443272 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.120758454 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096686368 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089600326 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08997382 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.119242218 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096385821 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102127233 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.11126765 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099692111 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101907525 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.118493416 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098371954 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104568599 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.123268735 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102310601 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10244893 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.108865249 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.09478137 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100634251 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.114954881 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101040967 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097785102 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089133016 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11887278 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101950145 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096325183 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.114175983 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.088383226 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095622893 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.120719898 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098699148 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.0993994 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.11614826 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098485915 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090720836 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119480102 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103023214 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096000667 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101570698 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116176399 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100389881 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093271144 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.119891365 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096895922 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090168117 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.108611157 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.094265746 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102235486 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.109246664 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101785185 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101540035 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.112491361 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.094459963 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10043978 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091948256 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119120607 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100420734 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093948529 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124765871 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09684989 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09460328 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.120191519 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102023902 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089286274 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.114783426 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095534066 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10382641 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114597083 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100782014 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096335529 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119702709 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098779588 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100824602 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.119781739 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103274519 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090193145 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103111862 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119431691 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098307653 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092524459 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115219814 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.092446089 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094670042 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.123030597 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.094732789 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104661194 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.121686787 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.095041133 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094339611 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.122415692 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096151349 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103563371 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.11179006 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100361318 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.09004129 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.118647803 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.096738385 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102343296 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.112350272 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.093052358 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101526391 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101082686 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121808607 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.099611632 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102971825 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.110318477 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089874387 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09826726 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.114228768 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105991005 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099653234 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.114295275 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095470678 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098213762 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.116609492 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104051073 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09052672 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.112049027 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.098876152 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098039605 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.11361252 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.092829551 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100894928 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095520449 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119373911 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.095879768 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091880797 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.115097368 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103700585 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094245437 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.112215824 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094108602 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103170822 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.115311577 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.094035563 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090228482 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122118575 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.099205765 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103288716 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.113637709 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.098855692 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094572418 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.119119022 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106557568 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094543714 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116217381 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.0962649 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101688254 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121479438 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.090759512 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093654136 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.126524582 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102441535 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.098295693 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.118190923 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.097293686 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103458618 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121849884 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100267207 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090453248 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.09095536 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.114635452 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090696308 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099958572 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122853116 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.096482798 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.09426803 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121784715 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101982474 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099208235 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.1180487 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.092752744 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104223274 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094059364 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120404498 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.091202989 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090575991 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.119347478 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101812308 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095736473 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.117993537 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099085633 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099477804 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.11088793 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.095830584 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.101191608 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121355087 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10411798 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096518637 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.114963882 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100617261 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106051358 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097413176 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.116334601 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105519056 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102884361 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118199272 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.097150504 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119649573 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104501019 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099453803 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102811711 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.114595711 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.096496743 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103391281 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.124014061 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108226728 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094611805 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.111085016 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100930483 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094479805 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.110792632 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.102256039 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104109952 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.122998434 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09754864 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093818149 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125828106 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103955058 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097423731 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.114428769 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.095637621 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100932007 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113795391 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101298336 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093751615 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.12329966 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104217209 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102877631 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.105596851 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.112240241 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103230417 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098024873 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.125073513 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097700948 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.09090141 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.111342224 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100046743 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104386895 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.122609974 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101334499 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100849606 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100692673 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.11982681 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098009 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094577275 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.124480429 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102682407 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097957514 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118815577 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096933218 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098093918 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.119282452 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104839184 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103477355 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.118949461 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107945465 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103761864 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115323985 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.095461539 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098415117 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.119679204 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09900999 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10218626 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.113104733 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.094219984 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10296948 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103098951 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116205639 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104707425 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103053551 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.116983771 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100282734 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104886588 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.12271197 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099533078 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09847609 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.119645813 seconds)
  done (took 62.569867306 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148713918 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104869268 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119421963 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100034064 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117835019 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12095942 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099216913 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100857582 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119894701 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109595532 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098911454 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118502616 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11559923 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141207188 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118583086 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109467267 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120019991 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101040101 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099401532 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120489649 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116580013 seconds)
  done (took 3.25098479 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117938694 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113877704 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131677131 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114429408 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.126026205 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112130777 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112004954 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130641695 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115138363 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.127548905 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115947541 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112036181 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128611361 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109184211 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107695168 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129078199 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115412344 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126499904 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112805007 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112515821 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.129190513 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112679001 seconds)
  done (took 3.465909845 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130048867 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102897752 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097593974 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119198821 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10358044 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099169685 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122140634 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100447648 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108260598 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.114643963 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091642427 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09575057 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097164836 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119211193 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095417249 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.10113374 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127157564 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103879187 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106604643 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118358109 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092206021 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099541331 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.100989601 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110706912 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104962098 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103874134 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.118687078 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103555918 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091455768 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102243592 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.119900572 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09418672 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090283873 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110464306 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091438542 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103013693 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.1222816 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.101501432 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100691407 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090795952 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.121888418 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10409987 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091829723 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.120108248 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.10101663 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094767498 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.121201805 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.100745463 seconds)
  done (took 5.918308127 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.367440031 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164696064 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103356143 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136874229 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136247768 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108781966 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124149163 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13771259 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100760973 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124913163 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115678032 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.135124814 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105965897 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107454646 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.124093734 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10562477 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105733356 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.120825894 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108598562 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104182531 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126860721 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105573309 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112738061 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132294989 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106037585 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101748106 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122748123 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106857963 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.132385241 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109436465 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107736692 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127036951 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.113952781 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106150028 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123931958 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104771632 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114745877 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.125471111 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104820102 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10308973 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.123312636 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107023468 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10527874 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135771977 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105437441 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.12522174 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105234457 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102264274 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.13143154 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.106156321 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109982438 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.135257182 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106483034 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104575807 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126295533 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.118181949 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.122861924 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102649388 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105509478 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.131177758 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102558157 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106681509 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.133952613 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106118641 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108866879 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.134749115 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10604618 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106051936 seconds)
  done (took 9.111135404 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136396278 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107684493 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136312061 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117935096 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107425605 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.129447102 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108957419 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.127211526 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108675739 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112935308 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127183572 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.201747913 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.126372338 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112653261 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107163894 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128534615 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108464582 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128964358 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108578561 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10781151 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126552043 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116621653 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107814614 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136184992 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119939764 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.124270103 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108802098 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108234892 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137013047 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108335321 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119262234 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.128911991 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107337097 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.137054527 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120352672 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107925019 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122547577 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109972585 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108301534 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128098845 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104875921 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135389249 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11022917 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10470698 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128944637 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109204922 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116254129 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.139176158 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114442537 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132695189 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109014696 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116841212 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129544488 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108892626 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116100402 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.144795716 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11604073 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137039453 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10873616 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13586516 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117585415 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.123805093 seconds)
  done (took 8.357762281 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104337863 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10144239 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099635553 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119719741 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101016087 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099940569 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119307151 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101885088 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100524235 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100595153 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120722098 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101010163 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100175696 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119871064 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101220517 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10034916 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100018385 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121151015 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102371584 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101230086 seconds)
  done (took 2.984643837 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111513231 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117851109 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123563823 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109242828 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103794838 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129024527 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104540811 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103208445 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123179299 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104522459 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110917902 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131318525 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105253436 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109622965 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.13132714 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109359942 seconds)
  done (took 2.69661399 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.123067664 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119387215 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.189118641 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105626737 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125666449 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110563715 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103392196 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125993909 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102844421 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109154584 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.128016917 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106348449 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103410996 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10394 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124498465 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107214224 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101902667 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127895749 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103936631 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.189407004 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.108540651 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104647697 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125270594 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.108585359 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104170312 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129911972 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109793629 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102422864 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125621488 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105258538 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105751297 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130589578 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103489326 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107352561 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.12377382 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104648509 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103691825 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.123767482 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107732155 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103971111 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.126117209 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107316658 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104235362 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10525903 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123610347 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10454101 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101245997 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.129517612 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104381085 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105716924 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.125275936 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112024848 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106461387 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.132206167 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111252029 seconds)
  done (took 7.220868357 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115306173 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104891401 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135336715 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102647025 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105071637 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103868716 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12553715 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106097264 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103466458 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122796544 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10538663 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10568848 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126298163 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105512454 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105113984 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125993228 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101776317 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105177739 seconds)
  done (took 2.880953194 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10981482 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103269642 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106881724 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125314167 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104292984 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103016929 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123676585 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103306907 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102835685 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123607574 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104308721 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103218014 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101214867 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124844703 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103786922 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103215123 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125802108 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103632801 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103878906 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121963511 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104011723 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102626233 seconds)
  done (took 3.28511501 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114504501 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.187421925 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.11050865 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.197027901 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099740388 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.099099152 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.131929171 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100214227 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115705967 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120957921 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.100234183 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.09899485 seconds)
  done (took 2.35430336 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132426882 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141497842 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126002407 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105318492 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113673721 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129809336 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109315541 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108880428 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138950799 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119202983 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128985697 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116665353 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115425374 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137353991 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112271627 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13364331 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108686073 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108173843 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126208321 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1245656 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107760565 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136224274 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109210018 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129170599 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109557714 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116774535 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137277985 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120705203 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129455533 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117477739 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112725159 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129563301 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11780732 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141685521 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106553857 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115461569 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131262373 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126204264 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133753473 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117944424 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104228214 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134507212 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118006672 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113101669 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138363753 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108761016 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13510345 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110261781 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108472401 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153047841 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114989378 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139503285 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114517878 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115751241 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137910365 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130514842 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141709755 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117979846 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135180079 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121136124 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137206327 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113409638 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117758367 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143308017 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114749408 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13795328 seconds)
  done (took 9.022880887 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149197714 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105697272 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130012904 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121709269 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139512935 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110527225 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110320143 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13161118 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110982694 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105299851 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175018889 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109636904 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13961244 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120627309 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108387058 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131839624 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110413372 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138786336 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107488571 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131659647 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131211271 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119124645 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139697128 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118396265 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120737365 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13546593 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109044809 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129800494 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110734997 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109585323 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136583641 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109145912 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117590424 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12736294 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118659615 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10900461 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130239501 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116057651 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129819716 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114744943 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117832401 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1464887 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109953852 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129679124 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122153031 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109547504 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131826016 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107237474 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110565297 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127343904 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121314615 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141996351 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122408106 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117143946 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131052457 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109914703 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130211034 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109842364 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109606242 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134256382 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119022661 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109429148 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153552997 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1100981 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131799458 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119007912 seconds)
  done (took 8.988601365 seconds)
done (took 169.894948607 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.150827197 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.188916799 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.147234784 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.181124351 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095177232 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.130570254 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.148993427 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.149057945 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094157815 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.118044447 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095919326 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09700638 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.186342756 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095612302 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.095859146 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118963825 seconds)
  done (took 2.973233699 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195527237 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.311862918 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110181405 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.122176635 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102400328 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100799112 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122257511 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.103243895 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100238973 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130251638 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100877492 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095937111 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129687467 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096355003 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100274644 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121279249 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108642154 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099535245 seconds)
  done (took 3.140177784 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120750884 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144065538 seconds)
  done (took 1.161233815 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.13140168 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.214790341 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.283424516 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170024643 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122543687 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.14237755 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.150588277 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135972465 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190388374 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135562825 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113470165 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120355081 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.126145658 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105823536 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.139339125 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098700322 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128406695 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136660719 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11452029 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.102184322 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.146414279 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104564395 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.127680163 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11618142 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.1796336 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137693918 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104594588 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.125186537 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.103147098 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115128815 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.131510828 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.119215109 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.134849879 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.160574477 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.127433066 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.155207724 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131030441 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101682444 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.135789883 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.102047095 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104433937 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.126730758 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.115999824 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098566068 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.126024806 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108512986 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103914643 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.12683062 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.110229475 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.129841945 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.110065596 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107647265 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.178412692 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.108521741 seconds)
  done (took 7.970752486 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.871355804 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141941486 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101240799 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.996229824 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152631585 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114255393 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.895175248 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125289798 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259355643 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.895248949 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115877792 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.138033636 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.244336693 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.285755018 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.275293001 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361405157 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.733737281 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.137157596 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131405844 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164821209 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110834893 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127977214 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.145291393 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.52288411 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.103463602 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102473978 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132687478 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114785984 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181545552 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101837276 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126989404 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179279913 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.296467829 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213546769 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.124514232 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101462537 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101050699 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187993468 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276846495 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221328231 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.197665018 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099188369 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101290903 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133725716 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122481524 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121223071 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161340839 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.196333222 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193862502 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104934892 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.137887025 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113243081 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131400521 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159477513 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122075006 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.364034512 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.365019473 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101741923 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133535615 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117307156 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271274349 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126255532 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.24125513 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129772934 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218115776 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.124829342 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.851485048 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185966314 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.102487438 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108203785 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.131437226 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108314894 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110188917 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.193905175 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.505885219 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.114523085 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105749312 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12484173 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.238275219 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102381337 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100679702 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.1827814 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101989106 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134465941 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115366648 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136862634 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.19157461 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.252287549 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137302469 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111140983 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129646091 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116283713 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.103183891 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.235923798 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.233681212 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179199113 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.236143385 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11090818 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185587223 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189215344 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10939692 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193837108 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109756827 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.141739658 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110371038 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227223904 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159192488 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106068624 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.131147487 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11222721 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160787222 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106847038 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111889617 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190222768 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.563016044 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.189073417 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099554045 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106829984 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135939916 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182965574 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112394225 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269077626 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111672022 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188640691 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.13237209 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.100623245 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111826795 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.184271534 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11223149 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133732762 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111174171 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133461416 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.261220966 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.24688104 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116571698 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255383081 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.20192647 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111746569 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197963658 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11030223 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192429058 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113564393 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134085668 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10346605 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.838533293 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140779086 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11111372 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107622742 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.211817851 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101320404 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127819896 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10285719 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099325489 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826675547 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127407359 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099909115 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104414061 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132070141 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.111274333 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110558857 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.13058263 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.181313434 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251207335 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115939581 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132992715 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103125926 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182531731 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.10444426 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103564701 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126140985 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104236952 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111338623 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.131005645 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105588441 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196572573 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179823863 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.235232511 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.640755199 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1032531 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102409526 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268201399 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103720449 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.331192713 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132958673 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.240712635 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187976557 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10035942 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.363962127 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.191447087 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.2101723 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107525244 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193242421 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10027299 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112662853 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.18424055 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102462822 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133395522 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179591472 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.119984096 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115745841 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.312913828 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103479475 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256414418 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.100980764 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193417198 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105468867 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132658767 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.332478427 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103833844 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120736711 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.185316162 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131715623 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104542068 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.681551346 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103249495 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138230586 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111550187 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.239063843 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.18819322 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111524905 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136601216 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11542356 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.183806862 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.238793166 seconds)
  done (took 48.580545214 seconds)
done (took 64.716816402 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.26908339 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.178529302 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.28228599 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178941608 seconds)
  done (took 1.896575365 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.244106253 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.157612636 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.203094303 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.122274168 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.208652195 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.122190054 seconds)
  done (took 1.980330534 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.177337359 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.169644321 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147426641 seconds)
  done (took 1.416548106 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200862391 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.218515529 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.328092391 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.257508569 seconds)
  done (took 2.013372213 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.265370538 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117579881 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126529394 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.207869856 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.229984509 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.205572606 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124657313 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174956413 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.13015527 seconds)
  done (took 2.543370981 seconds)
done (took 10.770263802 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.249981562 seconds)
    (2/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.145383326 seconds)
    (3/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.372842641 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.195005217 seconds)
    (5/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.310651138 seconds)
    (6/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.169367783 seconds)
    (7/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.339568329 seconds)
    (8/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.346319673 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.136267486 seconds)
    (10/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.167878519 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.127584836 seconds)
    (12/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.229009423 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.209353283 seconds)
    (14/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.203633002 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.207644906 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102582393 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.145036511 seconds)
    (18/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.243621152 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.12771037 seconds)
    (20/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.10415271 seconds)
    (21/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.127911096 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.126760849 seconds)
    (23/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112467377 seconds)
    (24/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.180593771 seconds)
    (25/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.269416202 seconds)
    (26/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.144812634 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.152272266 seconds)
    (28/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136942473 seconds)
    (29/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.195944647 seconds)
    (30/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.209138399 seconds)
    (31/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.131455256 seconds)
    (32/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.153905381 seconds)
    (33/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.355530652 seconds)
    (34/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.084198799 seconds)
    (35/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123248779 seconds)
    (36/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.22461408 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124803578 seconds)
    (38/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.084950962 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.146420489 seconds)
    (40/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.099580312 seconds)
    (41/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.209060082 seconds)
    (42/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.233660306 seconds)
    (43/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.201715562 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112200034 seconds)
    (45/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.136092036 seconds)
    (46/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.292416422 seconds)
    (47/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.127872425 seconds)
    (48/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.188760865 seconds)
    (49/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.219112027 seconds)
    (50/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076076033 seconds)
    (51/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.223826525 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104248836 seconds)
    (53/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.209524933 seconds)
    (54/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.189765544 seconds)
    (55/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.076768344 seconds)
    (56/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.135830929 seconds)
    (57/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078158667 seconds)
    (58/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.157013169 seconds)
    (59/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.123524253 seconds)
    (60/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.167303271 seconds)
    (61/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.132086243 seconds)
    (62/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.143222181 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.121553562 seconds)
    (64/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080075863 seconds)
    (65/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.128774574 seconds)
    (66/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.145100713 seconds)
    (67/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.080421676 seconds)
    (68/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.185275262 seconds)
    (69/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.142468977 seconds)
    (70/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.126000633 seconds)
    (71/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.149894399 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.104528334 seconds)
    (73/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.100989248 seconds)
    (74/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.078688573 seconds)
    (75/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.108739472 seconds)
    (76/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.111227271 seconds)
    (77/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.202445797 seconds)
    (78/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.149561218 seconds)
    (79/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.125004931 seconds)
    (80/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083830404 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.127656254 seconds)
    (82/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.086035499 seconds)
    (83/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084921018 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.118440014 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.132595454 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123729 seconds)
    (87/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.080665815 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.130119092 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125192205 seconds)
    (90/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.113965956 seconds)
    (91/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.181507132 seconds)
    (92/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.080663839 seconds)
    (93/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.146155882 seconds)
    (94/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.134471182 seconds)
    (95/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.166189771 seconds)
    (96/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111404996 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.124545193 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.112177135 seconds)
    (99/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.139029312 seconds)
    (100/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.151781441 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127682227 seconds)
    (102/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112564855 seconds)
    (103/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.132555932 seconds)
    (104/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10555637 seconds)
    (105/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.14389556 seconds)
    (106/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110536713 seconds)
    (107/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.132375112 seconds)
    (108/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.085145383 seconds)
    (109/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117033247 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.129612346 seconds)
    (111/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.142545265 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084748043 seconds)
    (113/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.165924119 seconds)
    (114/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.07881609 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110428563 seconds)
    (116/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079149684 seconds)
    (117/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.078517895 seconds)
    (118/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.17670335 seconds)
    (119/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.084384024 seconds)
    (120/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.077912488 seconds)
    (121/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.139820577 seconds)
    (122/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.104593158 seconds)
    (123/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.16978794 seconds)
    (124/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076904613 seconds)
    (125/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080514163 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.14928545 seconds)
    (127/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125529451 seconds)
    (128/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.080675628 seconds)
    (129/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.103981398 seconds)
    (130/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079295672 seconds)
    (131/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.081682651 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.103584823 seconds)
    (133/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.077095256 seconds)
    (134/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.111795896 seconds)
    (135/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.081909623 seconds)
    (136/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112128342 seconds)
    (137/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.183798655 seconds)
    (138/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08565587 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.10345547 seconds)
    (140/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.181111873 seconds)
    (141/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11136023 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103812054 seconds)
    (143/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.196993389 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.104259039 seconds)
    (145/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.085298453 seconds)
    (146/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076508768 seconds)
    (147/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076999296 seconds)
    (148/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.129319295 seconds)
    (149/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.085098799 seconds)
    (150/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.07875378 seconds)
    (151/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.13083543 seconds)
    (152/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.189151183 seconds)
    (153/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100750095 seconds)
    (154/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.100575718 seconds)
    (155/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078198562 seconds)
    (156/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.103737261 seconds)
    (157/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084020451 seconds)
    (158/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.078384961 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.126649072 seconds)
    (160/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.081053228 seconds)
    (161/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077940593 seconds)
    (162/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07756396 seconds)
    (163/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.159843594 seconds)
    (164/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108462294 seconds)
    (165/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.085978023 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108534839 seconds)
    (167/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.108234908 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125525637 seconds)
    (169/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.083442473 seconds)
    (170/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.101149049 seconds)
    (171/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.155196678 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105500183 seconds)
    (173/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110458778 seconds)
    (174/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108966379 seconds)
    (175/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.081542695 seconds)
    (176/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101217232 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100470589 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.127924683 seconds)
    (179/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084652075 seconds)
    (180/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110021441 seconds)
    (181/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.104354589 seconds)
    (182/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078553691 seconds)
    (183/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.084517396 seconds)
    (184/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.077358898 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122136266 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.109191827 seconds)
    (187/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084691059 seconds)
    (188/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.080999923 seconds)
    (189/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109413732 seconds)
    (190/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.106324835 seconds)
    (191/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110192563 seconds)
    (192/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.083572821 seconds)
  done (took 26.591311618 seconds)
done (took 27.519605835 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.208967236 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126862627 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111566021 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110501162 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.201712498 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117732992 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.151467173 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112851995 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.12022645 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134908937 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101672124 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125093281 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.134357081 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.182931192 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.138487853 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104823217 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102576224 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.120691695 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.151025949 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128172637 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.204754405 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105512717 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.120437691 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128539095 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178679735 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131527543 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111701443 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112883929 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.149925524 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112671644 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110868327 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.127426409 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.128487849 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.126252863 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127636364 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113408198 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102309153 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084523094 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.138857418 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11410392 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123593546 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.137220344 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112182816 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103668316 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.138818535 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11192851 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102135194 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.140053026 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102715188 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111598951 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.13069385 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12774394 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110041675 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.125918258 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102341386 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10452517 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.146274271 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104504449 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124513751 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126052084 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104917407 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104083952 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.137203018 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105189297 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.1114649 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102708208 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.140330879 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114534582 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110599529 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130356247 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104145747 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112255155 seconds)
done (took 9.942646177 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.109352897 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148629372 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.202248888 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.212818986 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132081775 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142753709 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117820677 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126358256 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.139784048 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123599725 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.140766463 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159822569 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.184796628 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.145503034 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.120809465 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.139366346 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116748382 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112303128 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.210834941 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127679712 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152564512 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.121093016 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129390748 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.146389418 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108238355 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154200414 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112889302 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114916042 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129997707 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126906841 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128362202 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.131124106 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.1119254 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125423382 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.149709153 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118320914 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119871907 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.14053678 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10902344 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107713775 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139795217 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123331423 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.131219177 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.120991431 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115873746 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.147157745 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115613639 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120546705 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.131919519 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115912074 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109009964 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.15732379 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.12110915 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123943241 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.145633538 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121203647 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119854285 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.144140545 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112358773 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.11899545 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.133762434 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107983271 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109734139 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.15357161 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111845741 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119871655 seconds)
  done (took 9.676878828 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127631113 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138362964 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143628733 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119559196 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112758384 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125752689 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102476513 seconds)
  done (took 1.842322476 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103295602 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187518182 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.212406071 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211945089 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.208189467 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.196967007 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.15211617 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103423267 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.138774373 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.139314036 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.187729632 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.240509417 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112893367 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.144925458 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.215695933 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.104245384 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.21883643 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104324872 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117030631 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.214856276 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12024739 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160141755 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116536926 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103130087 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207274027 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104399346 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.259050628 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146175995 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114176198 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.1172139 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142248178 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.18540416 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.209562534 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117415767 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13764942 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.18669571 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.208094161 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118250221 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.223614609 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107908181 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.207920391 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.1174984 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.14480224 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.119234461 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11718338 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.197275264 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.124248334 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.144622761 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117347194 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.216113847 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115440913 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210278755 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116179159 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117649495 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.139978389 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120325021 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124623403 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.144594501 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.19254459 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147203692 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.186019223 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.213736502 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.210480163 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.212490705 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129651156 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211567097 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.180763796 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.141856786 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113831647 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118661237 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.214873838 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116707907 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.141611299 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.17681078 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147508362 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.188711014 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.233905848 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115817883 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.143240287 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.109482346 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116288563 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.128101329 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.17837563 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142714504 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117889162 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122589153 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143093154 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.119439437 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.109382184 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.153267595 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118203524 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115330231 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.147849041 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118161616 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144495212 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.194135412 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.141770889 seconds)
  done (took 15.923954419 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106636943 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105732518 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109011076 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130577332 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106848721 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104811412 seconds)
  done (took 1.649101632 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143915483 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119451856 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151297752 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120180372 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.187497566 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.193329508 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.222003003 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113536477 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.160985865 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129342385 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.217348468 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.194109997 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.218522911 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120965631 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.223325005 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119830782 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.223254382 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.142404365 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128262224 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115464668 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142922936 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123423896 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116238943 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.20935974 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11958107 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146826811 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114862209 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126173006 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.151941905 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114673032 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120846769 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143386076 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.131976874 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.136844876 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.199286247 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.138201007 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115603127 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120455005 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.147434468 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121671375 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.222667001 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117301987 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124933915 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.147855948 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.115149119 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111489378 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.147530612 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113414496 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.224694863 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121920236 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.147420317 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122055295 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119276752 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.148589088 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.113558875 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112830516 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.147113158 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.199158176 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.149127198 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.112359128 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119544244 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.145243929 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113870477 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.147895688 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120970345 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121920117 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.136542822 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121717043 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116250625 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.143930236 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123657664 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119314886 seconds)
  done (took 11.327581506 seconds)
done (took 41.384259693 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.474780011 seconds)
  done (took 2.455414172 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.893526729 seconds)
  done (took 1.879797943 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.883369395 seconds)
  done (took 18.899886354 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.427308279 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.467534932 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.168079863 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148803524 seconds)
  done (took 3.196797347 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.820876829 seconds)
  done (took 1.829662996 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.326917182 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.237951688 seconds)
  done (took 1.556382541 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.71690098 seconds)
  done (took 1.721042812 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.51404526 seconds)
  done (took 2.503329107 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.287026707 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.242786433 seconds)
  done (took 1.535909744 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.610912608 seconds)
  done (took 1.616057778 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.518930126 seconds)
  done (took 20.52884692 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.256497388 seconds)
  done (took 1.266792197 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289558438 seconds)
  done (took 1.300550888 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.515611574 seconds)
  done (took 4.530190094 seconds)
done (took 65.815545227 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.116537567 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118078285 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.141602549 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.117512922 seconds)
  done (took 1.493607333 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125461498 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119851426 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145785029 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119177365 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124905692 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.143682258 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119243395 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.12129332 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118067337 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145648029 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119495281 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116244579 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145889897 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118343237 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115375193 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146193106 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121825834 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117774729 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144448178 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120504351 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118676628 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145812751 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122728438 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121400972 seconds)
  done (took 4.070499906 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115973761 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110093903 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110736771 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13391529 seconds)
  done (took 1.486201042 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127869977 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131558974 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155084417 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125593643 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129615655 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153477789 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118981961 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114721639 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143452539 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127185505 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134402 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156825304 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129542695 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.145285622 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129109867 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112259771 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.142757997 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130105268 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126104184 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.150944793 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119928952 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123723437 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.149340803 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.128442657 seconds)
  done (took 4.216779588 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.193984101 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130013367 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.175508902 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16219933 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.178015899 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117168122 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.144100189 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149773044 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125558061 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.145755429 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.122145766 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.163026314 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149654447 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121005914 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117883552 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.151070689 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131647456 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.148565063 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.165996565 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123030644 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150763795 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.132173504 seconds)
  done (took 4.217746658 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122642927 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111264336 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.129815723 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109905458 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123238342 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.137348183 seconds)
  done (took 1.756943454 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107961419 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103389029 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103319546 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.12788787 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108604152 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103694696 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.126915947 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.105087352 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103605835 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102730496 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129189326 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.105335664 seconds)
  done (took 2.342306265 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.330356722 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.109319317 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135381556 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112391368 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.11471597 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105879274 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.146070734 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.108251277 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268265375 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.10389282 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.133588287 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194837382 seconds)
  done (took 2.884784189 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201671054 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148232884 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251594954 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.379923051 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185352798 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187527003 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280220441 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189797909 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203022177 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137072136 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212173732 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160821265 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179997891 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184392553 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167211517 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158341518 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190716525 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206072691 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167942436 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238158362 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157945779 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200693476 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212872388 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150908172 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139397072 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188823518 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118760842 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155064724 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166952697 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189845544 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19882911 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150808937 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140919398 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217115193 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253156211 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200170064 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271948498 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133599445 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.195096811 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.19005583 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258096423 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169368287 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216133357 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152239209 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129294068 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211075723 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179386438 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.184531641 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.160241787 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14460466 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210228553 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203684992 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175769717 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16213373 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317323298 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135696841 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141236893 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206560024 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215291587 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200336772 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205300414 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123201037 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206186799 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215630795 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239613754 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141999715 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.191869292 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126405164 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191582242 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207087037 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20885989 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186487656 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.233353596 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132025423 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197257036 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169560976 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181677528 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203961044 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19966203 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12020905 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178997834 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136029294 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152341383 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189833573 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122219402 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242731886 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157401508 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.343217694 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183144871 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182916044 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162461703 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187375598 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16102877 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174944455 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101316833 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169722857 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.162685434 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1818539 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128934518 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155545604 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167505303 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126026015 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179909483 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122452897 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196512349 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133767534 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188224622 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170135305 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.1572681 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178715657 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1745551 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161535114 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195299569 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191560933 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159401766 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132532993 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244985176 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193822574 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137106469 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200973675 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195107173 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.176417765 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133806052 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191512164 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218942528 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14482072 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227307677 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137185046 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160980813 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.14046649 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197220855 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160970677 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.181956255 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128972359 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.193002775 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191175735 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.153584132 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139777753 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208294517 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133745643 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124626708 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164229389 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136490741 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.169684411 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14864936 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139223701 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181442295 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191663789 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165902556 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183188695 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136093852 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200083007 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13148881 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.195746851 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149042284 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11885303 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.202230354 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225258351 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130070502 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209174259 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162558541 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213338169 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199014816 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129613697 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212033635 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129763556 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120463339 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190504057 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199656112 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163301994 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.216620881 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20751987 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.165912388 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.189688021 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148954049 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196722569 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.20971105 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157605984 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.170137142 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172106293 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195187785 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121953251 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123280169 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.156740197 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13697795 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156732296 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139069619 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205821284 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163073051 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208202655 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197209395 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138719331 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217981817 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125637573 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185202736 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.173464622 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165582054 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.189171993 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218126506 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202233882 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142092316 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189242946 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122202673 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126261236 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.161022364 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161537872 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165041186 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136484087 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141003037 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219910593 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198051802 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148162863 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222661472 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192891832 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199875508 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.150045166 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.160421193 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197042538 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167600897 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.211158291 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134372735 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.186929803 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192770457 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169297154 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191233607 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19531064 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206312666 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195013952 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.192599013 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130797626 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176588503 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161391395 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16743759 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162842623 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174688351 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130496545 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150825101 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.167512593 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140831923 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212318873 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170662261 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179113208 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.186760369 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170817008 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153583183 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141403906 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205402093 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145450718 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103660241 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196445622 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224565408 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149568752 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184749848 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172855348 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159430466 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316900869 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213143396 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204357246 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136483616 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137745575 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201927608 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188372065 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164246087 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213144681 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142008759 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23405133 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19429371 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.144497804 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130553036 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177576998 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150571446 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.167419634 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.15225366 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.19079318 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.144205294 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213961045 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136624095 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19983683 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204133046 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146885882 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148809383 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166755001 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253970506 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16758268 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200802176 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.162858027 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.19370294 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181656522 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151547938 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126362145 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131766706 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21537521 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128305376 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205583178 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.205919087 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211963899 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174530518 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189476093 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140676502 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.157254347 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168343019 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17653304 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215220627 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136232118 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137983949 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216912202 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.12585336 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160627905 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161396125 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313128792 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147454362 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199773879 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106411293 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307871181 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130879586 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160646891 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162149779 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197147744 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.132787706 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.209678638 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174322908 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169176625 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163759752 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161464009 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182763852 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214924539 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195757162 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174445032 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.176652729 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16129104 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190288824 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200521246 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14903583 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.147372483 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187983634 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221388543 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.180796034 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131350375 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19801873 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198472402 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171817862 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202714899 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13964976 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212219675 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128292544 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193321422 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137172139 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124194135 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189750529 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.204832764 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130576152 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204445532 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169726298 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160352521 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12776646 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173296928 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165313848 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166938069 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130252693 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213062593 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129288842 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207739707 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207317692 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158931139 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167808665 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173670394 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131293432 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137302783 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17250549 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13051627 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.175577038 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204172997 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.157921424 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177927973 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193251461 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162562843 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185555384 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143959018 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.364159716 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128370792 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218671665 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151321831 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22673232 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149110137 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205799539 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169683914 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178584687 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193162084 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148615992 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219626198 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194558701 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.195342565 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133389867 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142854118 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167579096 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.134108311 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180968544 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168717881 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169052476 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136768263 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.194966704 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146936876 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.176114893 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143319049 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227696671 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15152589 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214188049 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186649476 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167464989 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174814353 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20561411 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127980006 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.195169897 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200676231 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144956913 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179173063 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135185827 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137354271 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240458276 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125353506 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189550394 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172996722 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198226464 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170622498 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.165983564 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20314312 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14219799 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201013589 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129703392 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152191745 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201160222 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134504918 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.155902613 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171021346 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189558881 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165742518 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171088716 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.176659198 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223307926 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125272906 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133365507 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310237742 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189741823 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194056528 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.165033536 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138381604 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145804822 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188443938 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.190968406 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171712068 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.130204938 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159140764 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.145621461 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.183256985 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.14346771 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196644227 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186063046 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190608088 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185323368 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.164888943 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255404877 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172394265 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172465653 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.144966576 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130380931 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140825121 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164503509 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141960804 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212061178 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243887295 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.164278272 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.178169611 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135547862 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.154844674 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131648966 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164244695 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179235072 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168113847 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177596811 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103267608 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168801568 seconds)
  done (took 86.583851593 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163786294 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152509051 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168053181 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.22341626 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195720956 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289301542 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22915173 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247224228 seconds)
  done (took 2.769599547 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120277637 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15956014 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142585969 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144842968 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109933195 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.448353435 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.15881947 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121456163 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.1616285 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152549878 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135835823 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.556791121 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.115692571 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144733402 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122139738 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134940155 seconds)
  done (took 4.028033534 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.119564378 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.547373735 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.943860221 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.294269939 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.262505676 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.202474417 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.749929621 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.197015622 seconds)
  done (took 12.419717519 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.152532079 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.144675274 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.374094512 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.272673779 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.206426283 seconds)
  done (took 2.259806118 seconds)
done (took 131.531841883 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123664726 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122664878 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122806122 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153060883 seconds)
  done (took 1.620640884 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.176449243 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090276557 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091936953 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116981784 seconds)
  done (took 1.585007646 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.511830174 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090667366 seconds)
  done (took 1.736568453 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.152250026 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137451101 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.167844707 seconds)
  done (took 1.578963689 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.142862555 seconds)
  done (took 1.256673093 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126367362 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12719248 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.2302944 seconds)
  done (took 1.600490096 seconds)
done (took 10.492266037 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12011572 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.926307488 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432732266 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132885787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710340958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427782374 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.420053182 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177384777 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175050138 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139094525 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130989452 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687883879 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.434428747 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.871610629 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.390456855 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.899906913 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695450784 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110482764 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145094482 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111025605 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.425941467 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10998225 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111373036 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110807356 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.71862142 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419236816 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108529455 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.91217392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109211023 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.139851604 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.399601054 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109810817 seconds)
  done (took 20.916693217 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117387126 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.165791243 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147379636 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112447575 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11307298 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139287562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122611647 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122748186 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203232653 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109547175 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160682517 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109900227 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.115911574 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.140650543 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135814486 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109281565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141504023 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112571596 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118221381 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141211225 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132382951 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108209628 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140221969 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112789415 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110863552 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.15990761 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111217469 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122394448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139311122 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113950404 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115338701 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139564179 seconds)
  done (took 5.273661937 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.159342581 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178274909 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148373583 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148489534 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188986355 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112539688 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.226502362 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.150561867 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20582996 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113238817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132112998 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138624099 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151000944 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110708454 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165427692 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111300693 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139956051 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113611035 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119785483 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139768242 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134717203 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109709292 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140388156 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113463187 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110806458 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.161495831 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11096883 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123770224 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137986379 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115458413 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115781114 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138816744 seconds)
  done (took 5.58913577 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125779401 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124988491 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132700327 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162052389 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121543296 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12324811 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153965647 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119881097 seconds)
  done (took 2.187991804 seconds)
done (took 35.084542884 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137085265 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129468178 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13163266 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154267929 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.189643511 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.147422503 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128805264 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117116331 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.152571843 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132194314 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109976985 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.147299217 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131748022 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122253323 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.220269623 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126618678 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.226102469 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.191327039 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.150145531 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125711336 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118984733 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.225023496 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123087331 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.148613571 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.192585585 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112612803 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.214058208 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121191122 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.151429936 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112289279 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.223502662 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123394477 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119287959 seconds)
  done (took 6.07156331 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.208448997 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.122062057 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149743879 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120200939 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120858662 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149043073 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.211328933 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.149495373 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119734403 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119100108 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.118880578 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.224531914 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.125135655 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.145602375 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122330561 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.109388001 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.240108598 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121337831 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110724749 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.121218278 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115157542 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118918968 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.253210231 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.114809645 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.148513655 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120745576 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122682855 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.124203541 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.151715299 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122090231 seconds)
  done (took 5.435378019 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126241937 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132979794 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.165799377 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.187250165 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149031085 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160931614 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140639788 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134825378 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171017632 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113773932 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127907212 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178659459 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130485761 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123559746 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14742995 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131976286 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136618149 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144504032 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.121695424 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130697895 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.16474691 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131879262 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.13742299 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150811249 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113143086 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121793048 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.154152696 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128055059 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121417338 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.158097784 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116171022 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117169655 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.145680932 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.150931927 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115774913 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.15833974 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141169887 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12527357 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.156770165 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.146187855 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.147246043 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.118672127 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141246982 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.196838905 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.116306542 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127193466 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.15481346 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130536356 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112832583 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131251589 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.185914586 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114342375 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.163248296 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.114050552 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111977795 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121739975 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.14544948 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117671136 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127786199 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.145491607 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.139988811 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12070775 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153845495 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116775653 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124279776 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.142000879 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114351618 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117915412 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.167306756 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122364425 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150846552 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.142043547 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127091029 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126012581 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.152189375 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126438377 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113978085 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124053793 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.15411182 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119960128 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125781007 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.146102859 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117217249 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130976081 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.164686938 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129679509 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126480167 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.15655402 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118899839 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115201136 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.159790206 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115412974 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119278324 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.156839191 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116181627 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117379252 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.15599664 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128432597 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111931085 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.168200186 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119718909 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113950614 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.168113426 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118594506 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119578779 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123219735 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.187090267 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115051093 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.153573394 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129450705 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114910845 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121044402 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.147907564 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114259508 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131152148 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.16029195 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12110632 seconds)
  done (took 17.073460394 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.321448359 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.305842016 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.18573859 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.245169637 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127957008 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.239202229 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.303413658 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.305976433 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113637742 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.184585523 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.16587239 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.274989328 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.146257118 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143739406 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.308620741 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.361896537 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.175344852 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153764089 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181878334 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128198284 seconds)
  done (took 5.522012836 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135204829 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.150074921 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166969869 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142591343 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124548711 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.160295125 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114883102 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136817671 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155591719 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124899313 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116007912 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159246781 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126972022 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130536912 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159880835 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145755909 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121250442 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149371999 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137782854 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118666459 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131536968 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141450236 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.152263656 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.137884779 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.134219239 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.155293224 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.11438742 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119577273 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.120169621 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.152567369 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119447444 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.161272333 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.126011073 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105781443 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126647662 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.159083487 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.122220908 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117198128 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.148385957 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.120536775 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130090503 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.156792976 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124337377 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098440049 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133268461 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.137739798 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.13094547 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127592353 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106572053 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.163887641 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.1264989 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128360628 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.151699843 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.137236349 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121528548 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.160991426 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126329703 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.129035108 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.150260646 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.11296586 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112679865 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.147848428 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.124204228 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129010775 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.156290033 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.136034477 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.13112613 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.143847365 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119762319 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118107473 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.147147458 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.130117637 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.135181874 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.153257213 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121502904 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.12636085 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.15180592 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.09580983 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.12430095 seconds)
  done (took 11.76232906 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139531216 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125248046 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.161170636 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.153180829 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.13005387 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.149980565 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125643186 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134562252 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.157664687 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.134310732 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130401528 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.156940261 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.13743565 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125095587 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124602483 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160136468 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128388365 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.182732461 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.134396478 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143107603 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.160689859 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120275934 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128045403 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.155737483 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145158438 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127435282 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.172088089 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130125048 seconds)
  done (took 5.134352386 seconds)
done (took 52.129760766 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.28828566 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.476911647 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.258993379 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.256879077 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.312310262 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.28310388 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.256938755 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.266235877 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.657132603 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.22767857 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.257684328 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.269769578 seconds)
done (took 28.968726818 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.339655049 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.79422576 seconds)
    (2/2) benchmarking "String"...
    done (took 1.554230753 seconds)
  done (took 4.496467448 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.246434088 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.247837062 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.494250021 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.247786665 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.250305592 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.24870236 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.247504987 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.252931215 seconds)
  done (took 16.135229994 seconds)
done (took 26.368148122 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.298491783 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.436595877 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.486264135 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.260752457 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.257993373 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.248027996 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.25202939 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.268922427 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.248170785 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.258566105 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.653650738 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.514014479 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.251018618 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.632527732 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.249438505 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.293629184 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.248335458 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.48134401 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.252881983 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.277353464 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.22669826 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.227780104 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.275085596 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.246632658 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.255097707 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.261081292 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.30236551 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.254719251 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.426262129 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.274971876 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.275164351 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.253023252 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.303387841 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.252814303 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.262394492 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.254158201 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.43004489 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.260615476 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.23500893 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.277913216 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.439622487 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.263079266 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.251155763 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.275654921 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.251560668 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.296118397 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.23575393 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.382914276 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.27262898 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.255680955 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.317628631 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.604852418 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.252549875 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.250452156 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.261470294 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.466490866 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.263281821 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.311738112 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.27537641 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.26716521 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.251379017 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.273672394 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.25958062 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.25255718 seconds)
  done (took 146.806682237 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.250784917 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.25328429 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.253171094 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.27412094 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.252929082 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.251915226 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.250756947 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.251774955 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.253481872 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.272781076 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.253795753 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.253248915 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.257647461 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.197485521 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.26372349 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.270364946 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.255469225 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.252958225 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.263339087 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.253282797 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.274084735 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.253435891 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.271384714 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.252658756 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.291463073 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.329238706 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.279570031 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.275463728 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.263423687 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.251761886 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.295920207 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.305020268 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.878121382 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.101673277 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.259741425 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.269324055 seconds)
  done (took 82.091236559 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.253103359 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.253657342 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.254575382 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.287079707 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.252714593 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.82858627 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.835633449 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.225578158 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.485520694 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.638561948 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.475698816 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.253901652 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.345800776 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.268174287 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.259812211 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.270064167 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.28179423 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.256696363 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.255616828 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.833793708 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.270950342 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.239967149 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.432708132 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.272251782 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.287588173 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.64431381 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.254595383 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287660821 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.586988576 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.305081814 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.256474527 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.594304565 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.676961466 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367325104 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.25711299 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289056673 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.254644133 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.537465474 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.255856002 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.257563141 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.259178861 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.875852183 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.257158084 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.832557412 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.260627674 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.198728492 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.257205245 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.256955513 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.249232553 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.890079599 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.25684588 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.255123448 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.259152226 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.256331543 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.255631679 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.292029414 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.244482427 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.262308649 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.349211762 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.258461748 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.260031649 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.290091405 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.257628944 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.407502948 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.257697047 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.662461874 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.319041958 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.377705485 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.839434838 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.263782447 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.352131916 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.376627799 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.257203177 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.258789849 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.25930968 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.257973051 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.369527489 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.257693627 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.942893995 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.436598552 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.277103629 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.637492438 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.359095448 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.259297859 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.595408988 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.26376932 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.2579638 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.958654728 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.259071832 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.35477407 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.258306822 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.258969622 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.258830696 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.259830809 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.942838296 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.838351077 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.517626423 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.263857816 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.84318234 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.265440018 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.117489315 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.820486779 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.25878118 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.903738964 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.265468106 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370627582 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.439103178 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.277580254 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.260100375 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.644037057 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.265297078 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.316816834 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.265873274 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.66237318 seconds)
  done (took 379.832422467 seconds)
done (took 609.881458463 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.140748863 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.095834941 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.239806047 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.095581588 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.078663291 seconds)
  done (took 11.809340901 seconds)
done (took 12.970526692 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.451822923 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.451787283 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.320849507 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.456016934 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.293074375 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.470811996 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.43750117 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.277591598 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.368865891 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.342585751 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.370235358 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.312834569 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.293862365 seconds)
  done (took 19.006687958 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.533932448 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.273505177 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.328234396 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520226296 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.30845141 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545565172 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.576482891 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.274237998 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417661814 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.290314931 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.284064403 seconds)
  done (took 18.514592462 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54378413 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.274052842 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.332393151 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.532821956 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.309772305 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.543538293 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.5730964 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.273242188 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.411846334 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.287032446 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.287256244 seconds)
  done (took 18.529770164 seconds)
done (took 57.21397868 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.299868005 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.363470608 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.297706779 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.281663334 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.28089439 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.281196854 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.283497504 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.282975171 seconds)
  done (took 11.531640648 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.278972983 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.280261282 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.27963433 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.280194044 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.279333943 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.279638191 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.278991604 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.280342092 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.281170294 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.279285056 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.281435679 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.280683222 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.280455562 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.279946651 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.278493191 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.279779541 seconds)
  done (took 21.641236786 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.282723628 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.280288625 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.280246604 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.27953174 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.281026744 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.281593732 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.281846439 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.28325265 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.282298694 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.282053609 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.2813646 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.279889231 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.28023808 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.281145241 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.280756253 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.28271195 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.280394062 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.282607074 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.288293317 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.28161358 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.280479005 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.2802516 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.28042182 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.281066633 seconds)
  done (took 31.918856482 seconds)
done (took 66.255660858 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.269152592 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.267819436 seconds)
  done (took 5.700233194 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.338879479 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.341011572 seconds)
  done (took 3.84435169 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.282471314 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.282032028 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.28330102 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.281786677 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.281562034 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.28437705 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.2836542 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.280943829 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.281731461 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.283410956 seconds)
  done (took 13.989480034 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.283671982 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.283283074 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.281798585 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.282432997 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.282706217 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.281871399 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.28361937 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.284497323 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.281803846 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.283121935 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.283094022 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.283530748 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.283534301 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.283214341 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.284495898 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.283741378 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.283890129 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.283484311 seconds)
  done (took 24.26230849 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.297520098 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.303421069 seconds)
  done (took 3.766318467 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.411987245 seconds)
    (2/7) benchmarking "second"...
    done (took 1.325621411 seconds)
    (3/7) benchmarking "month"...
    done (took 1.389466094 seconds)
    (4/7) benchmarking "year"...
    done (took 1.381320588 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.32553665 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.304322585 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.325940465 seconds)
  done (took 10.630597882 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.285536157 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.478877732 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.612321368 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.293817499 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.286998859 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.289180215 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.482437041 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.288260093 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.291627103 seconds)
  done (took 13.474737393 seconds)
done (took 76.833486883 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.282235741 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.317150917 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.290277838 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.290933771 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.578616956 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.291683762 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.276156906 seconds)
done (took 16.494949949 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.253467217 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.251912021 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.262498823 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.288451422 seconds)
  done (took 10.222986552 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.272602683 seconds)
    (2/2) benchmarking "read"...
    done (took 1.59635734 seconds)
  done (took 5.036114442 seconds)
done (took 16.427996531 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287005661 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.286542113 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.286109644 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.287720681 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.28625561 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.287306037 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.286946893 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.287311678 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.286612669 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.286006563 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.28659957 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.28680967 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.286559308 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287513454 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287446801 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28592018 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288211682 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.286882246 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.288904556 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287132387 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.288713541 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286709022 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.287004927 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.287669997 seconds)
  done (took 32.057797154 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.289930125 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.287400899 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.288225165 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.288763036 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.289700508 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.287028757 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.2890901 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.286615874 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.288493678 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.28872643 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287177895 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.289467582 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.287733174 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.289720074 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287542389 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.288338639 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.28909996 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288274929 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288590195 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.287348184 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.289250763 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289978985 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.288226413 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.288356758 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.289390961 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287042237 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.288070144 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.287274842 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288585046 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.288437605 seconds)
  done (took 39.821030573 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.290604678 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.289500989 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.288635452 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.288092632 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.287788407 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.289791179 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.289169668 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.288879145 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.288341804 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.289735318 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.289245912 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.289034861 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.290604145 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.289251406 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.288901494 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.289597252 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.288567664 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.289142091 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.288763655 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.289740888 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.289818657 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.289908296 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.290167344 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.291974329 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.290227757 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.290986581 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.289702534 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.290007069 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.290163384 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.290900911 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.290329315 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.290254414 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.291178503 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.29193442 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.291224536 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.290045639 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.29308189 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.292640434 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.290567195 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.291706713 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.291121112 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.291189677 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.291746847 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.29255906 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.291184394 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.290806383 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.291609515 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.292130413 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.291394694 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.293402679 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.291895341 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.292295202 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.293093524 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.292455379 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.292689651 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.292195449 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.295328392 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.293324364 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.293560803 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.291588328 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.291598308 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.291965455 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.292108633 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.291030426 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.291586431 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.292012271 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.291766346 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.293504505 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.292148534 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.292688836 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.292389649 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.293443733 seconds)
  done (took 94.125635819 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.293443385 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294747992 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.29385163 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.292829732 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292818912 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.295275777 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.292717553 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293939452 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294497549 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.29406214 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293420263 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293134679 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293283108 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294920573 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29624192 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.293590329 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.295091388 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295153575 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.294266123 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.293660738 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295291523 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.29483972 seconds)
  done (took 29.646136662 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294451437 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295413526 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.296053005 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.295204376 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.296592412 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.297011747 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.293626721 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.296319883 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29451967 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294461479 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293738277 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292868295 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296475548 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294422217 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295425006 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.297675204 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295112922 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.297457709 seconds)
  done (took 24.492510539 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.295669455 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.296580078 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.29621117 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.295759829 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.295783093 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.295600131 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296964327 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.297450774 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.295484061 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.295690608 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.295573313 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294815481 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.298268548 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297152791 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296437954 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.296306921 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.297593708 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297666891 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296311786 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294978026 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.296446045 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296715737 seconds)
  done (took 29.69618121 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294573065 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295596545 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.298433281 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.296773968 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.295382812 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296539764 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.296651902 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.295634416 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.296589053 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.296985171 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29534555 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.295435408 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.297273629 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295290085 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.29584274 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295842827 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295225969 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297427311 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295597078 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.300598379 seconds)
  done (took 27.104719403 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295141631 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296450871 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.295440643 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296147336 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296937507 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.294624367 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297890753 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.297856423 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.297113493 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.296560752 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.296313167 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.297249365 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296908402 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29433893 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.297228814 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295916828 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296221557 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.29502908 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296778171 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296554194 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294412487 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296287809 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.297001282 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.295089062 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.295289982 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296055022 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295339273 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.296730041 seconds)
  done (took 37.469064338 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294730542 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.295335536 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.295354009 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.295266275 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.294513567 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.294696294 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.296031821 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.29621326 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.295634311 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293913818 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.296579876 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.29523139 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.296441254 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.295704836 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.296260054 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.295718959 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296670943 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.298302458 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295112673 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296492528 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.296394786 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296680343 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.295698483 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296478313 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295841855 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.296607981 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293637208 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295385745 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295597952 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.297845612 seconds)
  done (took 40.050216124 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.314681968 seconds)
    (2/2) benchmarking "in"...
    done (took 1.313718095 seconds)
  done (took 3.802651377 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.296604377 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296139474 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.294470788 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.298786317 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.296069906 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.296207352 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.29613395 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296529051 seconds)
  done (took 11.546748727 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.287176474 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.296395536 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.297177002 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.296670398 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.297737282 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.288681838 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.297270744 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.301319496 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.289469278 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.289626063 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.289479603 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.288948734 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.291754287 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.291376845 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.289823546 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.291988034 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.298258887 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.297433453 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.296118279 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.296577403 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.29649816 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.291429787 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.293902918 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.299308135 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.288628674 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.297248835 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.297144145 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.299562267 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28940169 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.293820859 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.29195123 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.298404639 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.296860271 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.298797265 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.296695409 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.296745194 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.297760509 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2970129 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.297058521 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.300804056 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.298912636 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.294180908 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.289940988 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.295235029 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.293304256 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.300531447 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.295506169 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.295992044 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.29009539 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.292023771 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.298868968 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.28915654 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.298710032 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.292535569 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.293704362 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.302444736 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.304560738 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.289921023 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.291672232 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.299493698 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.30454 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.301230242 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.296595171 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.302568594 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.292573605 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.296158613 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.300705292 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.305090147 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.299287908 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.297627012 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.298027495 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.307694475 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.303135057 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.303512635 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.298315524 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.298098443 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.290741086 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.301216737 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.299306782 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.302177353 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.304956271 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.298912395 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.294909932 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.298436673 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.293379563 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.301877581 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.298392686 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.299456105 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.290715209 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300900451 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.306415068 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.297886413 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.290709266 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.294713399 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.296497385 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.302084718 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.290831709 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.29373244 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.302679247 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.299869827 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.300815685 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290426875 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.298770423 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.304689901 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.300509552 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.300475881 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.306658836 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.294127833 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.303294217 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.30720066 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.299469605 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.292619214 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.296378435 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.304202341 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.293867686 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.298827133 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.305029917 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.295486648 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.30637597 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.299826545 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.296364645 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.303420329 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.306557661 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.301501756 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.293518789 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.305208767 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.30138189 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.298521341 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.309252423 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.302046899 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.302528039 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.297573965 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.308734638 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.295995035 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.305761366 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.295399561 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.306847167 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.301799313 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.302998987 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.299660536 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.303146449 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.298694694 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.302294542 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.306031992 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.308887156 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.301060125 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.310106851 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.301751459 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.300990347 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.303187597 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.309141137 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.303492865 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.297258898 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.306055229 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.295867978 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.305310009 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.297731078 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.307024505 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.303723312 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.302352154 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.304714777 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.294543351 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.298186683 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.306359634 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.301134034 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.303012151 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.307078889 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.303896517 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.304064799 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.298476118 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.307040549 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.295615672 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.298229069 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.308169825 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.303214461 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.30446131 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.302833254 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.312045286 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.303818357 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.304538395 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.296879147 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.303432053 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.312571674 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.307888236 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.3126182 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.304808824 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.305218022 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.298923516 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.300298011 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.306959152 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.297971149 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.308693327 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.311868074 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.311285388 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.30176109 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.306927918 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.297126579 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.308702846 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.305110805 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.312893989 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.305694228 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.305769694 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.300135048 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.309698144 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.300292379 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.310317587 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.297664544 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.307969604 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.306910864 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.307445994 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.306943656 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.301033384 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.303848296 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.310556555 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.307412639 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.307639455 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.300754775 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.311043729 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.299461693 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.302335484 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.308679641 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.307613703 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.308102263 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.31555841 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.30409633 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.312238409 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.30794664 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.303302103 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.311059737 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.304513085 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.306602963 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.312056343 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.312459161 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.304285086 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.313073937 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.310527732 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.299893718 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.306873713 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.317148577 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.307720622 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.302599798 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.31041813 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.307375523 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.308183452 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.306820378 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.300489672 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.310823796 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.30982963 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.318220751 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.300536419 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.31203328 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.303248329 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.309979569 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.305740194 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.307182753 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.306952536 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.309284123 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.315460914 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.308220429 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.302193649 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.311027218 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.308962813 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.30756909 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.301744114 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.310522442 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.30931912 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.308895285 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.307338278 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.304617719 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.308897658 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.300655116 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.310187473 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.301372523 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.317060472 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.323614637 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.310742319 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.312630027 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.309933147 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.312609653 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.311505263 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.302508082 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.303067486 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.306702806 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.30615303 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.304498103 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.312618922 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.303907424 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.312887783 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307504502 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.308756059 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.310710661 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.30867752 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.302001762 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.311790518 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.309910013 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.309930599 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.30172636 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.310699814 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.305246858 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.308301386 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.310093923 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.305603034 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.316833228 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.315059512 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.30861321 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.305745105 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.305186472 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.302138989 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.305680672 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.315454666 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.302997201 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.312381452 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.302218503 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.30639878 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.304953736 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.313399079 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.319981363 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.304622791 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.312957578 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.310346776 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.301210551 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.30346326 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.31198953 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.313951106 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.324559137 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.300955693 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.309901297 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.310888246 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.308528089 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.309932026 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.310920718 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.311388623 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.311312401 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.314981303 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.313105667 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.304919228 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.311352732 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.319185294 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.30917971 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.311597024 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.302203234 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.311391266 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.319331311 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.304917842 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.307502572 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.30528348 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.312295987 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.310554745 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.312475153 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.31112508 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.310061623 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.314304073 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.315384828 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.312435432 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.310055311 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.313271262 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.321381781 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.314823426 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.323689811 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.305490622 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.316123769 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.311952419 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.306692456 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.307286307 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.307419279 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.313554172 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.302601644 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.315961322 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.311594524 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.306822383 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.312858998 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.318878605 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.302945997 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.310469102 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.318954952 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.303040109 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.31390529 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.312635553 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.303485723 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.313442864 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.312009182 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.302709986 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.306968625 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.3067381 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.315736781 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.305908991 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.315451849 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.307210312 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.315291319 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.311524057 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.312474118 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.312159812 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.313293417 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.306156379 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.313728809 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.312657442 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.32066716 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.306742385 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.311612665 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.307261896 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.317695544 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.323318183 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.309067333 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.317409118 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.313893486 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.307958881 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.31127821 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.318960539 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.307962398 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.316660234 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.305689808 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.307902431 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.30779319 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.314033333 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.316171076 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.316838339 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.304964014 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.307393947 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.314743975 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.312914432 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.313058914 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.309869059 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.319233127 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.305323757 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.30599652 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.316082956 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.307975507 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.320317669 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.307666416 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.309925008 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310951216 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.317265335 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.316274897 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.314265554 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.306894388 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.308053621 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.320494048 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.318584055 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.311065238 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.310792063 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.319477002 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.307902004 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.310650142 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.31261515 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.309314803 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.310371985 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.319688526 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.309281356 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.309118574 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.3109565 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.317686717 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.320440708 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.319447388 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.309399948 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.3238219 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.325455425 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.323558867 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.307757785 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.310696668 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.311632352 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.317692772 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.31658082 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.310297203 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.324875672 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.323745703 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.320235261 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.316143581 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.317211598 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.307962047 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.319767809 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.319436843 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.313115537 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.322463346 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.313256592 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.32333894 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.318919668 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.317269497 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.308229657 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.309407878 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.311534015 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.312110547 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.319278278 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.316108106 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.320252284 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.316372863 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.322493209 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.317912187 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.31705944 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.319325137 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.308601608 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.318605907 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.30983499 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.319288275 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.3189865 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.312539532 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.31998945 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.319602812 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.312238904 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.313066781 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.322133377 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.320116155 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.31283101 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.317163483 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.322040702 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.328590339 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.319887605 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.313255216 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.31715074 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.322934039 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.320063826 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.319384786 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.31325347 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.327760943 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.333457347 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.314347935 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.316760944 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.321538412 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.32996367 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.321563846 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.319270072 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.316200885 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.317625286 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.324873215 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.319536832 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.322824691 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.32646564 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.314550356 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.322294977 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.313157659 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.316864259 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.321152492 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.329655868 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.321168095 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.313890219 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.326546857 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.332174554 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.317183207 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.333991717 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.326555519 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.320532134 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.326616966 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.311693786 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.322578887 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.31827821 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.326598108 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.321554131 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.321346049 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.321233327 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.312765101 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.321105324 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.327022268 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.330161298 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.323379962 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.311905282 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.315713768 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.321715274 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.31992059 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.322656592 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.32197419 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.321606641 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.322817218 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.314139731 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.331543665 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.335586312 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.327366817 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.321222826 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.322026959 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.322865798 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.32412865 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.318023089 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.32516344 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.321492303 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.323303809 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.318885842 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.329904832 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.326324571 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.31424076 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.317709898 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.315707835 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.324789187 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.329684747 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.339996314 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.325510932 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.325201541 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.324340644 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.321428073 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.315669015 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.327178783 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.324584243 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.315574053 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.319032493 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.324007375 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.32394264 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.321868277 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.316432884 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.326892374 seconds)
  done (took 781.319395368 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.321917951 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.324827836 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.32380806 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.322762459 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.322947207 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322043265 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.323851698 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.321796884 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.324286627 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.32331952 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.32365716 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.32165183 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.323329049 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.322578264 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.323517555 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.323303919 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.324165287 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.322882325 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.322030329 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.323962659 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.323491261 seconds)
  done (took 28.981868237 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.324113748 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.325247022 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.322423709 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.323017546 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.323689086 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.324693253 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.323419879 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.322375597 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.324927749 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324887774 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.323364153 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324132208 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.324298049 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.324213387 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325062749 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324287558 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.327772924 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.324357434 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.323454378 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.326577614 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.322512521 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.325167162 seconds)
  done (took 30.329856427 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.325068429 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.32682994 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.317308839 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.327621692 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.324426599 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.325105149 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.32483597 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.324866654 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.324787049 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.318557565 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.316734363 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.319051617 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.319633464 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.327799577 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.321234121 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.330245468 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.325969369 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.326586933 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.326031286 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.323842676 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.329085616 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.338921735 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.325248609 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.31552893 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.330189979 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.324828687 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.326405162 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.327180978 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.317641027 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.327769648 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.326872206 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.318303715 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.327968231 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.326849075 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.318953359 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.328623874 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.326081412 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.326871359 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.326311649 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.322038016 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.334825966 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.327502052 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.329105967 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.33826193 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.326531677 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.31905232 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.330035379 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.326787906 seconds)
  done (took 64.818745955 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.326040706 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.327164396 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.326807752 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.326107483 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.32649729 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.327351429 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.325350882 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.326322236 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.325778404 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.325988343 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.325591917 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.326302713 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.326124769 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.326921831 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.324882395 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.324797472 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.325742655 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.324803893 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.326554645 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.326607477 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.327477118 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.325745309 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.327043792 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.325179877 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.326010427 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.327300441 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.326765599 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.326180792 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.327355134 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.327220916 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.325951029 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.325682514 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.325679524 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.326419747 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.325959013 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.327475114 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.326285155 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.327247244 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.325951542 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.326681931 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.32617278 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.326461328 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.327107976 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.328892549 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.327268387 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.326974064 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.32661774 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.327111575 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.328784694 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.326933993 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.328091275 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.32671679 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.327523104 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.326220136 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.326264001 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.328012654 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.327749864 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.327706662 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.326341953 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.328382191 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.326640369 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.327942707 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.328785204 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.326995062 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.329353427 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.328179831 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.326704459 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.328009469 seconds)
  done (took 91.419542264 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.327093635 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.327434186 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327970269 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32863864 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.329169714 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.326673017 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.327180251 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.328559188 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.327224771 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.328514428 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.328921137 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.328262752 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.328404673 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.327144534 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.329321034 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.327865559 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.328773663 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.328675216 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.327779619 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.328869633 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.328525215 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.328983901 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.328499323 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.329873774 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.328427969 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.327984377 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.329705525 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.327469104 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.327778433 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.327869398 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.328911048 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.327958275 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.328104558 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.328053336 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.331838636 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.32881993 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.32922924 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.32883137 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.327953634 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.328139971 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.328268634 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.328624466 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.330329533 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.328555849 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.328927635 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.327588655 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.32940239 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.328108249 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.329443453 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.329152232 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.32940656 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.328967127 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329439948 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.330239083 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.329864487 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.331010585 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330302266 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.331616021 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.330529231 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.328271085 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.32998788 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.331234541 seconds)
  done (took 83.585480955 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.330480652 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.331321066 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.331548394 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.329094972 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.330328993 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.330737001 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.329156591 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.330625681 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.329568661 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.331212353 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33132327 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.329922323 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332165345 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331832951 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.329727729 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331772212 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.33145513 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.330188481 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.331219146 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.331001331 seconds)
  done (took 27.815714514 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.33045559 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.330098331 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.32995996 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.331868726 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.330838535 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.330641858 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.330801361 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330819614 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331242429 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330504323 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.331506298 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.330411054 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330747943 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.330470211 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.331834238 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.331656415 seconds)
  done (took 22.496077642 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.331291617 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.330813807 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.330242858 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.329927561 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.330609487 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.330328445 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.331899793 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.330500567 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.330834476 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.331546742 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.331317282 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.333098632 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.332442548 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.331858889 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.330653874 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.331919316 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.33126157 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.33067241 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.330692111 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.333184003 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.331714243 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.330287429 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.331213856 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.331916152 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.33247288 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.333574242 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.3329493 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.332527641 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.332765586 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.332942847 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.332697828 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.332362002 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.332275721 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.333216055 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.332888828 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.333892691 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.332812911 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.33415499 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.333339459 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.335041291 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.334060155 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.333333342 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.333149556 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.332374146 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.332741424 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.334682118 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.333180606 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.334000921 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.332289196 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.333751943 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.333783919 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.333440646 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.333751309 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.333889128 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.331984024 seconds)
  done (took 74.484606051 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.332224559 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.333620893 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.33311293 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.333506706 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.335706099 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.334692615 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.333438713 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.335775015 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.333573617 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.33459166 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.334581012 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.335976357 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336078771 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.333711116 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.333415068 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.334631075 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.334218275 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.334940171 seconds)
  done (took 25.221890429 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.333810919 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.335361945 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.334402928 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.334649092 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.335783901 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.337443488 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.335425975 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.334926165 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335758739 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.336036132 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335795158 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.33629334 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336648649 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.335892494 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.335347679 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338406186 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.335645123 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.333914056 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.336215747 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.336347504 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.336693807 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.335718939 seconds)
  done (took 30.592330516 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.326148296 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.326957116 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.325407749 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.338881115 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.335057623 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.327037849 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.326450636 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.326827173 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.342625481 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.350766377 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.348206081 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.334433639 seconds)
  done (took 17.214291216 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337585125 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337004479 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.338829825 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337674374 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339137735 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338333051 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33842812 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339342264 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33786939 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339995845 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337644371 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338185409 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338628703 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339074964 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339032802 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33944881 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338819453 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338146437 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339647326 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339837139 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338225669 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337939257 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340404078 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338697326 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339385524 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339044567 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339059935 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339755407 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339136427 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340367424 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339713639 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340314473 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340316037 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340097923 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339150038 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340467166 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339605191 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34087297 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339674951 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339858356 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.340046338 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340873152 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339490387 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339994097 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339723619 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340989131 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33931168 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341680159 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340097873 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340957876 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341103321 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341021338 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340677253 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339724664 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34061282 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34181307 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34159668 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340163408 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339993752 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340049646 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340224955 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341460137 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341949216 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343995412 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342563095 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341279589 seconds)
  done (took 89.635074959 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340963768 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340721434 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34162969 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342108366 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340878119 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342549642 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342789886 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342885556 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342228692 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342042188 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343018123 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346438422 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341675587 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341944871 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341487172 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341972327 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343700842 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341882281 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34278817 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342035 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342532115 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341406291 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342683116 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342848085 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342518065 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342643879 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342718915 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343383069 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342433521 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341929375 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342475208 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340988769 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343176713 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.343267831 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343060922 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3420848 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342958271 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34199295 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342640629 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34458312 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344308186 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34409828 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34380263 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342752422 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343632832 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343643075 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343647087 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343889075 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343781033 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343564009 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342447665 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344482024 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343277989 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344579324 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343425761 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343952415 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344293974 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343899872 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34388066 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344799269 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344524304 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342603188 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344812693 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344587738 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343745359 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343757236 seconds)
  done (took 89.850648163 seconds)
done (took 1828.747507366 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.500958056 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.454544133 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.336177038 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.345644285 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.334764579 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.333125531 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.347161209 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.334769597 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.335240318 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.333263591 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.335003985 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.525384364 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.36751601 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.335519828 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.336026241 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.430566212 seconds)
  done (took 27.197769098 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.36150313 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.344891189 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.44430563 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.345169129 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.361298631 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.512876938 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.397517371 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.342010687 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.492667038 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.363427153 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.334416027 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.359858838 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.339497132 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.335730732 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.355562042 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.510033421 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.57508323 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.336066886 seconds)
  done (took 29.325788378 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.739396206 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.352443003 seconds)
  done (took 5.308535166 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.358357068 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.343396097 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.342890086 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.33926453 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.332106947 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.332603992 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.338221841 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.33300228 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.342885996 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.452543159 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.349633753 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.353453204 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.354209867 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.341895166 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.348863168 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.383205419 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.494613381 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.353849764 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.348563361 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.347658812 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.339851022 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.428705119 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.382464087 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.350795151 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.4532004 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.351267593 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.349252938 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.348512348 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.459063814 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.352117927 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.341278806 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.342436027 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.342055014 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.28939097 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.871722079 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.340547759 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.364696098 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.351203744 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.34946972 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.486954779 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.343138453 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.350262012 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.337604485 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.873970205 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.449199931 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.45490759 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.355095839 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.350294488 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.346248133 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.404845612 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.347006429 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.345494161 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.399218437 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.120979722 seconds)
  done (took 85.783484409 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.339653296 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.337135744 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.517255947 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.355291247 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.337898147 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.342808646 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.344521394 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.595458501 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.364865977 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.340224165 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.654273495 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.931980462 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.344498245 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.410674175 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.38260081 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.395953464 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.338713612 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.3524687 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.337332602 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.338417491 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885757221 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.344615382 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.344970546 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.434163694 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.376450823 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.852298984 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.338865215 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.343434119 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.338898984 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.338780787 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.901601183 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.34237066 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.39760172 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.337465807 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.616366262 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.703644695 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.661372191 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.346838407 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.380979296 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.339111888 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.365353982 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.840224151 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.68329558 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.34038849 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.339818435 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.838976946 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.339293303 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.351316464 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.347604982 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.609038797 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.344151961 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.340511831 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.340773935 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.339941021 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.339949669 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.394328626 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.384031469 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.851522245 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.340466698 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.340050279 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.348233545 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.34172028 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.342431462 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.344438202 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.341353022 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.687506437 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.605126405 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.340782925 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.684037918 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.892249805 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.346824167 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.970676754 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.349964348 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.365065779 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.387048236 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.341806196 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.357132519 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.847506497 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.348199093 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.340522202 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.664309013 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.343650526 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.641787676 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.358893769 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.342830438 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.903860231 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.354744598 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.401209029 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.342409375 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.351571625 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.337607278 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.340784432 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.615331628 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.396912099 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.333296107 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.328138822 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.337946869 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.329126801 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.343230235 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.321603535 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.94321409 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.326237004 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.315840815 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.326148671 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307380558 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.314007445 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.310724226 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.3070435 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.57694223 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.306067928 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.326714371 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.303166257 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.294054514 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.306124267 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.38582087 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.299088202 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.576914112 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.29193442 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291911225 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.298987342 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.295756065 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.306538578 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.28812647 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.306833012 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.247786188 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.590641212 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.303809475 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.305254958 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.290482609 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.297513847 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289840963 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.29006112 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.353370521 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.292030288 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.040472491 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.292340417 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.301037263 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.28739624 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.296373492 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.290879251 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.292763184 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.290539051 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.584068375 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.573544252 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.544695889 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.293442818 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.29034795 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.068785621 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.296211076 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.469390717 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.306828319 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.289115016 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568523223 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.523955974 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.289990416 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.285465435 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.290055928 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.565637939 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.286152754 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.600885597 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.87001157 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.286113958 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.28975276 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.029956315 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.08171828 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.291570323 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.287562006 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.579866539 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.301641076 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.285119751 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.284951968 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.285563396 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.284446423 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.288355186 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.286668022 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.285686834 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.285732549 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.577731808 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.477383198 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.300001824 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.28529026 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.796154556 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.316622091 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.284961973 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.285797827 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.291413323 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.285407464 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.334545257 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.28911996 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.337762406 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.289677555 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.290201379 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.821252471 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.286051712 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.308287961 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.48065034 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.991467207 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.289025447 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.287316044 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.286325176 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.358921452 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.828216616 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.334282902 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.571648835 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.287876902 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.325622076 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.290940725 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.30644142 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.831377914 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.288359234 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.288520433 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.008128086 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.287413148 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.769251302 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.289395587 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.289250677 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.930400302 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.293681043 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.289211084 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.288105067 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.288779373 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.602648682 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.288393898 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.314496267 seconds)
  done (took 493.492042359 seconds)
done (took 642.323137054 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.287337988 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.288705475 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.29386604 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.294758456 seconds)
  done (took 10.344609041 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.306276191 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.294947533 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.3056535 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.294852894 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.306321405 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.295401661 seconds)
  done (took 8.985792853 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.28949889 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.288973309 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.295287354 seconds)
  done (took 8.05528014 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.483307738 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.318453913 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.622984443 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.303019387 seconds)
  done (took 8.911065335 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.306162507 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.305703175 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.306733189 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.307681656 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.305595672 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.305327624 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.304759017 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.304997905 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.304437967 seconds)
  done (took 12.93306709 seconds)
done (took 50.412362797 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.435513858 seconds)
    (2/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.317569709 seconds)
    (3/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.505536775 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.353259747 seconds)
    (5/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.430925032 seconds)
    (6/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.391283741 seconds)
    (7/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.357816434 seconds)
    (8/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.431769307 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.321001028 seconds)
    (10/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.381748411 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.441295307 seconds)
    (12/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.27298823 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.386015582 seconds)
    (14/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.465393841 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.396485136 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.436700448 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.378307191 seconds)
    (18/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.443075754 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.384698184 seconds)
    (20/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.491734078 seconds)
    (21/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.359352082 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.403594673 seconds)
    (23/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.312727414 seconds)
    (24/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.391561548 seconds)
    (25/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.50747862 seconds)
    (26/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.343624822 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.362582378 seconds)
    (28/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.434465612 seconds)
    (29/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.288212332 seconds)
    (30/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.49811282 seconds)
    (31/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.26837693 seconds)
    (32/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.349221333 seconds)
    (33/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.682915721 seconds)
    (34/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.427712989 seconds)
    (35/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.288914283 seconds)
    (36/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.479948574 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.372990216 seconds)
    (38/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.563833612 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.522493185 seconds)
    (40/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.433910702 seconds)
    (41/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.26878525 seconds)
    (42/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.264173089 seconds)
    (43/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.259669565 seconds)
    (44/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.356538995 seconds)
    (45/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.321587188 seconds)
    (46/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.371456333 seconds)
    (47/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.43291114 seconds)
    (48/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.263922993 seconds)
    (49/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.563032158 seconds)
    (50/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.265085021 seconds)
    (51/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.507739666 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.405785508 seconds)
    (53/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.351903181 seconds)
    (54/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.293925382 seconds)
    (55/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.352397049 seconds)
    (56/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.362452442 seconds)
    (57/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.288322179 seconds)
    (58/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.261160728 seconds)
    (59/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.400325416 seconds)
    (60/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.432223254 seconds)
    (61/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.292756187 seconds)
    (62/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.288681396 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.293532146 seconds)
    (64/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.507639729 seconds)
    (65/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.288440037 seconds)
    (66/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.534372191 seconds)
    (67/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.260596037 seconds)
    (68/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.274166824 seconds)
    (69/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.498017886 seconds)
    (70/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.372776569 seconds)
    (71/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.434519596 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.523879155 seconds)
    (73/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.396019004 seconds)
    (74/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.378407757 seconds)
    (75/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.285824164 seconds)
    (76/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.317636101 seconds)
    (77/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.261264201 seconds)
    (78/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.510444852 seconds)
    (79/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.383984226 seconds)
    (80/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.575582084 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.532918263 seconds)
    (82/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.266305399 seconds)
    (83/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.28661504 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.43370842 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.368401246 seconds)
    (86/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.368488768 seconds)
    (87/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.508612564 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.39945292 seconds)
    (89/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.373979438 seconds)
    (90/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.431302006 seconds)
    (91/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.263019065 seconds)
    (92/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.387311992 seconds)
    (93/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.487287937 seconds)
    (94/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.333245555 seconds)
    (95/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.263073895 seconds)
    (96/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.367395573 seconds)
    (97/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.401850964 seconds)
    (98/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.320173207 seconds)
    (99/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.373103901 seconds)
    (100/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.499861525 seconds)
    (101/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.362876128 seconds)
    (102/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.3657085 seconds)
    (103/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.319280746 seconds)
    (104/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.286245872 seconds)
    (105/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.466953 seconds)
    (106/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.325253569 seconds)
    (107/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.394267315 seconds)
    (108/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.498961056 seconds)
    (109/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.324642366 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.382699896 seconds)
    (111/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.396540728 seconds)
    (112/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.299951924 seconds)
    (113/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.315351083 seconds)
    (114/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.311757869 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.327785102 seconds)
    (116/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.264010818 seconds)
    (117/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.327914123 seconds)
    (118/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.624344116 seconds)
    (119/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.576800423 seconds)
    (120/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.349758104 seconds)
    (121/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.316139543 seconds)
    (122/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.622575083 seconds)
    (123/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.273291132 seconds)
    (124/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.269177706 seconds)
    (125/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.408841797 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.423813533 seconds)
    (127/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.3778491 seconds)
    (128/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.384794921 seconds)
    (129/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.488928803 seconds)
    (130/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.473062991 seconds)
    (131/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.276215565 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.399300608 seconds)
    (133/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.272885224 seconds)
    (134/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.269505125 seconds)
    (135/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.514339387 seconds)
    (136/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.360972085 seconds)
    (137/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.34735612 seconds)
    (138/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.265863359 seconds)
    (139/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.291224009 seconds)
    (140/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.431344985 seconds)
    (141/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.337674419 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.425364808 seconds)
    (143/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.272033735 seconds)
    (144/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.394578815 seconds)
    (145/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.472403411 seconds)
    (146/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.270383234 seconds)
    (147/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.272991374 seconds)
    (148/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.339394097 seconds)
    (149/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.295867991 seconds)
    (150/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.367081616 seconds)
    (151/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.467461258 seconds)
    (152/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.445322893 seconds)
    (153/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.408278487 seconds)
    (154/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.267461042 seconds)
    (155/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.283361971 seconds)
    (156/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.312929356 seconds)
    (157/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.575927774 seconds)
    (158/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.367868815 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.349034595 seconds)
    (160/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.444300744 seconds)
    (161/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.271865229 seconds)
    (162/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.271759496 seconds)
    (163/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.371507163 seconds)
    (164/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.367531156 seconds)
    (165/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.576439861 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.333759514 seconds)
    (167/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.41150384 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.40362781 seconds)
    (169/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.401651572 seconds)
    (170/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.468556222 seconds)
    (171/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.386006698 seconds)
    (172/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.296153783 seconds)
    (173/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.330782014 seconds)
    (174/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.535503659 seconds)
    (175/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.44852115 seconds)
    (176/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.350948545 seconds)
    (177/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.376423141 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.43847329 seconds)
    (179/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.592112419 seconds)
    (180/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.331912896 seconds)
    (181/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.408534736 seconds)
    (182/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.26937735 seconds)
    (183/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.496926486 seconds)
    (184/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.275041081 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.497685641 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.692279023 seconds)
    (187/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.448995566 seconds)
    (188/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.35438029 seconds)
    (189/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.323740804 seconds)
    (190/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.403356923 seconds)
    (191/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.330195323 seconds)
    (192/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.455731476 seconds)
  done (took 315.154677478 seconds)
done (took 316.33524963 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.320873583 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.396814685 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.300201087 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.300476577 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3010242 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.301765327 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.327449224 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.301561938 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.316680572 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.316341503 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.299725851 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.314076958 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.317383753 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.312445456 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.335991273 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.30238224 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.301349049 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.312869048 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.317776527 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.318729238 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303354395 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.303777684 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.328912323 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.303004892 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.310798455 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.311060727 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.309076751 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.300026852 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.311921905 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.316820391 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.299058741 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.309811407 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.320877222 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.314113696 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.303117265 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.312933903 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.304282105 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.397119751 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.325283062 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.314051177 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.311173831 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.319454131 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.30865935 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.307988887 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.315272831 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.329860294 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3121302 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.318289971 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.298284759 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.283902147 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.329542274 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.316382824 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.312846554 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.280492018 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.296496466 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.320306887 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.314926609 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.325550344 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.310567105 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.305999832 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.337803887 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.323740523 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.317550328 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.313922028 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.314756386 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.321949196 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.313970968 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.322365656 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.313996856 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.306720108 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.306382053 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.313667731 seconds)
done (took 103.827026453 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.427930742 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.301907943 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.464659535 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.314929882 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.470763715 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.431589549 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.312535408 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.314867746 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.31576058 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.106955429 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.315812803 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.313605465 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.301838937 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.313874052 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.429111435 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.3134183 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.313858395 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.003743841 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.314446339 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.440527443 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.306759227 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.313944133 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.31404497 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.114541664 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.302457617 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.299097707 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.441190525 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.313321815 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.013603681 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.298103836 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.301745862 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.013925886 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.442746064 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.334168453 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.32568496 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.323704856 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.474129221 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.318296206 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.43068097 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.430798953 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.467588181 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.354215148 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.298814513 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.304927152 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.319155579 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.317167919 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.316249287 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.343789684 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.303659021 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.314976629 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.005557851 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.326407209 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.316329608 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.316214397 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.316713306 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.344868175 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.316711106 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.317769821 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.444104433 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.318160881 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.432500926 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.116323691 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.110049993 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.318117869 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.303301666 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.317937072 seconds)
  done (took 106.786607824 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.377592943 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.39341553 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.417739162 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.310605455 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.36096495 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.417000017 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.307987567 seconds)
  done (took 10.777693331 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.3154143 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.319388469 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.356438929 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.356558114 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.318930186 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.480365087 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.31906486 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.320096456 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.317763597 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.359501977 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.319097482 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.31799734 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.328344581 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.308299434 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.355611483 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.320821802 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.428541878 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.311928654 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.320676695 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.461946239 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3198657 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.328083589 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.359579377 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.321778493 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.319120639 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.316023278 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.087841672 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.320340631 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.319471334 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.320261276 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.319382312 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.378358993 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.320153277 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.309431656 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.321019133 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.424826321 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.320476601 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.31985537 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.319392239 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.312813965 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.319748958 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.318676661 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.320512231 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.319750144 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.32156428 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.335535206 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.322906723 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.320041261 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.320370965 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.322368303 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.360574975 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.321068671 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.319953017 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.319400199 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.365132427 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.331081299 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.321932091 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.320338227 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.321965874 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.32079695 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.464562808 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.358041142 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.321862986 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.35873796 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.321754509 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.321662175 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.321770546 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.32147515 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.401785163 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.322285917 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.359169212 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.322130651 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.49314579 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.337429071 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.323585955 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.315976223 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.316632728 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.323262833 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.310499451 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.320264102 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.322042687 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.314748088 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.318661531 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.322702223 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.322474433 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.471162819 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421049152 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.322555349 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.329587669 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.321118062 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.322923199 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.366506714 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.324046829 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.322769382 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365578946 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.432759974 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.365421542 seconds)
  done (took 135.916426023 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.327240726 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.326932507 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.318337062 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.342502005 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.316269949 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.313768692 seconds)
  done (took 9.143439436 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.317276078 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.325602341 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.324669358 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.324532948 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.324918192 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.32629576 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.324599346 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.317003149 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.327850466 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.325111071 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.324171512 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.327120178 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.328514629 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.324939393 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.325714983 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.325617193 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.325358126 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.326300317 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.325721684 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.32603379 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.313511052 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.325852454 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.325525446 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.317245364 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.329030174 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.325107278 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.340998171 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.327896648 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.326480019 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.324064633 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.329568227 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.327172786 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.320230075 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.322255616 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.329850712 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.319477369 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.328527556 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.328531573 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.327218431 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.32809934 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.329339237 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.327138511 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.327450088 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.329786473 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.319361729 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.321966659 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.333240255 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.34350747 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.327536117 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.328881507 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.328816246 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.328041361 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.32839782 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.329529755 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.32084742 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.322418108 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.332328946 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.327794266 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.329122818 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.320083016 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.33063645 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.3289968 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.319665021 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.331283763 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.329195101 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.328153625 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.320847301 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.332392073 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.329646129 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.328629292 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.331956414 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.327142969 seconds)
  done (took 97.708802245 seconds)
done (took 361.521499072 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.576504641 seconds)
  done (took 3.780222918 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.317707889 seconds)
  done (took 3.523411211 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.744925262 seconds)
  done (took 21.950602538 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.31799723 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.328269331 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.329624704 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.324169192 seconds)
  done (took 10.504368537 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.572578684 seconds)
  done (took 3.776492971 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.325064812 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.325051105 seconds)
  done (took 5.855812418 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.48037185 seconds)
  done (took 3.684598816 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.540913065 seconds)
  done (took 3.745367304 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.332468766 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.330598475 seconds)
  done (took 5.876402526 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.294758715 seconds)
  done (took 3.499733277 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.06938058 seconds)
  done (took 21.276215592 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.337254375 seconds)
  done (took 3.543145207 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.352335305 seconds)
  done (took 3.557379695 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.708450066 seconds)
  done (took 5.913105993 seconds)
done (took 101.691352696 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.316144079 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.32438312 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.317648749 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.316115246 seconds)
  done (took 10.478557194 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.394748187 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.395803484 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.40366311 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.389787328 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.389717659 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.395861015 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.357141375 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.360254217 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.387978863 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.3838299 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.399806368 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.390048129 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.398469775 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.357504413 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.384420717 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.399238519 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.388627394 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.404982263 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.373579819 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.390787565 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.334595044 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.391859589 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.384879416 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.333983027 seconds)
  done (took 34.398070028 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.816261985 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.390774507 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.477490465 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.374880625 seconds)
  done (took 7.266853393 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.502616942 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.438044607 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.455475011 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.490147763 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.520510497 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.4531516 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.359849498 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.354360229 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.343253038 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.438230196 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.516746965 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.437449064 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.651059162 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.334336151 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.65319236 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.33627831 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.33516659 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.441370649 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.487711548 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.516748832 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.337359942 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.439331359 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.443417656 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.437098387 seconds)
  done (took 35.930731004 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.343281136 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.351727085 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.337733214 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.351224108 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.33733463 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.33678275 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.337984944 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.344520948 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.335925603 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.335675586 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.336537733 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.350941117 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.336172963 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.337108963 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.343816419 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.338143517 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.337970582 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.342902973 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.345407123 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.337510203 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.337747839 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.343911565 seconds)
  done (took 30.708518383 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.321099685 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.32072318 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.672844576 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.577546289 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.321752396 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.32076885 seconds)
  done (took 13.7446139 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.389555692 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.531070473 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.333380309 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.655193983 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.746052913 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.334769678 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.327886017 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.560206967 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.844154368 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.828851775 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.386336086 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.400050726 seconds)
  done (took 19.548254233 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.327267832 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.32736127 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.331133927 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.344111279 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.378924427 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.336964988 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.335382535 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.323376075 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.384221667 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.389935754 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.3378546 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.379420839 seconds)
  done (took 21.40815007 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413445236 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333462748 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.344648028 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384597529 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332324649 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333029922 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397300101 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.022848211 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.343127021 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609525614 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331791389 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420092028 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.578768694 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342598497 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338482365 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.254721968 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562635421 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798920898 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340667116 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333856367 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371851358 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338702944 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338889275 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.545788086 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341703207 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334334371 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.599063345 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334441715 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.603725382 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582878348 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.583159549 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342183562 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610633172 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956041795 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444437689 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524255351 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347821953 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.340612924 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.322754391 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.354183267 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346442407 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343808833 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.579090216 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344621776 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33615956 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336168543 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042897209 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.349257776 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.337433279 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337800651 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580953516 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425809424 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.342796916 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.337343556 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339465823 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336895235 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.342137828 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457316934 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975377437 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342830553 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358364355 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.343140698 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.335144682 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352559752 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967990055 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.349736766 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.343662661 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.342370381 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338071107 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.340046724 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367598635 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337576811 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.361194463 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337673792 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088325239 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345439501 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345717133 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859396484 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351918998 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.344587688 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.563417723 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338991768 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338493419 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.337365965 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339460925 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038380674 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351621916 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.319746379 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386010119 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.031873425 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.53579066 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36540883 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368149385 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.559419824 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.30654325 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340378545 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.352232383 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346550084 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36136443 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.037662251 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344484096 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.344721408 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587935882 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.550376938 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352443957 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.270249024 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792140858 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35467068 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.37192156 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354559494 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.537428042 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.942925187 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597843133 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348561675 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380245777 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340793881 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10452782 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354299456 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.352698101 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341550356 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618301403 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.1134312 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348631357 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415086356 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343966011 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.342075377 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347435659 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348916919 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342102588 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.508160407 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35744515 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59247694 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.350099986 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343200004 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.341749368 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350556473 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.349414724 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.563455422 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35178941 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622951452 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342539974 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343255914 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343485797 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.560690777 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.343885902 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.355001511 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68286041 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354837978 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358171074 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595769699 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381559699 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454994102 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376535666 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.351351831 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.595383129 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.349356794 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.350416531 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35411305 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352031116 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349416212 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.35266533 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360400216 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946355825 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327210096 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351120358 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.34612246 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.36099049 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418887842 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.353955756 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537203273 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.353441287 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341946927 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.356017709 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.355255843 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571040434 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59031888 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.353134457 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.54230906 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.791272341 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.944321418 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366099834 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.345415276 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.346665818 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.345014878 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348069198 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345192293 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346200735 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537728924 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6030728 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.346153555 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.953261576 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354434476 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.348030207 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.359724191 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590223153 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.361485273 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347363004 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.356371694 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35150256 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355349316 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.612351233 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573696727 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.36270937 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346371198 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.866559896 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35535198 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347912603 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346931247 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375092135 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.34776452 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164822283 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686766159 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340382683 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597892068 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354400869 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.370636741 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.347874032 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347941859 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355106819 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.392219852 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355235634 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.541943736 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366774753 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35577989 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985354667 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112561873 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896007268 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356291125 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.353536802 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354682487 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.047271474 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354747571 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.348753241 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586149094 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04499542 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354624484 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796492487 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.365062126 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077770201 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601706843 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580739404 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352906979 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.356659327 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604724115 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.566752327 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379114642 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.351158718 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356406118 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.318473135 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862682437 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365602825 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534670076 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050567593 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354843242 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357984551 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.375509946 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.353228514 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726257248 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356723091 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349729766 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360920372 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361527019 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165247815 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356313281 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349801643 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97865421 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365810815 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.806422823 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356336862 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.544538435 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.605271007 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.57852185 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.364505925 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.363790526 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.600436778 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599498595 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358096167 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356276883 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901751901 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.213705892 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.358189177 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352474894 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114881748 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358813946 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632135631 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.360221178 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.361925843 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362584318 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355381969 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353787669 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.354254719 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361282206 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327926673 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819221066 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.357402535 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356103206 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360373984 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361205603 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.600230602 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.369373596 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.955719708 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588718829 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347469991 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390951533 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.359015342 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354326452 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.329810504 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354786932 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353852552 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370060792 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.574047076 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.355042322 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.34323561 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417833913 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565455812 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.354428909 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362063367 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566040253 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.361723884 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.375110731 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149881094 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392586704 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.360873387 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362665953 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359491372 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395835479 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428730926 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550491652 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.611457832 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.61046093 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735510944 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366493801 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363799271 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.370757542 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436327508 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356018951 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.367455145 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.361143485 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956171918 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131486299 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.970558294 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612893232 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361890066 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367187549 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355982512 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597212958 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356447172 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632934935 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356160157 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.363015851 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384550437 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3618509 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363436476 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575430979 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633944061 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.357546695 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365017642 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363518405 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.357890998 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611743396 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.575560371 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829472275 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881681583 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360090071 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371175876 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.067799801 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638510988 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35861284 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358838169 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359695122 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.361555552 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.396721407 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.371450366 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372285219 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590399812 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605856028 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997649096 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.610241348 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.548931795 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.286113334 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359665447 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.611042817 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190740875 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.553393077 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975241104 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.071428559 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61539132 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434048558 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553209772 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.366441902 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596783514 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.370415503 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366438533 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.362158141 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361417889 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.36015732 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.609875348 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97634516 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.617793407 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.367030216 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.368822824 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39646042 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.55649172 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.588345907 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074139854 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58531352 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615366113 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373733152 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.361623634 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975644954 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620545959 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370831908 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.367427238 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567120546 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.368226563 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395900672 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.229642272 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.361648677 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889165622 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.575314199 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383942681 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374162316 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.074406866 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97981832 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.37945882 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840184505 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370160258 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36297446 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659022699 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.370227709 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.375557294 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648119026 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.37019868 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.371634129 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.564764719 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.973323283 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104530667 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.378119256 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400990224 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.37156802 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3650978 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404238051 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364714639 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366111018 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.737386827 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369539272 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365617663 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.37710858 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.363527134 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393943792 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.36876797 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364514731 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.372212595 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.369701266 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.350652822 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379958424 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486868648 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885821959 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367218787 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.980435797 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.699458474 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.61404735 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370475327 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.338843611 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.371127963 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366666068 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365644188 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366378024 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358359517 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898375448 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.373718525 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.62169777 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378120651 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.575513467 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579792467 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379387746 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569092948 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384021451 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390690733 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.333269751 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365394013 seconds)
  done (took 969.01797296 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.362087928 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.38013556 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.376908053 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.421863137 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.37024325 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.365898561 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.368057643 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.420890489 seconds)
  done (took 20.307974745 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.364206356 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.371309102 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.36329469 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.371211709 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.37126144 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.890301222 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.364635448 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.367661213 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.379475766 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.367373179 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.367226637 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.011644736 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.372940004 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.362769668 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.374472218 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.374450311 seconds)
  done (took 32.316919549 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.053607515 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.370206666 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.854867438 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.379387572 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.380236722 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.374809929 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.488409702 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.370079728 seconds)
  done (took 25.515496553 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.371777059 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.37190169 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.37468894 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.373728526 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.373583483 seconds)
  done (took 8.109215193 seconds)
done (took 1229.958286152 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.37597871 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.375305322 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.375693091 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.376684877 seconds)
  done (took 6.746896165 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.338594548 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.338223437 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.337198546 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.35244336 seconds)
  done (took 9.61088165 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.018003297 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.86915479 seconds)
  done (took 5.13015852 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.901312699 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.895208723 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.897429273 seconds)
  done (took 6.93977701 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.656403306 seconds)
  done (took 2.901360411 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.341345878 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.375182443 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.093890303 seconds)
  done (took 8.056346703 seconds)
done (took 40.630345211 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.371062706 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.121860167 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.516146717 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.370523782 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.522294798 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.527432364 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.611938655 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.366470615 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.361801174 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.37211243 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.371382369 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.522235637 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.599416277 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.122581907 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.600352922 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.121317605 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.523944455 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.361235418 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.365302577 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.361079675 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.613892365 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.369951834 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.365201359 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.362683559 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.529137022 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.506614894 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.362536237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.121187347 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.366615195 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.372121557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.512717873 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.363248583 seconds)
  done (took 82.182319479 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.368333588 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.363739988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.373875987 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.372942104 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.363178454 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.373915679 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.365453794 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.363301428 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.363913742 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.369309757 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.391751881 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.363883275 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.364545982 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.373829999 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.366351533 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.375752794 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.365464804 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.380378704 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.380215613 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.379360079 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.365057517 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.371580629 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.367895444 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.375766818 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.375142693 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.364871713 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.383406689 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.364049499 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.36582792 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.364478837 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.364438611 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.38351247 seconds)
  done (took 77.113317951 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.365493165 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.365955714 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.379818621 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.366808038 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.368186541 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.371756487 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.364114817 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.380100441 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.364829138 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.372072147 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.386052167 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.365926102 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.367546369 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.366730545 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.365237593 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.366824773 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.369724476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.380410081 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.370963172 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.372108024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.367725981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.381814788 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.380803655 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.367076418 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.371635119 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.378040781 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.37286684 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.365383457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.366411704 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.366428976 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.402719054 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.372513376 seconds)
  done (took 77.152758333 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.604972448 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.38182807 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.385348411 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.376360712 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.386971665 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.382295327 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.377362993 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.632774775 seconds)
  done (took 14.777764531 seconds)
done (took 252.472833304 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.380686795 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.851300519 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.40848335 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.391510484 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.393093158 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.403856649 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.58786278 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.403490288 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.593304476 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.394121816 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.406566288 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.383372436 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.149425873 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.528671411 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.178967925 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.283446072 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.229820903 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.37610676 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.919935093 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.657412126 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.408824066 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.369476813 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.174053052 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.246802007 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.359920779 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.455175768 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.46923099 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.602511743 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.537402296 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.450760808 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.862303538 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.385882911 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.390035537 seconds)
  done (took 63.885063927 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.376752776 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.385503214 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.385885046 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.385894817 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.386544707 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.38541803 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.375127392 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.385017608 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.38630469 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.387503508 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.385258791 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.38610116 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.387264632 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.386779339 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.385741395 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.35795265 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.376223124 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.38501565 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.375098788 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.358276524 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.386239018 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.386392973 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.388661353 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.386483275 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.387098945 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.387044113 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.386748506 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.389283934 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.386799019 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.387250065 seconds)
  done (took 42.748821527 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.38775089 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.936160371 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.092966366 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.391785131 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.378890686 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.382664587 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.655466335 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.393747335 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.383124182 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.382682839 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.825162052 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.395582655 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.411195626 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.102447392 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.382242877 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.390134399 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.389224578 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.381116506 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.948907814 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.390858746 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.654582489 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.39122019 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.657704943 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.39636498 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.385091129 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.38135723 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.385872027 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.162560646 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.399825297 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.827688707 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.125704707 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.656999477 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.099639067 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.147737018 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.113501093 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.398179459 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.389443772 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.834080398 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.389052618 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.381425605 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.653551417 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.38584285 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.104930288 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.066086723 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.399030253 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.390489228 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.188840669 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.830681143 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.618914564 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.39226023 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.136850667 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.388366095 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.39227597 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.384684328 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.613975335 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.383815374 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.383271835 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.201860269 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.388402334 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.655634506 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.398154625 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.382612897 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.946935856 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.383853494 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.947524956 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.385417704 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.39261021 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.385050397 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.107970287 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.386729527 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.072767598 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.399679395 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.393900183 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.830152847 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.947612679 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.236037586 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.386108578 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.953129288 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.123945682 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.673287386 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.393512195 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.139525002 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.675825132 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.388465325 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.396801187 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.394959677 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.394079228 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.455372387 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.65700781 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.997280481 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.067996826 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.216272616 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.660108708 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.394280871 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.385450433 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.209454252 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.393944197 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.393570112 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.104368261 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.077738269 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.401742913 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.392665516 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.061615266 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.404867452 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.661904799 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.391920282 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.146294138 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.387516988 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.508289136 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.395721615 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.3918363 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.39023491 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.661145818 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.389152806 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.396391509 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.059677174 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.863757991 seconds)
  done (took 192.832284048 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.380352083 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.381868487 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.382820026 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.38180024 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.382157101 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.387460293 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.382465522 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.380820646 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.385420747 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.382338112 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.381620833 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.390112801 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.38880194 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.381584804 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.396037288 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.383361384 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.383170142 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.404779392 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.383961092 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.382881292 seconds)
  done (took 44.966401975 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.397329657 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.922925261 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.893349307 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.40211185 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.399671715 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.388314166 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.441395893 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.404384992 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.396666666 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.674581982 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.551355207 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.405621501 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.39923431 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.400387849 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.897398825 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.369839865 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.674499903 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.922107202 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.399702483 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.923027146 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.370009898 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.39785856 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.388151578 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.924212168 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.685700247 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.662410391 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.443712089 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.930080255 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.398988794 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.398422458 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.923693639 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.399899748 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.391181668 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.90792858 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.400275035 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.413965627 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.401276414 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.445821984 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.450605868 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.682254564 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.931232805 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.673749664 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.410009705 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.549126644 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.406496394 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.369579129 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.935804307 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.40027027 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.371421369 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.400984792 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.405917796 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.911210028 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.390114062 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.910990027 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.402310792 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.401363317 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.926088383 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.912816855 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.902925628 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.554650588 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.396627988 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.666584141 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.401973032 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.939118478 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.402496353 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.401722701 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.400973121 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.556301369 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.933456336 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.666391464 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.683845015 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.682115901 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.40313938 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.457784875 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.407977609 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.680651075 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.456537744 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.778507406 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.686515941 seconds)
  done (took 125.716690141 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.654022485 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.510024948 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.762015838 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.954520947 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.882653071 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.531161618 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.509425693 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.63587515 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.404678596 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.507905878 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.016077859 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.48448468 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.126249663 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.45983493 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.50699478 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.525461401 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.780751545 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.336102746 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.999211976 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.99897174 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.398055161 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.493651265 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.896059143 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.594462452 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.398325572 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.935690058 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.302387878 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.898653944 seconds)
  done (took 52.771645406 seconds)
done (took 524.171467501 seconds)
SAVING RESULT...
DONE!
