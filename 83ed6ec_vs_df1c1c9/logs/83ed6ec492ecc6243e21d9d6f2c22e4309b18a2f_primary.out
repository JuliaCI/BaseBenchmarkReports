cset: moving following pidspec: 368
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.97646252 seconds)
loading group "string"... done (took 0.60851719 seconds)
loading group "linalg"... done (took 9.63597201 seconds)
loading group "parallel"... done (took 0.185988604 seconds)
loading group "find"... done (took 1.516352812 seconds)
loading group "tuple"... done (took 2.191425111 seconds)
loading group "dates"... done (took 1.499281586 seconds)
loading group "micro"... done (took 0.240178769 seconds)
loading group "io"... done (took 0.587286397 seconds)
loading group "scalar"... done (took 47.344301379 seconds)
loading group "sparse"... done (took 14.261389696 seconds)
loading group "broadcast"... done (took 1.165257994 seconds)
loading group "union"... done (took 13.020072688 seconds)
loading group "simd"... done (took 2.699767558 seconds)
loading group "random"... done (took 10.943044813 seconds)
loading group "problem"... done (took 1834.254706842 seconds)
loading group "array"... done (took 27.472139498 seconds)
loading group "misc"... done (took 1.224645545 seconds)
loading group "sort"... done (took 4.0326367 seconds)
loading group "collection"... done (took 20.339859576 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.70715865 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14414868 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.179383266 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.380963025 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.201546403 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165054835 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156348789 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.595084406 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.038255938 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.234763344 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155632598 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.60591837 seconds)
done (took 6.270692209 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.248135641 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.457779984 seconds)
    (2/2) benchmarking "String"...
    done (took 0.121609707 seconds)
  done (took 1.234329129 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.098267953 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.188915673 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.104767416 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.117790377 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.119248513 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.118609157 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.102123184 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.118798314 seconds)
  done (took 1.527079217 seconds)
done (took 3.773054319 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.5276465 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.871641059 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.539147749 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.142352873 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.166934009 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.157733019 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.321024035 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.167575691 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.125373689 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.092084773 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.18056884 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.377155704 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.506873777 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.98482067 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09178392 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.132818745 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.088909438 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.714407693 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.092492257 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.137111582 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.556428712 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.11673139 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.124945267 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.14409378 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.19367912 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137567988 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170530989 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103759026 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.676507548 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106692375 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.193223025 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.104217692 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.168120229 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.260256153 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.10137672 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09788675 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680989948 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.183502134 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.118616763 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.109298983 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683579617 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085293763 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.204967625 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104301999 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.1185523 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.189924703 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.121142721 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.084693376 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.106906842 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.096547191 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.164591182 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.463572651 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.110369585 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.153264535 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.113547416 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.69252223 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10310507 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.159796062 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.146482761 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.103122613 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.100237312 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.115355416 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16066984 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.117568657 seconds)
  done (took 20.02562814 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.125755786 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.149595551 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098112339 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.146744073 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.150329466 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101378741 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.088147612 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098541469 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.116463476 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.194477398 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.146340763 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.15324866 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095371865 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084561994 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.124272023 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.255083083 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.111150856 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.127849414 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086277888 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.113069794 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.146350883 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.101781678 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.115371935 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.117138232 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.175220241 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208832202 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112550038 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12800775 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097895512 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.106670513 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.148239282 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.168000023 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.080614205 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.098965035 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.194069732 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12468404 seconds)
  done (took 5.360366208 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.212438155 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123284634 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.205778206 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.1881096 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.155446924 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.1735057 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125451915 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.281718139 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.224515802 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.190575202 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117826276 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.118981165 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082883868 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.101999264 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.082105045 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.808612859 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.188909848 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15817747 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.134371194 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108526784 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087125299 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.381495682 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105572501 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087444031 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108729902 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.077296095 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.186508471 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109133151 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.38332715 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12417151 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095040894 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138888059 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216853003 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123370998 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149563197 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106654901 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087016381 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.242975544 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.174936942 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099427551 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107342424 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081331673 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.135920211 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13821049 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12340925 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.106015841 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.117233158 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.236900624 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.107254278 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126341135 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.164244623 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.208743567 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.101542238 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.10204844 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.378180014 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.122978852 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.092110954 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.103952415 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.312503777 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.145483002 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.090282232 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083631964 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109212574 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099813856 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.410736622 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097615673 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.002899875 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.102689694 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.174364101 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105010511 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11203037 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091186584 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107894422 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.105129063 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.101947173 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083594804 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.10179139 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083321056 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106334275 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.120149302 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089731997 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099472485 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152152459 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.08913697 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.122178991 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.121080012 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130033936 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090436003 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.100280017 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11742193 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10194858 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086788395 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.154051836 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.110034234 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.12061671 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107946351 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131288896 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.103055178 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.199037787 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088003338 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.131069409 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.104527735 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118651875 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.10405074 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.128955627 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084347787 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106186656 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081843725 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.102153185 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.152748118 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.101862437 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085975045 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104658165 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099729842 seconds)
  done (took 24.796125503 seconds)
done (took 50.838350699 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.496026232 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103725799 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.12231984 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.121403008 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.119594189 seconds)
  done (took 1.693059673 seconds)
done (took 2.395982724 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.391086535 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.195730716 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.126201719 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19528465 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092840847 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.219316064 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.182854035 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.125002587 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214220248 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.10691748 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191506337 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106140568 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093170731 seconds)
  done (took 2.969809113 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100689654 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.125024322 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085861931 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11510342 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07995372 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113417332 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096918242 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.135958255 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09723188 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106975132 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080654669 seconds)
  done (took 1.839026605 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09661152 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118657481 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086279082 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111648313 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081389655 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094611378 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112247594 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122362879 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096440598 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108185955 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08083863 seconds)
  done (took 1.811645075 seconds)
done (took 7.312555002 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.145389396 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.796733413 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.110849902 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.178042112 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.362909581 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.206221006 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.595482898 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.140328832 seconds)
  done (took 12.449905726 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.139052248 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.106762876 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08625028 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.105409123 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084383545 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.1023778 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087090083 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10201705 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087082542 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101271155 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084485234 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.105705752 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084719377 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10526944 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085459876 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.1037893 seconds)
  done (took 2.33578561 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.125192335 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.123741542 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.11078715 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.113265794 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090416082 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106924997 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.093077622 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107944806 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088142101 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106227891 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.113575106 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.097303838 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.111260393 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.087712251 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108703284 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.09764281 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.105808538 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107951827 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094896045 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.109654021 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.097075167 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.107949691 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.110252776 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097052111 seconds)
  done (took 3.324736549 seconds)
done (took 18.812281642 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.182832039 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.090283688 seconds)
  done (took 0.977264319 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.108380797 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.125745693 seconds)
  done (took 0.948772251 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114281107 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.101125159 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.145341833 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.120049138 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.086535769 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.101118979 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121874211 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.102963414 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085762634 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.103159839 seconds)
  done (took 1.797448498 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091088742 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.106905651 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.097303918 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.125601317 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114833625 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.088625048 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.107625659 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091555789 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109529549 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.08482409 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.113192423 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124556742 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093598736 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126828406 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.091910654 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.110875944 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115201131 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.090855615 seconds)
  done (took 2.600833504 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.086590365 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.087749102 seconds)
  done (took 0.889401222 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.088618591 seconds)
    (2/7) benchmarking "second"...
    done (took 0.100110642 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089575367 seconds)
    (4/7) benchmarking "year"...
    done (took 0.105595108 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.085267727 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.100445696 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.084420037 seconds)
  done (took 1.369618536 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.541378124 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.271531074 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.356235461 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109217762 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.165454005 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.391858751 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.148647921 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.12052656 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.120336879 seconds)
  done (took 2.983970617 seconds)
done (took 12.279615353 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.098054557 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.197498004 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.57860217 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.124400994 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.083947328 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.163339215 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.290001996 seconds)
done (took 2.252131883 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.367318246 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.130307345 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.092754292 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083488176 seconds)
  done (took 1.384442151 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084571043 seconds)
    (2/2) benchmarking "read"...
    done (took 0.108389244 seconds)
  done (took 0.913682238 seconds)
done (took 3.020842916 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084437371 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.082452828 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.097356717 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082446005 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.097128096 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.080590649 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100384427 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.119578097 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100665915 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.082875499 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.101803972 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083072081 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098372391 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080959309 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079906309 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101433159 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080603306 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.097545802 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080934763 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098170826 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083244206 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096337791 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.08127674 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082973745 seconds)
  done (took 2.93152346 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109545993 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.102434446 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.089470981 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.107541442 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105133786 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090610881 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.106907384 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.085535089 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.107753414 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.087329416 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10602591 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.089643939 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.103259622 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.089112641 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103934743 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10531727 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091290167 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.22050343 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086924028 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105562617 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.090153779 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101765456 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.088757058 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10700955 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106045046 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08843929 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.102727997 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085084224 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106956417 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088352828 seconds)
  done (took 3.782365313 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.093048607 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.080441612 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.099268604 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.093388079 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.097835247 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084775601 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.098036559 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080943995 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.099712224 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.080926111 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.099730683 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081014778 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080587354 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100739533 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.082413133 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.106177013 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117542265 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.082015893 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08190531 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099930754 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086692228 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.098467806 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.084066053 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.097604953 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.082097525 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.097959433 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081709956 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080990612 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098630865 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080850609 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.104214583 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.089150687 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097999558 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.094942905 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.105814354 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.080955972 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.108160111 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080824967 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098697211 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082334593 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0976115 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.082775599 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081523053 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.111969622 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.084731219 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100017016 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081649224 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.101402719 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082701848 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.103159347 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081327504 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098777195 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.085200917 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100675696 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.089470615 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081025637 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.101242838 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080933439 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.10051788 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.082357127 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.098781153 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08175636 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.10576871 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.083181355 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.125458983 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.094662772 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098684851 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.083829671 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.102188805 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.090562053 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100873828 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.103495196 seconds)
  done (took 7.398510088 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087160365 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110979801 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084587632 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100756288 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08096443 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081995647 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107270364 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099142136 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08447777 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11817255 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082882685 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100347751 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083893029 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102085818 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082794553 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08325395 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110707369 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096539064 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.082595069 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103083177 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082890933 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107160285 seconds)
  done (took 2.80336687 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.24494075 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109922026 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.152806411 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.119601634 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10659778 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118670284 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106546107 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092144891 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107104137 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094427874 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112783868 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090209976 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122122645 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111423465 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093660348 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112011848 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10621825 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095798811 seconds)
  done (took 2.823374122 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.100117759 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10232679 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110598356 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10332073 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085080381 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.106096064 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093213233 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120874525 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.104132084 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.08539716 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.115075972 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087877906 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.105239159 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086107599 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105078506 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085405827 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10568287 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085813837 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114971715 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109978234 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093852737 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114432211 seconds)
  done (took 2.952918277 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103265878 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10411632 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120944273 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.106639722 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080697805 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102202271 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092763974 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.103517541 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111603406 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.087462327 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102822695 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083739359 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.110235164 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085956993 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109898413 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085559728 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104900131 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085994284 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104484741 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081434861 seconds)
  done (took 2.699286131 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133331892 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119703597 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102939382 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131647082 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120310134 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103222518 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132039295 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119445276 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102278736 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135487399 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10303312 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.120057246 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132519673 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110513063 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120613342 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133472065 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11585996 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133460803 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120513262 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102642466 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135833194 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119891108 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116200603 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120048479 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102553307 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121165449 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120171491 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111749342 seconds)
  done (took 4.07654101 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085253126 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084793923 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.099654011 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.082154625 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.099945656 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082770042 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.099922356 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.082277884 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084687411 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099799196 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08446532 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.102681537 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084639227 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102005347 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084493954 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100924752 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085706983 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.082828652 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099665427 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082358889 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.102920493 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085142616 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.10264648 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083316565 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082344995 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.103129854 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083174046 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100231241 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085593314 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100636432 seconds)
  done (took 3.478323015 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.095785842 seconds)
    (2/2) benchmarking "in"...
    done (took 0.110018608 seconds)
  done (took 0.940844463 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.084508928 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121058609 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082461721 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106697287 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09309595 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10389823 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.096776113 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110492514 seconds)
  done (took 1.534817796 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.113935209 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.125642799 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.092316539 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.117596702 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.10812045 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.12575251 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.177744132 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.092613303 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.113312086 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086963777 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.125273819 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.087877968 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.115198181 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091542639 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.114538597 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120817063 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.084470991 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.114372846 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.095614515 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.106625591 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092531056 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121862798 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098542043 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.111387184 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.08800761 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.116732581 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.118845529 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.098795125 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110056761 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.100227945 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111697531 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079544497 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.10837898 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.092097172 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102458099 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.105828932 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124367523 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091871007 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115043121 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091980257 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114805824 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080984017 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.117217418 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.111393708 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100699734 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.109596574 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.092345592 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.098433416 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086842935 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.107235283 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.081993327 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107349243 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081006852 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114124403 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.097309918 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.125060813 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.088882406 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.109606282 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091571308 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.1075886 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.094104488 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.109018199 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097855083 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.107914502 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114916512 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.106142456 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112617776 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081973555 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.097432836 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085190247 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.113807067 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11417364 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.118676227 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.091553964 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110810735 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084131551 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111410929 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092843949 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113207728 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.116150548 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.091365348 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111150866 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099200505 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107965547 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.091669368 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111649295 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.088861444 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.107694427 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087488993 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.127304662 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088948232 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102648442 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087913691 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.116284341 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091533045 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.108404116 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087123189 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115582508 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.080900211 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.109645217 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092661775 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111085127 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.100774214 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.111906389 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093061182 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11495601 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.098754563 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111106371 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.108026453 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.084100527 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09277341 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.107701135 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.095925261 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.102250174 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091687479 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.109464233 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.092073378 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.116917937 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.105982367 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.091661777 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115539614 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.100041115 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.107126188 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082516532 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108598498 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.091864407 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114373801 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.100040353 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.106392361 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.082667588 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100322342 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.096268489 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.109561859 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.094598291 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110660916 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092886201 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.098495946 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085156142 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.110564668 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.100557294 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.107951067 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094493179 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.116376338 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.11295775 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.090718175 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.115981177 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090391303 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104747514 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.098493828 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10903916 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.081903961 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115072798 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091326798 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.10667975 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092259667 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114526416 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091353343 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.110720964 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089094238 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.110011758 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093334451 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104756159 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092395704 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.107084937 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.101528477 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.109118946 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081775165 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101759136 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09345543 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105725634 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.091678826 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104345707 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091546578 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.111345751 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.086286843 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.109069053 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091509682 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122852171 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100645549 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1111085 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094995692 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.117069665 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.091154922 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.113301057 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.090956508 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111178705 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.09310062 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.116112019 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111650101 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093280929 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109484889 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.085629151 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112000474 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099237816 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.104722741 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.085366008 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086007467 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.111808591 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.117542991 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092212947 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.111640801 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088956227 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112893723 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09808604 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109883955 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.091660015 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10490691 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.091928653 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.114555762 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093808703 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111444118 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.101646203 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111753669 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08361252 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115249851 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089213269 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.115113754 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.083508513 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106864911 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.089843606 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.112844466 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.091135808 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.109212917 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082053671 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116395851 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100177546 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.111410559 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088046905 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.109861022 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103789393 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10875421 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09653074 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.11057065 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.095842361 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.127516484 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105189487 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092604166 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.119903827 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.092296041 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099436018 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.096054158 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.108178316 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.087747052 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.108263737 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08968696 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111945259 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096100079 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111943814 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.0817519 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.110297922 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.089867275 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087636121 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.102182901 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.098844946 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.112025489 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.109782245 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103020741 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112788823 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.093507236 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113473073 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09250167 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.11174022 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.09362346 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112089107 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.093240968 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10848973 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.088143066 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.111696411 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087579222 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.103997326 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091536728 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.110388478 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.094041526 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113909653 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.090832547 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11675035 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092292751 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.111887352 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.135212534 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089520451 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.105953229 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094183715 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114633319 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091324171 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.110013424 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083185943 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116266547 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.091584752 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117559242 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091323219 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.103156036 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092686096 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.110507262 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.09516361 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.111829792 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.09321613 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.109574764 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.091949237 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.110865198 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102937822 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.107852857 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.118000421 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096287376 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113179175 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092611616 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111150707 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.092795987 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105827094 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.093426864 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.112489862 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094459919 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.110088199 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.095711594 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112220196 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091434191 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108232095 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.094276307 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.112322634 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.095382766 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.101679582 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088656599 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.107533359 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.094311201 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115883321 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.093791429 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109667139 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.091004102 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113018792 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.092448689 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.102150778 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.098013313 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113945487 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.094468681 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122068527 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08825798 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.111198151 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104358598 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.100520307 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.090724502 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.10465374 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089424734 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117658264 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.093571903 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.117503877 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094038841 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.107075663 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.084727602 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.112757996 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.090862247 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.10088394 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086601965 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116200742 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090745194 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109038065 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.093661792 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114733103 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095181378 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116663527 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.091097932 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.111877268 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.093436509 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103319402 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089151003 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10684632 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.093626351 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.112640372 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089323506 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.103713895 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.093177882 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.112274246 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.094286389 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.110807748 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091758792 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118236223 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09247822 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.112835277 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098170199 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.101665902 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093357558 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.110994404 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.091918369 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106612989 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.096044596 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113272305 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094788765 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.118652761 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.092650719 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115077573 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092182653 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.105956022 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.092395346 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.111858977 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.093892788 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108464581 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.094572255 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119143438 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.087128433 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111845969 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09448063 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.109750945 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.09482069 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.113557059 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093567073 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.11634663 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.094497013 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.112981306 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09666975 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.112225255 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094814652 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114402482 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.110402043 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099322264 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.106803943 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.101900995 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.113190594 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.094573853 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.110457549 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090053078 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110782329 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.092730682 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110192043 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.100791001 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.11342309 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088759444 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107859396 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.087146329 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.113069116 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098793512 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118151062 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093821386 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113992138 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083377811 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.104918198 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095249397 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.108190752 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092646618 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.115826768 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09792619 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.112534846 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090177968 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.109822438 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.099825875 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11750691 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.096340539 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109423757 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.096279043 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.114612563 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.111621017 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092271677 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092521754 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113975997 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.114458903 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093124085 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.107245967 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103994688 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.117843525 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095059946 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.111251664 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096125066 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.112066657 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.084011603 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.113654284 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094236928 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116894516 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094718986 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112599081 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105084718 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108190458 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091481247 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120088094 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091448452 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.119652404 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.102125144 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095523277 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114543433 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095331464 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102430678 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089262558 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089212146 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.112641526 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088261583 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.103662126 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12403025 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.100268664 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.113144634 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093130877 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109329861 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.085360487 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.102520582 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090212905 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114410161 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093396488 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.121296905 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089169014 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.106940067 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.084724953 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111473184 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095653602 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.114517451 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086939031 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.084245601 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.110208647 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09430169 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.121037968 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110599925 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.09379906 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113532208 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095335624 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.106611149 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100407163 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.103910485 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095772004 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125264148 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.095082826 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115258512 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.098468658 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120344466 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.095165356 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103519321 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.094731772 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.115261158 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094938038 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.114269291 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.095849516 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.132237902 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11413763 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090000565 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.111463636 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093598515 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.107603426 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.104310046 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114381083 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.095334689 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.115920696 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092438752 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115946819 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10047271 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11629446 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09366072 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.114979156 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.09147569 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113804095 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.090322242 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.111863573 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.095921106 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.113825227 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092596831 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116646793 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088821694 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125879564 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.120277073 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.097400759 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.104470141 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090570585 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10921665 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.085565401 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.095376074 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.107354824 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.090877925 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.110048318 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.092351757 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.116818718 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09630797 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.114181258 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.095168137 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.113017708 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.083503048 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117946791 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093632343 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115409561 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085109245 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.112728062 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.094422768 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.118876113 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.118300669 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.09297322 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.112589112 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093307543 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11557061 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.085927523 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115143229 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092158004 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111533881 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090208112 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093556433 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.116666146 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114642436 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096615269 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115226029 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096139219 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117466582 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097245025 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.105449372 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.087320882 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116763866 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.08832768 seconds)
  done (took 62.012941105 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.164399528 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09177353 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103612841 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085317289 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134670461 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087031384 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103796687 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.086279588 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104988433 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101158699 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104020266 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084598284 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12934723 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137480871 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133353007 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12074723 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085460534 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10577368 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085183681 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104878556 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109797278 seconds)
  done (took 3.052443876 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113772326 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.124395108 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123668713 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109771919 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117072404 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.123299548 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103582527 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124939377 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.130031123 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118118891 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.109073894 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124751481 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.11775082 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.099791104 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118595947 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120860546 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109282847 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116881458 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125918753 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104579229 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122217841 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.121749113 seconds)
  done (took 3.3689948 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.098789832 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.092823961 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.118641741 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.086430616 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.111985464 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.086606484 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11809757 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.089128938 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.117898075 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094665608 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110486322 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093587277 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.117272322 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.087243841 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.111314479 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.089189485 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.117770252 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.094103005 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.114979823 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.087455083 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.137781454 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.087542779 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.108279698 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.090249101 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.122210629 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.094611782 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.113803228 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.092890292 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.111128861 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.09272516 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.108935214 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.097109768 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.117448625 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090962379 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110087753 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.092694268 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.113878379 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.087798456 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.108622369 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.097208383 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.107160216 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.095417047 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.12206431 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.090706957 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.108777238 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095324308 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.113455919 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.087031799 seconds)
  done (took 5.722790241 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.131055695 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168829913 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102449118 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.163619126 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131266389 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.127905039 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.095599423 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.156071979 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.111241253 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.093395872 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.1331711 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.13139332 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.098859925 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.12354843 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096428023 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.114598236 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.115679117 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09965586 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125500186 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.094800691 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.122536731 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.098095193 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.130425254 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.127996766 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.118770984 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.094038306 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.116039425 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103508185 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.130465685 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.120914741 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.100993769 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.122624775 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.136391412 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102747845 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.116042188 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.097495634 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.134068459 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.115470578 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.097798971 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.112077894 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.098789795 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12300324 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.121123039 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.113706922 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.116778194 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.116116318 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102234703 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.115756058 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112180738 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.116974429 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.124742533 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.129896554 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100085529 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.116751963 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103368195 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134302403 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.116802993 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.09452211 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.117778599 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.108119975 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.119198422 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.122089669 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115617799 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.119234148 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.12431301 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111859636 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.118143765 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11725299 seconds)
  done (took 8.886543054 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103394425 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.138954276 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133728799 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113465592 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120900969 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.118979177 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101404066 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.119437701 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100195315 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.127287655 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120143506 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.175577041 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.094512106 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.126603399 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100062826 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121026798 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119531247 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100198988 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.119905582 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101320098 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.121738998 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132438423 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.100891704 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.132912192 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134882173 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.093020023 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12394981 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119692436 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112816283 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121721747 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136237042 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.099971411 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121928187 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133013881 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135184344 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.101274959 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109419147 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100635217 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.119975589 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.120104806 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094263207 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133245031 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100700978 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.114298734 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119110238 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101922679 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.13316577 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.136084604 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.107738084 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129506708 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11979489 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132459168 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102356327 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.119544671 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133464874 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12298217 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13454075 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132374931 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119377648 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114480751 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13258926 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.142661479 seconds)
  done (took 8.201297915 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090547718 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089390707 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.108874327 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.087708201 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.109988662 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087794546 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109436595 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.091634966 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089972026 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.111398719 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090433918 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108299367 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088530191 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109802311 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088842265 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106521703 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089646671 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087639143 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110693049 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087850984 seconds)
  done (took 2.742842272 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.100647446 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.132937632 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.091589772 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.120233446 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.094023018 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.121270135 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.112699706 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09509532 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111721489 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095662681 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.12665395 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105994896 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112952088 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.119730499 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106130907 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.119968323 seconds)
  done (took 2.570171725 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.116878158 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128067119 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.139699479 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.097336114 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.109214138 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.100674441 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.11115186 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.087432764 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.106713877 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.101444549 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.117998822 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.103623139 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.111776854 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.090257752 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.111085818 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.099003007 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10692623 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.097342127 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.111299911 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119646427 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.119067433 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.093978525 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.113643938 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114878741 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.095617809 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.117367636 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.099897554 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.110285399 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.089947413 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111830322 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.095064108 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.121403486 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.088148141 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.118575482 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.089514327 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.108965776 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.092268478 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.113626553 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.098556201 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.113482702 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089123382 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.115749997 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.091847073 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.113838383 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.087153769 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.112927115 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.087251102 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.119674705 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.093343726 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.116199851 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.090763496 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.122127908 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.118666536 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.105189013 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.122873953 seconds)
  done (took 6.662896471 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108678618 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.116244281 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09838018 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109453318 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.095614697 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.120891191 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09658997 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.114221346 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093936618 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.108918829 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09546318 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116485378 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095289645 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116904757 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094362619 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116410585 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086091475 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113963128 seconds)
  done (took 2.702463553 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099857063 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111850014 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101350685 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112351921 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.093366968 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094158428 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108760422 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089109669 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110533341 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091647992 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112491758 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.094085997 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110226364 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.09412772 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112060058 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093465567 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.115357104 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090312294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.112125915 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088549296 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11402934 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090982573 seconds)
  done (took 3.046520178 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112013438 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.148362232 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107238395 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.159380428 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.118217032 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096538687 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12891413 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.096914556 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.137599251 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.115749389 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097937946 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.115932056 seconds)
  done (took 2.244982474 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121216267 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156939383 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.090852651 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115675648 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127891017 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099601182 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119138695 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099178226 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133079877 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134764239 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098444374 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13411871 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131341731 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131908782 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1074845 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128380011 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117875868 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098982537 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113737877 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143223834 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099966367 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133438615 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11871336 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098855952 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118943599 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131579955 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113527536 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134543621 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119556133 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111877693 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12843305 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118849992 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112545553 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136013812 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116255366 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111152565 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120547033 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143667601 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127565767 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111703048 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116245764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127987453 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113179985 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127229144 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134103733 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099849139 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128584271 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1200395 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100649016 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151015176 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128140037 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131230132 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107426925 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132099713 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131345616 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151834649 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134876074 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111370708 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130257943 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135229242 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132489643 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107575518 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132946307 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135714932 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128564085 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11366094 seconds)
  done (took 8.888714037 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138758697 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113453253 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098204329 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136675716 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132136159 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118424846 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099633629 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118640823 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098393126 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115090184 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173179596 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119502809 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112645973 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133420739 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119529588 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099721979 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119464941 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132508552 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095317793 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.151617927 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121075066 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132625396 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112013625 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133236977 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135475446 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127035413 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099924753 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119819085 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099628303 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120098197 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127968675 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100009035 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132116694 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09093386 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133259871 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119519699 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098888246 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128928957 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119260652 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107556228 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133951851 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144739216 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119262887 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100050474 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135801423 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119263928 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100482131 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11513038 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099359674 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115630583 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136070214 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135971284 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115435308 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133098512 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119493164 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099928205 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120390631 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099589322 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121810248 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127872655 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111205338 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121313895 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152376748 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118791552 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100369663 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132980254 seconds)
  done (took 8.737830518 seconds)
done (took 164.981167137 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.113465335 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.152976216 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.107990793 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178396174 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092170293 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.149724445 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.126586573 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.131135593 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092187259 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.11370038 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092870386 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.117611583 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.158597022 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.114078781 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092548229 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.117731175 seconds)
  done (took 2.76521464 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19457721 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.302501837 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114523389 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119760636 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101506411 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.117802073 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.09758475 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.12152173 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094615139 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12935532 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.114785796 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096998242 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128125337 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096888841 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.115170852 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096387338 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.129768667 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095723882 seconds)
  done (took 3.086719628 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.121804045 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.158823427 seconds)
  done (took 1.104406221 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.132825049 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.201766941 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.323181024 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.175715413 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.126379801 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141237046 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.178672148 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135254166 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.209254531 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.138048857 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.118032928 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.121697204 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147582236 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.108399161 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.125813047 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101239445 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.150965538 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.122904635 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.103220771 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.12261664 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.123840059 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.123821306 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.107452327 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.1250963 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.198043124 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.140400848 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102088172 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.124772528 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122382446 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.104196068 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.128871674 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139021131 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.11909979 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.208721684 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107837936 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.203746901 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.109930825 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121193157 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.102180713 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121594928 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12631868 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105393523 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.139662086 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100703573 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.123681997 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.130239379 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102438763 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.121705601 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.110314075 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.13325545 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.131357034 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.108647811 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.203994986 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.112957621 seconds)
  done (took 8.189075406 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.885394061 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.166195747 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122222063 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.044995423 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132318468 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138852073 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.899621903 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14792605 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259573403 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.920170388 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140415325 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111403167 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261386329 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.296725948 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.17423922 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.348507891 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.022117831 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.136030532 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130181195 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.169346281 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129316601 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.152163338 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12094068 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42924391 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.123884061 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119112298 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.10668825 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134224027 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182095292 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.119807911 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104485149 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.22470153 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.286951006 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206329885 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122181632 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.096745613 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120859626 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.190697001 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.2962391 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.242840958 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.187886485 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094005457 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118273423 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113285087 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.142829766 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.1161269 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18679324 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.19560571 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.214754974 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103157686 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133444291 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108508099 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134258065 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.183095098 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.116839062 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.366854871 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.371570499 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097502846 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129939487 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.139060089 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273092321 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.120143546 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.255351039 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1278597 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.238518404 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.118836072 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815671535 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.207952078 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097470663 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129598319 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106550392 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126318259 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13293309 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181100723 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.395453547 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115544812 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.12440518 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096285036 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.25053337 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09751369 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12051455 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185022195 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122737881 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109275821 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136873245 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134339423 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.193851707 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271346959 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136780648 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129428152 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105541707 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133128129 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099272475 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.257606079 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224395494 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.199185792 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233773261 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134042898 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187373845 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186721828 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13355054 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191936761 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128242637 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.138856057 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111309978 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.245065226 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.158260116 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.119634961 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103574583 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129416289 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.163013007 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101347295 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12869882 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189521631 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.486665314 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187981224 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095878824 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123950401 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128029255 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183574995 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105918571 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.287632833 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131075602 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190712019 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127957269 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.094877112 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12900545 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.187295933 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134299229 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108394435 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134203019 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129135006 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.272998461 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.245349697 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114865365 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.261036827 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.192150772 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130029615 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195925797 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129914262 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191738758 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129497888 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11182107 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122252761 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832829115 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112795608 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128784677 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104668209 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.204540549 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119583756 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.098498993 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.120056769 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0953663 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.829106142 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100306121 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.11898052 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099462336 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.13091888 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128850444 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106990365 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125766073 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183086399 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.265126974 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.134739123 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107671854 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.120132238 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183494375 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.121249877 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099861331 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098931555 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.121949309 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130621455 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104569463 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122327025 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196516204 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.182171818 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.251760094 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.556129925 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098909528 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.119916286 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241379149 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121152351 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.335497758 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107690399 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.256159998 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.209830962 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.095566571 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.368402858 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.19042213 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205798885 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.123595334 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194772789 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094414659 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128513697 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.183887675 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120103824 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106683 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.202261219 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115676556 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136189956 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.182839324 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097484969 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.272073755 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09560703 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191246777 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124176007 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133553137 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.336815758 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099566822 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144123921 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18421696 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.124473331 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099804817 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.635100781 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099402882 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132443275 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109320785 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.253488768 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.208353901 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109539979 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129351977 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112021847 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.20725555 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.235141693 seconds)
  done (took 48.046214054 seconds)
done (took 64.009982319 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.336407421 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.292408717 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.337315054 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.218623514 seconds)
  done (took 2.114792478 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.197827376 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.175638202 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.162279856 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.09765832 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.171799335 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095221244 seconds)
  done (took 1.750967523 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.553183753 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.429911427 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.387818281 seconds)
  done (took 2.223359038 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.27605872 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.305517535 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.348828726 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.505667693 seconds)
  done (took 2.398606201 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.229109825 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.138003043 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111011754 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.1516935 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.19260428 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.20773951 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.158975048 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174836977 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.142795357 seconds)
  done (took 2.407010794 seconds)
done (took 11.748850273 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.193894049 seconds)
    (2/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.119888579 seconds)
    (3/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.332370841 seconds)
    (4/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.262060509 seconds)
    (5/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.124159308 seconds)
    (6/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.21662339 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.120432567 seconds)
    (8/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.268262182 seconds)
    (9/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.123700355 seconds)
    (10/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.272192491 seconds)
    (11/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.235210252 seconds)
    (12/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.299644424 seconds)
    (13/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.230110466 seconds)
    (14/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.236994602 seconds)
    (15/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.197933628 seconds)
    (16/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.266389091 seconds)
    (17/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.084386987 seconds)
    (18/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.114860846 seconds)
    (19/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.175540177 seconds)
    (20/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.136178078 seconds)
    (21/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.174154811 seconds)
    (22/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.101600615 seconds)
    (23/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.12839947 seconds)
    (24/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.102028625 seconds)
    (25/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.227633691 seconds)
    (26/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.248681237 seconds)
    (27/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.173724512 seconds)
    (28/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164262743 seconds)
    (29/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.124009858 seconds)
    (30/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.230891187 seconds)
    (31/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.214541473 seconds)
    (32/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134907128 seconds)
    (33/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.176445214 seconds)
    (34/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.240699527 seconds)
    (35/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.122773998 seconds)
    (36/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.188385817 seconds)
    (37/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.124019119 seconds)
    (38/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.120626336 seconds)
    (39/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.125295116 seconds)
    (40/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.260324403 seconds)
    (41/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.172451363 seconds)
    (42/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.10016602 seconds)
    (43/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.274905723 seconds)
    (44/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.218719897 seconds)
    (45/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.15651909 seconds)
    (46/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.218336607 seconds)
    (47/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.151880716 seconds)
    (48/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.233896306 seconds)
    (49/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.168340339 seconds)
    (50/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.282755224 seconds)
    (51/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.156099195 seconds)
    (52/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.11687323 seconds)
    (53/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.127310015 seconds)
    (54/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.208487231 seconds)
    (55/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.102496246 seconds)
    (56/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.119786101 seconds)
    (57/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.092610875 seconds)
    (58/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.174034448 seconds)
    (59/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.093563486 seconds)
    (60/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.220661202 seconds)
    (61/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.17783941 seconds)
    (62/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.125638469 seconds)
    (63/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.104647514 seconds)
    (64/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.164253543 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.15704649 seconds)
    (66/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.083404606 seconds)
    (67/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.221633755 seconds)
    (68/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114944182 seconds)
    (69/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.124492193 seconds)
    (70/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.127362683 seconds)
    (71/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084586754 seconds)
    (72/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.094356568 seconds)
    (73/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.160817859 seconds)
    (74/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.104847242 seconds)
    (75/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.181017135 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.127953747 seconds)
    (77/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.156095283 seconds)
    (78/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.114647212 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.128920253 seconds)
    (80/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084755749 seconds)
    (81/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.136115697 seconds)
    (82/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083977267 seconds)
    (83/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.174039268 seconds)
    (84/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.12328306 seconds)
    (85/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.128558256 seconds)
    (86/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.221643059 seconds)
    (87/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.100794481 seconds)
    (88/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.137497599 seconds)
    (89/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.112312182 seconds)
    (90/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.107594248 seconds)
    (91/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084670492 seconds)
    (92/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.126647172 seconds)
    (93/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.111508832 seconds)
    (94/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.205347836 seconds)
    (95/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.166575246 seconds)
    (96/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.167171609 seconds)
    (97/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.230681946 seconds)
    (98/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117927939 seconds)
    (99/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.181458418 seconds)
    (100/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.123916439 seconds)
    (101/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.13742924 seconds)
    (102/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.128230753 seconds)
    (103/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.097663533 seconds)
    (104/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.124269174 seconds)
    (105/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.117827715 seconds)
    (106/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.14604647 seconds)
    (107/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.214297543 seconds)
    (108/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.101214505 seconds)
    (109/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.121885216 seconds)
    (110/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.113905958 seconds)
    (111/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.167145738 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.104215661 seconds)
    (113/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.107434509 seconds)
    (114/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.168710988 seconds)
    (115/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098445572 seconds)
    (116/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.221534459 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.11474574 seconds)
    (118/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132923114 seconds)
    (119/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.113464068 seconds)
    (120/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.128892631 seconds)
    (121/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.126096845 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105404494 seconds)
    (123/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.106651849 seconds)
    (124/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.084294549 seconds)
    (125/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.10086248 seconds)
    (126/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.215365663 seconds)
    (127/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.129224318 seconds)
    (128/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.097405474 seconds)
    (129/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.123667192 seconds)
    (130/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.220319266 seconds)
    (131/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.110437467 seconds)
    (132/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.208148337 seconds)
    (133/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.123151451 seconds)
    (134/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.105710069 seconds)
    (135/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.107354146 seconds)
    (136/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.084811352 seconds)
    (137/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.083330756 seconds)
    (138/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.106315459 seconds)
    (139/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.084282637 seconds)
    (140/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.105953176 seconds)
    (141/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.092549422 seconds)
    (142/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.083780048 seconds)
    (143/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.107057998 seconds)
    (144/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084357667 seconds)
    (145/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.15706001 seconds)
    (146/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.084938704 seconds)
    (147/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.136170385 seconds)
    (148/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.102730825 seconds)
    (149/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.109158299 seconds)
    (150/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.115909988 seconds)
    (151/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.116560469 seconds)
    (152/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.114392125 seconds)
    (153/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.137093432 seconds)
    (154/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.124031198 seconds)
    (155/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.110677366 seconds)
    (156/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.120050347 seconds)
    (157/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.091809568 seconds)
    (158/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084974376 seconds)
    (159/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.10705635 seconds)
    (160/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084827228 seconds)
    (161/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.114455844 seconds)
    (162/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085374815 seconds)
    (163/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.127840148 seconds)
    (164/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.159425791 seconds)
    (165/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.141582335 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.104931608 seconds)
    (167/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.166301906 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.124427794 seconds)
    (169/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.083796061 seconds)
    (170/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.107121232 seconds)
    (171/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.083985078 seconds)
    (172/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.140670622 seconds)
    (173/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.180114726 seconds)
    (174/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.107760606 seconds)
    (175/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.085330732 seconds)
    (176/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.106712042 seconds)
    (177/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.084640649 seconds)
    (178/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13431062 seconds)
    (179/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.096642651 seconds)
    (180/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.09130921 seconds)
    (181/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.10839804 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.104639285 seconds)
    (183/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.156760963 seconds)
    (184/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.123855978 seconds)
    (185/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.083203256 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.127811233 seconds)
    (187/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.085179938 seconds)
    (188/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.128300652 seconds)
    (189/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.115557278 seconds)
    (190/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.106822723 seconds)
    (191/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098425483 seconds)
    (192/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.173613512 seconds)
    (193/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.119328507 seconds)
    (194/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.107500636 seconds)
    (195/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.085279813 seconds)
    (196/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.127461227 seconds)
    (197/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.085401771 seconds)
    (198/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.123645941 seconds)
    (199/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.083735604 seconds)
    (200/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.136803603 seconds)
    (201/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085303969 seconds)
    (202/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.203423347 seconds)
    (203/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.086473917 seconds)
    (204/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.120962503 seconds)
    (205/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.094507207 seconds)
    (206/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.126307452 seconds)
    (207/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.110636611 seconds)
    (208/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.14145965 seconds)
    (209/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098215369 seconds)
    (210/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.105518463 seconds)
    (211/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.084989838 seconds)
    (212/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.102752085 seconds)
    (213/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.137223396 seconds)
    (214/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.155526435 seconds)
    (215/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.085284366 seconds)
    (216/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.106913368 seconds)
    (217/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.107402838 seconds)
    (218/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.083938823 seconds)
    (219/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.108979801 seconds)
    (220/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.092231339 seconds)
    (221/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.131537112 seconds)
    (222/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108915047 seconds)
    (223/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.108816316 seconds)
    (224/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.085530574 seconds)
  done (took 32.017730756 seconds)
done (took 32.874903741 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.432896485 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.140323353 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.1333047 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10914876 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.155001262 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.112778137 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.134613067 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11344048 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.132394843 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.100014615 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.124296571 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.1335723 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.110459143 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.153927476 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113037635 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.125548742 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101305196 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.134755971 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.110534563 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.136484082 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.154693986 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102979683 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.132028647 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100932657 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.154800255 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101935552 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.1335948 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.10954589 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.132619227 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.100486365 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.133145461 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100639006 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.13595447 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.136601742 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099888545 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.124653997 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09953466 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.115543599 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.10147222 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.126446517 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.10971147 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.125688482 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113526883 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.12715466 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.105276146 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.124107342 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099162661 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.136635445 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.098914883 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.133709717 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101716784 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.138528069 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.122345273 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099887722 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.098997062 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103524142 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.133817049 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100293651 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.134229659 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099674634 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.126288225 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100334251 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.128684924 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100393703 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.124319248 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101930906 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.124722292 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.103936911 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.123913579 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102213909 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.121645556 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.102406519 seconds)
done (took 9.796259356 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.105758419 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183301151 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.156842567 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.134621312 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.157284602 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141429328 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115048537 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151825492 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.133420488 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125737666 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.156223073 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.148591103 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.14088659 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.132368589 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.141616959 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.104640635 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.132322455 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.114398683 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.162678127 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.15077607 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.158236744 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.108914669 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.15691802 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.147468309 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108457719 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.16395456 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110713248 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.128496475 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.10683093 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.139909616 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.149733119 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108850906 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133697183 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121540026 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.139518046 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.130602989 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119447856 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.128070865 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106675573 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.129635167 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143285407 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12199044 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.128763461 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118599687 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.127452052 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.110442178 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.132509742 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.131579875 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110045419 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.125414246 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110574283 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155601889 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.131547263 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109452181 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.131727882 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.110792612 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.131687101 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.109945558 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133168165 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.109374719 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.130352495 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.131133711 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111734859 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153755528 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.132594407 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.1087232 seconds)
  done (took 9.532046828 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125997271 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.165906347 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140473833 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117953569 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.138071182 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.09716979 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.120166262 seconds)
  done (took 1.815923554 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.099051213 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.154167337 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136498099 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.160868985 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.146068196 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.139769158 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141691058 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.098593058 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.149872147 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135220424 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129772761 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182481762 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.123618679 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.113565339 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.161523394 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.098968358 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.163044988 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.122262832 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.107651475 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.15869485 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.128387833 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.124638331 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.13927751 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.099689244 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.147107818 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101694747 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.197577093 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13655598 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.099176366 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.130306446 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.106086842 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.22572898 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.124930556 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.135138338 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097667209 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.154923461 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.123011396 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.130645596 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.154621267 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.104920592 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.147708534 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.107083251 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.132311792 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.105940659 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.133413998 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.139669878 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.113010269 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.13452135 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.106073823 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.154634508 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.112046512 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.149032399 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.125808835 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.104501972 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.135122314 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.106561079 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.140210924 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.105330685 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.154841999 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.131363706 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129488008 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.154873496 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.146714647 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130191009 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142901823 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.123737049 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.14800889 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.128796393 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108787144 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.132252087 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.12931073 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.128893666 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.135314871 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.117344448 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13281712 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.130652498 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.154122796 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10474333 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.138620489 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.103997252 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.127403483 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.100019072 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.142622055 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.104047997 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127935885 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143990657 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113703574 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.130555568 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.106623056 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.150379236 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.128880199 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113786038 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.137193047 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.105420468 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.141636461 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.155696539 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112540227 seconds)
  done (took 13.59901505 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.101868172 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.101172767 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.13168486 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.124741487 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103276085 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101776291 seconds)
  done (took 1.584520703 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.13446939 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.131645517 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.119488049 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.134169835 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.189318378 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.15221169 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.132909742 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.135544695 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.149350797 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.120068025 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.153407312 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.13112269 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.152300281 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.136742227 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.131847529 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.135914097 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.15590299 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105440661 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.142824676 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10657729 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143166815 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.135967885 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106101548 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.150022161 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.112547915 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.135901402 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110956607 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.144517775 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.140866437 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112627769 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.136639802 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.109607542 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.133793475 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.135376545 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131654918 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.134804194 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104257301 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.139585515 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.134094546 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.1120232 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.155890915 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106296502 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.141860433 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.138234334 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112223821 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.133761102 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.13716226 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112072847 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.156145574 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.113229525 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.137598171 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.133192867 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.111793837 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.139420878 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110226225 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135901597 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.137458794 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.134029101 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.137853598 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.108718132 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.132247621 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.134839709 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112740022 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.138607386 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.108404343 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.138679437 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.133272809 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.110904092 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.129886723 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.111286266 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.138771787 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.108064855 seconds)
  done (took 10.328411039 seconds)
done (took 37.761087332 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.103172259 seconds)
  done (took 2.016026625 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.895125775 seconds)
  done (took 1.809234847 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.009791078 seconds)
  done (took 17.955972804 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.574852579 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.67317997 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.039577572 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178885551 seconds)
  done (took 3.380482223 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.98729572 seconds)
  done (took 1.922892886 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.340232107 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.284884189 seconds)
  done (took 1.543916937 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.834558773 seconds)
  done (took 1.759201624 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.404330191 seconds)
  done (took 3.329365768 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.387403218 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.213715769 seconds)
  done (took 1.538761435 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.614089162 seconds)
  done (took 1.546477561 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.712431867 seconds)
  done (took 36.648795686 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.248209453 seconds)
  done (took 1.194508206 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.322129649 seconds)
  done (took 1.254304115 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.599629593 seconds)
  done (took 4.535531292 seconds)
done (took 81.359862126 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.112593148 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.139598719 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115343672 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.136555812 seconds)
  done (took 1.435436813 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.117475169 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.132700165 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.114392726 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.133674506 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.118514593 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.133214688 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.109065105 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.140659283 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.108646487 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.1385197 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.133306894 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.110162418 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.135186404 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.108052587 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.131697002 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.110808266 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.139067878 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.10995798 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.13512389 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.112796427 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.133980092 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.134081806 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.113145514 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.133883015 seconds)
  done (took 3.925943184 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.111890195 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106218451 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.133242295 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.105061086 seconds)
  done (took 1.395514519 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.117690412 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.152120278 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.124552573 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.141668076 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.150333279 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.124756902 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.130194119 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.104753319 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.133952721 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.117160757 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131135861 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.127238702 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.151657932 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125261116 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.118841527 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.12264285 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.102813288 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.150929284 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.117345769 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.142997378 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.104319496 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.142308249 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.113841308 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.146493009 seconds)
  done (took 4.041211023 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.187228905 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.146808924 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.155962394 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.181219112 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.133792557 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.128811045 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.131334013 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.137031876 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.133427729 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.106139321 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.130101629 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164577217 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.133674272 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.134134076 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.105437923 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.136812397 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.111158368 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.135129445 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.10769647 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.144792439 seconds)
  done (took 3.69344271 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.113614027 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.129389595 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.101111695 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.129226606 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.112061624 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.131647852 seconds)
  done (took 1.66542455 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.101447604 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.098637073 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.124916965 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.098882354 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.129787856 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.099183324 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.122749582 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.100052222 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.099464482 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.12643673 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.098917092 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.123592246 seconds)
  done (took 2.267456486 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.237262656 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.105023521 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133166784 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.129810139 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.110794256 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.128813817 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.121587931 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.129159818 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.192855878 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.106296497 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.147893676 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.190806527 seconds)
  done (took 2.679850879 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235977449 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111329155 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296043675 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.39782021 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152624406 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18576212 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.315462554 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161445353 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.23598392 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128142108 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24397946 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148090354 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171923063 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199429902 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156060079 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.210391553 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196755136 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224213845 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165674397 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229367566 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184704836 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187301245 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201830933 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169089895 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15337707 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177974956 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.106180546 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142846426 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194879989 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190034312 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197867255 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165886765 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15365029 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227912542 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24308602 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226936393 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.335766958 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126331261 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.208551888 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.226249137 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27070959 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157625772 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220971691 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172890232 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145672495 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203286993 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176404451 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.199900724 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.120773565 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156926993 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210473966 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197095378 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.23085596 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129877977 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344332102 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139376413 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.162877407 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199846303 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214625439 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238140068 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160255264 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.137626239 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206207955 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203006685 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202113218 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.161897366 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188311908 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13907025 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198168512 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218110589 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201355326 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186280645 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.232661897 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123808959 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182550303 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190132666 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173583495 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201147041 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179442621 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.107644854 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16860287 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153279684 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11566639 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.203127547 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135884198 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231090323 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149992203 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.205523741 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23147149 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176663286 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181140491 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185246387 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188214518 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136578336 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.133109185 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163820509 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.179869453 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17492647 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121096622 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17512145 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162104662 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.113865333 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170476758 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.136636726 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176250305 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.122858887 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186592018 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185224684 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.144149963 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184573562 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167536156 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152941453 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192092823 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232626928 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122345317 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148344203 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216923485 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175111732 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.124811513 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196417758 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23335925 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.156623288 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155001229 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191815061 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21910183 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158770859 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210884762 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161190798 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148782087 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.17025824 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150596105 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175598842 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.171429803 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143160981 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.168428786 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218014232 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.114026952 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151530149 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193740692 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139439175 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116256917 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159487903 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152114049 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.130284518 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.166697552 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154047773 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173712267 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178000875 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1456696 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178049276 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160525604 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221368676 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148994685 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.179130117 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16381223 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.105032117 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200868725 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206772674 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144895433 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207973196 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.188567911 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243239772 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15698225 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145948682 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203264399 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144677972 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.107245849 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187675793 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178713888 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182592894 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.202869915 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239413269 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189190508 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.143938991 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166071365 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187977665 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.195238327 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176661054 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.161594331 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180910477 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190375061 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.108055289 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.138535903 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.113739565 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155747006 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146839721 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12081057 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230497196 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185577646 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208416929 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179789861 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15599465 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202694395 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.112771634 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184137783 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.192514937 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155049948 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.207543971 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20290333 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18769877 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159401882 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193969814 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.106008074 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139926731 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.147070926 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160437918 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14775375 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149402212 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13488359 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.230650094 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198421892 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138960321 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255211556 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190129181 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215121042 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.134501553 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.15309828 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19038151 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177281092 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.20295223 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148537949 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.154491402 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19906522 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163517762 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217994867 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183053844 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188924505 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252193584 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.174888438 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119156834 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168338004 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188581881 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158969336 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182312555 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135924527 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151091239 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172112866 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.152131706 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114382167 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205134264 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160581196 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202923322 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.175364195 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197160377 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140952711 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162188726 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18011179 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135821119 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.131296995 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19319578 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211341451 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162092135 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17724073 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197092673 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144550729 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.329324105 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216007497 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208969291 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154374802 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132512872 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181413521 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179152427 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184591257 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203582918 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162929707 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202987633 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178860067 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.158111819 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12384482 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165552131 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16867811 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170882394 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.121866413 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.172590143 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.158572762 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209006753 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161391151 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17727189 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183496133 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.136155415 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.172503323 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157528817 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225645398 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176581258 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202761886 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.17333288 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.185271953 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209841734 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111014296 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141405334 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.113740033 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203848339 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147330647 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179647744 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.203000823 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219277772 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177950216 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188562327 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155506383 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.110131777 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178532865 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166794209 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247790132 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132891974 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.153849891 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215194024 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.168336736 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117964699 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184933504 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32792693 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13500165 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195058196 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.133779077 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.296866764 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114183347 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148242599 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179981226 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193469681 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.146101045 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.174609232 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183657728 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162810066 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179757458 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126866451 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238832877 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235297072 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194593782 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197811881 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.161749284 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179298012 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184139888 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199104494 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160331938 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.135397047 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181585205 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203838587 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.207892267 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.149503929 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182302124 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182819981 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178769944 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202217665 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121267657 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237166179 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118106367 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188559803 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158437525 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137289267 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150181605 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.229093261 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122800014 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197780315 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176720381 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146120868 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113143721 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170867004 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177425445 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162907831 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.116527629 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229951214 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.114866269 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184277227 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202068753 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116599713 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175534773 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163167174 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145538881 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131534937 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161795416 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150549921 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.160195216 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203090997 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.147379495 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198892093 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194410693 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186551505 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17993956 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161614546 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.650903266 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.142075792 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20413175 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164860848 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214648125 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167658324 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186975027 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180213169 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138554732 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191867978 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167804891 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.240293658 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189247722 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17798919 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118745128 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162457283 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162490443 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147257526 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141557737 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180913529 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157009238 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.151616387 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.174398336 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135151188 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.163581283 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154250902 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208211999 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136591347 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235131264 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205677312 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129465663 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186175657 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19983153 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145923085 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.183513342 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194532556 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15883649 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170272453 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.117603079 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151293791 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201630903 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.110704591 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181888178 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180220451 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181161703 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182467568 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.123347354 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17991852 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161822525 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180246871 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113086027 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.17471156 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177378356 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147291384 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.113045716 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175000516 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18055887 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.177396758 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139789515 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.161158528 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203649805 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.137417882 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122267081 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305239369 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174673022 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216320923 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.170835471 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151764158 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160410828 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146651336 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.171930138 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179096774 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.143721115 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117912756 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146811155 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.200000254 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.174655052 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175834816 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204062717 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152015114 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238195218 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133178487 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284315774 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154668663 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146580329 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.146670713 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.143747429 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130090559 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152453673 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164677473 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211781124 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200418142 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.171384908 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.161148119 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114779552 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.137780964 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120078167 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181798811 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173949131 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177123329 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159869529 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104690173 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162454731 seconds)
  done (took 85.540552136 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160266017 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.157230726 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.161573649 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.21177169 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.184271026 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.273663797 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.220918082 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242560538 seconds)
  done (took 2.642667091 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.115951604 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.150676467 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.157055971 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.139230559 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.138129169 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.38520169 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.150566947 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.113786716 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.202730058 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152280933 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.136694749 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.678888255 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.107460811 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.139525807 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.125678811 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137522627 seconds)
  done (took 4.055046921 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.395124837 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.555459036 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.950242973 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.253473542 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.266248126 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.177514426 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.759729771 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.186471856 seconds)
  done (took 12.574447915 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.144195279 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.15791005 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.290934682 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.191921923 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.176914567 seconds)
  done (took 2.001060938 seconds)
done (took 128.850609248 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.109599926 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.13902662 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.109839443 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.139762708 seconds)
  done (took 1.52314144 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.123541711 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093150761 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.124857705 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.09251773 seconds)
  done (took 1.467027746 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.532666895 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093060584 seconds)
  done (took 1.697889212 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.139128023 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.153066443 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.134449576 seconds)
  done (took 1.470779402 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.118344361 seconds)
  done (took 1.15938796 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.121334827 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.115982434 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.158980841 seconds)
  done (took 1.437767456 seconds)
done (took 9.793942507 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138263248 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.539859156 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.400055997 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152902907 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.744346232 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.392233874 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.124153819 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173263245 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182562283 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.104770237 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.153226358 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690466424 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.073453966 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.447630988 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.057449055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.352493938 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.71552899 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.106845012 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.139953334 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.105719742 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.098117624 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.103863926 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.134385158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.105906188 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.711372894 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.410071154 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.132795903 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.393719447 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.105952154 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.136587624 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.395336789 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.131398417 seconds)
  done (took 17.687691377 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151031158 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.197866296 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141063978 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107449767 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.137182986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.106163863 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14289078 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119909408 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.197581989 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.132593114 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.12599275 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.132707782 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.110797618 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.132826052 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.128950683 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.131930483 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.10759501 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.135661915 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.112574759 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.135087609 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.125715641 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.132057452 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.107064461 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.135117133 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.104375563 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.146583104 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.104849037 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.146627692 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.103522779 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.139142311 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.137305605 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.105789407 seconds)
  done (took 5.216230194 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156377994 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.209763817 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141953314 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141894284 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18785121 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.134000408 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.223791039 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145820073 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202878443 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.133670748 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.125529789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.134722899 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.172498536 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.106238518 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.156401808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.104396016 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.136035661 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108426765 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.140430274 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.107438786 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.153829931 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.103677071 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135187633 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.107159238 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.133222774 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.120973658 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.133912466 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119555095 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.132055035 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.137245984 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112231983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.132130164 seconds)
  done (took 5.540007704 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.112749676 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.140880811 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.125025389 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.151447799 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.110769223 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.140176193 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.114112461 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.135305644 seconds)
  done (took 2.074322671 seconds)
done (took 31.56332915 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127778653 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.147029956 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.120804804 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.142163832 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.139631614 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.130504944 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.118275015 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.103075776 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.142578661 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.121844991 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.132722114 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.106184827 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.148967626 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.110557528 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.150659175 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.116568548 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.158267294 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.122393655 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.135719727 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.116065804 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.135164529 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.128996442 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.141468238 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.106015023 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.161749367 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.107926161 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.152789638 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.109444557 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.139271212 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.106590289 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.150636985 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.111620886 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.135920428 seconds)
  done (took 5.317876508 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.136304545 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.182026507 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.1032826 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.131410678 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.177536421 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.103971533 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.16297745 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.103556848 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.131107009 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.104180053 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.101941564 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.16048643 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.16740247 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.138334211 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.185712211 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.170190459 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.132725757 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.175166425 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.156604543 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.147800081 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.164211588 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.102131565 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.16866195 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.177282319 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.103266246 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.133048449 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.15199229 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.165411253 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.179672765 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.140466965 seconds)
  done (took 5.415179087 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.114960382 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.150583298 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13381887 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.208881247 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.179237017 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.121506471 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.147355808 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.126299284 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.161687237 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.105877224 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.144583111 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.141324035 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.152286323 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.116353929 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.140722602 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.121257665 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.157722184 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.107473372 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.141191258 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125621746 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.15571873 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.14898638 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.121558561 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.144643691 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.106724678 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.145044763 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.112247185 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.147404684 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.113796479 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.142462442 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.111135937 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.140013216 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.109368713 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.144896123 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.110855205 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.143637239 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.130140155 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.146295741 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.119029536 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.173726758 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.143993053 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.112666777 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.156994496 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.155582406 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.137498348 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.114899732 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.147924095 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.115507531 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.134124555 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126413444 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.149811206 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.107625596 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.154714291 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.104641493 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.135355782 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.113062395 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.135783607 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.109182558 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.143359172 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.109705478 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.157360536 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.114424677 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14287112 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.108394661 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.141010202 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.105579195 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.133606301 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.11235786 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.159022211 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110856621 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166939876 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.134359946 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.114314253 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.141860096 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.113416638 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142940662 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.106698931 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140856802 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.115780679 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.139924561 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.116496957 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.109407585 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.138990547 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.125121872 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.15494676 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.14482545 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.113262458 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.143470994 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.110128592 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.137924454 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12009351 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.137252653 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.109803795 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.146020163 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.107847081 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.139008955 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.113946446 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.141399246 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.10626166 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.154645133 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.111625539 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.134912266 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.122639439 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.136419738 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.111424161 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.145658567 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.118672805 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.136176373 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.111421332 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.142966981 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.106092378 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.140546352 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.111032468 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.134217203 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.12059647 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.147369691 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.111629421 seconds)
  done (took 16.458106394 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.268214629 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.244361381 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.216122375 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.332580234 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.162499875 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.135813574 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.240814251 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.191370399 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.136765132 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180151582 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.198109435 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.202435419 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.10675936 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.169270044 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.243237994 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.339105733 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.139126768 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.183091779 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.18147481 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.162009409 seconds)
  done (took 5.104939977 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.126256844 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.179225068 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167351397 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.136279425 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.137381201 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.122185481 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.136658683 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.155103297 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.108368928 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.14363092 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.107170825 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.146546842 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.110823285 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.139563478 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.127640217 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.156023151 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.112189778 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.144596083 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.155170754 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.114630536 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.138591661 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.160897649 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.118850439 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.169194184 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.115837046 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.153565733 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.106259222 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.144366473 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103812488 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.135275806 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.113441239 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.152801252 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.14361558 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109732365 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.142034922 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.107778671 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.131877964 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.108605278 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.108814176 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.141251129 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.153564189 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.110857327 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.135397429 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.108531023 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.144716092 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.103608948 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.113048601 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.143328361 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.142491199 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.117110731 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.142594672 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.11348326 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.144786965 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.120891897 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.133072239 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.119002832 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.150116547 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.112537471 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.143394025 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.106063428 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.135798357 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.111477555 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.135364911 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.113697743 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.14199612 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.154463352 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.118206047 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.136281373 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116686959 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.141117444 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.111303359 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.156746588 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.160332821 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.106286424 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.104148606 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.158523665 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.10448482 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.123639985 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.116835895 seconds)
  done (took 11.415349472 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138348296 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.13593655 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130354157 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.176181785 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.122465746 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.144970161 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.107725727 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.157088914 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.114374219 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.146325771 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.115341897 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.152600927 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16661511 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.122735876 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.136381474 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.123784179 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.141716059 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152268119 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.158594366 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.171571945 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.121798247 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.142817457 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.121937012 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.14933698 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144003627 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.150635667 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.173361558 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.114499875 seconds)
  done (took 5.016400982 seconds)
done (took 49.770736465 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.246095893 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.361919778 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.142966736 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.143101002 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.153271597 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.170827494 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.148125871 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.337590049 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.879781091 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.137788563 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.143149589 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.144119337 seconds)
done (took 27.075472362 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.450226383 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.737581917 seconds)
    (2/2) benchmarking "String"...
    done (took 1.463094507 seconds)
  done (took 4.265642773 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.143352443 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.143618384 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.390107251 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.143988949 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.16187044 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.159345816 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.143777206 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.14723267 seconds)
  done (took 15.356392778 seconds)
done (took 25.280274183 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.174737171 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.32257299 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.3900709 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.161945969 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.145654227 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.14538902 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.135813933 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.168260401 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.147341275 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.13216337 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.162803109 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.421466909 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.136078373 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.521585986 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.130684958 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.159524361 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.16426064 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.351963358 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.153676004 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.186093145 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.141506935 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.133556858 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.162942409 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.18156708 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.16019756 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.160342858 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.136834444 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.132442081 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.316417043 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.149736752 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.184693974 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.152034419 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.14927831 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.154283891 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.259794404 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.16661481 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.320901523 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.140205202 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.137608088 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.146884569 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.34532476 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.546461422 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.15839848 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.139930155 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.152051927 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.194305659 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.13801812 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.86822479 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.155973295 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.137220858 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.154787447 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.522058175 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.163573232 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.148194783 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.154948883 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.358889638 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.176461775 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.166834342 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.174190717 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.154539207 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.147807389 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.157921671 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.158198438 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.151808203 seconds)
  done (took 139.495916374 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.149449042 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.148794448 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.148696797 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.173619449 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.149552995 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.149974222 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.148084995 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.14844171 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.150214202 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.149317178 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.150472431 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.150341103 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.154433867 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.144338062 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.151005409 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.162559536 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.149341552 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.1685431 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.168558852 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.150416399 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.167077162 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.149572195 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.148964251 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.14986745 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.19127202 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.24228332 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.188802423 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.168548884 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.14883382 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.151956215 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.191299676 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.172262585 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.758388516 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.010715289 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.173088002 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.17122064 seconds)
  done (took 78.321553834 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.151929679 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.1511752 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.151294302 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.182691424 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.151765446 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.721892333 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.724823821 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.88636839 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.396728014 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.484793266 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.397045205 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.15019832 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244815126 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.166304971 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.152461606 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.167175107 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.178978908 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.155590273 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.153034929 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.706059305 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.165097325 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.310816352 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.326256363 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.168877909 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.18331863 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.548933714 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.152100547 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.184275968 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.485613702 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.201248042 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.152516582 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.528393853 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.853101732 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.264152264 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.153048812 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.182335344 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.151852762 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.433470037 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.152151432 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.151306579 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.151162094 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.153123051 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.154165732 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.817696293 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.156308363 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.716401759 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.156526296 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.086102143 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.15247395 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.151006387 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.331061826 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.751900189 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.163819581 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.149302027 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.151717168 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.150585024 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.149701216 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.183482835 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.492934119 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.263431134 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.151691302 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.155097094 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.183397449 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.150299711 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.195007451 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.166917201 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.152454484 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.220382179 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.268402302 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.686055678 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.147407491 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243546427 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.265011996 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.147617506 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.147146528 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.147798626 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.147890739 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.257148019 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.148283526 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.548011 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.319280632 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.165672037 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.418756993 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.154481007 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.24422909 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.148062427 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.524919048 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.153893413 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.148943466 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.848953188 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.244037279 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.149288301 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.149178806 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.148859077 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.546049672 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.700210572 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.364972627 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.154945309 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.57970075 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.155603964 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.560521427 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.679402198 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.784615555 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.148511844 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.150454156 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.260684657 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.320964366 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.167469335 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.148850518 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.425202519 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.154852178 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.210140266 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.150604441 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.548360293 seconds)
  done (took 360.347478081 seconds)
done (took 579.231761801 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.887434128 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.838250604 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.971286833 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.865271874 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.834846307 seconds)
  done (took 10.466405248 seconds)
done (took 11.534815554 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.333823917 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.336871119 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.209039085 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.33801757 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.18887529 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.352900537 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.321522359 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.178051155 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.254522997 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.231256636 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.256842176 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.205347885 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.188006079 seconds)
  done (took 17.466968656 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.422523379 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.158431333 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.219236373 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.393251355 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.195023158 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.415530272 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.45265565 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.15769043 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.302267494 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.165128292 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.165391557 seconds)
  done (took 17.120291661 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.414588027 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.158692161 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.223032017 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.396203011 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.19894409 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.414402254 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.466706688 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.158118619 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298893548 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.170797479 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.166545591 seconds)
  done (took 17.139605245 seconds)
done (took 52.801133243 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.194673326 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.31997529 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.182122243 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.167808964 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.160950816 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.164005053 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.168511292 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.162882875 seconds)
  done (took 10.593730246 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.162939437 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.162964886 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.15881378 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.162620478 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.159483702 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.160096446 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.162567995 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.159675205 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.161711312 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.159389372 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.158579935 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.162402024 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.159789489 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.162926848 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.15943741 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.163425245 seconds)
  done (took 19.64941637 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.160702428 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.159674019 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.158467293 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.160190094 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.159856207 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.160770193 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.160178967 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.160231505 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.159739903 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.157799115 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.160051217 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.158806846 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.159369652 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.161132552 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.161186505 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.159886406 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.160982038 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.161090411 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.165135706 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.160466246 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.160954882 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.161216814 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.159127065 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.159581279 seconds)
  done (took 28.92203336 seconds)
done (took 60.235619601 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.169330633 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.163116606 seconds)
  done (took 5.407012164 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.223910016 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.225772868 seconds)
  done (took 3.52659044 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.164283828 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.163859921 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.163596607 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.161281054 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.163363896 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.164887561 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.164651489 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.162730282 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.162871071 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.162758463 seconds)
  done (took 12.709661028 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.163152854 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.164645736 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.16126895 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.163817666 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.163132863 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.16040292 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.161263418 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.163212031 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.162935085 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.160549178 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.163235939 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.161081377 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.164482658 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.160258264 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.163324141 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.15999753 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.160279648 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.16072198 seconds)
  done (took 21.99286305 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.176476497 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.184141383 seconds)
  done (took 3.436024319 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.300547308 seconds)
    (2/7) benchmarking "second"...
    done (took 1.202498197 seconds)
    (3/7) benchmarking "month"...
    done (took 1.277131997 seconds)
    (4/7) benchmarking "year"...
    done (took 1.267326907 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.202603403 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.181353071 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.203661724 seconds)
  done (took 9.709212387 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.16417828 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.353554121 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.46554375 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.742736922 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.164965316 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.209592666 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.017443262 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.208188464 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.198855481 seconds)
  done (took 13.600599305 seconds)
done (took 71.456141493 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.154500641 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.198840952 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.161839694 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.174020223 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.453787767 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.212012459 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.160726826 seconds)
done (took 15.589289289 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.153084489 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.146999899 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.147641565 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.163095717 seconds)
  done (took 9.68585052 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.156104392 seconds)
    (2/2) benchmarking "read"...
    done (took 1.51230901 seconds)
  done (took 4.74362999 seconds)
done (took 15.504524747 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.164939783 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.165238606 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.162350682 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.164996361 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.161587172 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.162304322 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.164214717 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.165068041 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.163276174 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.164364341 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.164834972 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.165817537 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.161323877 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.161498873 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.160905642 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167130157 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.161913666 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.161882581 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.162459982 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.162945516 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.164096776 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.160798859 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.161870666 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.163831098 seconds)
  done (took 28.995568992 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.166414556 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.161351231 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.164397354 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.165457543 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.161069533 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.16416294 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.163821122 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.162885878 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.164042824 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.164024034 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.161967729 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.162639093 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.16517308 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.161714312 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.163787377 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.161322685 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.16525931 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.160995608 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.163289371 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.161262892 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.164470009 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.161537887 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.161391782 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.16370879 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.161589286 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.16195782 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.164782917 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.161540489 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.162001248 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.161013042 seconds)
  done (took 35.96580647 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.169006479 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.170407636 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.164490149 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.163321327 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.164825681 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.164216345 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.165677358 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.164358653 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.164268286 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.163387194 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.163385779 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.165062548 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.165514543 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.163237743 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.164237389 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.16465979 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.16493024 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.164127883 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.164777614 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.164915738 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.164970482 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.1646136 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.16370496 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.164370845 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.166277541 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.165598533 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.164016232 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.163548876 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.165480791 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.164561017 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.166052734 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.165592279 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.165464528 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.164453263 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.165594163 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.165775467 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.169473218 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.172775295 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.165047506 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.165706035 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.164531234 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.16591361 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.165127194 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.165611295 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.165722676 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.166043604 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.165105754 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.166042551 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.166949606 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.165722472 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.165936848 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.166022147 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.167025758 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.166844147 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.166736338 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.166037015 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.16760349 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.165599981 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.166558064 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.167167993 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.167125927 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.166464034 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.165874617 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.166705379 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.167226654 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.168009241 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.168497126 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.167676835 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.167031891 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.167082277 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.166250079 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.16699739 seconds)
  done (took 85.018119983 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.167885465 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.165931936 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.164016501 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.165525386 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.165326799 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.167139442 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.164551391 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.166394572 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164266014 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.169214275 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167231341 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.166940627 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.163813694 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.167191051 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.168882361 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.166126135 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.16855892 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.165804496 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.168651862 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.169120213 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.167898311 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.165331953 seconds)
  done (took 26.744833282 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.170083855 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.169848533 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.167753065 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.170002319 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.167616658 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.168660326 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.169817799 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.169751317 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.168485721 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.166775985 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.166836352 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.168470887 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.167714275 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.167004633 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.166632013 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.169098548 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.168707972 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.168391868 seconds)
  done (took 22.11088377 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.167152457 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.167395051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.17069486 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.166696159 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.167371234 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.170719671 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.168353075 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.169602978 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.170114961 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.167303369 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.170343287 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.171112738 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.171232999 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.168565766 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171598017 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.167353797 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.171263953 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.167557614 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.171557182 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.168680425 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.168492551 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.171150593 seconds)
  done (took 26.804672675 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.171192444 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.171461625 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.168791647 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.168789782 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.167191679 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.17169665 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.172493453 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.168310188 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.173969764 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.172611272 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.168771224 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.170299098 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.170352423 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.169305804 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.168684075 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.168443329 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.171189292 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.170497384 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.171062342 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.168615631 seconds)
  done (took 24.485808642 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.173526432 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.173903843 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.174093484 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.172297221 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.172886335 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.173712943 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.173358178 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.172284369 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.173469951 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.174612737 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.174378718 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.1754895 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.17288313 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.172727936 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.173353018 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.173411734 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.173377723 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.174324342 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.173467666 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.174033388 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.174492088 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.172852604 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.172891415 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.173120312 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.173726441 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.172609164 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.172780522 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.174047167 seconds)
  done (took 33.941776642 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.17238042 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.172218826 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.170366318 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.170189629 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.17069236 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.170157244 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.170847466 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.171330268 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.171985879 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.169286731 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.173886847 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.173062032 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.173750921 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.17207975 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.171093238 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.173483908 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.173657975 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.169402198 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.17109667 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.169400686 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.172817971 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.173343931 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.172776948 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.170918336 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171538273 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.173590413 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.171180555 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.169992303 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.173475978 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.170609783 seconds)
  done (took 36.234915093 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.217534868 seconds)
    (2/2) benchmarking "in"...
    done (took 1.215662845 seconds)
  done (took 3.517262319 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.170406541 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.172087441 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.172676023 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.170362185 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.170677216 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.173535155 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.174117293 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.171069089 seconds)
  done (took 10.459049105 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.174646243 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.173684539 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.173686013 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.173931125 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.173382535 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.172818022 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.180327804 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.192414768 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.17353153 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.173792172 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.17886951 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.179679797 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.174315711 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.172650731 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.172302213 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.175119574 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.174294166 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.173513738 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.173629729 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.172759698 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.174304176 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.175429771 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.175045431 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.171537844 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.175869743 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.183135612 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.177262107 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.17429082 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.173114825 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.17575434 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.173325624 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.169781778 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.174824792 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.172438215 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.172253138 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.173126422 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.183692042 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.193322322 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.179473009 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.172977336 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.175248107 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.171485254 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.173235485 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.174439893 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.17406122 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.174258712 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.174474115 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.171267657 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.173173696 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.176745513 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.178397811 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.174160639 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.170696528 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.175907067 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.173623763 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.180043126 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.192290332 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.178037783 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.18289228 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.184278373 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.186579228 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.19551009 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.176255295 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.175074719 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.184654598 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.195589198 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.181628204 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.191595723 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.173013412 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.176123153 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.182279477 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.187664034 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.198744846 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.176918077 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.177165735 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.17689041 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.175615725 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.176984066 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.183860676 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.195925393 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.176231292 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.177891558 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.186332162 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.197663433 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.17716437 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.176827489 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.177470669 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.176028781 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.177525428 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.186516357 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.195420224 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.177734658 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.177217202 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.178256552 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.178203563 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.179966049 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.17730983 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.177465132 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.174891317 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.17720231 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.177833038 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.181946698 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.185398669 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.179723304 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.177828745 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.185014982 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.177462993 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.178033736 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.183898036 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.179164578 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.179099555 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.180201396 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.183431037 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.176096656 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.181038824 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.186858451 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.17820825 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.179363825 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.180210189 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.180441076 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.187318176 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.201747141 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.178519182 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.17896031 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.183955642 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.188351015 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.178872917 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.181607874 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.180196612 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.178434865 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.177343082 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.177964942 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.180372825 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.179070722 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.178579176 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.180903563 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.177439686 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.179531869 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.179206204 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.181385954 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.181445165 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.180289468 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.180584828 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.181345852 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.179433814 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.181455945 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.18734303 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.18017672 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.181776606 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.18106417 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.178416147 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.182137261 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.180422854 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.17983589 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.18152709 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.18025107 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.181140953 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.180507569 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.181186455 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.181520514 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.181626912 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.182474127 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.185049611 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.181322349 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.184206413 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.181258118 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.17961249 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.181856338 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.181702274 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.180906424 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.182011676 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.18052307 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.185528551 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.188817898 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.181855266 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.181539146 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.184005288 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.182982537 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.182055267 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.181910535 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.184670759 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.189065376 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.182069565 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.188999635 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.182941012 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.183204326 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.184299863 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.181249844 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.181843659 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.183341685 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.186411193 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.189097601 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.195184968 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.20669046 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.183598376 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.187409281 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.183877746 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.18751988 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.188560909 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.184551786 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.183925839 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.183563071 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.183234746 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.183948774 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.185401764 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.185295122 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.182799196 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.184429738 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.187033102 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.185268837 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.184246701 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.183685632 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.184780148 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.183973878 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.185904204 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.185569938 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.185335183 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.181502779 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.184557315 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.184243398 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.186796729 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.185054368 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.191719551 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.183585575 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.185060828 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.186829197 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.187435137 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.184293958 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.187123001 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.186919307 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.186445027 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.192061095 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.2066303 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.1869822 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.192239953 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.20407884 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.185139849 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.189664088 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.188365067 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.186345792 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.190330213 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.194908405 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.188822068 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.18731242 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.187369089 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.189813191 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.18910248 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.19407995 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.184852202 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.186371904 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.188041788 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.191177434 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.184647262 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.189542629 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.188898932 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.191630037 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.189890291 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.18980988 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.189213665 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.188508827 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.188121462 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.190088737 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.189470657 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.190491268 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.19514674 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.193371498 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.189319559 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.191003935 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.189941709 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.192877702 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.190345653 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.188643009 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.189994361 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.200774925 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.215551731 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.194390823 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.209262589 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.190967267 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.19534469 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.207847949 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.193356318 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.19090708 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.19097365 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.192070729 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.190112223 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.18850624 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.194363239 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.192307568 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.194021018 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.191317642 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.194412755 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.192504204 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.193671137 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.191816626 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.191030302 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.192063845 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.192264133 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.191826228 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.196024444 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.194582118 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.190733576 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.192321372 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.199683867 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.211933352 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.193898103 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.193389973 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.193547045 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.191201727 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.193931015 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.192234959 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.198253344 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.199898778 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.198411257 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.20133656 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.196192083 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.203411488 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.195746143 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.196633578 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.20220932 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.191971404 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.194927103 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.19474439 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.194989131 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.201702303 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.215290567 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.19451293 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.197223576 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.193043738 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.195459992 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.192648577 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.196525095 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.197671511 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.194459368 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.20426435 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.218677401 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.200035217 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.196358122 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.192860989 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.195789784 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.193113089 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.193457219 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.19882434 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.19619731 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.195155794 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.194929084 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.193409972 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.196126345 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.195891706 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.19635374 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.194182938 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.196981531 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.203250687 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.214523922 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.200431715 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.198866261 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.20223043 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.196018316 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.205071276 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.217130048 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.195955953 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.196430521 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.194826474 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.198662356 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.197751742 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.195046706 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.196324511 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.198205985 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.203940619 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.194100962 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.196595801 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.197605811 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.196815203 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.197872376 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.207778336 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.215811093 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.199699525 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.199256981 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.194710012 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.200069563 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.201433997 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.198728036 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.197301075 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.201219152 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.204902319 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.204933589 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.195110384 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.198774427 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.199944028 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.196815124 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.197348253 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.197080648 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.19797556 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.198706758 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.198576733 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.199348022 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.199844379 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.198186585 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.201411755 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.198862748 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.199276068 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.209276486 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.198520542 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.198412423 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.200003258 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.202600473 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.197864433 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.200094665 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.199029359 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.198509034 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.200429077 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.198924656 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.205939342 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.206768289 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.20375065 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.201724918 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.200843501 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.198631442 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.202146188 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.201576993 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.201540765 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.200810871 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.202969232 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.200521428 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.202114592 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.201922153 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.199061906 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.200524117 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.20306444 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.20424765 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.207301227 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.199979972 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.200044759 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.204623048 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.202556363 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.200806195 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.203162953 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.211167486 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.203824035 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.212327975 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.208305896 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.206932012 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.20161272 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.206891383 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.211448789 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.201460621 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.200745965 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.202512236 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.203724076 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.202367095 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.204805681 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.204442491 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.209054527 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.202890605 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.201871257 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.782658754 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.221097212 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.202079919 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.202226166 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.204585066 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.201735345 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.1999467 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.202413262 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.202535834 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.208375598 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.220161079 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.201680244 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.203589464 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.200226416 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.2030917 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.208399811 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.201652088 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.2013784 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.198749943 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.202027474 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.202084086 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.202564226 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.200193027 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.208857563 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.201257591 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.206407748 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.209115196 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.200575037 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.204137264 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.203167895 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.204459302 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.202638804 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.211254261 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.201046282 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.200949283 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.202752557 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.202501194 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.202766094 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.205654548 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.201675144 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.204269009 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.20362739 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.203386259 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.204889995 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.212723739 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.210989657 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.199492414 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.201886639 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.203484133 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.205274376 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.205575231 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.204061467 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.203849121 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.204215562 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.204927785 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.204702761 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.203628969 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.206578154 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.21968855 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.224168677 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.205803235 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.205621305 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.205408673 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.205367952 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.202403018 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.205846249 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.206082205 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.208214119 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.211048032 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.204778792 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.211032657 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222046279 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.205963624 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.209517046 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.20685978 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.211693062 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.208130357 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.205596381 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.206334812 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.210833467 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.220398206 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.20600528 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.215091953 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232897785 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.223471967 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.206595401 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.20522447 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.207047054 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.208388822 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.207251048 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.208388917 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.206598749 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.206613207 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.206099222 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.207902667 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.211721576 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.206504729 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.207548107 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.208273015 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.205790461 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.2070713 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.206547101 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.207796097 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.207630098 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.208364453 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.208755126 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.211369639 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.207733475 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.21912611 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.232127076 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.207634386 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.208514642 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.207334469 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.210667417 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.210474414 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.219447407 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.215509793 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.210619966 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.209109486 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.209477481 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.207950693 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.209193796 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.208320795 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.208283105 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.209706084 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.206695254 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.220145148 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232207581 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.215100968 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.21025583 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.211053257 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.212399648 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.209210772 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.209701141 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.209848335 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.209922865 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.210208761 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.214061318 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.211404491 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.209978104 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.212304184 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.217776163 seconds)
  done (took 713.133185797 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.209835364 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208848044 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.207908715 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.208129069 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20854639 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208411598 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.208475437 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.209046878 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.207578775 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.207980182 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.208727283 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.209919403 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.209961334 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.210264079 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.209993429 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.210191438 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.210341078 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.209638043 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.209357436 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.209790445 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.206706049 seconds)
  done (took 26.508219955 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.212638509 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.209426802 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.209325797 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.212482066 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210366718 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.21284311 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.209904393 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212646616 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.211435958 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209352143 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.213447502 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.212715775 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.210147112 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.210494424 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211293306 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213243546 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.214075382 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.210906654 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.214590234 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.211240152 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21377529 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.211420497 seconds)
  done (took 27.776527923 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.21317106 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.213329782 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.214686733 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.212142116 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.214453064 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.212037694 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.214287398 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.214079218 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.213930608 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.214350722 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.214777052 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.214477834 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.220150026 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.220640046 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.215147699 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.216289728 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.214597642 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.217818435 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.213421595 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.212924021 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.219368021 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.230508131 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.212386436 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.212502386 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.215012629 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.213687105 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.213525235 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.215327848 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.216089424 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.218194119 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.213797011 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.21340704 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.217443993 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.215646207 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.217293801 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.218817827 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.214860542 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.211811242 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.214160916 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.223774242 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.235298921 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.216540887 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.221168182 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.234803814 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.217455293 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.21894968 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.223071062 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.212793728 seconds)
  done (took 59.525790579 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.799864268 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.825420149 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.818687143 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.82279303 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.820511291 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.817986881 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.825491104 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.822988132 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.816037366 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.814841896 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.811734106 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.813944566 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.815710416 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.818215637 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.815176532 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.813094296 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.814257442 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.81404612 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.825153304 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.824214575 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.813433532 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.821493204 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.817894625 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.821921557 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.814579645 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.817983778 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.824533897 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.825414339 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.824545713 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.819950937 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.817269375 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.82451527 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.823670741 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.814120826 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.821418035 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.816404747 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.814824258 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.813916828 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.820352405 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.816818855 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.819873259 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.820939264 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.825328139 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.825051246 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.829606006 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.8160527 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.823015161 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.815663609 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.818505107 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.817309125 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.824591899 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.82016102 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.822515202 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.826679259 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.817071582 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.824918714 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.819929806 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.82238563 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.816424099 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.815532691 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.819528106 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.827308432 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.821422287 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.817572642 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.824767498 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.818827983 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.820266439 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.829145964 seconds)
  done (took 124.860720323 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.21984022 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.220795421 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219710195 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220324694 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.21883218 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.219375847 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.219611663 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.220165369 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.22031138 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.220075631 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219071261 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.220817988 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.220047326 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.219872859 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.219954273 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.220244944 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.220763205 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221788069 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.221294643 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.221913865 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.21895679 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.220834654 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.221672535 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.221718611 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.221716698 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.220657568 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.222330811 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.222396307 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220989038 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.2231642 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.221969393 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.223294898 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.22190049 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.22057286 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.220449986 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.221837399 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.221450809 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2232 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.222670153 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.222734726 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.222425284 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221344588 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222024187 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.223434526 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223512766 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.222788831 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.223660673 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.223968628 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.222750946 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.224463436 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.224551271 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.223058484 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.222846252 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.222924297 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.222501399 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.224574652 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221584541 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.222949993 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223117427 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.221408053 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224520462 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.223025797 seconds)
  done (took 76.87534696 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226134412 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.223148903 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.219561961 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.220707019 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22327645 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.221686649 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222992572 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.22303204 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.224580181 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.222702346 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224663085 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220747122 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22155491 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223156602 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.222314875 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223633564 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220953256 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221547141 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224199169 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219657885 seconds)
  done (took 25.577617919 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.222687619 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.223866984 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.221631716 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.223020686 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.223415156 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.222381529 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.221794122 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224328119 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220697837 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223592889 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.225046258 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.224124972 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222703133 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.222505678 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.225876412 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.22311629 seconds)
  done (took 20.698619438 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.223527044 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.22366023 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.225359042 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.226349854 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.22207181 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.222600998 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.224491743 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.221633736 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.223228136 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.225619425 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.225475783 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.227270951 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.22538376 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.226271648 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.224096513 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.226137325 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.221768452 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.222312465 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.224727625 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.225017919 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.225423851 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.223169153 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.226001177 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.226429304 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.22261949 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.222760847 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.222437589 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.223993337 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.222515266 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.226150854 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.223366825 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.225225729 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.224154134 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.224466676 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.226430632 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.224479249 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.227354633 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.224770129 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.225012346 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.22703505 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.227640114 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.22512463 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.226174513 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.226071747 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.224615085 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.227162819 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.225555306 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.225668662 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.224386547 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.226154838 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.227464496 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.228735248 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.229259251 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.229409137 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.227417911 seconds)
  done (took 68.51217495 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227899369 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228480827 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.226877519 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229111602 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.229514717 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.226717842 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.229040834 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.228740044 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225999778 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.228703547 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.226519102 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.229401436 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226860896 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.229460143 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.225990786 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228718895 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.225092399 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.227491267 seconds)
  done (took 23.234313372 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.226202843 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.227717051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.230484649 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.226680242 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.227309055 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.229918504 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227237228 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.231789373 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231672842 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.228939044 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233242112 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.230920488 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229918672 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.231307551 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.229424819 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227594312 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.230996555 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231048462 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.232214215 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228531693 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.231627364 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231453608 seconds)
  done (took 28.18901133 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.229171103 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.229742465 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.23098617 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.250749264 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.248995163 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.229580999 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.230563399 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.230608554 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.250516464 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.279950147 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.274358692 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.252345271 seconds)
  done (took 16.071507421 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228848738 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230769938 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.22912705 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231645315 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231214389 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227894908 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231645958 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229790797 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23220795 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23092738 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228509537 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230968419 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232519484 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230154847 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236110795 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231645121 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228866725 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229052628 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229442816 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231927552 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230012668 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231782122 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230566771 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229594214 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.230322894 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230231888 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232693732 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231352143 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231803962 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231540061 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233329578 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229938398 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232845413 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230856334 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231497966 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234819883 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230619048 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232674668 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23250647 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230702772 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.232871407 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232655665 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233537827 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230969443 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233805569 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231188101 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232805998 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231162518 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230748935 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234066908 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233826663 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232283736 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233561638 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.233598866 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234021537 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.234118699 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232104921 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232629614 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.234756712 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23218224 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231959108 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23489122 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233225028 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23261772 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235346546 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233582372 seconds)
  done (took 82.440863609 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232984975 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.234108516 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233167079 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234347206 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235921275 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233363145 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.232790059 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.233151641 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.232924209 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23500425 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.237039103 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234137686 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23411312 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233768052 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234382477 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233935011 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233690614 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.23407774 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234160788 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236953828 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234365 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234378351 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.233056566 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234308476 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234598508 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.235717569 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.234335786 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233294436 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234751947 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234118573 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234331617 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.234450782 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.235003966 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.234047187 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235215017 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.235093966 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.233486328 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.235338927 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233522087 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236469729 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234450733 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.238130188 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.233991205 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.234050985 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23555275 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.233812706 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23543489 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236251585 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.236461986 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.233931431 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.236006089 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.236146291 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235473744 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.234747042 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235725017 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.236140668 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.235581492 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.236701814 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.235977539 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23853834 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.236436622 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.236407816 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23849088 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235669928 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.235287069 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23709144 seconds)
  done (took 82.648972339 seconds)
done (took 1711.405209327 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.403141435 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.356131702 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.237813506 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.247365993 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.236585432 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.231536297 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.249529361 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.237649934 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.238081838 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.237814142 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.239118484 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.428187804 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.292560761 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.23860843 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.237445827 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.335125176 seconds)
  done (took 25.590586309 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.266538318 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.246358763 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.350096782 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.260036025 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.268264682 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.418862348 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.295058216 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.244683463 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.401383877 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.262913788 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.235139687 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.265022717 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.242986077 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.237583771 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.259574483 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.421724095 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.47821136 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.239302539 seconds)
  done (took 27.536130749 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.655536948 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.233467667 seconds)
  done (took 5.032842776 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.262373587 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.244348247 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.246894766 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.242552914 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.234540775 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.234651311 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.241590325 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.234478115 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.236007746 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.36462147 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.247276075 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.257721284 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.262694687 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.245369074 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.242308815 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.288453345 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.396990995 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.243281754 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.239896241 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.250227461 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.243862262 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.366668599 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.284198918 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.241834006 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.361938206 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.239730572 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.253268695 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.25294186 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.388447123 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.243508734 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.244988019 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.244941919 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.248101696 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.238348721 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.686529322 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.256209731 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.270966017 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.255247898 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.243218842 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.439955129 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.248233714 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.251884396 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.23798167 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.695300241 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.375249401 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.360115836 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.254053287 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.264796484 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.248970887 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.311909023 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.24857365 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.248115612 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.306386649 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.030731106 seconds)
  done (took 80.461990165 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.282387786 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.23862076 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.419914329 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.257197979 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.239324805 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.240623111 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.240415014 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.504485202 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.242144506 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.238781757 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.518138492 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.792643119 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.263113782 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.288407469 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.085396216 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.305013883 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.238672796 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.254847307 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.242399353 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.239623579 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.777296229 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.249869813 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.240614647 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.311106631 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.278568884 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.740077151 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.245732472 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.250645852 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.244489965 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.241842085 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.742175868 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.265921663 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.297574368 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.243211494 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.504422036 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.596974978 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.561223738 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.2435516 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.285133533 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.246305817 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.269952642 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.720115294 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.579170619 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.243855035 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.24237006 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.731510558 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.242042018 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.253010316 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.24989755 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.48766395 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.242627917 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.244046469 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.268080561 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.243226335 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.241539054 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.323486072 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.325143158 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.737179336 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.243369899 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.243440923 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.278481621 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.243179029 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.248739186 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.244707084 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.242155502 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.585196895 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.458034679 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.247618992 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.581245365 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.740014345 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.26159298 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.819295204 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.262114904 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.259536944 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.434751768 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.247906546 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.251517029 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.729221241 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.277383525 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.244480739 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.562075531 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.24735372 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.525461729 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.262941326 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.245593559 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.792707358 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.255527152 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.251409022 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.244793956 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.259762317 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.24469798 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.253534394 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.51222946 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.27262472 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.244206376 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.245869606 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.283776751 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.245913386 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.244652193 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.249281992 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.802688299 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.268639091 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.245386767 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.244450536 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.244944112 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.244223306 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.247065585 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.246414983 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513576903 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.250247349 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.246868099 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.248187393 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.246599907 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.272424639 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.323461278 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.246914169 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.535893675 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.249662746 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.248807308 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.248885899 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.247092685 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.279132111 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.247278251 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.250407073 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.12358945 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.505948311 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.26459965 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.266494617 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.248188633 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.246112818 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.247172669 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.247894524 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.285330864 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.250525258 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019197542 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.268863339 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.250095412 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.245761505 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.25831221 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.246640802 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.25241974 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.2482393 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.538241699 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.511736272 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.444070826 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.249331971 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.247805063 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.011410296 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.289496684 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.427438121 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.263961353 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.248376582 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.501626559 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.452587647 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.246378318 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.248993186 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.24927379 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.504577729 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.247639422 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.565855119 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.77700601 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.263878144 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.248259215 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.02641654 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.969598895 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.254721357 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.249876901 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.526194311 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.266746821 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.24877897 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.2490359 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.250428556 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.249768414 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.253804164 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.255331268 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.249611594 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.249586396 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.571704093 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.439974904 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.266011052 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.253291562 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.739621111 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.262593829 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.249476134 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.250590265 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.254490901 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.249552048 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.316822439 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.252553364 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.274261208 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.252057877 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.251933772 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.754360759 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.250476871 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.251817915 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.442749425 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.932465649 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.268341352 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.250203961 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.265061394 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.146635962 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.768349014 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.272747318 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.541179573 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.251543914 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.289410091 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.251437235 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.269793441 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.764878923 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.253373414 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.268863561 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.890687394 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.267895914 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.66313847 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.253078086 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.251231065 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.840880419 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.268140216 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.258194611 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.2514911 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.253163867 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550630684 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.252397598 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.272656646 seconds)
  done (took 478.262336143 seconds)
done (took 618.024134889 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.253649335 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.258214007 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.245686445 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.25675823 seconds)
  done (took 10.175425945 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.262477199 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.265223297 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.261549354 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.260038845 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.262583342 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.259482597 seconds)
  done (took 8.731951235 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.252252887 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.258389343 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.255914051 seconds)
  done (took 7.927470724 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.453902739 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.275439484 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.566747098 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.27899687 seconds)
  done (took 8.735701187 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.260648548 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.260763173 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.26001724 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.260881387 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.262845256 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.264418985 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.262210562 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.263114324 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.263667079 seconds)
  done (took 12.518530085 seconds)
done (took 49.247283569 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.264249358 seconds)
    (2/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.264755535 seconds)
    (3/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.063959226 seconds)
    (4/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.315810433 seconds)
    (5/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.285327184 seconds)
    (6/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.375952704 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.30744008 seconds)
    (8/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.341985066 seconds)
    (9/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.269383478 seconds)
    (10/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.305758053 seconds)
    (11/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.251941671 seconds)
    (12/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.264253985 seconds)
    (13/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.904775996 seconds)
    (14/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.275782278 seconds)
    (15/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.395362545 seconds)
    (16/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.386499869 seconds)
    (17/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.905510246 seconds)
    (18/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.990192259 seconds)
    (19/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.319670161 seconds)
    (20/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.266851349 seconds)
    (21/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.266394844 seconds)
    (22/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.268450314 seconds)
    (23/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.329760013 seconds)
    (24/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.271467593 seconds)
    (25/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.379800695 seconds)
    (26/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.352629623 seconds)
    (27/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.366602399 seconds)
    (28/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.256438516 seconds)
    (29/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.295134732 seconds)
    (30/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.99389663 seconds)
    (31/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.924449922 seconds)
    (32/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.288756661 seconds)
    (33/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.407740906 seconds)
    (34/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.093332601 seconds)
    (35/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.332844064 seconds)
    (36/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.361455494 seconds)
    (37/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.268014097 seconds)
    (38/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.450844787 seconds)
    (39/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.265876532 seconds)
    (40/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.335518457 seconds)
    (41/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.601335434 seconds)
    (42/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.268438728 seconds)
    (43/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.382910302 seconds)
    (44/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.400599209 seconds)
    (45/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.329128907 seconds)
    (46/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.395890731 seconds)
    (47/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.414289932 seconds)
    (48/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.280797149 seconds)
    (49/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.310765228 seconds)
    (50/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.578726625 seconds)
    (51/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.296057226 seconds)
    (52/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.373257871 seconds)
    (53/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.374462301 seconds)
    (54/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.949388946 seconds)
    (55/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.277025754 seconds)
    (56/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.311256006 seconds)
    (57/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.39915194 seconds)
    (58/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.447584851 seconds)
    (59/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.452270072 seconds)
    (60/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.472720892 seconds)
    (61/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.493553215 seconds)
    (62/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.268100764 seconds)
    (63/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.340988907 seconds)
    (64/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.323243229 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.362635406 seconds)
    (66/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.375757714 seconds)
    (67/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.242800669 seconds)
    (68/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.275996278 seconds)
    (69/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.274984064 seconds)
    (70/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.414470837 seconds)
    (71/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.952929311 seconds)
    (72/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.250361197 seconds)
    (73/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.275160263 seconds)
    (74/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.372531845 seconds)
    (75/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.997026088 seconds)
    (76/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.338725821 seconds)
    (77/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.282615316 seconds)
    (78/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.457765915 seconds)
    (79/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.310716863 seconds)
    (80/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.957364556 seconds)
    (81/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.272881664 seconds)
    (82/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.91426545 seconds)
    (83/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.399021884 seconds)
    (84/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.301283637 seconds)
    (85/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.395220323 seconds)
    (86/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.42940115 seconds)
    (87/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.293729459 seconds)
    (88/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.341266403 seconds)
    (89/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.288447532 seconds)
    (90/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.577543081 seconds)
    (91/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.002237023 seconds)
    (92/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.364189016 seconds)
    (93/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.292723021 seconds)
    (94/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.312551158 seconds)
    (95/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.312974519 seconds)
    (96/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.33800147 seconds)
    (97/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.91085404 seconds)
    (98/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.278171884 seconds)
    (99/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.375741178 seconds)
    (100/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.285678258 seconds)
    (101/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.286565952 seconds)
    (102/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.336986208 seconds)
    (103/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.361017606 seconds)
    (104/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.274192863 seconds)
    (105/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.451684538 seconds)
    (106/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.32415601 seconds)
    (107/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.261510262 seconds)
    (108/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.278095216 seconds)
    (109/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.272359411 seconds)
    (110/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.267387391 seconds)
    (111/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.281141368 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.324826168 seconds)
    (113/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.256209711 seconds)
    (114/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.287345858 seconds)
    (115/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.399562312 seconds)
    (116/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.373249055 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.333779673 seconds)
    (118/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.548461944 seconds)
    (119/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.462035627 seconds)
    (120/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.33116008 seconds)
    (121/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.262687263 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.372481545 seconds)
    (123/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.371247101 seconds)
    (124/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.330165684 seconds)
    (125/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.293152357 seconds)
    (126/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.909703086 seconds)
    (127/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.416538468 seconds)
    (128/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.347691824 seconds)
    (129/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.278681807 seconds)
    (130/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.434151431 seconds)
    (131/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.362669323 seconds)
    (132/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.408280611 seconds)
    (133/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.357697827 seconds)
    (134/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.282070875 seconds)
    (135/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.904548886 seconds)
    (136/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.341899168 seconds)
    (137/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.340846675 seconds)
    (138/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.404004423 seconds)
    (139/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.277321013 seconds)
    (140/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.257401536 seconds)
    (141/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.363222071 seconds)
    (142/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.2506752 seconds)
    (143/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.4485657 seconds)
    (144/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.137917957 seconds)
    (145/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.306819701 seconds)
    (146/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.315092572 seconds)
    (147/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.338082425 seconds)
    (148/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.302697839 seconds)
    (149/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.343593115 seconds)
    (150/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.279101905 seconds)
    (151/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.408030418 seconds)
    (152/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.359212159 seconds)
    (153/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.287828266 seconds)
    (154/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.314227775 seconds)
    (155/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.459997645 seconds)
    (156/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.337060354 seconds)
    (157/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.313243378 seconds)
    (158/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.347611572 seconds)
    (159/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.969340557 seconds)
    (160/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.408675003 seconds)
    (161/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.329297769 seconds)
    (162/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.003647137 seconds)
    (163/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.378939587 seconds)
    (164/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.25270932 seconds)
    (165/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.280379593 seconds)
    (166/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.336692662 seconds)
    (167/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.271126753 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.278043522 seconds)
    (169/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.331132717 seconds)
    (170/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.008071648 seconds)
    (171/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.350878039 seconds)
    (172/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.413577965 seconds)
    (173/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.027986272 seconds)
    (174/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.37782689 seconds)
    (175/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.449599568 seconds)
    (176/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.40720972 seconds)
    (177/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.404733602 seconds)
    (178/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.298684138 seconds)
    (179/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.133051873 seconds)
    (180/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.377658705 seconds)
    (181/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.254698565 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.32663922 seconds)
    (183/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.292126493 seconds)
    (184/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.279920465 seconds)
    (185/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.285253147 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.365449814 seconds)
    (187/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.999211753 seconds)
    (188/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.287644407 seconds)
    (189/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.450291902 seconds)
    (190/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.369872989 seconds)
    (191/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.321593748 seconds)
    (192/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.311089097 seconds)
    (193/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.46253007 seconds)
    (194/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.354084501 seconds)
    (195/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.360219693 seconds)
    (196/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.312851099 seconds)
    (197/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.256044988 seconds)
    (198/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.305517596 seconds)
    (199/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.34256602 seconds)
    (200/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.322435039 seconds)
    (201/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.393137499 seconds)
    (202/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.255604711 seconds)
    (203/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.494788168 seconds)
    (204/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.350716185 seconds)
    (205/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.320138531 seconds)
    (206/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.281127129 seconds)
    (207/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.299755818 seconds)
    (208/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.369276476 seconds)
    (209/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.309260549 seconds)
    (210/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.287324425 seconds)
    (211/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.086119978 seconds)
    (212/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.279289067 seconds)
    (213/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.451964876 seconds)
    (214/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.343626105 seconds)
    (215/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.254544259 seconds)
    (216/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.155872872 seconds)
    (217/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.300648507 seconds)
    (218/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.27417351 seconds)
    (219/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.258829162 seconds)
    (220/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.471955752 seconds)
    (221/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.469396077 seconds)
    (222/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.282458957 seconds)
    (223/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.256535161 seconds)
    (224/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.922164339 seconds)
  done (took 352.116423282 seconds)
done (took 353.27494387 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.322293497 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.453260001 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.276692368 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.277628221 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.321913339 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.280753351 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.311959232 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.295816235 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.280462167 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.279909725 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.278944148 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.28360562 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.289766018 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.313739985 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.392358871 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.285002144 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.279478474 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.279322444 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.317476221 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.336278507 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.321494271 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.321807617 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.29177529 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.277997439 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.325530933 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.32497015 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.283743062 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.268013513 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.29428012 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.319333999 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.269308676 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.284483419 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.329610924 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.328983375 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.321079819 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.280089945 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.322709675 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.454072342 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.313298108 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.314282302 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.282021835 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.328984938 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.291357822 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.289187241 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.331110545 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.291467485 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.327542792 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.402229905 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.271703556 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.27146068 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3521355 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.34142603 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.285020483 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.285197821 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.28369767 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.402692651 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.281517779 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.328457752 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.284464984 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.324477246 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.396458503 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.328211235 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.3425394 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.328038937 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.283019758 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.292998233 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.282600964 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.33948857 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.28099812 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.324476065 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.324314359 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.287917495 seconds)
done (took 103.648446435 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.402294082 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.278363731 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.440347054 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.281568014 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.442616585 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.423736812 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.278636835 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.280421598 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.278316314 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.071186471 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.280339549 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.280560529 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.281413078 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.279303056 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.408822198 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.282779832 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.280210008 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.96903699 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.282032849 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.422703164 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.276181359 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.280861415 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.282525183 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.075025534 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.281053002 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.278212972 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.420652315 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.283116487 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.974624531 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.278673938 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.280056959 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.974499328 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.424255021 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.298847045 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.293578028 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.290255373 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.444445294 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.300185689 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.40259867 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.401938257 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.443337715 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.324143171 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.279801382 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.283818735 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.285980921 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.284542634 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.283191358 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.310531487 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.281939391 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.281690122 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.972539232 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.293564343 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.282635018 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.28273125 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.283359009 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.314330478 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.284147223 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.286727128 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.425891731 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.286100695 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.407616612 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.075194405 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.074050679 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.285950159 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.281697255 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.283291463 seconds)
  done (took 104.846944479 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.349498952 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.361307339 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.393123206 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.301156017 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.337936635 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.398659232 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.301440415 seconds)
  done (took 10.624918591 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.291653048 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.287398972 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.335334697 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.334777296 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.285464414 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.497791203 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.287080883 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.296646756 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.283525097 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.362556649 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.286369587 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.28729846 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.293883187 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.283682906 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.333935945 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.298084574 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.403018258 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.28998502 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.289831201 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.440617033 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.285780542 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.295900027 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.36003624 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.300969656 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.287353204 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.294530209 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.238137179 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.287914826 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284796936 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.287398241 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.286995759 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.410044419 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.289038777 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.28711653 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.285054634 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.446197617 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.289197185 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.285601299 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.288530141 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.287735684 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.288625518 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.28893599 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.28998755 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.285940133 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.289748827 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.31097011 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.289378344 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.29004827 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.290325465 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.289942629 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.361528168 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.289887852 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.286851328 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.285310245 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.366784586 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.295988502 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.290310139 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.288566723 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.292001954 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.28727523 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.444484573 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.338852295 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.290366394 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.338818413 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.291358717 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.291240343 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.289882133 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.292222375 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.382310741 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.290575489 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.339813216 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.288735311 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.511336008 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.313964483 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.292338138 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.292870907 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.294320315 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.291539214 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.290378364 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.298726134 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.288015211 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.290870366 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.299651596 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.288982215 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.289720095 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.478139216 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.448404597 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.289469047 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.30331317 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.299297539 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.289195132 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.365720646 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.292446887 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.28939166 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.343229948 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.406920599 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.369359446 seconds)
  done (took 133.79021479 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.304694118 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.303333735 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.296496406 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.319934454 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.294076345 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.292976215 seconds)
  done (took 9.000952333 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.295905893 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.293320259 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.293636965 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.292172203 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.29301254 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.293414439 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.293833284 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.294350845 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.295928773 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.293857775 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.293024736 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.294027355 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.296195288 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.295365002 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.294913689 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.293828118 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.293988972 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.293180446 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.294561201 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292834351 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.29635119 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.295057377 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.29564829 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.296078909 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.297987782 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.295169542 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.312838342 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.296232979 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.296376731 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.301819183 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.314812545 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.294982039 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.296503216 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.299561508 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.300908214 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.297721015 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.299637513 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.297309009 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.29318692 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.295990807 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.298035658 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.297074874 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.298370859 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.298400994 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.297587415 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.302622437 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.303046577 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.316401207 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.297369671 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.29813974 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.298782825 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.296958756 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.296092538 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.29804354 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.299848311 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316482288 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.302438853 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.297018293 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.297572109 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.298871167 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.297539312 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.298111272 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.297935922 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.301612412 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.295345131 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.299159599 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.299492507 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.300743728 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.300938637 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.29876867 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.298366317 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.296675694 seconds)
  done (took 95.642429827 seconds)
done (took 355.082059741 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.05037576 seconds)
  done (took 4.24351064 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.431985021 seconds)
  done (took 3.628170662 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.699549666 seconds)
  done (took 21.900585401 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.303145681 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.399499256 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.292725323 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.298526589 seconds)
  done (took 10.486908954 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.546713773 seconds)
  done (took 3.740945277 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.296703755 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.291105702 seconds)
  done (took 5.784527817 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.580352994 seconds)
  done (took 3.775110351 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.820090722 seconds)
  done (took 4.021394021 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.315333579 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.307888487 seconds)
  done (took 5.823671484 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.278941649 seconds)
  done (took 3.472961241 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.393358428 seconds)
  done (took 38.590126207 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.298939747 seconds)
  done (took 3.497067839 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.327141165 seconds)
  done (took 3.521934167 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.710570171 seconds)
  done (took 5.905899384 seconds)
done (took 119.585009526 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.291755178 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.299312462 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.291244371 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.293408476 seconds)
  done (took 10.371405717 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.352173316 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.352996738 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.352465861 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.351763797 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.351829948 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.351678079 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.325969059 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.324945615 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.351741867 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.350454385 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.352589722 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.353002731 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.353279682 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.32590571 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.351553868 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.357066046 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.352923562 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.352243988 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.329260145 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.353487501 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.302160965 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.352790711 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.353031534 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.301681847 seconds)
  done (took 33.454395801 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.793786048 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.371913717 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.45494569 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.352041461 seconds)
  done (took 7.16865743 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.379617664 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.379400758 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.392701301 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.429357094 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.444117446 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.392270154 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.327073409 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.32442808 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.309874062 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.379457084 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.431867439 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.37137256 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.458147629 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.301361769 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.509537312 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.301384483 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.301319584 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.381804386 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.430991672 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.444789609 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.302620673 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.380135328 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.379768982 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.372287091 seconds)
  done (took 34.32417474 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.309507983 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.316886756 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.302415384 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.316263055 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.303915195 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.302837501 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.304955854 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.309181228 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.300826653 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.301958495 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.301717888 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.316488864 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.304649477 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.30226975 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.310475748 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.305175786 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.30993826 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.306084346 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.303570456 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.309301711 seconds)
  done (took 27.337466294 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.296113991 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.296726886 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.648714765 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.55389685 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.298315924 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.302019782 seconds)
  done (took 13.595284651 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.370697588 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.524611614 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.303844916 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.642268158 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.730623606 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.307894467 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.304648644 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.541826156 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.843667241 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.822605764 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.36452661 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.376822226 seconds)
  done (took 19.336703913 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.304131009 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.304402045 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.304642185 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.318061892 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.356734812 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.32544163 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.311495958 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.297256974 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.361163249 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.375515809 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.325269878 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.35781634 seconds)
  done (took 21.143359656 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395723595 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300101655 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.300135137 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32917192 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30356772 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144124023 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.32292441 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.99151413 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.321538008 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.575654208 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300624401 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402985666 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.556334299 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300492589 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323840424 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.285900356 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531482071 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777635185 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303259912 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299520465 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339063336 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304382401 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305004142 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.511947883 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308396911 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301074866 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.562423647 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.302049308 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577470589 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.321127602 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313073981 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302332136 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577033088 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939450233 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419515856 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503422298 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317865521 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309261507 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.305864987 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.306268791 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308381435 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.308226905 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312774916 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302005399 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302901934 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305661232 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002137988 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.327647001 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.299866549 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303439939 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552225555 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406147031 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.305678259 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30304364 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368231172 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307080569 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.310384372 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433859562 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906050381 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305751789 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310723402 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.308072005 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.324610281 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309833558 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905394214 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.309933922 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.307811819 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.309181543 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30448583 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304908597 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326874121 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304401214 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.329817465 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303482333 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005280418 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310522833 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310885405 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841960034 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317645237 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.31033376 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539802968 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308243222 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308228013 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.308278738 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.309375598 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998431033 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317645029 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.294386244 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379237605 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.016985883 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.53131583 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336179922 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340841736 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.531592599 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.293735519 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309202104 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.318744501 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317269019 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332230262 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.002825843 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327891267 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.312421685 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568226053 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.521520431 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309636138 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.301761022 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.770120004 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.338678529 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.3289157 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310082916 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.52233223 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.885341321 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33120346 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315363417 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335146851 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31093468 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035214271 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324524478 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.418233139 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310887151 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583274788 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.083185221 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312329746 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379528824 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315670963 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.311487745 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316227875 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31910312 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313391954 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.505276011 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338353946 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.327395848 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.312229277 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311887581 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.318138797 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324524056 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.320186439 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.534964353 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324825273 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595136085 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311954101 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31371347 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312609111 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.53696721 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.310518882 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.671409593 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575464202 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316324645 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.320724604 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.328483301 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332034999 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417678411 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336235315 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.315756498 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.574260363 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.319062519 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.317749947 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323933182 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.322622859 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318839517 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.320765217 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316969403 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89047373 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296696457 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321582231 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204615451 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.328869176 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383008007 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.322516667 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.519904174 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.319593346 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335117326 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.324355999 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.311787283 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562495783 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.326755465 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.320136923 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395910273 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.771429178 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904184175 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.33387419 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.314539477 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.313247662 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.313136616 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316367659 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316378148 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315788125 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520171772 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336199535 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320665401 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.896980154 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323276161 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.321462491 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.328233193 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.329913914 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.322753271 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316936895 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.314077982 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331305156 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32747912 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.333910752 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49141812 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.332553643 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317946792 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.83475119 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.324450537 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.31874321 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315555858 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352385654 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.324443599 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110072419 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580641519 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317769222 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573187235 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324809701 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.340095915 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.316980817 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315716583 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345436338 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.332824268 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350752606 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.328961918 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.322922663 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325777842 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905343972 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043341252 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846760862 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331735168 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.328763823 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323879793 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.018108313 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336535304 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31973314 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549252093 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.016575291 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336847156 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781804896 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.335673708 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.069042327 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572191284 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.555311913 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32990961 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.321106408 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58015331 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538651118 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3545664 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332453843 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324474941 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.30577251 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860983162 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346823624 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406962473 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022467526 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338258894 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.325522426 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.394870237 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.32458882 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710866471 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342345917 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322225938 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.330709574 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.330865953 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116183451 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3277538 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321045586 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923674596 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328748199 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.786251495 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340840425 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.528176351 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.338399743 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.326125258 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.318748161 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.344825377 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.583142983 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574598731 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327166958 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.321783962 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855401622 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.198880159 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.328535769 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323101483 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053716891 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323419081 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608152584 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.340842209 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.331443848 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331316082 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323675028 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324729029 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.321858111 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.329115909 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298523316 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806453904 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.328631734 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33140195 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341008632 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329594267 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.579672124 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.337964861 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.900285158 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559621097 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342730406 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351990617 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.328781277 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326902205 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.316579042 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323673807 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323814534 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376282386 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549102309 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.329397955 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.309897911 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356688703 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540046921 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326121393 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.332430101 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564929894 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.327649573 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.342548234 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070021031 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363630958 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33035839 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331682452 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32682943 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376298647 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395745903 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.53408254 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.342500358 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.337006178 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717223739 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350416422 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333678231 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.341789442 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4222274 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325829231 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.352239006 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.105525679 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903443106 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056194172 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.911865132 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.586845686 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333885502 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330983907 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327059633 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490521879 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327788886 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600979149 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328633924 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.327103911 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355333051 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331322132 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37713866 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543598599 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601989505 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32826583 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342432448 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334077625 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.327603639 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337895378 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.539744431 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811202333 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877057896 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331041749 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.333637657 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.033961563 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620245705 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32779305 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329790473 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329617227 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.349554039 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.351832875 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.335456071 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328724207 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495598186 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.580917134 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981203477 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.358080166 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.357485334 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.848514451 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340369243 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.5888347 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327637935 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.544074514 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910262335 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.019211744 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601368932 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40039811 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53777573 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.335689718 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492430578 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.332805997 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.329988715 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330198303 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33055475 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.328291885 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.340862933 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914198197 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60225513 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.335855167 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.332782883 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362901781 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.341015423 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.553994385 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036135992 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.556153853 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.340695073 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33631295 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331892371 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914705101 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.591539643 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338436896 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.336153147 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56422437 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.339958931 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357136111 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.84959462 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.329471792 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873106402 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.304713273 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35502808 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334118122 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.029536163 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917715277 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.338550203 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835182282 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334469202 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333982628 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612379838 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.338537669 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344025318 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615674456 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.339140819 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.340931578 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547437181 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.915623129 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09219687 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.338429752 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360684617 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.360564468 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334611689 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388330611 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357665422 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336777098 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.740619876 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354602884 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335524154 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345643995 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.34201476 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341181516 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.340615833 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334970843 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.342825279 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.328285453 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.328060887 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.348605699 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469425668 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882426279 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355550074 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.006280105 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.661809617 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.591774531 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34261371 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.326074546 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.340590982 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336946205 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336671819 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336601917 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.345616173 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884473791 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.349330244 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.35272512 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.341793432 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.338655428 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547337688 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.349211429 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551788047 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350519118 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358027086 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.321382339 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337224344 seconds)
  done (took 950.011378056 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.376818012 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.376088669 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.373952248 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.451970766 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.392494955 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.402877857 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.387334247 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.434651781 seconds)
  done (took 20.432342426 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.339152623 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.34745086 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.348622252 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.348068378 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.347346434 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.802708001 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.362982138 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.347242849 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.362494734 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.34058836 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.348434118 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.324518011 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.35348578 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.349904805 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.343968568 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.350084893 seconds)
  done (took 32.260858223 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.23467222 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.455060698 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.09222582 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.349993016 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.367024999 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.338963083 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.530526904 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.365454122 seconds)
  done (took 25.971898727 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.350306527 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.352206644 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.350939085 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.350507513 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.352187091 seconds)
  done (took 7.993541229 seconds)
done (took 1204.596234351 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.343927154 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.346451677 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.342667031 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.347018318 seconds)
  done (took 6.619270466 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.324434313 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.325773772 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.326569798 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.339462993 seconds)
  done (took 9.554382401 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.021913552 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.950197864 seconds)
  done (took 5.210990819 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.831243911 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.827383152 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.829842621 seconds)
  done (took 6.727756268 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.653511255 seconds)
  done (took 2.892370348 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.244345807 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.345523119 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.019767968 seconds)
  done (took 7.849314445 seconds)
done (took 40.091637353 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.346157585 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.679972805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.495727539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.347521926 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.510130663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.498478654 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.148429202 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.340837868 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.355425658 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.350928766 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.340414383 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.517196895 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.064779456 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.686695559 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.065134062 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.590063412 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.501582248 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.341854594 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.342976057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.340691324 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.150400619 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.35360387 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.351924535 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.355239444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.504526658 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.486073346 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.352712254 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.58896655 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.340890303 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.358242829 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.50269977 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.350127936 seconds)
  done (took 81.801747799 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.348215016 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.341431285 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.353527145 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.343234742 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.355003865 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.351687217 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.344905673 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.343136042 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.343557965 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.371135568 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.345458779 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.355152947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.345589393 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.342363655 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.363627502 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.355461837 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.345064292 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.355537114 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.342573419 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.360179091 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.342901672 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.34291499 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.344002608 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.351650172 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.343872461 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.342868238 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.361291077 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.344312539 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.343120298 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.344679272 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.343211613 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.369383745 seconds)
  done (took 76.425488672 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.344206291 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.345011165 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.346007088 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.357052487 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.351993324 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.345560785 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.347551492 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.344575124 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.352719408 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.346569487 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.345387366 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.374232869 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.347308266 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.346264745 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.348620132 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.34671166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.369352304 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.347107043 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.344510464 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.345339758 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.365470027 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.34586945 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.344725252 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.345051075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.349494381 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.345030191 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.347123214 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.352547719 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.349536297 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.345707989 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.347941204 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.346473612 seconds)
  done (took 76.425280116 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.625310746 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.353129481 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.357409485 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.348249061 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.357045463 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.353847121 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.347363568 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.634232398 seconds)
  done (took 14.621628826 seconds)
done (took 250.511439933 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.347031991 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.848893154 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.392844634 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.35403284 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.377137237 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.376157528 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.567302832 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.389276046 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.568806858 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.368686269 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.375255333 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.355702918 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.126263032 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.499061094 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.187413607 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.30332972 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.216893691 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.362335753 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.922421358 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.623083155 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.379876776 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.353590917 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.177457357 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.23447993 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.338823986 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.438599774 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.452094835 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.561882445 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.511377168 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.432598864 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.87156316 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.35576763 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.373071307 seconds)
  done (took 63.289408138 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.354486016 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.480231904 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.356949597 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.3572415 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.479370807 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.375774286 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.357346692 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.355830571 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.358459167 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.358097006 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.356824009 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.358946273 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.357758404 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.407536607 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.485749952 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.371168495 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.356900059 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.476082424 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.357978396 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.350216033 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.403945878 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.358858052 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.358466086 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.408565376 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.36111411 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.35959625 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.48265377 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.378965865 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.359501322 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.475127225 seconds)
  done (took 42.908605641 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.360165729 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.950828622 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.092202206 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.371723206 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.358979688 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.364913859 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.636079648 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.366020487 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.362104012 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.363349871 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.865115359 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.363319958 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.395102618 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.116233747 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.367621448 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.36003773 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.361022879 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.361149162 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.963180045 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.371217347 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.656427794 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.367222947 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.639604839 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.376513829 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.382798051 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.359312466 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.367323655 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.195273122 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.364192989 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.862851813 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.129172521 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.638110724 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.126201331 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.102296541 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.130067546 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.367850068 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.362885346 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.868106634 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.369283749 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.361706612 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.638697013 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.367039383 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.098887787 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.045317113 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.384821563 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.361802552 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.213448151 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.873940152 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.60258758 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.37560836 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.122303424 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.372712696 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.363059841 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.365303769 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.595302135 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.366202799 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.363096764 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.205906457 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.367759289 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.639605545 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.370401431 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.364412421 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.956509348 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.368891348 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.952958214 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.370845092 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.372520166 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.383514949 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.102447624 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.37365801 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.059689778 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.385390329 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.364063148 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.866140769 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.961370071 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.271354096 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.371251232 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.962586231 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.156825959 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.644702851 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.374188908 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.171727567 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.648012996 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.373754231 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.366428676 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.368245058 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.365946879 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.443973626 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.639972007 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.003157533 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.060783556 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.225868812 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.646346379 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.380815257 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.365142424 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.204342088 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.366796379 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.366369299 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.098130644 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.065083111 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.388778243 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.374244702 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.065137134 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.389732466 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.645959282 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.376565221 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.110398183 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.373564167 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.442872554 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.367803453 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.374387647 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.388940083 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.645948677 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.374826772 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.366887949 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.046232138 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.906735831 seconds)
  done (took 191.589668205 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.361891144 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.376253806 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.370520795 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.359517004 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.360837686 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.369035227 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.361129003 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.360244257 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.366730791 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.360902788 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.361451741 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.369713954 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.370356583 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.361915568 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.361275895 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.363942235 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.362240261 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.36764772 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.36206173 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.363069135 seconds)
  done (took 44.54853342 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.369212989 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.915625017 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.885215193 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.376504579 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.3679326 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.369351708 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.422485244 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.369269838 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.367720058 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.660850079 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.539677738 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.391785392 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.366473535 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.367411301 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.880611425 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.36308767 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.659028241 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.908763528 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.370823241 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.915125022 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.36286271 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.37063765 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.368973434 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.916211729 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.660778715 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.643773435 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.425134121 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.911960946 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.366849566 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.364798837 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.907158605 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.367101506 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.367956795 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.901816848 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.384786571 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.381416673 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.365628313 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.422774457 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.429270362 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.661892638 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.003304369 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.64857602 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.384602256 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.5385722 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.370551658 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.356044553 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.914375776 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.391231225 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.357263962 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.367107996 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.373497599 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.881237376 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.391184943 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.882802422 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.388840681 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.36963041 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.916372659 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.888745208 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.905416261 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.539084162 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.391370822 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.647086103 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.372248367 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.918047185 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.390538125 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.368973766 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.370670939 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.535708635 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.939144838 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.651265255 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.663317553 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.66096624 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.370787431 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.427148468 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.385515019 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.737932724 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.425237715 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.781627219 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.662642396 seconds)
  done (took 124.279753812 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.629074148 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.481619766 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.767878878 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.967522271 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.364660213 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.489046512 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.479611227 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.623678898 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.376264283 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.445943861 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.992482475 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.46333352 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.087107528 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.443326216 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.464751434 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.512947489 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.747736218 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.340987711 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.0334061 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.983737687 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.374855996 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.494402622 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.915745031 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.595788909 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.371814563 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.919698285 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.289304933 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.031931598 seconds)
  done (took 52.949880986 seconds)
done (took 520.81054275 seconds)
SAVING RESULT...
DONE!
