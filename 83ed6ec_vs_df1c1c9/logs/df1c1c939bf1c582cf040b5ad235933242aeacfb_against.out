cset: moving following pidspec: 30431
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.176843619 seconds)
loading group "string"... done (took 0.450493902 seconds)
loading group "linalg"... done (took 10.29492374 seconds)
loading group "parallel"... done (took 0.22336416 seconds)
loading group "find"... done (took 1.891215693 seconds)
loading group "tuple"... done (took 1.994217377 seconds)
loading group "dates"... done (took 1.340194346 seconds)
loading group "micro"... done (took 0.457168904 seconds)
loading group "io"... done (took 0.439974354 seconds)
loading group "scalar"... done (took 45.820234957 seconds)
loading group "sparse"... done (took 12.876269923 seconds)
loading group "broadcast"... done (took 1.058210636 seconds)
loading group "union"... done (took 8.896497237 seconds)
loading group "simd"... done (took 2.033633305 seconds)
loading group "random"... done (took 8.360697545 seconds)
loading group "problem"... done (took 2.388660411 seconds)
loading group "array"... done (took 23.643101911 seconds)
loading group "misc"... done (took 0.887602325 seconds)
loading group "sort"... done (took 3.29217664 seconds)
loading group "collection"... done (took 14.45738845 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.602743741 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.110808145 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.177848331 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.173171082 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.238695369 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13414279 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.138837926 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.101592863 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.792738029 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180805884 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123850203 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.360393675 seconds)
done (took 5.999866338 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.2329057 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.082613252 seconds)
    (2/2) benchmarking "String"...
    done (took 0.147160686 seconds)
  done (took 1.07328848 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.092137484 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081660688 seconds)
  done (took 1.021185617 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.082303111 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.335624763 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08274173 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.47443188 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.143113435 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083986529 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082812505 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.08266059 seconds)
  done (took 2.131501774 seconds)
done (took 5.38881853 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.381940936 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.83642401 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.468035819 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.138081784 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.27577438 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.232810582 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.201495913 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.216775496 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.089348451 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085987487 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174648398 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.431882922 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.295284478 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.758582086 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.097694931 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.101716813 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.132983699 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.771684594 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.084747327 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133478267 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.368203651 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.117050738 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.105822862 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.145704447 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.191916142 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107570754 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.1590301 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.084243103 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.683017252 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.126658467 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.205232859 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.087149542 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157497995 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.128501687 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.180765745 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.117052189 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680350505 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.192921055 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.143702649 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.087396028 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.692329972 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.102723145 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.171131042 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.096806582 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088043563 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.166717462 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.116941336 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.082948559 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.107489851 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085316119 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166774346 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.492035681 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.111199674 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.187626302 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.099291181 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.700180165 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.104676388 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.255367154 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.132524499 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.110971869 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.086480343 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.084029943 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155828866 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.089076813 seconds)
  done (took 19.344037065 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147309922 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.141070406 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.086456248 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.132473114 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097841609 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.082940645 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083186986 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08740259 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090107859 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144698896 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089370678 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.151292876 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.086163174 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082868424 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.148871058 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.205539708 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.090965043 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.097976238 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086346462 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105337648 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112964552 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.088682198 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084362805 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.087312046 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.141627728 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.214543864 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114511231 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115432421 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.084510975 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097777971 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133642956 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131388569 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.083503962 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083630233 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122732315 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126077468 seconds)
  done (took 4.929581137 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190144731 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102181337 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168079406 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.136533374 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112617575 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.152063634 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139969564 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.246738788 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.668828391 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.16195838 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167713698 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134300153 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099274593 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098387298 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085604071 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083921655 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.552748966 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.142003853 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111559854 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167951298 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084390408 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086417547 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.389303032 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084417395 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082662305 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08304338 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.175289713 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087303775 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161336143 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100601157 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.565004729 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.103831168 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081526386 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128508693 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213107559 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091981783 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120925622 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084490447 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083413096 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.084806349 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088159155 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083432926 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108989461 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117272067 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.126584636 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099895447 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083918544 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171276675 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083645442 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.091061984 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.841928633 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.178366885 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.151808377 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.082619333 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.164182926 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103017113 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083698704 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083239404 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.178220607 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.095945228 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084630651 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083841741 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084485962 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084680672 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08622849 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083150023 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.338553355 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087037581 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.102991957 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087781936 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083736502 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.358237746 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089632169 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088037325 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102393206 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084492859 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082615879 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081808753 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.084632272 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083973427 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10607588 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102483122 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08442007 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146236087 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.084668002 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10564679 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112775201 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087049075 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083782541 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129596059 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084949726 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086536289 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.157389152 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081628428 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.104375922 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099983956 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.135060937 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083275068 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.17646792 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08444717 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104952512 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.089354636 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127343073 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083738508 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082441604 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083396999 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089653421 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083217682 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.083046969 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08334718 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14692452 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085748089 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.088082278 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084976126 seconds)
  done (took 21.33473145 seconds)
done (took 46.457893556 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.338541133 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082939654 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083411828 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.087258554 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083686305 seconds)
  done (took 1.596875251 seconds)
done (took 2.491507725 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.176165819 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102740897 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096874301 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 0.101244536 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.105433964 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.100140861 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081817432 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098010214 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11977712 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098833991 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100236464 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 0.083775274 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097454104 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.100770332 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.10110355 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082963847 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.098777127 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.100189181 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096834556 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 0.105736987 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083604395 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 0.100432062 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083503088 seconds)
  done (took 3.238557213 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096551622 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102674368 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096640068 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095676651 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083353549 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.094936679 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094012794 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105188222 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094697614 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089095375 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083667683 seconds)
  done (took 1.936435238 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096801383 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101142825 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0841329 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094467511 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082939594 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095098719 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095430005 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102062447 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095222079 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089384409 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083591438 seconds)
  done (took 1.923089514 seconds)
done (took 7.996689401 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.446525819 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.682601259 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.151578646 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.20520003 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.243654938 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.179874154 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.281706594 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.165042743 seconds)
  done (took 4.370134128 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.1206173 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.145000099 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088329568 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086751921 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.084956264 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085097395 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08758702 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087439015 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08580225 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.091659459 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086362239 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104823584 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.089198098 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084736054 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085057187 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087876931 seconds)
  done (took 2.452129334 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.130137991 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109955328 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.088235951 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088273755 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089975236 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091224227 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091338492 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087447063 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085803907 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.086955757 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091252916 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105286238 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087884091 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.085622017 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089214826 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109684415 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086373929 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089151134 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105958986 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089434855 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090087918 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.086491032 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087290186 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.087118213 seconds)
  done (took 3.230075951 seconds)
done (took 10.955431766 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.103623894 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085418783 seconds)
  done (took 1.089006803 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.164143458 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156065707 seconds)
  done (took 1.227640053 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.09150032 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084043114 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088727653 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.087891735 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084086177 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084067259 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088563389 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.084414253 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083915366 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083914948 seconds)
  done (took 1.774467714 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088598917 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.086736702 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088214725 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.152832066 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087048869 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084466623 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085077856 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084346509 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084448503 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082917799 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.084600922 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112274403 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084487981 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092188695 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.085132236 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085897216 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086045232 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.085273283 seconds)
  done (took 2.552241258 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.085411817 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.085274622 seconds)
  done (took 1.084447511 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08489764 seconds)
    (2/7) benchmarking "second"...
    done (took 0.08390039 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08730555 seconds)
    (4/7) benchmarking "year"...
    done (took 0.083878966 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.084802506 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083555966 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.084101855 seconds)
  done (took 1.504553334 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.448976126 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.199863374 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.289254059 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102044882 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084012005 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.291748613 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08336057 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083836667 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090448673 seconds)
  done (took 2.622073638 seconds)
done (took 12.765730301 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096609845 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.166724725 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.496073329 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.105961794 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.08482525 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.151388632 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.205328768 seconds)
done (took 2.231640713 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.250996494 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.14062803 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.109149977 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084628064 seconds)
  done (took 1.498445841 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.087852169 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09308564 seconds)
  done (took 1.102827702 seconds)
done (took 3.522241852 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085953627 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085259355 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.084747404 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084329008 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.084258601 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084610063 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.110220973 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084912426 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083543136 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.083889133 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.085961834 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084561747 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084358542 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102758096 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084880753 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084256638 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084689178 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.085027088 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084589586 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084503735 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084436658 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08697098 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.084391985 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.0850227 seconds)
  done (took 3.036401765 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085259685 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084931203 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083794614 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084983751 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.084421537 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083911631 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.084073709 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.084182925 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087073959 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.084408359 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084991319 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084953332 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083394209 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084594873 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101283774 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.086550222 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085009076 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084467993 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084749634 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087810358 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.085107581 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084809712 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.084729716 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083934168 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083931011 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083521224 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084036497 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.08447984 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083972753 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.101167539 seconds)
  done (took 3.503087329 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.092424183 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.081827615 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08526594 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.087389546 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084631541 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084189912 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.081417225 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084268757 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.085920351 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.084368113 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084844072 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087787053 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085589659 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085545285 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.102852658 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086324919 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087902577 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.086419817 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085002045 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.086823717 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085546418 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085302926 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086999169 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.084675912 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084767131 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.082385526 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.085065337 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.084563713 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.102990725 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.085201603 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.085928027 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08633374 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.086017172 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.090886675 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086448877 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.085372755 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085944478 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082799216 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.085988446 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.083484268 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083176992 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.084907912 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085663056 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104750058 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.087932799 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.086445801 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085680571 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08669642 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.085832801 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.086789117 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084815128 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.085426019 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.086654084 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.085910524 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.086161989 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.084588367 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.085193233 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.10163086 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.086485387 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.084966742 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086329379 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084013011 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.086554395 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.086085338 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.090892279 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087064096 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088582684 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.086579776 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.086163747 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086174067 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.087142967 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08845354 seconds)
  done (took 7.18029674 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086900036 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085937034 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085812681 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085517618 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085268291 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087904501 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.084864272 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084443045 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085344945 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085054722 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084537614 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084565337 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084889796 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084651063 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10212655 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086121357 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087678573 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085904623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.085288384 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084864873 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085457124 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085937965 seconds)
  done (took 2.840218507 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088148923 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091044817 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.085712691 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087822742 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090008978 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089925831 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085354361 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08782493 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085130044 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086013626 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085895529 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086558201 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087803843 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088353447 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105224339 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088711834 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088497406 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088735005 seconds)
  done (took 2.538738358 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087075934 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.086285531 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085299095 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.085650327 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086456152 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087632715 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085804537 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.084927017 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084941268 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.087395653 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087105085 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085293549 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085503153 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085528732 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102827678 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085940704 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.086026428 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086216854 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08596646 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085986439 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085747967 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088541291 seconds)
  done (took 2.854701816 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087644117 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.085921405 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086502509 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08702762 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086685648 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.086502553 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085997118 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.086419243 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09018245 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.086352679 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089437943 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085780739 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090141232 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08570278 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104994915 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087203769 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087377054 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086592032 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086494676 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086919615 seconds)
  done (took 2.705140614 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.147551524 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091177489 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088302702 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087934021 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088760885 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.088062963 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088425943 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087766611 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088546733 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08800066 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087845658 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08775241 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109736339 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088277999 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088166498 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087846699 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087897765 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088587149 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087899885 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087845558 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088234304 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088076666 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088293551 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090415083 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08828915 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.088138264 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108160392 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088401227 seconds)
  done (took 3.522734404 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087434945 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085554377 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085649762 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.085980364 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.086469145 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.086124584 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088845387 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.086212008 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086042618 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085770916 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085464909 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.086153493 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08559898 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085990552 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104171514 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.086226401 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086212703 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.088375248 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086294319 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085956627 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086650269 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086275279 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.086016792 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085690102 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085670104 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.086566199 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086117323 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086620069 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089088 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104990085 seconds)
  done (took 3.578581935 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090784685 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089289582 seconds)
  done (took 1.130158748 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.088235052 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086770197 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.086948035 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087759484 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.0870741 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086686015 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.086929025 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089844387 seconds)
  done (took 1.650573351 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.148533092 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.161104047 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086782811 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.091989562 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.159087174 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.158530271 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.120055163 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087422796 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089776355 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096247789 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.147772958 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.087290969 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091374526 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089645142 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089382119 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112063925 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085308038 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090630584 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087886841 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.088146296 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088249661 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092950855 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090681891 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.089562983 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088089129 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.103593345 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.09097759 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08853409 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088563984 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110064883 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089152081 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087200772 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.089726023 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.08687282 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.085408916 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.16037441 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093974216 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090085874 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.098385265 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086037983 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110260668 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.085434994 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090248152 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092712613 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092658957 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086777405 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086330864 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.085032271 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.088464823 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089419256 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.086405295 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088955166 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.085920243 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091525019 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.095128301 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115122497 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086722238 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.08921735 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088385891 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.092113535 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089609258 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089424994 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091413021 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085905988 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091506502 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.092472555 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089415003 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.086051168 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088196039 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.106198529 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095123719 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114960718 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091718552 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086379489 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087260273 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.086709791 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093825921 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088715374 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089033789 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.088534662 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086979432 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088068734 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110014659 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089173836 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090608946 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089778071 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.087061318 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08913588 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.088305685 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096078333 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.087074782 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.085873751 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.088005599 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090481914 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088064047 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087416231 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.106279731 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090692787 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.088224221 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08776081 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087136713 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089606752 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093125034 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087830276 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090281709 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.0919808 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.156510619 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091967602 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.115139136 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.090972158 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088673765 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.091657104 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09233926 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.087905886 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091157097 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089199253 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.088521462 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092275372 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.089022976 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.089218929 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093562273 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095443819 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.088260579 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.106026446 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.092170184 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088160401 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090107583 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08861778 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.086092678 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.085410737 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.088034112 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094409475 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.091032542 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091939771 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089788403 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092106204 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.087548635 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.107600939 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089018529 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093644826 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.09270934 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093250058 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09479804 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093355078 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089597467 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092015487 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090650836 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.089583829 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091628468 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087945313 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.087558106 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108874768 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091769834 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.089059098 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092968207 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090039854 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092029541 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08877813 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089213047 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089438461 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088578626 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.089092713 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087963914 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.089572465 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092760904 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090225333 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.107653968 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.087696128 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09047409 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089724548 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.089173544 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.089354016 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091894355 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.089414198 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.087849509 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.089498601 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.095088056 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096890768 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093394618 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08873507 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111499379 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093522842 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.089333768 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094678284 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088677392 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089542861 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.089109991 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095667472 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091938438 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09031 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090460109 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.09060661 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09434123 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093559229 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.107527029 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.087124964 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087952647 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088648277 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093436818 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089847352 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.089104548 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088283835 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09244538 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090277505 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092988441 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.089070975 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.089779669 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089635084 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110803893 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09333547 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090257882 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09355999 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09231118 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.088287218 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089779022 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089364183 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092097251 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.088290112 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.089101653 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.090815909 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.091869653 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.089396547 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.115784372 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.087180703 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094694044 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094306938 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.092782813 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.089645005 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.088619464 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090986996 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091058302 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094860599 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092266185 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092792901 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093610647 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.090064713 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.111177238 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094603615 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.090093239 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.088537117 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091594952 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.090001633 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.095977175 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.089906801 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.089169649 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092402062 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090793349 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093711826 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.088137239 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092877638 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08948813 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.109709657 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.0888629 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094203986 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093133126 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090552644 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091534162 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090317249 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089421256 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092930481 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.090161759 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.089699688 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089862326 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092327253 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.091420462 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.114258756 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.090334522 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090310403 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.089970617 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.089106114 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092747938 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.090705219 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092269946 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093163136 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.090650291 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091805171 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092036657 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089205263 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090040882 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089060398 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.110480722 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092698548 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092843696 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091853347 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.09259499 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.088997239 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096053974 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08981742 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095874378 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091729864 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.088630172 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090408833 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092555524 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090660286 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.109317759 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.090227671 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091022959 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.09138787 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091486069 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090279412 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0899589 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093050655 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090005881 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09087308 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.09091143 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090515478 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090021052 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088097237 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108741381 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089167543 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091611168 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088223238 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.091371537 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091475187 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09034803 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092210305 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088138632 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.090408705 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088693592 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.091569731 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090859362 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090260292 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10888426 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091069038 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.089040228 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.09390307 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.090162744 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091349019 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09108921 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.089607017 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091957738 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093592733 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.090994911 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092160447 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.091061193 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.09440014 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092361572 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.108648761 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08849575 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086777245 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089385926 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09328114 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.090811158 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093836711 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.089976954 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.090419974 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.089342526 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090473909 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.090082714 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.092897066 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.088935261 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112803029 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.093405175 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093388359 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.091251576 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095662049 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090309064 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092306261 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.090901213 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090274816 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.090632166 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.088964292 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089656375 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.091514186 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.095867931 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.111188529 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.092663618 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09430293 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.090487075 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089947584 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091535624 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.091150428 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092725798 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095086051 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091302444 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094761433 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091243793 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.08976712 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092078689 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.11183455 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.089174049 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090539786 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093093007 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094833586 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090865341 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094408211 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.092972326 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093761633 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092224305 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.089385933 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.090065569 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.090732226 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.089874767 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090861708 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.111877919 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096310174 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.089561177 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093016908 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090630696 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090328452 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095464824 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091449778 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091862091 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092837242 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.094056531 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.094335256 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094735644 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092233204 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117100971 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091445017 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093745687 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092751108 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.092002139 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092973372 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094241592 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.091890419 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093779093 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091549515 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091807426 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.093752078 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094710306 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096622408 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.111838785 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.09244438 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.091580933 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.090501198 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090907431 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093243877 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093148847 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093860438 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097046535 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.090223039 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.089492604 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091649188 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.092654411 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092867408 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095090073 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113737338 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.095816353 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.09177043 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.091512865 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.096804995 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093001052 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094294618 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091697353 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094452541 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.091977599 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094171301 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090157897 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092622975 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092529931 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.115697322 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.097027922 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.093276569 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094021215 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094267679 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092067499 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093132445 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094310959 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094031514 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.090450973 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.091855423 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090787717 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096621279 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092144981 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112421232 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09378205 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.094562468 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093956447 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092406942 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092977957 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09375457 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.090693664 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095109684 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093963484 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09172626 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.090265641 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091930637 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091902457 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.115190638 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.092386419 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.090528169 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093105236 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095171001 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.09151509 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096012424 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092558263 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.090635136 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.089839277 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.092188244 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092420032 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094494857 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093126618 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.091811228 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.112882395 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.090516736 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095667231 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094520255 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093092815 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.090392706 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.090110445 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091146779 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091143372 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093083411 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.091706066 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.091342103 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095190901 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094689015 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.090845938 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113579456 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.092092124 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094877686 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094399931 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.092132927 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09527002 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096810773 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097159222 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.092279644 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.093090495 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.091986769 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091120462 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094643481 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.092638971 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.11411399 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096315362 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095433819 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.093554587 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.092045156 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093906082 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.095551362 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092939514 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091983551 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.092417945 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094123284 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.096903828 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092694761 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097116099 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115385508 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.0921865 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092190425 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.093429785 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096933778 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09215266 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.09233168 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.092863085 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.091851743 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090792375 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094065148 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.092480558 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093604081 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.0947985 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.116804013 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093088939 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.093134912 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092847854 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.091426133 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.092502467 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.095048558 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.091747275 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.091791443 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.093014751 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095674059 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0943836 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094463574 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.09274271 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.092963442 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.11180249 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.0946052 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09527476 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095101972 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.091167409 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.09174715 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.092831512 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095123624 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09446014 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.092867194 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095046141 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094064487 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095452612 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.090355411 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.114824516 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093684269 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.097698671 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.093682814 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09316076 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.095603417 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096045065 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095254217 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092826059 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095893841 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097079814 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093289265 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.094569263 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.090983287 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093807709 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.112530384 seconds)
  done (took 56.862719556 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108091323 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091794634 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.091599818 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090873175 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09167177 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091561361 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091781131 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09139637 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091370278 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091599181 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091530493 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093758953 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090663757 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091391366 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111525992 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090580609 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090997916 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091321294 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092488866 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091552004 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091406099 seconds)
  done (took 2.969275961 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.091720974 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.093542552 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090935677 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091541966 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091528076 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091677794 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.091326036 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090977905 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090696482 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091004524 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091366814 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090844211 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094473673 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.09087282 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111887807 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090999097 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.091817455 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092798126 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091545968 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092002291 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091389876 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092861739 seconds)
  done (took 3.048017052 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.093861065 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.095668717 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093925564 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.092219399 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.093286792 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.092078778 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092799817 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.091772033 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.09462414 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094193248 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.093537298 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093553488 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094875352 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.091870453 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.113026575 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.091986853 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.094613151 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.094429416 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.094094492 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.091365968 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.093232383 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.091243863 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.091940965 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.096435723 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.09427343 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.092748763 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.092826448 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.093661207 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.113177986 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.092283271 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.092908411 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093571468 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.093768613 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.093995079 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.096283931 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.093443917 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.094218181 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.091543809 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.091713805 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.092769854 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.091242073 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.093124668 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.113327545 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.08834065 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.090621458 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095221603 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.093094496 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.091965961 seconds)
  done (took 5.544059505 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.092274557 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.117746553 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091787952 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.117125407 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.091430715 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09181929 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091800862 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116997807 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.093625549 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.091295393 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.091441387 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.091537336 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.113796537 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089078981 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090565152 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.09231912 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.092303263 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093192454 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092311799 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.095152737 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092100685 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09167641 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.092213752 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.092510678 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091325592 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.091877799 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091506046 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.113958064 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.090929946 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092289168 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094662188 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092674541 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.092123332 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092441632 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.092350661 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091857655 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.093443344 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.091916572 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092642666 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.092507763 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.092904774 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093842442 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114232808 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088411519 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.090950163 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.092514583 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.092627053 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.091856364 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.093807145 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.092595863 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092362031 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.092853817 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094558488 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.092331142 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092230329 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.091690088 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.092661476 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.111567941 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091821459 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.092368833 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.092397899 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092271939 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.091813371 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.092143362 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095434282 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.092476958 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092008845 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091837626 seconds)
  done (took 7.557593027 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092519974 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092084674 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.093042819 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.092193018 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09198918 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092997706 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091818128 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.093685123 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091926305 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092496809 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091924383 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092230565 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093097267 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092160134 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112623101 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091618595 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092109699 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092851998 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094567313 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092356646 seconds)
  done (took 2.896813847 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092363824 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093301269 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.093119825 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092974293 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.092129965 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093557473 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092968897 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092373715 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092783562 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095456499 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092704948 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092122272 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092862865 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093493137 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113446106 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.092952949 seconds)
  done (took 2.533252621 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.094878842 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.124965839 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.175899737 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.093400317 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.095360752 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.094924917 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.092121763 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.093703705 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.093117923 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.101487832 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.094611034 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.11385539 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10460845 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.093470231 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.092516016 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.096117933 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.093311629 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.093081626 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.093376113 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.176611915 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.092050875 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.092503575 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.092550618 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.117806718 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.093023997 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093003209 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.095192597 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.093427219 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.096376267 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.09303111 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.093253711 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.093176805 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.092332758 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.09329067 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.093464894 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.092988943 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.092831534 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.094729776 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113812163 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.090157981 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089431981 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.089677671 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.090219499 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089458759 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.088964431 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089672502 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.089501287 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090040969 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.091838962 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089614668 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.089243582 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092578183 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.114722549 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.090419591 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092264633 seconds)
  done (took 6.424742996 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093803167 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093434643 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092406693 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091093196 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093215354 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.092049206 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.090008317 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09374954 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090012184 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089505238 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091555511 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095529272 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093006424 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093627113 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114127853 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094624209 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093170805 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.09722707 seconds)
  done (took 2.724171297 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094257345 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093261943 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09403619 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.093686159 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.093294592 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092938856 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093737304 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.093422417 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096223364 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093842995 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093017952 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089951447 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088798217 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088795539 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109850619 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09039724 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089737141 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090647743 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090906599 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092756217 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089801775 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090064129 seconds)
  done (took 3.07707203 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.105001424 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.163751493 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.105579412 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.171817133 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.09600207 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096000794 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.101099999 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.095092904 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.134007 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.093840558 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.095980269 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096097805 seconds)
  done (took 2.389521384 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094287427 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094052359 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094526535 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092941761 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093597519 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092712478 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093131051 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096285647 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093710453 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092652266 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090471887 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089937071 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089727315 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090092317 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110415898 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090575075 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090720666 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091819549 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092825996 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090254618 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0904094 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091306324 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090001963 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09087997 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090569023 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089872663 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091029445 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093552393 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094693731 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118117349 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093861476 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094509447 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09389148 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094870328 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094772591 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095328386 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094522766 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094482139 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094525877 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093945568 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096734177 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094093439 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094113877 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115125389 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092013596 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095076019 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094936869 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095182276 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094857467 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094418266 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09494323 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096734616 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094429821 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094024208 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094105424 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09393017 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094778064 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094715464 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115359128 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094077364 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093813235 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094624311 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095288869 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098510944 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094338871 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094969752 seconds)
  done (took 7.306185663 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095026675 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095122971 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095301615 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095327918 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094214043 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09617472 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094511755 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094884447 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097082972 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094320771 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094374679 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094192738 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094227669 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09490421 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116041933 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091778705 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093546206 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094562959 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095064813 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097704743 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094711575 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094870588 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094961207 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094623051 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094393689 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095044796 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094493417 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094599915 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095099597 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115778376 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095228556 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095370573 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094820105 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.094618136 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09547435 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095210007 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095001812 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094106184 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094372247 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094392981 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094746858 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097354548 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09531706 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115755159 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091478292 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092285732 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093995437 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094798133 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09498263 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095099168 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095164381 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095646381 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097552092 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095285334 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094216121 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09540744 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095123753 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096193239 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116106025 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091381658 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091083435 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091366856 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090793991 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092995048 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090682102 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090824488 seconds)
  done (took 7.375832045 seconds)
done (took 146.171621205 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.168262157 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.188706249 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 0.242317606 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.150945857 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.140049523 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122707 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092836115 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 0.093694439 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 0.098110448 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 0.113381578 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091618598 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 0.094853422 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 0.146483209 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 0.189509965 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092641937 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 0.125861091 seconds)
  done (took 3.195723597 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.187674149 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.274726812 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110593032 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.098590114 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100642775 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.095370102 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.09572903 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.146750087 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097397171 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.114739 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.096715836 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096476403 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.096911246 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095792827 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098664312 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095335438 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.096705288 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095778097 seconds)
  done (took 3.153902139 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114182541 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.13772083 seconds)
  done (took 1.316645907 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119492058 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.130754121 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266829688 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124665805 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.110296625 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.101918899 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12613611 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127769259 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.166687513 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.093275416 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.095151921 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096810781 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.113561669 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095551533 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.103242498 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096226624 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.115858264 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093100973 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.093085453 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094727705 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137584101 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.093360976 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092358783 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092985388 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.157515187 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.093781924 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.095016368 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099176509 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096292913 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095920773 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.09622422 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096150779 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096200063 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.11786513 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100357464 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.095153886 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.094097842 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092067853 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096458213 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095160642 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096655692 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.093198213 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.094927892 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094589934 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.093036398 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.095450269 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.117226635 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.092700725 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.091686699 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096251051 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09248909 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092920185 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.0923744 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.094726373 seconds)
  done (took 6.794393743 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.50190895 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.127306114 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093168416 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.550588893 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094037575 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094576514 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.480911196 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115531384 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199176863 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.51755285 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108379634 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093351398 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105357637 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.201599718 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.150209961 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.22542842 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.415294296 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098491412 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.120471252 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.106503451 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093442551 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094798577 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094634558 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.697030054 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.093930669 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09363957 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.091714028 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.092640805 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.125604207 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.095031899 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092550327 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.108817917 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.212084732 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.102238606 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092445484 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092697581 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093465048 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.1042452 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177766737 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.104767155 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.169210903 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093150434 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114473325 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.093026084 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095849176 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091885634 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.093949678 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.107489219 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.105567995 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091603897 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094891562 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093172731 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.091742725 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093909548 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.094475032 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.226705679 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.248496789 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093681557 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093454176 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094671524 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176875769 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100479609 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107542489 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10827118 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.102574024 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093307905 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.046801048 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103880563 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09344498 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092085603 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113950453 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093477946 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.095742685 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.153295603 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.670550548 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092723477 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09266949 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093167103 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.173135503 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094154434 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092514947 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.101828028 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09268015 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095751885 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11308168 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092717772 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.105862559 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.189262813 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.092154218 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092439495 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092820264 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102920493 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.092163797 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.18938902 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.096202396 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.095064031 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.180335202 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092713567 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.095243048 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.125470698 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092427583 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.105169074 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.094998434 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097145843 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092811112 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.097197578 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.101345666 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.097634051 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091752123 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.092479577 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.104842707 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09775095 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.093110249 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.127347807 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.701099169 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.104059748 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.094950882 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.098911987 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093328558 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.105190754 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091926651 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177810766 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094920396 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103223719 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09295789 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.093057998 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.093490457 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.116433949 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099135992 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093330997 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.093184692 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096039033 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.198885061 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.101484077 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09269591 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.186987847 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.17481005 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092667704 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.108432915 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094755371 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.10613671 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117275151 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093180308 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093102166 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.044479123 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096806612 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.094329037 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09230058 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.174220069 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093416971 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101387393 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093432721 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092852365 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.047053749 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097456785 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.095737769 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.12017472 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093094803 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092876593 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092657399 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092450526 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.097179986 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.105922719 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093234626 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092583997 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.093654031 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.10338414 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092480369 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.094286063 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093593589 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.116546055 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095224764 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095120685 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10098992 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.107700834 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.095255769 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.095596699 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.867738378 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09408909 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.0945866 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.106646383 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093545813 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.194876965 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094714084 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.125639394 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.102812608 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.094264273 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.226287062 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.102735355 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.175542129 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.09720978 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106124757 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093302463 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.094345326 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.100123605 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.097427308 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097319181 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.099046856 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11982832 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.094048172 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.153434694 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093857953 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200651043 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.093347681 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.109645641 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099174738 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097936261 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.208353842 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093819147 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.099773653 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098086802 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095178616 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.094668117 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 5.889357263 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094929436 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.096809732 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095712391 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.095204206 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.103349645 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093080611 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097303929 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096371195 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.09929312 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.184438219 seconds)
  done (took 40.776503737 seconds)
done (took 56.295516953 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.162473618 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.138351001 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186813041 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117071758 seconds)
  done (took 1.768679622 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.18470484 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.111195571 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.173180856 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.092165094 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.177190679 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.115320068 seconds)
  done (took 1.949149217 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.127059458 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.114705205 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.10901981 seconds)
  done (took 1.444104055 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.155863596 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.148081343 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.418113481 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.340391537 seconds)
  done (took 2.254672317 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207350092 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.095071866 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.094609657 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.175523501 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.180244709 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.132662956 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097316636 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.103905767 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099901236 seconds)
  done (took 2.331549243 seconds)
done (took 10.840633782 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.470560925 seconds)
    (2/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.293402664 seconds)
    (3/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.268781761 seconds)
    (4/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.190155392 seconds)
    (5/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.252659372 seconds)
    (6/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.170667543 seconds)
    (7/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.167930091 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.166812961 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109314405 seconds)
    (10/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.170824095 seconds)
    (11/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.262260789 seconds)
    (12/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.190032736 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09745659 seconds)
    (14/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.111761278 seconds)
    (15/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.094571633 seconds)
    (16/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.26527227 seconds)
    (17/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.138429153 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.176750735 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.092810902 seconds)
    (20/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.171598696 seconds)
    (21/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.242364778 seconds)
    (22/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.158383845 seconds)
    (23/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.09270622 seconds)
    (24/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.197393205 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.177978613 seconds)
    (26/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.17708732 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11347715 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.093682486 seconds)
    (29/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.098801301 seconds)
    (30/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.156269242 seconds)
    (31/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.107023192 seconds)
    (32/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.114604615 seconds)
    (33/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.155861825 seconds)
    (34/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.194498419 seconds)
    (35/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.123433328 seconds)
    (36/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.118339163 seconds)
    (37/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.200448041 seconds)
    (38/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.134525936 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.10363608 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.174914796 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.095069421 seconds)
    (42/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.095473977 seconds)
    (43/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.144024373 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.179148852 seconds)
    (45/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.143537607 seconds)
    (46/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.122260662 seconds)
    (47/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.114571684 seconds)
    (48/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097973134 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.186949275 seconds)
    (50/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.242100065 seconds)
    (51/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.173257775 seconds)
    (52/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.139911524 seconds)
    (53/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.147715106 seconds)
    (54/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.102868001 seconds)
    (55/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.166533346 seconds)
    (56/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.158335719 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.094459593 seconds)
    (58/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.202892198 seconds)
    (59/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.117350667 seconds)
    (60/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109310887 seconds)
    (61/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.141400282 seconds)
    (62/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097751798 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.094033294 seconds)
    (64/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.094489788 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109813981 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093177822 seconds)
    (67/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.146344269 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.11771458 seconds)
    (69/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093088334 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096096335 seconds)
    (71/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.216792317 seconds)
    (72/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.123753984 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.102824905 seconds)
    (74/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.140383346 seconds)
    (75/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.107915603 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094571365 seconds)
    (77/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09274476 seconds)
    (78/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.134891557 seconds)
    (79/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.136012221 seconds)
    (80/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.148006689 seconds)
    (81/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.209973919 seconds)
    (82/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.115344309 seconds)
    (83/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.097843097 seconds)
    (84/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.103277172 seconds)
    (85/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.112196995 seconds)
    (86/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.246060239 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.104901849 seconds)
    (88/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.09432408 seconds)
    (89/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093501561 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.100461068 seconds)
    (91/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.136120246 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.102648934 seconds)
    (93/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.15897954 seconds)
    (94/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.112223564 seconds)
    (95/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.096852926 seconds)
    (96/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.225898133 seconds)
    (97/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.152926824 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.093816458 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099223318 seconds)
    (100/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.113310268 seconds)
    (101/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.125112251 seconds)
    (102/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.123021008 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118598896 seconds)
    (104/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.164733104 seconds)
    (105/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.121474963 seconds)
    (106/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.094014719 seconds)
    (107/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.109092294 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.108814277 seconds)
    (109/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.096448301 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100355906 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.093138505 seconds)
    (112/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.111473442 seconds)
    (113/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.219788776 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.112534017 seconds)
    (115/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.172721165 seconds)
    (116/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.107270746 seconds)
    (117/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.163346178 seconds)
    (118/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.112719956 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09528466 seconds)
    (120/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.096229203 seconds)
    (121/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.093757019 seconds)
    (122/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.093398022 seconds)
    (123/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.103837643 seconds)
    (124/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.154243605 seconds)
    (125/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.094924572 seconds)
    (126/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.095551465 seconds)
    (127/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118186838 seconds)
    (128/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.152618944 seconds)
    (129/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.151320253 seconds)
    (130/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.097342707 seconds)
    (131/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.21802203 seconds)
    (132/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.098513173 seconds)
    (133/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096027837 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.103985594 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.105941883 seconds)
    (136/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.111356684 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117018778 seconds)
    (138/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.096848733 seconds)
    (139/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.095050982 seconds)
    (140/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093463201 seconds)
    (141/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.093505721 seconds)
    (142/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.104796268 seconds)
    (143/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09764108 seconds)
    (144/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.094161699 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095629468 seconds)
    (146/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093434876 seconds)
    (147/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.09408314 seconds)
    (148/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.095173927 seconds)
    (149/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106604051 seconds)
    (150/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.095872191 seconds)
    (151/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.119983906 seconds)
    (152/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.094493904 seconds)
    (153/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.093978815 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.093813912 seconds)
    (155/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.152408208 seconds)
    (156/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.098362879 seconds)
    (157/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.094494948 seconds)
    (158/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095226555 seconds)
    (159/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.096331367 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.093759879 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093860724 seconds)
    (162/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.096826786 seconds)
    (163/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.130610967 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094288757 seconds)
    (165/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.0965097 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.1075739 seconds)
    (167/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.094453842 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093707418 seconds)
    (169/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.094158703 seconds)
    (170/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10179178 seconds)
    (171/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.094309459 seconds)
    (172/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.09418954 seconds)
    (173/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.096125855 seconds)
    (174/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093472153 seconds)
    (175/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.153104658 seconds)
    (176/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.097522088 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119572514 seconds)
    (178/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.097555513 seconds)
    (179/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094452749 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.097671379 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.103068257 seconds)
    (182/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.11557223 seconds)
    (183/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.099144843 seconds)
    (184/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.094735734 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.094900659 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.096195665 seconds)
    (187/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.094115534 seconds)
    (188/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.098923738 seconds)
    (189/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.097081014 seconds)
    (190/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.093479218 seconds)
    (191/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.117884602 seconds)
    (192/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095939845 seconds)
  done (took 25.82716347 seconds)
done (took 26.930422203 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.175867441 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121406643 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102755734 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.103055246 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.168744134 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120986317 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.111505316 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.128131594 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.103963415 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093920445 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.095312597 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.10669971 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.103533311 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.175110886 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.10578962 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.094383747 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.094621109 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.131965727 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.110251371 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.109295737 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.170047954 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099004933 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.103293391 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.094130806 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.16884184 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098796037 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.128879267 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111675262 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.10886038 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09400505 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111874264 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095023386 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109688269 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.109435607 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097237457 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094033164 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096529669 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.099122832 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.09545204 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.124665012 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.108539149 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.094427 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.102990856 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.095367669 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.095187276 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093632357 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09703802 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.107762941 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.094672142 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112872998 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101482163 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.107706559 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.118464972 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.095975763 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.095263488 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094985059 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.103722897 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097640877 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.106814348 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0970661 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094475663 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098677703 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09368224 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097114512 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.093563625 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094226413 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116592406 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094813701 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.093737485 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099673958 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097227544 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094112965 seconds)
done (took 8.896333431 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.103400826 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116449859 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.096297564 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.171368893 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15558167 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.096862288 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.098477189 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.098445809 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.102943708 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.118039267 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.095827762 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.099793892 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.095178632 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.094740683 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094885624 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100145109 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.095900145 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094693329 seconds)
  done (took 3.056468264 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110933086 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119534354 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105794078 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105290122 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.097162139 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.094557411 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095297184 seconds)
  done (took 1.875585282 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.099259219 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18310763 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.16685491 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.166050176 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.198482879 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.170682147 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.095481922 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106046273 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.096403448 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.17855286 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.208021856 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094576345 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099008493 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.168080564 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.094671019 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.161389025 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095245713 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120438042 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.165950613 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098060322 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.108119145 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.103149937 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.094494224 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.176858991 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.095998905 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096507813 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.121641511 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097965023 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.12124631 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.176799572 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.100262512 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095645303 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.172190625 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095798933 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.199598391 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096912928 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.174516804 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.098759843 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.099449857 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.094676367 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.096857974 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.184066524 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.096317014 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.09844747 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.096065273 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.184428448 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094066111 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.17747875 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.095511056 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095009046 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.124431535 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096937107 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099896316 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.094361635 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.184287349 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098650089 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.164211339 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.18854908 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.176499144 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.16299102 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096425227 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.203314391 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.170323041 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.099094732 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095960394 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095071833 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.162856263 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.093390156 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.098699216 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.184086047 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09563536 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.168175323 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.166905995 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099567887 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.094544122 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.09925136 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.120207767 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.16795662 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094682798 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09602547 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163309327 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.093469389 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.095115317 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095604576 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.121178822 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.099473796 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.098936095 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.094364398 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.164899204 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.163230768 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.095151419 seconds)
  done (took 12.732568813 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.099978264 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.098359426 seconds)
  done (took 1.375168172 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.108163069 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.101128796 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10428991 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.094963505 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103656053 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.178297758 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.179974456 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096206171 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.124278517 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102078082 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.181497443 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.182300906 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.179446411 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.094814648 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.206018597 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.098574506 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.18051623 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095363794 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.10262482 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097574482 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.098673459 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.095495312 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123446603 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.161372003 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095828977 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098108495 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.097844625 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101590154 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103922823 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.095443918 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098002047 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095928811 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097488557 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097796672 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.208474939 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096244551 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09657942 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.102425426 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096494815 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.095793607 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.184356431 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095462177 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.119885051 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09625734 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.096139345 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096066565 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.096022381 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.095348576 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.182482806 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094903847 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095552748 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094421399 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094940566 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095180507 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121257169 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095921335 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095688279 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.180884686 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095839231 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.098303008 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.094910515 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095071424 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095423805 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095174754 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094933128 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095083695 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121694115 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095586415 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095609552 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094567514 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.099569855 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094709171 seconds)
  done (took 9.339062203 seconds)
done (took 29.52446785 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.131037642 seconds)
  done (took 2.297721893 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.637235967 seconds)
  done (took 1.806437893 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.652956399 seconds)
  done (took 8.854557926 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.36723469 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.281252908 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.866196392 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135161609 seconds)
  done (took 2.82004423 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.120681032 seconds)
  done (took 2.31295194 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239100598 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193976158 seconds)
  done (took 1.6075807 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.733481046 seconds)
  done (took 1.926897761 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.317770668 seconds)
  done (took 2.502805337 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.197165937 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159964001 seconds)
  done (took 1.558665765 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.529434226 seconds)
  done (took 1.734063264 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.372578766 seconds)
  done (took 9.578365766 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234319911 seconds)
  done (took 1.436236914 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267276648 seconds)
  done (took 1.47431985 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.052652921 seconds)
  done (took 3.25762896 seconds)
done (took 44.354118397 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105750526 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.109130228 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106571141 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.103834522 seconds)
  done (took 1.619949758 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106643261 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.102944379 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10144499 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.100061947 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103185835 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.102086654 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.09898376 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100979873 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.101733579 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100079055 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.099661631 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099589155 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099786485 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122418908 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095983945 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.100290382 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101230437 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.100223286 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.098740999 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.102043535 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.095358492 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099741131 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.100317926 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.102168344 seconds)
  done (took 3.646687369 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107514229 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.102195019 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.101993863 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100497329 seconds)
  done (took 1.625939212 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.107915796 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.107836981 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.108087955 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10436648 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106889466 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106100966 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.098318629 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.095357112 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098821026 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.103829574 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.107431258 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.102265322 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131400272 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.105519512 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.106192805 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.095458453 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.102962283 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.106822534 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.103773911 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104079132 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.102224149 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103253473 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095139671 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.099903805 seconds)
  done (took 3.715620913 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.174715278 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.108040774 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.119597695 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.122347156 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.095464311 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.121144825 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.118441149 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.095620676 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.103481785 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.094741856 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.095278215 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.122250631 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.123163822 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.106572486 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.095887436 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.095358789 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.095744568 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.102988971 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.104240084 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.095698036 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 0.151543158 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.10822223 seconds)
  done (took 3.667558435 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.111409646 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.101834006 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096040308 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.095628249 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106755718 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101329429 seconds)
  done (took 1.829460912 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106868245 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.097379585 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09875486 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.097755525 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.100371722 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09893737 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.095415161 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.097813363 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097165966 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.096052732 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.095528982 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.095939856 seconds)
  done (took 2.391719475 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.213651734 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.1161684 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121166585 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.096763913 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.101498847 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096323485 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.108863183 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.098936815 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097588752 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.095489278 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096666726 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.097417259 seconds)
  done (took 2.558217213 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151174103 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102298069 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159467401 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.453381582 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112666007 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15575639 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.391292221 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145455023 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.130351914 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110503702 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131408081 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112178887 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146345038 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139580011 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111712622 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.380653121 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152867663 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144574004 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114187879 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143153719 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124129043 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16226494 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136194842 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115694837 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139210313 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114631718 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099446398 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102873312 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119792734 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121678906 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118823065 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140786838 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106797215 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135146886 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114147289 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125991947 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210171686 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103944453 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.232172125 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131385492 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145010848 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109920812 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152649255 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118264085 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10677589 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139900211 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109281854 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126628497 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107874333 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113066675 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154318141 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12504495 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.118520561 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110487067 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.427686986 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10526879 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114064263 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143664952 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13881432 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136864592 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130292027 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.100521167 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168556253 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132568503 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126440797 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110428373 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.115798673 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095698636 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159118533 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163990838 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125650748 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158665655 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.137847372 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109230629 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12538395 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121025762 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146124933 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128373965 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124604031 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100349616 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143073606 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105774483 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106124178 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167509672 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101979774 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165488446 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106200494 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.308439934 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136089245 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118856806 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116311712 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121196345 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154942344 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119682205 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.140520673 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115038437 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114836097 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147037 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101362893 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117254777 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139523823 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.100729725 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11925535 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129228542 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124396232 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.133299042 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118657686 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128717574 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.11117274 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134727825 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113700638 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150256015 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124708743 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133626183 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105799601 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10763821 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133358744 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128350944 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108124016 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149359597 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131665561 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.141450416 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105377163 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106156639 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180887738 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113216667 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158547248 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108084259 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105648408 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.127697889 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130819711 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116649908 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124779534 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104548167 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119783547 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155513787 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.10332678 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112180363 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137997909 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130144982 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105497821 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137151883 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105953789 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.115277531 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.12125996 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.108274354 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143587547 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128449029 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125767847 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108801982 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133347987 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113929886 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105574758 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.129984742 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143292033 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099992378 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.125479032 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133282128 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105418718 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173142318 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124344441 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176271445 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126747938 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10512079 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174065468 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127364426 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.102012365 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105153818 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121031295 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117964049 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.128993007 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146910568 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.141115176 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121641591 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11554038 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117280648 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.153488019 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114893068 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107148917 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129029127 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124054911 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100687655 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.097143482 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.102098434 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111445703 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102480855 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134610292 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121838497 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119743616 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146251238 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12781693 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10808955 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158599623 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.100766032 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118318516 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.125673477 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110011987 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.124897651 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132209653 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132256578 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105148085 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135881008 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.102956642 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102121423 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.10410329 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121262373 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109574439 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106074003 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106478 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134849273 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123999901 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139957947 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150103085 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144617851 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140082178 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102513242 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.14318164 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115481188 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131156533 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.175322842 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108037772 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.117616032 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131937542 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109451597 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140746883 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126089936 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152293717 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131958191 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129801269 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103734016 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109215627 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1564199 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104987364 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112678338 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107887649 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105676095 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108460548 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108046031 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125313806 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124480369 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114103365 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114173534 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.137716019 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114590872 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105410528 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107178626 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131939973 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137492055 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.1226213 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125198805 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117117176 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11234196 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13564903 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118523381 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103946062 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.44033392 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126694484 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124716085 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105242761 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106410948 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159421654 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113002261 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113349069 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175271345 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110751451 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129164673 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154930746 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.106704303 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107479263 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116172401 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115029796 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.129052318 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.097510271 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.119972813 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140146405 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125580232 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138612212 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130518158 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126456905 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12283378 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.121108329 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108569543 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164435956 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126373828 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123147363 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129436631 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.112923261 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174822771 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130929437 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103162796 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.098603378 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176154495 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109015657 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125490786 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.173557509 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152621546 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131427407 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157739685 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138556663 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.102836699 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125662195 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139661503 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149906199 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106543897 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107476015 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130821268 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.164249332 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129069053 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155083597 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.40556372 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141933847 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120111056 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.120736527 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.427713788 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104198569 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105038919 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114151382 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120419906 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.103060393 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.175282637 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130779136 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109263533 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114598167 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104878565 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170821391 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139045031 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108520599 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121792029 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106725584 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117166946 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112769708 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118147225 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115404122 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142902033 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114768266 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13260757 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.122417455 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.102274018 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12586539 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125936731 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128424166 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113872589 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136620073 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175239795 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10476473 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11359302 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104382337 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097919882 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148224235 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.152375121 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130440358 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118821512 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124784699 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106137063 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097714654 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111135576 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125581069 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107687191 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.10507397 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12451936 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.133263515 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127884229 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129677568 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106679127 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127886941 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107382529 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098715878 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106910123 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108623728 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105610584 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169785117 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124917306 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.098078043 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11859586 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108183599 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11954848 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110741536 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132371954 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 15.516900666 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.10421389 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134926422 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146052444 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141308565 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115012819 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126560118 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127175496 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142034638 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106461389 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108753008 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206946924 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111588357 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.122203225 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104582714 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10847709 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139498669 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.097990212 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11516739 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151892267 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113107195 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.105372901 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.124621976 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112041062 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.131885184 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114464223 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133622946 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145627523 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12610048 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175888847 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108958062 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149662202 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116611966 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10375942 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.117365065 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11943372 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142058628 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109270762 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.105780525 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.108625004 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127817761 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.104527337 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12325902 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152410156 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127874738 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1250775 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.098654791 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124644315 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106035366 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125106036 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097817175 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109594989 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15435982 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1075679 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102256391 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129341699 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110268201 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12609203 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09875708 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168098462 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137462806 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103075054 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105048353 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392541892 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148606338 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201697496 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.130880791 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108266102 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138044527 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114931791 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.124606218 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130182115 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098652568 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105687072 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.098598848 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.23770768 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.126037375 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130750789 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14833506 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112015539 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179273043 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111059675 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275612359 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114889239 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155424652 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.124299938 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.102628541 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11051006 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105268955 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10937532 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172429078 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132379227 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.128183891 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.10772569 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099046867 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106248883 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107678884 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115824957 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110741358 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154285009 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111177536 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.120288436 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108563113 seconds)
  done (took 79.523855997 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154404733 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.13444904 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149621393 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219479752 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165592953 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281123265 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.236961927 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248116701 seconds)
  done (took 2.899506931 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.110874897 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.126254821 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.121256887 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.122616423 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.103257009 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.305929339 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.144022263 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.100239669 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.143623677 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.126149247 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.104470578 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.45861385 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.099769725 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.100955593 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.125129254 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.101559293 seconds)
  done (took 3.689601034 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.467158912 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.342245017 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.542398203 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.20102768 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.41905067 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.123174022 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.524673641 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.101501006 seconds)
  done (took 10.034193132 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.142081433 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.129879663 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.217630147 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.230000858 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.136653064 seconds)
  done (took 2.167124627 seconds)
done (took 120.565084218 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.110694721 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.106074146 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.108969997 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.10700911 seconds)
  done (took 1.724734162 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.162503097 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.100546298 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102062393 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.105849443 seconds)
  done (took 1.785011962 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.426985085 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.101638259 seconds)
  done (took 1.88230819 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.138737151 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.12383911 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.124084826 seconds)
  done (took 1.710503971 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.119962769 seconds)
  done (took 1.439609113 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.110794773 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.106622367 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.176156883 seconds)
  done (took 1.712590281 seconds)
done (took 11.571716567 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.215127789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.945609122 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.410895377 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.164634957 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.701925655 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.415817066 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.37525785 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.10138945 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110442538 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100725186 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.100833708 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680483525 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.344323405 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.880115033 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.383545011 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.901351272 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681378543 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100502567 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100738836 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100874296 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.350208856 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100166173 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100642158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102724582 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.681253623 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.400289814 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100186126 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.899962707 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101170672 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100908465 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.387020705 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101250088 seconds)
  done (took 20.542177433 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138039189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122635417 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.107806488 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101708716 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100794632 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102618255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104965354 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101511551 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116822462 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100922198 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101553348 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.126080114 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104029023 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.103556966 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116160568 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.103319032 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.1011104 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100608912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101543721 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.1013478 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.104944796 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100726686 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126782597 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101340088 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.103493901 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110521074 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100854594 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101102175 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101990095 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101119363 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104019034 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101994139 seconds)
  done (took 4.742336129 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14948121 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.138803947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.10700166 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135849715 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.128660435 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103050183 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.156032943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.100977267 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.143559058 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101099815 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.101876696 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.102065377 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.118819506 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.103222644 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.120822106 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102534089 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101788595 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100769465 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102193227 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126693221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105505307 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101934291 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.102505697 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101042431 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.102272865 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114561114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10477861 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101524227 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101549465 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125755835 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103764568 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101741195 seconds)
  done (took 4.944680182 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.107141672 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.10955967 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133907636 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.13493972 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102516537 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100164935 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.100525501 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099725361 seconds)
  done (took 2.220353187 seconds)
done (took 33.773549604 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.118901159 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108969093 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.11182448 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.111329493 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.169279281 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.100338724 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.110587928 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.102648519 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.108727848 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.114819843 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.128232657 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.101853821 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.11316499 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.104138489 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.170906909 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.111204568 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.169017206 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.199823496 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.103585076 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.109816354 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.099854772 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.170965117 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.104793315 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102300705 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.194183381 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.105415566 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104340719 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.104535625 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.104823265 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.106968775 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.170333427 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.104238618 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.102586781 seconds)
  done (took 5.356118685 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.177911024 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.100746846 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.100511577 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.100475081 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.099503331 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 0.100611492 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.17494664 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.103354248 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.127935134 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.100525294 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.100242976 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 0.187857446 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 0.100208469 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.100634266 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 0.102210159 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.09650496 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.099104504 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.101506656 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.205165713 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 0.102866356 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 0.102229855 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 0.101888616 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 0.097359307 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.09988982 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.194248731 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.096561034 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 0.100249611 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 0.128660248 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 0.100110394 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.100483495 seconds)
  done (took 4.850486884 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.110989464 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.120539242 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119893074 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 0.123765913 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.101921823 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101024333 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 0.115229452 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110554567 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 0.1050529 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138454417 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100853093 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.107218538 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.1305355 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102882816 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 0.114156397 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 0.111721721 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.11486699 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100744738 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.111834345 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.152550692 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108168587 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109053441 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 0.110146356 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 0.105719026 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.106554046 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 0.140568391 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121658875 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 0.101679764 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 0.102250818 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 0.111108012 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 0.101024389 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.102811825 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 0.125209356 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.115141562 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.101305608 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.105908425 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.111440166 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101827373 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.136359067 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 0.113223501 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 0.103889127 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 0.102267958 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.12289027 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 0.101689786 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.10504699 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 0.100265163 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.112829224 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 0.115300147 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 0.11216911 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 0.102439723 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 0.123774478 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12892087 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 0.102094146 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.106292525 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 0.102581133 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.103487857 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 0.122109052 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.111882611 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.105324784 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 0.102343268 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 0.101942151 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102031547 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122342663 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 0.113109644 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.13041045 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.117266711 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 0.105583832 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 0.101857887 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 0.104909728 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101338051 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.116293265 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101620977 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109026131 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 0.103560569 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 0.123110809 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 0.101043543 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 0.101722288 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 0.131658588 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.10205787 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 0.108911279 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 0.109142443 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.109535839 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 0.103096984 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.10205161 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 0.102427409 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103483282 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 0.099926669 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102120944 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 0.101945858 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 0.100819835 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 0.102199054 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.100251987 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.127520964 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10225961 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.102476778 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.100874367 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.106636966 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101354807 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 0.101914933 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 0.103753915 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.110229167 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 0.124594706 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 0.102456349 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.10698757 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 0.107245239 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128411448 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123506973 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101629316 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103420709 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 0.114253714 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 0.104251724 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 0.10204569 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.109987772 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102128044 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 0.101436772 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.10185108 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128665029 seconds)
  done (took 14.222017214 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 0.181208034 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.2332672 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 0.281177256 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.245112059 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 0.189350599 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.162660979 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.256150771 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.11129819 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.231279806 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.108303587 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 0.152421411 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.233471384 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 0.114771804 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.289277027 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 0.105858877 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.129504816 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.124818634 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 0.102071502 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.112936527 seconds)
  done (took 4.719813992 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105638312 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.121384085 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 0.103324759 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.102122704 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.102624205 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.102957773 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.112804565 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 0.109320594 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 0.102298018 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 0.104089943 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.115402168 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.1138164 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 0.106009586 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149799148 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10758542 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.101672275 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.101244085 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.109884153 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 0.107270294 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.123402385 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.111108815 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.105906461 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.103231908 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.101366295 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 0.100501683 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100920227 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 0.100998401 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.129699294 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.102674275 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108472802 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.10766885 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 0.100996016 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.106434709 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.106863684 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.103951071 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106989057 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.101810106 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.107013177 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 0.211683172 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.10166261 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.102984589 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.101809054 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104087158 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.101879243 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.101102468 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.10963083 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 0.100856606 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100562269 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.110255366 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.101047273 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.10165276 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 0.10779127 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 0.132975104 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 0.103214304 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.104219481 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 0.10104955 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.10125016 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 0.115161704 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.102526334 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 0.102359762 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 0.102823398 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 0.109209315 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 0.103019139 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.103679502 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.103256407 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 0.106290283 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.132251639 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.11300479 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.102408941 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.102432291 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 0.100679539 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107364628 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 0.101074237 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.102101422 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.103953775 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108288453 seconds)
  done (took 9.600146208 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 0.10564782 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111826836 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 0.115475769 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10493914 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 0.111030269 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.102423661 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 0.113474268 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.117271384 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.115508355 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.103782456 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 0.115059248 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104274815 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 0.143143204 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 0.111276906 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 0.11285236 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 0.111901106 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 0.113360208 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 0.105886146 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 0.108040311 seconds)
  done (took 3.500347895 seconds)
done (took 43.581133728 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.369049034 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.549235566 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.348738278 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.346413967 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.349383376 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.348155404 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.347470904 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.349222873 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.912590365 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.345864074 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.344415989 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.346135148 seconds)
done (took 30.302999845 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.414995359 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 1.348710708 seconds)
    (2/2) benchmarking "String"...
    done (took 1.34855763 seconds)
  done (took 4.34566496 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 1.351676268 seconds)
    (2/2) benchmarking "String"...
    done (took 1.350836105 seconds)
  done (took 4.049715078 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.340948649 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.348677751 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.343035399 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.529979655 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.389474926 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.345199315 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.357566808 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.346900247 seconds)
  done (took 18.007961568 seconds)
done (took 32.507568941 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.372660788 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.544580698 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.627776169 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.345464642 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.344715207 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.353150842 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.347521799 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.365080121 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.344703657 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.345247408 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.6881635 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.620718024 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.345550407 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.726687109 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.346216398 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.349391159 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.348965029 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.585054203 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.341139473 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.386135988 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.352167541 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.34426667 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.35227275 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.362035125 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.443679669 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.370366153 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.403397625 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.343077527 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.533042191 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.346911923 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.389374056 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.340126533 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.407494583 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.344232951 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.341438821 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.351993197 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.539090271 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.440891741 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.349802067 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.344870573 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.543678689 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.354004469 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.343491029 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.344495532 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.350130133 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.358822473 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.570276534 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.445007917 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.349743226 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.350447963 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.349926759 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.727504513 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.355430356 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.347760157 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.360225937 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.571502336 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.346145933 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.385683301 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.363171899 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.353150659 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.34341345 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.341776775 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.379879512 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.346262437 seconds)
  done (took 153.360365662 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.341009149 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.343879402 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.345885246 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.350714887 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.342417902 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.344741153 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.343432367 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.344914709 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.347465678 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.34519886 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.344871318 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.348837377 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.342897001 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.292533552 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.344445368 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.366630972 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.34322043 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.344902157 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.350724707 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.34567074 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.370170092 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.343882506 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.344618908 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.341517253 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.374539692 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.4153183 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.348129509 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.343931467 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.347454732 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.34474979 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.368516839 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.342114053 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.828711455 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.196161663 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.358602524 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.359160803 seconds)
  done (took 85.249039924 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.339839425 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.34486901 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.34411837 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.372212255 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.345312258 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.806316112 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.812563609 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.322984177 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.469764496 seconds)
    (10/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.762401562 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.389380739 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.501690079 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.344276795 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.427491392 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.358623621 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.344073721 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.390939211 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.370826289 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.344048615 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.344544307 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.812194475 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.356779379 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.349606694 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.505155977 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.343449729 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370950362 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.339034739 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.77863293 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.347090051 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.365490548 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.722181668 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.366989181 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.344578055 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.594915423 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.295887554 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.445006521 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.343143652 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367686154 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.347319454 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.613165713 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.343072506 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.344745675 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.346515708 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.893382969 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.343299851 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.807475027 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.340567981 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.230779186 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.342225827 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.344312194 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.458673486 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.854648627 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.345994321 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.343227504 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.347363882 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.344663546 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.345709475 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.36519539 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.373848386 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.490143497 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.344102778 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.349043694 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.350391932 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.373749644 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.344685082 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.342672009 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.635647393 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.403793153 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.119863082 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.811589545 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.349076542 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.492783834 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.434353573 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.457902673 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.341472838 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.341935652 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.340395517 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.346376036 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.453695268 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.347293855 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.700100494 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.497760059 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.342412289 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.400511707 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.437261358 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.342880246 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.58533794 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.346626886 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.347911242 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.952612512 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.431403344 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.343892027 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.347528523 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.344711787 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.698032938 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80971635 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.494306498 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.345883514 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.352163252 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.341463377 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.691403663 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.795520682 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.900427079 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.344673017 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.340389102 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.444695091 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.496920206 seconds)
    (108/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.341904132 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.34203189 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.344451745 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.394338394 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.341902184 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.397508231 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.344610633 seconds)
  done (took 379.668326878 seconds)
done (took 619.624774656 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.341432715 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.34758716 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.344508633 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.353780912 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.347609441 seconds)
  done (took 13.080189047 seconds)
done (took 14.425050922 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.563227441 seconds)
    (2/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.560422275 seconds)
    (3/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.401636366 seconds)
    (4/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "10-90")...
    done (took 1.374113006 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.466049791 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.513428731 seconds)
    (7/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.376521947 seconds)
    (8/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.559841451 seconds)
    (9/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.558173907 seconds)
    (10/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.510994307 seconds)
    (11/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.364975635 seconds)
    (12/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "50-50")...
    done (took 1.38825102 seconds)
    (13/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.462226441 seconds)
    (14/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.463178175 seconds)
    (15/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.558488001 seconds)
    (16/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.4068278 seconds)
    (17/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.559181039 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.558248075 seconds)
    (19/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.46038548 seconds)
    (20/23) benchmarking ("Base.Generator{Array{Bool,1},BaseBenchmarks.FindBenchmarks.##3#6}", "90-10")...
    done (took 1.411891484 seconds)
    (21/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.384226106 seconds)
    (22/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},BaseBenchmarks.FindBenchmarks.##16#17}")...
    done (took 1.558823811 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.361776755 seconds)
  done (took 35.180739059 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.691185117 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.693028345 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.392497441 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.69613253 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.37736711 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.688817803 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.573776605 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.570411626 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.563814734 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.404167208 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.356454619 seconds)
  done (took 18.366882625 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.648322565 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.659213289 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.395690522 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.669785519 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.377183435 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.653099288 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.536371563 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.541908127 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.530868038 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.371999378 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.35611728 seconds)
  done (took 18.098304197 seconds)
done (took 73.004914853 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.368709395 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.414627742 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.354076201 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.354180224 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.357590399 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.354995775 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.358050553 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.357414274 seconds)
  done (took 12.276618162 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.354437362 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.355984384 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.357943846 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.355408777 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.354128381 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.352186949 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.357492791 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.352790373 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.354836695 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.357554437 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.35262154 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.354550169 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.357700858 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.353336968 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.350323582 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.356349013 seconds)
  done (took 23.035412387 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.358610364 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.354302272 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.352322642 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.352722829 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.358156038 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.35562664 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.356895263 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.358598289 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.353938697 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.352786703 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.354628151 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.350572939 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.348663668 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.356921072 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.354600801 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.357366247 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.354655801 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.355776531 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.357481638 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.355152572 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.354862542 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.353009444 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.356832355 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.350497677 seconds)
  done (took 33.871890055 seconds)
done (took 70.539859039 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.348520433 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.357212661 seconds)
  done (took 6.059896333 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.746865548 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.799823119 seconds)
  done (took 4.905713347 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.356738621 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.354148731 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.354590503 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.353406649 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.351776229 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.357623676 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.353232833 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.353368188 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.356577329 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.355000723 seconds)
  done (took 14.903076827 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.35394459 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.355041311 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.353360445 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.353740207 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.355374704 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.354810601 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.357414077 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.35291036 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.354683808 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.355593921 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.352179812 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.354703791 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.354611059 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.349662518 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.355002931 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.352361377 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.349844943 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.351635042 seconds)
  done (took 25.721602564 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.369700355 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.375224374 seconds)
  done (took 4.104185025 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.486148859 seconds)
    (2/7) benchmarking "second"...
    done (took 1.397802173 seconds)
    (3/7) benchmarking "month"...
    done (took 1.46105279 seconds)
    (4/7) benchmarking "year"...
    done (took 1.448797025 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.40157734 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.381042222 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.396250117 seconds)
  done (took 11.329981288 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.351698313 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.605983336 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.754844257 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.084697358 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.353418866 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.359779035 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.168246723 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.354777407 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.360471466 seconds)
  done (took 15.749763949 seconds)
done (took 84.124791497 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.356559222 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.346259721 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.365234957 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.358849564 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.717590645 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.36620037 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.345550164 seconds)
done (took 17.214850777 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.348462038 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.346916531 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.353470222 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.353549194 seconds)
  done (took 10.757297768 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.29380192 seconds)
    (2/2) benchmarking "read"...
    done (took 1.678163466 seconds)
  done (took 5.329275411 seconds)
done (took 17.445076716 seconds)
(10/20) benchmarking "scalar"...
  (1/24) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.354282096 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.356423913 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.353177725 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.354950413 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.357760194 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.355233434 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.354793909 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.355756539 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.354038326 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.352170632 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.354537546 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356817133 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.35395775 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350509328 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.350328509 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354186039 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.352160375 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.351803873 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356246347 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.359615501 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.358526259 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.358277357 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.356329984 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.35804301 seconds)
  done (took 33.877289329 seconds)
  (2/24) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.35765651 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.360133621 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.358854296 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.357555794 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.357778082 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.359743321 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.360267591 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.358033862 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.359207919 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.357353766 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.357150094 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.35904619 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.358402957 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.357663739 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.359118645 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.358024569 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.360283513 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355723423 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355780229 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.359094605 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.359297442 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356771629 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.357553669 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.358545242 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.357156527 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.357223061 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.35648805 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.356828015 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.356489313 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.356141173 seconds)
  done (took 42.099295163 seconds)
  (3/24) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.361883287 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.36138759 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.357811478 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.356204358 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.35682809 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.356072769 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.358319323 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.359328351 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.356175652 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.356947753 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.356807747 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.356290601 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.356528672 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.357248244 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.356919826 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.357182888 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.356795339 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.355394911 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.357136722 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.355552815 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.356106364 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.356709426 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.355976304 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.35576633 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.355627447 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.355480412 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.356681598 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.355968043 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.355522911 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.358235144 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.35598154 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.355793593 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.357051632 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.355130432 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.355968524 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.355676735 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.361815056 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.362294086 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.355193442 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.355967647 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.355638053 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.353735159 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.355519442 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.355770264 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.358466184 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.355295323 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.357969529 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.355857852 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.355398285 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.353812871 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.358056204 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.356798751 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.356528171 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.356994095 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.35623503 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.356681043 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.356023235 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.355847919 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.355913624 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.355486587 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.355031842 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.356979438 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.355853442 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.356398078 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.356240671 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.35625847 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.357372178 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.357852234 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.358880432 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.354486451 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.355540571 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.355723903 seconds)
  done (took 99.036433522 seconds)
  (4/24) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.354787341 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.357653606 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.355947598 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.355304711 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.357960924 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.357067041 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.356034817 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355672398 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.357157491 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.355105458 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356853953 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.357969267 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356419966 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.358126019 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354134333 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.358321375 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.357342072 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.355465616 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.356897821 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.356414217 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.355507018 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.356525064 seconds)
  done (took 31.196079845 seconds)
  (5/24) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.356418065 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.358312939 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.355895056 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.356857216 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.359434821 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.358357218 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.35745381 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.357352499 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357829242 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.356547513 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.357422213 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.35607728 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.358310365 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355398274 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.354387439 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.357235913 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356882193 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.357172817 seconds)
  done (took 25.784703045 seconds)
  (6/24) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.356772517 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.357277037 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.356605825 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.357295364 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.359023901 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.35669544 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.357939803 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.356820105 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.356259725 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.356391732 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.35805662 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356813324 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.356814293 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356877262 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354981428 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.356632299 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.356187324 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359119151 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.356489007 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.358330416 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.356811063 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.35834922 seconds)
  done (took 31.216900673 seconds)
  (7/24) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.356445835 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.357224257 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.356763962 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.357303375 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.356179849 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.355929906 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.357409299 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.35667124 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.356999645 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.357291397 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.35620822 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.35671301 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.35777876 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.354950615 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.357892309 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.35567377 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.356600946 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.35872754 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355764267 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.352878288 seconds)
  done (took 28.487726713 seconds)
  (8/24) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.355999359 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.357817758 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.357593862 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.356786538 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.357207773 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.359696614 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.356991184 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.358147945 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.355837286 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.35871998 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.358169858 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.357179395 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.357426896 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.355505435 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.355837569 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354755344 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.357463196 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.357664144 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.357589614 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.356442384 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.355566332 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.358144336 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.357574655 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.35639326 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.356510811 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.354782691 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354370437 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.355576092 seconds)
  done (took 39.352795616 seconds)
  (9/24) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.353194275 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.357630349 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.35666824 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.352421823 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.353302538 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.356228685 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.356330332 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.356377742 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.358647514 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.35595636 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.356200866 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.357490423 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.353923097 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.35407281 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.356037835 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.356830518 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355381693 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.35427037 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.356052386 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355939098 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.355184476 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357366627 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.356838389 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.355461594 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356275553 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.355810914 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355785762 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.355280604 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356278752 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.35583674 seconds)
  done (took 42.033512162 seconds)
  (10/24) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.411124612 seconds)
    (2/2) benchmarking "in"...
    done (took 1.421257321 seconds)
  done (took 4.187111969 seconds)
  (11/24) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.356344093 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.355462437 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.352796141 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.35632673 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.354351518 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.357706673 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.359780048 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355617837 seconds)
  done (took 12.205542446 seconds)
  (12/24) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.358568057 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.357492162 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.355745382 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.353599712 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.358300194 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.356230162 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.364797114 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.360588405 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.356663963 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.35704623 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.358600037 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.360950841 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.362337055 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.357281941 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.359512297 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.364300175 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.357976055 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.353858273 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.355757707 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.356926096 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.350556082 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.355630744 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.361186722 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.359628692 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.351300281 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.361584858 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.36718176 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.360123332 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.353860451 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.361300371 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.35436255 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.357288336 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.356585415 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.353975536 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.353117894 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.355403491 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.363680832 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.35951712 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.361694407 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.358672044 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.356070352 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.358412152 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.353018033 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.356247568 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.360961871 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.357964934 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.353848464 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.354855727 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.355571366 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.360999818 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.358315552 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.358754676 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.357111415 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.358929871 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.357908379 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.364524623 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.364630705 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.357554697 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.36126555 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.359576508 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.372796283 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.368100919 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.359499642 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.356633615 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.367620855 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.367146198 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.362683708 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.358911381 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.357646573 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.350461806 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.361358441 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.381080987 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.371507321 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.354909399 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.359794148 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.353035538 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.356398554 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.354382495 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.366985991 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.361970247 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.356038419 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.354147414 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.366486322 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.364048279 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.354739961 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.356640493 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.354767251 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.355381183 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.356114637 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.36363283 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.365882307 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.354784361 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.358816183 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.357089968 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.359902073 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.353860828 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.359266465 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.353851131 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.356385754 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.349033942 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.358866317 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.360995328 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.363389464 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.35951408 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.356897827 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.363253044 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.360421526 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.359214342 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.36814016 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.363901498 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.357004431 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.358036984 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.362352182 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.358808047 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.361858194 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.361873364 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.359602089 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.361314072 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.359986729 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.355518572 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.363601406 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.373170316 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.356512122 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.354953738 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.363839086 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.364628094 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.358188851 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.359373395 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.358475552 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.359346889 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.358953894 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.362298643 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.360309789 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.361907257 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.361492834 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.359066763 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.356650611 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.354064708 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.358870761 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.359006031 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.366017642 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.36029805 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.363349686 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.35953964 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.364331403 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.358386483 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.371337196 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.360533922 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.363076104 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.362292104 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.36186406 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.363218778 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.363848814 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.359418184 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.358749511 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.358343989 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.359350342 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.358934541 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.356057822 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.359905523 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.356698039 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.360566006 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.36176397 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.359485174 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.363593109 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.36199521 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.356875667 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.357070646 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.358393246 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.360245906 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.357891648 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.357342037 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.361533095 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.360747747 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.360050526 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.358479716 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.361948893 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.360816822 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.357599287 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.360075359 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.363758174 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.365641225 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.36291361 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.367288089 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.36288177 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.358339047 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.35795346 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.361236356 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.363408437 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.359420172 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.362272099 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.360527355 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.378213862 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.379676321 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.360550388 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.36166773 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.362795645 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.36037886 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.363970521 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.364365854 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.357550314 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.360515775 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.357155293 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.362721094 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.360979299 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.361000479 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.360841804 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.360398541 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.355833814 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.357869543 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.361085158 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.359566334 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.366951218 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.358240667 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.357184049 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.357765495 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.358774966 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.359326737 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.359490697 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.36037017 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.359797426 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.36030953 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.366220503 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.361588107 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.360650302 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.365616398 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.362829704 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.359083067 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.358424184 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.362067653 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.361414409 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.368288752 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.365312982 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.36118438 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.367395484 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.364641886 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.360048532 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.363191324 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.359755513 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.357181792 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.36129321 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.361739867 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.357514406 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.360243652 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.357382052 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.358922923 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.359005494 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.36639076 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.361341649 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.358973788 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.359216736 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.359765994 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.359037463 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.360603941 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.362824863 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.36262964 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.363835388 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.360485714 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.357617692 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.360771361 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.359858679 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.358615006 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.357972371 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.360923435 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.363109859 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.364341739 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.362929372 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.361685454 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.360205895 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.358075722 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.360127251 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.359126414 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.360654269 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.379815249 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.37438975 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.374360159 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.374648403 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.357317335 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.364231822 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.361890324 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.358843529 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.358687642 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.359805329 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.359330083 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.359076064 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.357033776 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.359075899 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.357099098 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.359690103 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.360532912 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.356925338 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.356853602 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.356010948 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.357291503 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.355484501 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.355811817 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.35617206 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.355601304 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.362060147 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.36011901 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.358940328 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.356984467 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.36548586 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.361488109 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.361159009 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.359180192 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.357917042 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.356115293 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.358240478 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.356677727 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.358663154 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.358334829 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.358805404 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.361755888 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.356901848 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.363020106 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.358429581 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.359108818 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.358056347 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.354164539 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.355157776 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.358262746 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.355750969 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.364381992 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.360684457 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.356902523 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.357124218 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.355193201 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.355887167 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.354016807 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.355719621 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.354569845 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.355554073 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.366124485 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.364092242 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.35696806 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.360387737 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.35754956 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.355318913 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.355057121 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.355799454 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.362734585 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.357815179 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.356728648 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.357287278 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.35579053 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.353672971 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.352619565 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.352620983 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.353657694 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.353149667 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.360901984 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.359978185 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.354132946 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.351297569 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.361488368 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.355963124 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.363197615 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.355472871 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.352135371 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.351855269 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.349880371 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.352967195 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.352250124 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.353806369 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.357693479 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.350498527 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.351045304 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.349579479 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.352707795 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.354043926 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.3524447 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.353210535 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.359529762 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.359370139 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.349846727 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.349428521 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.348751284 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.350049539 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.349954912 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.350776429 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.349013348 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.353019683 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.357292701 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.351760447 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.350156786 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.350214763 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.352285261 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.349910117 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.348346459 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.348027743 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.34854073 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.347976781 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.350158738 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.349781234 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.357130622 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.350767676 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.349949775 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.352092372 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.350800237 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.357160825 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.352424314 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.350925114 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.350606844 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.349997701 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.350381264 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.351340554 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.350616916 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.35088284 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.35005766 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.349643304 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.353087034 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.35201305 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.354083347 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.354089238 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.350262419 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.350217339 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.351006115 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.350016711 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.348893681 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.348746922 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.351131823 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.350924841 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.350703075 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.350563445 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.348981579 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.352292397 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.350448655 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.351982991 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.355013185 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.351184434 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.349080787 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.348219576 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.348151672 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.349591148 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.351007529 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.35909514 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.356626096 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.355954736 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.352567855 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.349304548 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.349773403 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.353727931 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.354201286 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.351005592 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.351422285 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.350003172 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.352044453 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.351376083 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.352177547 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.349535676 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.356744525 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.354407288 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.35058733 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.360594227 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.357046638 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.352508049 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.349755714 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.351313223 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.350813087 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.348846209 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.348506507 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.349479348 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.359637087 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.356629268 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.350133884 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.352223316 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.352957085 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.349748195 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.34943895 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.34811226 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.351010734 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.35004395 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.350661189 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.350709313 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.347893714 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.348351517 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.349203026 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.351120892 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.353205576 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.352652681 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.349507069 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.35258797 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.353164892 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.351795688 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.351177961 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.348707687 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.349896817 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.348383625 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.350238555 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.350148279 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.350883123 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.354385736 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.351963313 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.350577136 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.349424963 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.348655508 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.352562279 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.356431011 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.353184402 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.347895058 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.350164932 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.351895421 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.355367219 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.352472823 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.348927151 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.350132076 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.352931666 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.349456206 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.349010477 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.348032854 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.352140268 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.362478989 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.354576563 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.350145024 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.35160952 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.356573074 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.352460202 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.348141609 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.348025067 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.352085122 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.35398671 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.352458204 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.349047174 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.357374372 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.355220847 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.351007471 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.350368352 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.354280623 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.355221402 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.355295885 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.351780102 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.348961163 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.353807224 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.362993586 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.354122723 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.357810325 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.367288628 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.355356278 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.352502488 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.350243973 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.349485651 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.350450051 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.35123322 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.350368175 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.348266388 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.348331115 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.348812097 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.350316799 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.353457168 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.355336005 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.356893538 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.352099381 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.349685133 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.352828658 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.348975865 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.349087826 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.350645237 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.349190875 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.348586449 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.349479532 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.35079276 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.368291237 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.368290481 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.351622627 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.348467648 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.347440058 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.352714145 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.355132137 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.355071525 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.351069146 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.34822906 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.349605342 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.350193787 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.350214133 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.347272089 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.34866014 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.349161302 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.349057262 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.351115565 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.361161157 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.358816778 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.353203771 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.351761742 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.347600296 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.346500132 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.350065992 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.3484314 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.346265017 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.349892659 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.350315496 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.348621717 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.347149018 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.345788197 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.350103466 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.349593045 seconds)
  done (took 809.927245131 seconds)
  (13/24) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.347947294 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.34559935 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.34574623 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.346394266 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.347010826 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.346039768 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.345713781 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.345911672 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.345841049 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.346989654 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.345808885 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.345767897 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.347085851 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.349744041 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.347113585 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.347639399 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.34611306 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.346134515 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.34604033 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.346158338 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.347688606 seconds)
  done (took 29.623639545 seconds)
  (14/24) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.346137146 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.346284301 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.346379216 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.346241862 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.34619501 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.346055538 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.345874681 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345928151 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.346373775 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345731616 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.346320757 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34590508 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.346162607 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.346597172 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346043582 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.346276572 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.346923064 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.34621151 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.346158534 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.346819993 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.34783768 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.345888619 seconds)
  done (took 30.963671893 seconds)
  (15/24) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.346362397 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.348362367 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.347409178 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.347310936 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.348333105 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.34532617 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.346520037 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.345533679 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.345760068 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.347394741 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.347345301 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.347543767 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.351320585 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.348849468 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.348308861 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.347147202 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.345820195 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.345521088 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.346083422 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.346856741 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.353480064 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.350096014 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.34490786 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.345887944 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.347014116 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.345235905 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.346230016 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.345657428 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.346275011 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.346488386 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.345490301 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.348215876 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.350562695 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.34898999 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.348292191 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.345243181 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.345417039 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.345179681 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.344259265 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.354498767 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.354269261 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.346691248 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.360923439 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.356604056 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.344273262 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.34854096 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.348507463 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.344058185 seconds)
  done (took 66.040355409 seconds)
  (16/24) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.345295883 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.344359975 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.344708753 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.343999694 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.345065042 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.344512181 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.344134761 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.345150761 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.343850923 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.343687238 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.343832493 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.344332614 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.344419103 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.344162745 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.346084292 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.345083197 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.34359647 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.343040758 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.343099993 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.343936771 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.3433919 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.343489671 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.344567575 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.342871787 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.342852084 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.343584253 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.342662589 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.343030199 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.343205686 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.343458924 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.343235265 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.343462626 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.342778724 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.343101414 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.342841488 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.343056876 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.34340152 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.343672284 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.342057058 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.342493913 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.342511376 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.342468301 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.342660406 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.342790308 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.343971594 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.342780249 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.342489362 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.34211172 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.342803163 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.343023775 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.342553459 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.342529022 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.342976215 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.342385513 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.342581295 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.342825959 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.34232205 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.342764974 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.342835449 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.342801254 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.34231029 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.342376772 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.342478689 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.342352798 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.34255524 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.342727368 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.342690861 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.343355658 seconds)
  done (took 92.690456265 seconds)
  (17/24) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.343023466 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.342453308 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.343061145 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.342432558 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.342264271 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.343306137 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.342127424 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.344422087 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.342541463 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.34262555 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343264224 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.343204475 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343573348 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343075032 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.342604178 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343849643 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.34230752 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.342839206 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.342120857 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.342573765 seconds)
  done (took 28.19897826 seconds)
  (18/24) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.342125289 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.342440092 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.342327984 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.34253945 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.341840186 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.34242682 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.342105448 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341964011 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342033975 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3416896 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.342293487 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.342792603 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.341607241 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.342635277 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.342562742 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.342185991 seconds)
  done (took 22.817348428 seconds)
  (19/24) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.342860874 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.344270668 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.342975047 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.342999809 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.342845085 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.342860679 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.342599155 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.341571418 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.342980019 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.342371211 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.342141817 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.343032578 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.342423023 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.342479948 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.342199562 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.343540805 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.342260361 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.34193433 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.343258404 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.343152551 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.343099065 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.3419844 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.342785103 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.341830792 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.342063562 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.342786876 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.341691587 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.342725101 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.341886335 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.341561478 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.342112981 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.342380594 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.343508609 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.342029737 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.342960246 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.34223685 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.342113775 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.341783384 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.342100655 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.34234277 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.341651971 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.343345646 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.342219192 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.341749966 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.342046605 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.342471428 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.342470316 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.341932663 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.341594608 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.343018118 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.341597531 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.341989648 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.34148672 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.341715059 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.341223019 seconds)
  done (took 75.173957301 seconds)
  (20/24) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.342636931 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.341726733 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.342020997 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.341543777 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.341828775 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.342000014 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.341605153 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.345363619 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.343855568 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.341717466 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.342016405 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.342931253 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.34134736 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.341628832 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.341924509 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.342312423 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.341562229 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.341718889 seconds)
  done (took 25.500275568 seconds)
  (21/24) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.34211361 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.342106665 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.341211081 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.341544212 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.342373539 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.341077103 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341425428 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.340802136 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341050712 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.341524077 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341049751 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.341824395 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.341524112 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.34100703 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.341288252 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340946029 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.341121756 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.340843558 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.341065004 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.3414938 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.342970293 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.340677171 seconds)
  done (took 30.851382142 seconds)
  (22/24) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.34151674 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.342467534 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.342126177 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.352254689 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.344309642 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.341673147 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.341313062 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.341503213 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.355450647 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.359268574 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.356401805 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.346806646 seconds)
  done (took 17.504561439 seconds)
  (23/24) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341010022 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341005475 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.3407278 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341083382 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341616906 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34218386 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341163875 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340815326 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34114499 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342359518 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340712249 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340875971 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341013846 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342570985 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341036086 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341121872 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34303724 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341257916 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341011037 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341366549 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342590519 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34139096 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341576603 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341623428 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341496127 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341506172 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34139289 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342902698 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341419376 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341734552 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341229426 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341995932 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341553688 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342454794 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341997152 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342525635 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341524358 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342445876 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342234213 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341852768 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.34245079 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341418124 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342206152 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342082013 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341480229 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341441925 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342070254 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343490481 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341494371 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342651054 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341641665 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341949683 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34161179 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341632867 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341620001 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342499085 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34262068 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341401749 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341960387 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342711773 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341648969 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341297159 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341847004 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342547903 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3416067 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341849478 seconds)
  done (took 89.898011806 seconds)
  (24/24) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341369096 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.341475337 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341205937 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342519425 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341435131 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341765334 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341606541 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341784726 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340990627 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342246025 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341289685 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343141365 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341682306 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342136715 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341669367 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3416737 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341285424 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341323333 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341417684 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342170608 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342593796 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341271263 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341976426 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341504827 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342718948 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341087065 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341523766 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341919927 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341550888 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341047391 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341341017 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340965496 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341196197 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.340700859 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34111058 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343476325 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341230614 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341057246 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341429642 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341205172 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341213603 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342026084 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347392534 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34140642 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342968667 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341506686 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340892202 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341118183 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341191304 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341082482 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345552488 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342613377 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342234269 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341771204 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341499969 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341340951 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341217064 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344205082 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341928204 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341553632 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341205646 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341683912 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342250951 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341368744 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341855585 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341509347 seconds)
  done (took 89.902264328 seconds)
done (took 1799.926280417 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.505953355 seconds)
    (2/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.590946941 seconds)
    (3/16) benchmarking ("ctranspose!", (20000, 20000))...
    done (took 2.379755772 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.348910281 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.379590526 seconds)
    (6/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.35553739 seconds)
    (7/16) benchmarking ("transpose", (600, 600))...
    done (took 1.809984621 seconds)
    (8/16) benchmarking ("ctranspose!", (600, 600))...
    done (took 1.529821577 seconds)
    (9/16) benchmarking ("ctranspose", (600, 400))...
    done (took 1.764970642 seconds)
    (10/16) benchmarking ("ctranspose", (600, 600))...
    done (took 1.961777883 seconds)
    (11/16) benchmarking ("transpose", (600, 400))...
    done (took 1.64450371 seconds)
    (12/16) benchmarking ("ctranspose!", (600, 400))...
    done (took 1.46033326 seconds)
    (13/16) benchmarking ("ctranspose", (20000, 10000))...
    done (took 2.378088232 seconds)
    (14/16) benchmarking ("ctranspose", (20000, 20000))...
    done (took 2.575646413 seconds)
    (15/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.437310183 seconds)
    (16/16) benchmarking ("ctranspose!", (20000, 10000))...
    done (took 2.341797983 seconds)
  done (took 33.80533228 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.369020209 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.350696262 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.432782641 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.342987248 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.363806315 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.4872337 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.389586283 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.349159229 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 2.335216727 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.361781671 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.334321503 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.360692752 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.341208975 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.166595283 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.67798821 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.488397563 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.544859419 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.333351994 seconds)
  done (took 30.371293625 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.6563585 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.497794786 seconds)
  done (took 5.489652661 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.356568262 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.342949144 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.342755056 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.340352226 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.332818041 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.333942565 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.339319432 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.33594396 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.340473613 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.433227408 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.341462853 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.352540605 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.340039289 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.340920015 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.338253885 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.381863339 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.472163036 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.338609324 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.337613544 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.345545943 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.339947719 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.430445597 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.373894069 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.337720902 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.43340645 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.337381926 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.341772292 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.347054618 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.465364607 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.338743921 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.339322876 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.343783425 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.343787884 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.083611466 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.797353054 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.331983733 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.349536825 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.350226781 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.33798117 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.488624615 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.340466839 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.346107629 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.332331435 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.775228438 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.446222754 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.44280301 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.341107424 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.340360284 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.342115798 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.406053957 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.340100817 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.34282082 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.375851728 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.128571521 seconds)
  done (took 85.238212857 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.405742494 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.332544548 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527671057 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.340514969 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.332624501 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.332687183 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.332562227 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.536955684 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.39456269 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.332067056 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.584850742 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.797908265 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.332777157 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.404233623 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.389364183 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.39015173 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.33432267 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.332042496 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.331902938 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.336674112 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800513882 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.336132293 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.336928055 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.535762035 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.36628126 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.817650027 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.332120244 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.341411739 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.340536946 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.331513001 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.778825348 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.336296584 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.408557946 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.333405475 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.572519332 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.646449326 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.622163823 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.338252102 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.333918441 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.339892616 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.339298576 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.807705601 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.643740539 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.337148315 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.332205239 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.806771848 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.332799263 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.346531838 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.340559075 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.596453388 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.33223713 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.332917186 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.332916884 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.332633006 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.332352834 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.407058355 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.408314035 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.818057856 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.333316429 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.332372363 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.414942889 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.329900321 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.336093268 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.332653279 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.334952768 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.635594081 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.239247164 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.328157478 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.632131791 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.757725408 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.321035127 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.831281149 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.321554641 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.341333978 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.474990785 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.317317034 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.317170833 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.802867216 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.370696605 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.310149213 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.597718628 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.31404577 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.562375575 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.31158796 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.311747247 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.790829857 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.313788847 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.36785395 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.304857988 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.30859144 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.304079714 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.305131243 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.54681794 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.355464826 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.305359394 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.305333737 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.377522868 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.299469474 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.300598135 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.300726437 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.810144154 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.302237498 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.294247018 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.295256147 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294751302 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.295011995 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.290194893 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.289856429 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568615721 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.290124764 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.301844153 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.286496385 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.295244726 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.293166666 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.492739635 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.291217851 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.512368134 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.285086023 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.282738967 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.289216319 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.280507322 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.290525046 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.280535798 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.289232048 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.280388125 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.602941944 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.281191357 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.281018583 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.283322116 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.280583936 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.2822438 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.283299291 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.339295908 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.284740899 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.950419911 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.331933629 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.334470238 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.280584048 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.295357353 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.284331873 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.285678979 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.281497495 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.634679225 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.518435893 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.295293505 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.280740553 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.281073543 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.017105806 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.332601896 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479767741 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.283695735 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.280319546 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.584364254 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.186473497 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.279841127 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.278106903 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.278905041 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553987322 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.278117571 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.634782328 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.740327315 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.277090777 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.279032036 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.004612531 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.27698678 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.276678509 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.283321704 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.52651525 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.276279401 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.276947662 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.278138425 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.277588384 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.277239773 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.283112289 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.281912345 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.277669587 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.27809208 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.823861378 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.484990132 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.275408233 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.277544847 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.763694435 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.287072675 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.277729539 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.279730265 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.281567817 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.27730442 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.330914504 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.283578994 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.337327363 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.278728834 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.283447787 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.782383679 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.277283647 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.279527371 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.481970133 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.859304775 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.278165046 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.276532613 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.276145355 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.337209067 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.795353295 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.34222325 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.507518949 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.282991784 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.310686046 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.27707373 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.294269554 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.79299818 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.279699805 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.276839488 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.938951782 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.281324012 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.045974484 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.276889175 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.273469099 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.848876684 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.274221243 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.278792069 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.272340433 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.272145468 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.593992041 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.274200438 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.310400015 seconds)
  done (took 493.462763226 seconds)
done (took 649.706612584 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.272175278 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.273338078 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.273484772 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.273006646 seconds)
  done (took 10.366212507 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.279189275 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.278817388 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.277732702 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.278271876 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.278123329 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.278193406 seconds)
  done (took 8.946866572 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.274338255 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.274127798 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.272383664 seconds)
  done (took 8.096214016 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.435161276 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.264968219 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.555467492 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.275107681 seconds)
  done (took 8.806857074 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.27853046 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.277424255 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.277551166 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.278146926 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.278455585 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.279464607 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.27840808 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.2787619 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.281717906 seconds)
  done (took 12.783854722 seconds)
done (took 50.274915911 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.280172585 seconds)
    (2/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.269636655 seconds)
    (3/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.701133382 seconds)
    (4/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.481525638 seconds)
    (5/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.267792773 seconds)
    (6/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.496791841 seconds)
    (7/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.588254184 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.491570268 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.589164688 seconds)
    (10/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.711751485 seconds)
    (11/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.716373576 seconds)
    (12/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.267511359 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.285354404 seconds)
    (14/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.267760571 seconds)
    (15/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.590021173 seconds)
    (16/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.271097667 seconds)
    (17/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.277692638 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.947716979 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.951383983 seconds)
    (20/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.924856428 seconds)
    (21/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.226466365 seconds)
    (22/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.933356394 seconds)
    (23/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.525355784 seconds)
    (24/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.15910729 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.957335988 seconds)
    (26/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.268131658 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.490600414 seconds)
    (28/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.940996717 seconds)
    (29/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.281396991 seconds)
    (30/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.956525406 seconds)
    (31/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.290241535 seconds)
    (32/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.267330645 seconds)
    (33/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.952369895 seconds)
    (34/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.269731355 seconds)
    (35/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.170463763 seconds)
    (36/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.268214977 seconds)
    (37/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.728239577 seconds)
    (38/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.167227003 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.356947073 seconds)
    (40/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.266814911 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.479343935 seconds)
    (42/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.267146655 seconds)
    (43/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.829643589 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.275054208 seconds)
    (45/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.384161968 seconds)
    (46/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.225726743 seconds)
    (47/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.1968279 seconds)
    (48/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.281960392 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.267119502 seconds)
    (50/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.27039591 seconds)
    (51/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.64234463 seconds)
    (52/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.166247757 seconds)
    (53/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.522851911 seconds)
    (54/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.281449826 seconds)
    (55/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.266335164 seconds)
    (56/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.266715463 seconds)
    (57/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.280881166 seconds)
    (58/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.472142913 seconds)
    (59/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.986278674 seconds)
    (60/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.269749825 seconds)
    (61/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.585841963 seconds)
    (62/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.282351447 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.588706644 seconds)
    (64/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.267845163 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.564645451 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.977026532 seconds)
    (67/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.267224061 seconds)
    (68/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.268286873 seconds)
    (69/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.282155931 seconds)
    (70/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.575879342 seconds)
    (71/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.714095188 seconds)
    (72/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.267007533 seconds)
    (73/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.363354292 seconds)
    (74/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.278163849 seconds)
    (75/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.266724951 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.987271231 seconds)
    (77/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.282952032 seconds)
    (78/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.785019854 seconds)
    (79/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.740844434 seconds)
    (80/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.267420597 seconds)
    (81/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.183702666 seconds)
    (82/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.280159451 seconds)
    (83/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.278934814 seconds)
    (84/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.72598873 seconds)
    (85/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.220904174 seconds)
    (86/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.268265044 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.354898576 seconds)
    (88/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.26643261 seconds)
    (89/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.99005917 seconds)
    (90/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.609048623 seconds)
    (91/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.402499443 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.355959074 seconds)
    (93/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.65690158 seconds)
    (94/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.267821414 seconds)
    (95/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.287009962 seconds)
    (96/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.69229329 seconds)
    (97/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.268054473 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.605217309 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.280553107 seconds)
    (100/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.796422182 seconds)
    (101/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.26813463 seconds)
    (102/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.74424717 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 2.036889877 seconds)
    (104/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.282073725 seconds)
    (105/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.269762767 seconds)
    (106/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.532180262 seconds)
    (107/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.921666515 seconds)
    (108/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.88465367 seconds)
    (109/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.271685087 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.494814231 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.276178242 seconds)
    (112/192) benchmarking ("perf_sum", Float32, false)...
    done (took 2.055622483 seconds)
    (113/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.281338298 seconds)
    (114/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.26646668 seconds)
    (115/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.678962668 seconds)
    (116/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.645638936 seconds)
    (117/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.661728988 seconds)
    (118/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.268428631 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.280905684 seconds)
    (120/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.266879012 seconds)
    (121/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.268774413 seconds)
    (122/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.766289514 seconds)
    (123/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.266504248 seconds)
    (124/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.71669366 seconds)
    (125/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.268947362 seconds)
    (126/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.386707288 seconds)
    (127/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.281703904 seconds)
    (128/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.938547905 seconds)
    (129/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.17782303 seconds)
    (130/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.280121422 seconds)
    (131/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.266949632 seconds)
    (132/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.113324838 seconds)
    (133/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.4868091 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.406436525 seconds)
    (135/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.358790749 seconds)
    (136/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.803582977 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 2.062345367 seconds)
    (138/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.119975488 seconds)
    (139/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.267031608 seconds)
    (140/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.483951164 seconds)
    (141/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.519227661 seconds)
    (142/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.659642155 seconds)
    (143/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.278432161 seconds)
    (144/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.266796901 seconds)
    (145/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.278758787 seconds)
    (146/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.267089003 seconds)
    (147/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.267464753 seconds)
    (148/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.266875544 seconds)
    (149/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.030361125 seconds)
    (150/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.278180492 seconds)
    (151/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.267816762 seconds)
    (152/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.267579421 seconds)
    (153/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.52459318 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.884945337 seconds)
    (155/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.804517403 seconds)
    (156/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.277567936 seconds)
    (157/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.267249564 seconds)
    (158/192) benchmarking ("perf_sum", Float32, true)...
    done (took 2.059876151 seconds)
    (159/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.267876649 seconds)
    (160/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.918186814 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.480528039 seconds)
    (162/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.276178457 seconds)
    (163/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.267245015 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.281091379 seconds)
    (165/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.266720486 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.372692304 seconds)
    (167/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.498111739 seconds)
    (168/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.575778056 seconds)
    (169/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.531745999 seconds)
    (170/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.604596052 seconds)
    (171/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.410705932 seconds)
    (172/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.266812677 seconds)
    (173/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.702551601 seconds)
    (174/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.608233377 seconds)
    (175/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.658234033 seconds)
    (176/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.279200613 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.577257202 seconds)
    (178/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.82728951 seconds)
    (179/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.280837769 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.267184449 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.466786971 seconds)
    (182/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.20403981 seconds)
    (183/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.267172152 seconds)
    (184/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.488852579 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.278159331 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.280487078 seconds)
    (187/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.379083674 seconds)
    (188/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.651659001 seconds)
    (189/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.744665848 seconds)
    (190/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.384399548 seconds)
    (191/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.268210157 seconds)
    (192/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.273766811 seconds)
  done (took 363.655391635 seconds)
done (took 364.927519593 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.29698774 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.915234258 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.274487027 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.27472734 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.275555117 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.268325587 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.286758094 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.274873371 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.278804496 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.278758326 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.268113022 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.274198461 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.291018796 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.276097583 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.291104429 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.275464434 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.27464452 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.275424383 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.27978294 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.285198529 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.27592709 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.276238793 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.292905401 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.275254631 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.284709208 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.283260954 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.28042323 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.266918221 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.27313436 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.279809636 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.267549135 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.281621882 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.281712856 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.276085911 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.276573755 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.276483859 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.278776739 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.916909354 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.285315144 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.275795477 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.273672401 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.281273308 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.280678591 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.280016967 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.276176867 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.292152847 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.283191819 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.293550128 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.266881616 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.267702367 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.295907446 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.278883095 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.273649222 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.266320574 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.267409896 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.290887918 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.275165201 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.2944686 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.27212057 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27596672 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.291278593 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.294661945 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.278400237 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.282679143 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.272499849 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.290078934 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.274536195 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.285619572 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.273274228 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.276430089 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.27631935 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.273388715 seconds)
done (took 102.649793354 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/18) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.271823043 seconds)
    (2/18) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.27233107 seconds)
    (3/18) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.404737457 seconds)
    (4/18) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.27257864 seconds)
    (5/18) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.415916033 seconds)
    (6/18) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.272021573 seconds)
    (7/18) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.272179983 seconds)
    (8/18) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.28138669 seconds)
    (9/18) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.274397475 seconds)
    (10/18) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.272280784 seconds)
    (11/18) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.406087709 seconds)
    (12/18) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.272632249 seconds)
    (13/18) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.405769065 seconds)
    (14/18) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.417568192 seconds)
    (15/18) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.405107216 seconds)
    (16/18) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.273615873 seconds)
    (17/18) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.272180817 seconds)
    (18/18) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.272971149 seconds)
  done (took 28.004480869 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.34675167 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.344666681 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.375872972 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.273045588 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.323985865 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.376350035 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.273452817 seconds)
  done (took 10.583257785 seconds)
  (3/5) benchmarking "types"...
    (1/91) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.280135554 seconds)
    (2/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.271583176 seconds)
    (3/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.336194955 seconds)
    (4/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.335801701 seconds)
    (5/91) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.27233386 seconds)
    (6/91) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.46103553 seconds)
    (7/91) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.285654543 seconds)
    (8/91) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.272145588 seconds)
    (9/91) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.337404086 seconds)
    (10/91) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.272202678 seconds)
    (11/91) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.272052216 seconds)
    (12/91) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.281341676 seconds)
    (13/91) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.268199407 seconds)
    (14/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.336318471 seconds)
    (15/91) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.285581878 seconds)
    (16/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.390645104 seconds)
    (17/91) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.275717706 seconds)
    (18/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.272436171 seconds)
    (19/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.448248625 seconds)
    (20/91) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.273550836 seconds)
    (21/91) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.281069103 seconds)
    (22/91) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.331519837 seconds)
    (23/91) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.285359998 seconds)
    (24/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.272314345 seconds)
    (25/91) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.279654412 seconds)
    (26/91) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.272581203 seconds)
    (27/91) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.271912288 seconds)
    (28/91) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.271662024 seconds)
    (29/91) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.349341458 seconds)
    (30/91) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.272036292 seconds)
    (31/91) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.26869512 seconds)
    (32/91) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.271724333 seconds)
    (33/91) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.272595738 seconds)
    (34/91) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.272174476 seconds)
    (35/91) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.272213559 seconds)
    (36/91) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.274108835 seconds)
    (37/91) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.271864868 seconds)
    (38/91) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.271782767 seconds)
    (39/91) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.272640814 seconds)
    (40/91) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.272095477 seconds)
    (41/91) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.272344958 seconds)
    (42/91) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.296371123 seconds)
    (43/91) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.272186676 seconds)
    (44/91) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.272688861 seconds)
    (45/91) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.272276859 seconds)
    (46/91) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.272136678 seconds)
    (47/91) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.330898551 seconds)
    (48/91) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.271919692 seconds)
    (49/91) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.272156626 seconds)
    (50/91) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.273762005 seconds)
    (51/91) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.336341731 seconds)
    (52/91) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.281779321 seconds)
    (53/91) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.272422051 seconds)
    (54/91) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.272208518 seconds)
    (55/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.272521392 seconds)
    (56/91) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.271835628 seconds)
    (57/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.448514599 seconds)
    (58/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.335547775 seconds)
    (59/91) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.271936641 seconds)
    (60/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.335765376 seconds)
    (61/91) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.272587025 seconds)
    (62/91) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.272312042 seconds)
    (63/91) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.27184215 seconds)
    (64/91) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.271950877 seconds)
    (65/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.344712137 seconds)
    (66/91) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.272102331 seconds)
    (67/91) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.335341911 seconds)
    (68/91) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.272023359 seconds)
    (69/91) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.4628763 seconds)
    (70/91) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.296980863 seconds)
    (71/91) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.272681672 seconds)
    (72/91) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.277314155 seconds)
    (73/91) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.277572571 seconds)
    (74/91) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.273725959 seconds)
    (75/91) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.279537498 seconds)
    (76/91) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.271658113 seconds)
    (77/91) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.275428316 seconds)
    (78/91) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.280467699 seconds)
    (79/91) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.272114588 seconds)
    (80/91) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.271721995 seconds)
    (81/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.466434336 seconds)
    (82/91) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.271908392 seconds)
    (83/91) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.291465295 seconds)
    (84/91) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.281240846 seconds)
    (85/91) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.272076407 seconds)
    (86/91) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.331677117 seconds)
    (87/91) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.271948625 seconds)
    (88/91) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.271738395 seconds)
    (89/91) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356173373 seconds)
    (90/91) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.390747912 seconds)
    (91/91) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.337489008 seconds)
  done (took 123.382148892 seconds)
  (4/5) benchmarking "randstring"...
    (1/2) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.291019331 seconds)
    (2/2) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.276687853 seconds)
  done (took 3.836788199 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.276163663 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.272670503 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.27224418 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.271981935 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.273038204 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.272317223 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.272715642 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.274333564 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.273549088 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.272296262 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.272292209 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.273293256 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.27302663 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.273673893 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.272656443 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.27202462 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.272543559 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.273854097 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.272146038 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.272851594 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 1.882088327 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.273093192 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.273398266 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.272833911 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.27275149 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.272423405 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.29925499 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.272450171 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.272287447 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.282042718 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.274662397 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.27221105 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.273913988 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.277132463 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.273383292 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.273632966 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.273362761 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.273675543 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.272517542 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.272920997 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.273830775 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.27334902 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.272316091 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.274055098 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.274579994 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.273921798 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.273731571 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.298872318 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.273912975 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.273770139 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.273611452 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.271944247 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.272555002 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.273796951 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.275306747 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.275651478 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.273888527 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.27285833 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.273232809 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.27360183 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.273519919 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.272301001 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.274534874 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.273108678 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.272781351 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.273481937 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.273847582 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.273388506 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.273272902 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.272315727 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.273339256 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.272195712 seconds)
  done (took 93.61848994 seconds)
done (took 260.694797715 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.175660592 seconds)
  done (took 4.444277513 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.593779552 seconds)
  done (took 3.863092101 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.904726904 seconds)
  done (took 10.180710462 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.309043784 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.290168953 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.275679038 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.271929753 seconds)
  done (took 10.415413899 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.891173325 seconds)
  done (took 4.16077299 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.267205819 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.275613547 seconds)
  done (took 5.813051021 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.448001116 seconds)
  done (took 3.717842133 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.403431948 seconds)
  done (took 3.680228841 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.267548555 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.268030619 seconds)
  done (took 5.811997071 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.274211481 seconds)
  done (took 3.543528623 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.856690692 seconds)
  done (took 9.125756854 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.290793223 seconds)
  done (took 3.562282161 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.31424933 seconds)
  done (took 3.583519749 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.967614336 seconds)
  done (took 4.237109236 seconds)
done (took 77.408997924 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.267180409 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.269175727 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.269145968 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.268100818 seconds)
  done (took 10.342710687 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.338895207 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.325664366 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.348151438 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.327171108 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.330118771 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.331876353 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.312785727 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.298246139 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.333632322 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.328752633 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.331046862 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.324082424 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.339855614 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.298329404 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.330494355 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.344147547 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.328679777 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.337260237 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.298570963 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.323623216 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.273695244 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.331088076 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.324411552 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.273246919 seconds)
  done (took 33.003966056 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.666337897 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.343454156 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.480218472 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.324149068 seconds)
  done (took 7.083457517 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.365395124 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.375463683 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.37764753 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.418911758 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.447510214 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.377306061 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.299755407 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.294846871 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.280158844 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.376400875 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.441010761 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.272167299 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.547710045 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.272445697 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.564012018 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.272439277 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.274680434 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.367947225 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.416138398 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.430933439 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.272833007 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.361862036 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.369399527 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.272363626 seconds)
  done (took 34.019028992 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.280520083 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.290019043 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.274964375 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.274177248 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.27391376 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.275231878 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.287945807 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.27537353 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.28044977 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.273109778 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.273558904 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.274276762 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.28780834 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.273724028 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.273831393 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.280432176 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.276982204 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.280239358 seconds)
    (19/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.27336704 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.274076426 seconds)
    (21/22) benchmarking ("var", "Int64")...
    done (took 1.283585585 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.280639602 seconds)
  done (took 29.388937854 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.267733821 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.268488664 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.618444549 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.523445857 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.267874431 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.267172982 seconds)
  done (took 13.482676618 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.323366348 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.346966629 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.274250783 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.519830607 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.581289969 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.27448234 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.274659795 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.376713185 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.581430766 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.632325921 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.304957082 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.313371395 seconds)
  done (took 18.073584626 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.275721683 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.268067371 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.271499969 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.283176282 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.312744319 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.276435457 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.280406395 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.267382627 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.312796298 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.316962925 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.276557953 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.314157988 seconds)
  done (took 20.726059096 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969034212 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157828887 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26802234 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388325906 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2675655 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.272354564 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401298504 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.685121896 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.272815166 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543396966 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267860776 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850912712 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.274976625 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267688769 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.267331188 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.267275107 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272054341 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950997859 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267396708 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26757741 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.281098401 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.273092207 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.267054768 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.436032355 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.270686623 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267098121 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.614789081 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.267260127 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502856991 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.472407276 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474622351 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269904513 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545194425 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612158953 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409764392 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43380737 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268734281 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.268838744 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.296115251 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.272365476 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278086644 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.269416013 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47137182 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269068472 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.268262837 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267309968 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697140389 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.275896771 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.268174012 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.267725886 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477631828 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854369048 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.273730939 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.267349209 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438796403 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268239043 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.27308641 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463328746 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267515137 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267480447 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269869488 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.268219799 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.275180611 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274644178 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846125878 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.275000232 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.27325543 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.27339053 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284461428 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.273983226 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290293226 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281519032 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.287667729 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267277462 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90642209 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269683886 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273079191 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915502556 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267162168 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.268008797 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278709725 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267723259 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267328798 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.26770712 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.267640771 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001987319 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27390279 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.26827602 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.284082826 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.68533333 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.43364432 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061201082 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.276168395 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.270732709 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.27587459 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269239062 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.270622662 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275367613 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290002546 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.698586335 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285864155 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.273179645 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267411303 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.478888204 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268623826 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.267912897 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.696920495 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.273768852 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.291599749 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267533613 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.427760663 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.754737282 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.474355533 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268645714 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297002432 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.267665536 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059386829 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271613672 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.272887774 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26732989 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.513775499 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.268493287 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267701885 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39066111 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308197129 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.267708527 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273195176 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269392001 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.267525624 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.498482506 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269113651 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.47132357 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.269674841 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267615972 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.272700355 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272212174 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.270000844 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268368983 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267944213 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544583552 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267747173 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278025799 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267702289 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.282166657 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.279871614 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.273696503 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273749136 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269064358 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.267411425 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474357877 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295621996 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411431842 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296672013 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.268131496 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27062481 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.273382837 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.274562276 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272986418 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.270045807 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2745246 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.276112747 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.282296771 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.752925757 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245181263 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.267252377 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.155813439 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.284284669 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388697146 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.276060537 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.429679593 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.274651457 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278416264 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.274949253 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.270997115 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270637328 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.471678841 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.272431336 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442104425 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.685737838 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.762320273 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678500677 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.269171433 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.267808737 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.267621242 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268782962 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269490113 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.267594328 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432122364 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.481057065 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.275592972 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.759580223 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270610966 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.268050921 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.275333095 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.475531644 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.27708453 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268135944 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.267994703 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267822962 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271557653 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.474732151 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548531337 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.28366068 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.267926177 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.830158439 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.276250093 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.268341931 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.26810509 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298274772 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.274571873 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773665389 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28189018 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.278742012 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476613708 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.269725381 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.287141352 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.268838924 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269289525 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269901985 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.276903694 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27503322 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.432218377 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.268704281 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270127337 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277250608 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926499588 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.715069195 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271063036 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.269138087 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.268077037 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.695868002 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281456665 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267857085 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.465396621 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.687049399 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268055571 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686389022 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.272023648 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.855648874 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473056636 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278283097 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269076033 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.268862864 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475832593 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.479686656 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300174869 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.269330579 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277696207 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.272939147 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771548764 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267635324 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446906117 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68673362 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267956264 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.270378168 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.342329826 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.268555981 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580284817 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.267864202 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268114491 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.275645252 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.269583696 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771389423 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.30811934 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268292801 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845496205 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.269714165 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.696099586 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267902158 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.434668938 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.475368429 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.53963921 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.269612188 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.267901284 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.270116095 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.476674714 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285638168 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.270401257 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708611853 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.115941654 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.275297985 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268979102 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064972857 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26842565 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501160125 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.273608631 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.26822458 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308686702 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.268181972 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268277287 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.267742698 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.303972167 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246856398 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81219574 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.28400451 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278672308 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.273131075 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27842469 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27864562 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.28434817 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.75051878 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282970426 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271442891 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296758994 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.273693227 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276587399 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.273942497 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.269968583 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.285079085 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425251817 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.268733283 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276768258 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.280179355 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396607438 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.480143448 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.268956675 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.270105776 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466341615 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.268885967 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.275689837 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947422846 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.283101763 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.270216803 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269541164 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27106564 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.285281499 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392016528 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43022425 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.473669337 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.476340952 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580116347 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268679652 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.271140903 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.999158316 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976572142 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271090016 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.27151085 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.270133908 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.754651695 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919092278 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.764015683 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479506537 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.269660328 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299981239 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268392306 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581873112 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267906617 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543446985 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274090313 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.275008725 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290405066 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273661712 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271611128 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.478595384 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542163294 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268144173 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268215325 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2685681 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.268690114 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474765766 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.480113648 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943237679 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908908248 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268641264 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.268254465 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.69922573 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543905134 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268247763 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.270443098 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268239379 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.277362649 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.269086501 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.276331674 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277266578 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551168008 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.470458277 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.61570821 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.468456177 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 16.147158063 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.143990048 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275402956 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272877594 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268930553 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.429944711 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.746654413 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.858506624 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278764155 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392767367 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.436259408 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.269138998 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582695279 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.268403956 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.268270463 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269145271 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279476104 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.26866107 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.469506817 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768491197 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278873694 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.274770424 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.268357259 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.268412126 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.428408864 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.276319626 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006651364 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.269921472 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473334454 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306820793 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.269130823 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.753449498 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476240887 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270262873 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.273833292 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462000598 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.270791506 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.306386266 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.145211809 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.268492494 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064711002 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.478402055 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064145405 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271025081 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.862474308 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767441533 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.278579662 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819533595 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267911703 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268267395 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544634104 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.277736544 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.270398959 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.554572184 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.273897215 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.272235494 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43395018 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.749572609 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858178447 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.279892524 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268304567 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.270592716 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268618199 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390727843 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274835596 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281723362 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.660793006 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.268882065 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281539666 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.834111347 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.273816584 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270570609 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.26857744 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268755163 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.276489502 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.296567569 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.269472953 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.272195681 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460799099 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.7732327 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293090619 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.894235198 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.604563791 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.272478989 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275347661 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.281935694 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.274955892 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.26840868 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268499308 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268367762 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.286461115 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061638956 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.268299363 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.47107846 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.275247449 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.478708317 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.480750124 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.270181982 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.435104999 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.272823831 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287529363 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.276389397 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269521887 seconds)
  done (took 965.119168084 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.305707932 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.310150599 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.290311697 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.339923586 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.32572185 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.386750249 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.327700153 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.388291571 seconds)
  done (took 19.94605631 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.268453104 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.280442864 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.277436722 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.280431733 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.275474882 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.514577525 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.270835786 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.280361644 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.285429271 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.270335845 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.273767125 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.650376126 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.280202774 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.273362169 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.269165354 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.279855036 seconds)
  done (took 30.316617016 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.948958935 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.299438003 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.317889274 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.306730514 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.286801123 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.269747644 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.400005549 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.270551672 seconds)
  done (took 22.372774142 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.28585377 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.28609123 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.28550356 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.286138124 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.286599674 seconds)
  done (took 7.701190427 seconds)
done (took 1212.84661816 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.274295121 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.274948122 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.276662789 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.276896525 seconds)
  done (took 6.372880695 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.270731492 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.269522125 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.268904233 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.687284126 seconds)
  done (took 9.767284 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.58052466 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.715828061 seconds)
  done (took 4.566910027 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.638258714 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.324068221 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.451217811 seconds)
  done (took 5.684609196 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.671054387 seconds)
  done (took 2.942930062 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.7542657 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.723581606 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.431953733 seconds)
  done (took 6.181133202 seconds)
done (took 36.787295082 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.269089158 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.04032795 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.424441623 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.26894712 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.428620426 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.424119294 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.490776386 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.268407992 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.273862451 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.27352813 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.268352716 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.428229102 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.478899359 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.040241719 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.47844808 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.03664523 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.430342749 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.276427959 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.269033169 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.269378841 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.487941178 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.273265575 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.273318741 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.268624567 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.429434346 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.41440851 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.276802918 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.039743474 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.276724482 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.268811542 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.473145886 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.278164487 seconds)
  done (took 79.169923234 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.268539715 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.269518488 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.270201416 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.268838097 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.27462271 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.270691414 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.268759868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.268731395 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.2691384 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.268936826 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.269111301 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.268732811 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.271781477 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.268729003 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.270661677 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.2692087 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.269402183 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.2695744 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.268873256 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.269447592 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.27116409 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.269013575 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.268937848 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.268828316 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.27303749 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.269480382 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.269337153 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.269383095 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.269560405 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.268832239 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.270386772 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.270468651 seconds)
  done (took 73.903744707 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.273850554 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.269785204 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.270624113 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.268770629 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.268835049 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.26981789 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.272386575 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.268762187 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.271341135 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.271369121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.268916927 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.269136023 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.271297444 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.268923549 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.2691486 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.269691312 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.269091675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.268994301 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.26865965 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.268457126 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.268860298 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.269759097 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.268726975 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.273690401 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.268684425 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.27036503 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.269111965 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.278163094 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.269630098 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.268801154 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.271338667 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.277137782 seconds)
  done (took 73.924540752 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.498610356 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.274670281 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.276456261 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.269604554 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.276206245 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.274262778 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.268729476 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.501642958 seconds)
  done (took 13.912061346 seconds)
done (took 242.180555778 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.2686604 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.751890793 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.29638979 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.269387036 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.298708899 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.299412915 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.431989608 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.29643778 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.416574382 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.271003204 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.295900876 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.270843791 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.981631397 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.381626599 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.148944116 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.267321781 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.056222641 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.268936883 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.809788995 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.439408179 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.296494504 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.26997689 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.151097833 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.056790373 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.269302366 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.280158695 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.279783889 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.386859117 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.357606833 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.280419128 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.747501877 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.26924174 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.269095449 seconds)
  done (took 59.707317174 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.274218139 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.274333079 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.274079475 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.27391727 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.274132708 seconds)
    (6/30) benchmarking ("IntSet", "Int", "start")...
    done (took 1.274180666 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.274431635 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.274390555 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.274076335 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.274276658 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.274401668 seconds)
    (12/30) benchmarking ("IntSet", "Int", "next")...
    done (took 1.276328118 seconds)
    (13/30) benchmarking ("IntSet", "Int", "done")...
    done (took 1.27426947 seconds)
    (14/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.274515231 seconds)
    (15/30) benchmarking ("Set", "Int", "next")...
    done (took 1.274750217 seconds)
    (16/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.274543564 seconds)
    (17/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.274616227 seconds)
    (18/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.278983847 seconds)
    (19/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.274803513 seconds)
    (20/30) benchmarking ("Set", "String", "start")...
    done (took 1.274544744 seconds)
    (21/30) benchmarking ("Vector", "String", "next")...
    done (took 1.274893926 seconds)
    (22/30) benchmarking ("Set", "Any", "next")...
    done (took 1.280030335 seconds)
    (23/30) benchmarking ("Vector", "String", "start")...
    done (took 1.274529639 seconds)
    (24/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.27486554 seconds)
    (25/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.274752739 seconds)
    (26/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.274312707 seconds)
    (27/30) benchmarking ("Set", "String", "done")...
    done (took 1.274352875 seconds)
    (28/30) benchmarking ("Set", "Any", "done")...
    done (took 1.27421565 seconds)
    (29/30) benchmarking ("Set", "Int", "start")...
    done (took 1.274833871 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.274446479 seconds)
  done (took 39.517695121 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.274573683 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.966609159 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.269888346 seconds)
    (4/117) benchmarking ("IntSet", "Int", "intersect", "IntSet")...
    done (took 1.279630663 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.583489038 seconds)
    (6/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.598217365 seconds)
    (7/117) benchmarking ("Vector", "Int", "setdiff", "IntSet")...
    done (took 2.097067983 seconds)
    (8/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.503160171 seconds)
    (9/117) benchmarking ("IntSet", "Int", "union!", "Vector")...
    done (took 1.280937012 seconds)
    (10/117) benchmarking ("IntSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.352791914 seconds)
    (11/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.270528848 seconds)
    (12/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.274440179 seconds)
    (13/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.276149638 seconds)
    (14/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.968268667 seconds)
    (15/117) benchmarking ("Vector", "Int", "intersect", "IntSet")...
    done (took 1.307700627 seconds)
    (16/117) benchmarking ("Set", "Int", "setdiff", "IntSet")...
    done (took 1.864343395 seconds)
    (17/117) benchmarking ("Set", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.34528595 seconds)
    (18/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.641625202 seconds)
    (19/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.416989166 seconds)
    (20/117) benchmarking ("Set", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.269973722 seconds)
    (21/117) benchmarking ("IntSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.416058892 seconds)
    (22/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.40225007 seconds)
    (23/117) benchmarking ("IntSet", "Int", "setdiff!", "Vector")...
    done (took 1.278836849 seconds)
    (24/117) benchmarking ("IntSet", "Int", "symdiff!", "Set")...
    done (took 1.283378962 seconds)
    (25/117) benchmarking ("IntSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.307150963 seconds)
    (26/117) benchmarking ("IntSet", "Int", "<", "IntSet")...
    done (took 1.280400802 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.661432263 seconds)
    (28/117) benchmarking ("IntSet", "Int", "union!", "IntSet")...
    done (took 1.280450878 seconds)
    (29/117) benchmarking ("IntSet", "Int", "symdiff!", "IntSet")...
    done (took 1.28158734 seconds)
    (30/117) benchmarking ("IntSet", "Int", "union!", "Set")...
    done (took 1.283157904 seconds)
    (31/117) benchmarking ("IntSet", "Int", "⊆", "self")...
    done (took 1.279529486 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.587804974 seconds)
    (33/117) benchmarking ("Set", "Int", "union", "IntSet")...
    done (took 2.26998258 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.269631866 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.660376195 seconds)
    (36/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.274993461 seconds)
    (37/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.845684443 seconds)
    (38/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.274552896 seconds)
    (39/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.47102086 seconds)
    (40/117) benchmarking ("IntSet", "Int", "intersect", "Set")...
    done (took 1.281536305 seconds)
    (41/117) benchmarking ("IntSet", "Int", "⊆", "Set")...
    done (took 1.275156533 seconds)
    (42/117) benchmarking ("IntSet", "Int", "symdiff", "Vector")...
    done (took 1.282015942 seconds)
    (43/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.271137683 seconds)
    (44/117) benchmarking ("IntSet", "Int", "union", "Set")...
    done (took 1.283079451 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.648698403 seconds)
    (46/117) benchmarking ("IntSet", "Int", "==", "self")...
    done (took 1.274862548 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.308111786 seconds)
    (48/117) benchmarking ("Set", "Int", "setdiff!", "IntSet")...
    done (took 1.594716222 seconds)
    (49/117) benchmarking ("IntSet", "Int", "intersect", "Vector")...
    done (took 1.278513034 seconds)
    (50/117) benchmarking ("Set", "Int", "symdiff", "IntSet")...
    done (took 2.269678842 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "IntSet", "IntSet")...
    done (took 2.269347513 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.648163547 seconds)
    (53/117) benchmarking ("IntSet", "Int", "setdiff!", "Set")...
    done (took 1.280641444 seconds)
    (54/117) benchmarking ("Vector", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 2.2744771 seconds)
    (55/117) benchmarking ("IntSet", "Int", "setdiff", "Set")...
    done (took 1.280355325 seconds)
    (56/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.648699849 seconds)
    (57/117) benchmarking ("IntSet", "Int", "setdiff!", "IntSet")...
    done (took 1.280068197 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.097160097 seconds)
    (59/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.593392029 seconds)
    (60/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet")...
    done (took 1.281020997 seconds)
    (61/117) benchmarking ("IntSet", "Int", "union", "IntSet")...
    done (took 1.281459894 seconds)
    (62/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.270163402 seconds)
    (63/117) benchmarking ("IntSet", "Int", "union", "Vector", "Vector")...
    done (took 2.269782461 seconds)
    (64/117) benchmarking ("Set", "Int", "intersect", "IntSet")...
    done (took 1.347064952 seconds)
    (65/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.269540399 seconds)
    (66/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.269768368 seconds)
    (67/117) benchmarking ("Vector", "Int", "union", "IntSet")...
    done (took 2.281299616 seconds)
    (68/117) benchmarking ("IntSet", "Int", "⊆", "IntSet")...
    done (took 1.279548366 seconds)
    (69/117) benchmarking ("IntSet", "Int", "symdiff", "IntSet", "IntSet")...
    done (took 1.287845008 seconds)
    (70/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.648145302 seconds)
    (71/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.269302631 seconds)
    (72/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.270812447 seconds)
    (73/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.47409808 seconds)
    (74/117) benchmarking ("IntSet", "Int", "⊆", "Vector")...
    done (took 1.277579261 seconds)
    (75/117) benchmarking ("Set", "Int", "union", "IntSet", "IntSet")...
    done (took 2.26926364 seconds)
    (76/117) benchmarking ("IntSet", "Int", "==", "IntSet")...
    done (took 1.275051609 seconds)
    (77/117) benchmarking ("IntSet", "Int", "union", "Vector")...
    done (took 1.281061875 seconds)
    (78/117) benchmarking ("IntSet", "Int", "intersect", "IntSet", "IntSet")...
    done (took 1.284433194 seconds)
    (79/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.275321804 seconds)
    (80/117) benchmarking ("Set", "Int", "⊆", "IntSet")...
    done (took 1.274476941 seconds)
    (81/117) benchmarking ("IntSet", "Int", "intersect", "Set", "Set")...
    done (took 1.37200063 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.397452674 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "IntSet")...
    done (took 1.595702342 seconds)
    (84/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.598986377 seconds)
    (85/117) benchmarking ("IntSet", "Int", "setdiff", "IntSet")...
    done (took 1.280036169 seconds)
    (86/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.407194747 seconds)
    (87/117) benchmarking ("empty", "Int", "<", "IntSet")...
    done (took 1.278911743 seconds)
    (88/117) benchmarking ("Set", "Int", "union")...
    done (took 1.588430322 seconds)
    (89/117) benchmarking ("IntSet", "Int", "symdiff")...
    done (took 1.274627008 seconds)
    (90/117) benchmarking ("empty", "Int", "⊆", "IntSet")...
    done (took 1.278806133 seconds)
    (91/117) benchmarking ("IntSet", "Int", "union")...
    done (took 1.27806558 seconds)
    (92/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.274736927 seconds)
    (93/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.059101957 seconds)
    (94/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.269636879 seconds)
    (95/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.274769909 seconds)
    (96/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.27473999 seconds)
    (97/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.409619787 seconds)
    (98/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.660306099 seconds)
    (99/117) benchmarking ("IntSet", "Int", "symdiff", "Set")...
    done (took 1.283704976 seconds)
    (100/117) benchmarking ("IntSet", "Int", "symdiff!", "Vector")...
    done (took 1.282702805 seconds)
    (101/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.416140978 seconds)
    (102/117) benchmarking ("IntSet", "Int", "union", "Set", "Set")...
    done (took 2.270464069 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "IntSet")...
    done (took 2.269630097 seconds)
    (104/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.595670985 seconds)
    (105/117) benchmarking ("Vector", "Int", "⊆", "IntSet")...
    done (took 1.27493132 seconds)
    (106/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.26902608 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.269871842 seconds)
    (108/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.406940641 seconds)
    (109/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.274493675 seconds)
    (110/117) benchmarking ("IntSet", "Int", "union", "IntSet", "IntSet")...
    done (took 1.28589386 seconds)
    (111/117) benchmarking ("IntSet", "Int", "intersect")...
    done (took 1.279882043 seconds)
    (112/117) benchmarking ("IntSet", "Int", "setdiff", "Vector")...
    done (took 1.278781057 seconds)
    (113/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.501065086 seconds)
    (114/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.59351034 seconds)
    (115/117) benchmarking ("IntSet", "Int", "intersect!", "IntSet")...
    done (took 1.281912814 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.270212196 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.629616758 seconds)
  done (took 187.410466563 seconds)
  (4/6) benchmarking "optimizations"...
    (1/19) benchmarking ("Vector", "concrete", "Void")...
    done (took 1.277349359 seconds)
    (2/19) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.26961208 seconds)
    (3/19) benchmarking ("Set", "concrete", "Void")...
    done (took 2.27012583 seconds)
    (4/19) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.270011942 seconds)
    (5/19) benchmarking ("Dict", "abstract", "Void")...
    done (took 2.270875401 seconds)
    (6/19) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.270923999 seconds)
    (7/19) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.269294417 seconds)
    (8/19) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.269898832 seconds)
    (9/19) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.26885574 seconds)
    (10/19) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.26977966 seconds)
    (11/19) benchmarking ("Dict", "concrete", "Void")...
    done (took 2.270754478 seconds)
    (12/19) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.270771714 seconds)
    (13/19) benchmarking ("BitSet", "Int8")...
    done (took 2.269815627 seconds)
    (14/19) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.270278989 seconds)
    (15/19) benchmarking ("Set", "abstract", "Void")...
    done (took 2.270526289 seconds)
    (16/19) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.270183063 seconds)
    (17/19) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.281827764 seconds)
    (18/19) benchmarking ("Vector", "abstract", "Void")...
    done (took 1.276167828 seconds)
    (19/19) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.270743807 seconds)
  done (took 42.429990655 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/76) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.274745765 seconds)
    (2/76) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.632830673 seconds)
    (3/76) benchmarking ("IntSet", "Int", "in", "true")...
    done (took 1.274325438 seconds)
    (4/76) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.275007299 seconds)
    (5/76) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.315452507 seconds)
    (6/76) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.275071319 seconds)
    (7/76) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.269486141 seconds)
    (8/76) benchmarking ("Vector", "String", "push!")...
    done (took 1.39297248 seconds)
    (9/76) benchmarking ("Set", "String", "in", "false")...
    done (took 1.275559245 seconds)
    (10/76) benchmarking ("Set", "Int", "first")...
    done (took 1.274906115 seconds)
    (11/76) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.275132854 seconds)
    (12/76) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.269227359 seconds)
    (13/76) benchmarking ("IntSet", "Int", "push!", "overwrite")...
    done (took 1.278629524 seconds)
    (14/76) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.661447723 seconds)
    (15/76) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.275417217 seconds)
    (16/76) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.661302332 seconds)
    (17/76) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.275210041 seconds)
    (18/76) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.274809664 seconds)
    (19/76) benchmarking ("Dict", "String", "getindex")...
    done (took 1.275583532 seconds)
    (20/76) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.661437696 seconds)
    (21/76) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.26963809 seconds)
    (22/76) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.587221716 seconds)
    (23/76) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.316699852 seconds)
    (24/76) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.661162926 seconds)
    (25/76) benchmarking ("IntSet", "Int", "length")...
    done (took 1.275387578 seconds)
    (26/76) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.275004953 seconds)
    (27/76) benchmarking ("Vector", "Int", "last")...
    done (took 1.274680567 seconds)
    (28/76) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.660010107 seconds)
    (29/76) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.276351067 seconds)
    (30/76) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.671591024 seconds)
    (31/76) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.276663189 seconds)
    (32/76) benchmarking ("Vector", "Int", "length")...
    done (took 1.274658029 seconds)
    (33/76) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.316506 seconds)
    (34/76) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.317445305 seconds)
    (35/76) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.269763825 seconds)
    (36/76) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.589969636 seconds)
    (37/76) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.302017797 seconds)
    (38/76) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.394783115 seconds)
    (39/76) benchmarking ("Dict", "Int", "first")...
    done (took 1.275957968 seconds)
    (40/76) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.277133148 seconds)
    (41/76) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.665317545 seconds)
    (42/76) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.277025362 seconds)
    (43/76) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.277546421 seconds)
    (44/76) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.280212151 seconds)
    (45/76) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.637863735 seconds)
    (46/76) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.64044841 seconds)
    (47/76) benchmarking ("Dict", "Int", "length")...
    done (took 1.275202725 seconds)
    (48/76) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.275225555 seconds)
    (49/76) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.661146159 seconds)
    (50/76) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.640144541 seconds)
    (51/76) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.634039528 seconds)
    (52/76) benchmarking ("Vector", "Int", "push!")...
    done (took 1.390743403 seconds)
    (53/76) benchmarking ("IntSet", "Int", "first")...
    done (took 1.274999117 seconds)
    (54/76) benchmarking ("Vector", "String", "getindex")...
    done (took 1.275124376 seconds)
    (55/76) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.5869539 seconds)
    (56/76) benchmarking ("Vector", "Int", "first")...
    done (took 1.275266615 seconds)
    (57/76) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.665201756 seconds)
    (58/76) benchmarking ("IntSet", "Int", "pop!", "unspecified")...
    done (took 1.278929691 seconds)
    (59/76) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.274830474 seconds)
    (60/76) benchmarking ("Set", "String", "in", "true")...
    done (took 1.276625798 seconds)
    (61/76) benchmarking ("IntSet", "Int", "in", "false")...
    done (took 1.274456391 seconds)
    (62/76) benchmarking ("IntSet", "Int", "pop!", "specified")...
    done (took 1.278265844 seconds)
    (63/76) benchmarking ("Vector", "Any", "push!")...
    done (took 1.393731882 seconds)
    (64/76) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.661511572 seconds)
    (65/76) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.587102909 seconds)
    (66/76) benchmarking ("IntSet", "Int", "push!", "new")...
    done (took 1.278695899 seconds)
    (67/76) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.270184048 seconds)
    (68/76) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.270426681 seconds)
    (69/76) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.275331875 seconds)
    (70/76) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.31758118 seconds)
    (71/76) benchmarking ("Set", "Int", "length")...
    done (took 1.275294153 seconds)
    (72/76) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.269507813 seconds)
    (73/76) benchmarking ("IntSet", "Int", "last")...
    done (took 1.275419466 seconds)
    (74/76) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.316059575 seconds)
    (75/76) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.596678858 seconds)
    (76/76) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.270568138 seconds)
  done (took 114.179335977 seconds)
  (6/6) benchmarking "deletion"...
    (1/19) benchmarking ("Vector", "String", "pop!")...
    done (took 1.367434981 seconds)
    (2/19) benchmarking ("Set", "Int", "filter!")...
    done (took 1.714176673 seconds)
    (3/19) benchmarking ("Set", "String", "filter!")...
    done (took 2.269977479 seconds)
    (4/19) benchmarking ("Set", "Any", "pop!")...
    done (took 2.269899885 seconds)
    (5/19) benchmarking ("Vector", "Any", "filter")...
    done (took 1.385055532 seconds)
    (6/19) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.366641746 seconds)
    (7/19) benchmarking ("Vector", "String", "filter")...
    done (took 1.47012185 seconds)
    (8/19) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.333470597 seconds)
    (9/19) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.325743748 seconds)
    (10/19) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.367172642 seconds)
    (11/19) benchmarking ("Vector", "String", "filter!")...
    done (took 1.383923272 seconds)
    (12/19) benchmarking ("Set", "Int", "pop!")...
    done (took 1.707420969 seconds)
    (13/19) benchmarking ("Set", "Any", "filter!")...
    done (took 2.26986094 seconds)
    (14/19) benchmarking ("Vector", "Int", "filter")...
    done (took 1.347747067 seconds)
    (15/19) benchmarking ("Set", "String", "filter")...
    done (took 1.8700022 seconds)
    (16/19) benchmarking ("Set", "Int", "filter")...
    done (took 1.49267098 seconds)
    (17/19) benchmarking ("Set", "Any", "filter")...
    done (took 2.04685575 seconds)
    (18/19) benchmarking ("Set", "String", "pop!")...
    done (took 2.273559061 seconds)
    (19/19) benchmarking ("IntSet", "Int", "pop!")...
    done (took 1.409833813 seconds)
  done (took 32.94445234 seconds)
done (took 477.460385281 seconds)
SAVING RESULT...
DONE!
