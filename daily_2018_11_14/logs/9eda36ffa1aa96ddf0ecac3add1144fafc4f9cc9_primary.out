cset: moving following pidspec: 21862
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.252904525 seconds)
loading group "string"... done (took 0.559463107 seconds)
loading group "linalg"... done (took 7.667635677 seconds)
loading group "parallel"... done (took 0.174641305 seconds)
loading group "find"... done (took 1.193129219 seconds)
loading group "tuple"... done (took 1.876246258 seconds)
loading group "dates"... done (took 1.273292371 seconds)
loading group "micro"... done (took 0.236417468 seconds)
loading group "io"... done (took 0.773312564 seconds)
loading group "scalar"... done (took 42.860724464 seconds)
loading group "sparse"... done (took 13.233825584 seconds)
loading group "broadcast"... done (took 1.206938299 seconds)
loading group "union"... done (took 14.147842349 seconds)
loading group "simd"... done (took 4.994980945 seconds)
loading group "random"... done (took 9.97803101 seconds)
loading group "problem"... done (took 2.227912862 seconds)
loading group "array"... done (took 23.041927108 seconds)
loading group "misc"... done (took 2.176802722 seconds)
loading group "sort"... done (took 3.503166593 seconds)
loading group "collection"... done (took 19.700972663 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.591288513 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142888634 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151171698 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14993784 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.194675643 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158925779 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15991453 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098495408 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.994640432 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.176590779 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152816343 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.522682922 seconds)
done (took 5.292616997 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.238654919 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097451063 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106441853 seconds)
  done (took 0.947751893 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078571958 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147518987 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.09695055 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079266017 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097875611 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079004727 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096129792 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.081574279 seconds)
  done (took 1.424243358 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088549434 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099475898 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082980967 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.099337326 seconds)
  done (took 1.116331033 seconds)
done (took 4.561220244 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.75856281 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.283609053 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.207762882 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.476489505 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.202087834 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.222339963 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685951587 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.346209607 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.258290596 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103848095 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147276514 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395939809 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.141118853 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.688344076 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092788249 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127413172 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.182461715 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448069625 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082410267 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111836929 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119874948 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144407881 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.134601879 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.096440125 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.191191379 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.0814314 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.20391553 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111743776 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081020012 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289837638 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202269951 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692995389 seconds)
  done (took 11.10043934 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113928709 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13761317 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100751078 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140961229 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138205559 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.103305655 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085301387 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.099818431 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125972568 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.18038012 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133747866 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.122759289 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098864858 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083553368 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11845957 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250898058 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12447049 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10574621 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.104146017 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107255103 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123983745 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116858255 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112272957 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094604718 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170284701 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.226862453 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113574892 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129237138 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100373293 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115073027 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146479428 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145235269 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.098860003 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081633682 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176373024 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12810521 seconds)
  done (took 5.316599901 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.107578142 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195728614 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.125698415 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.176547567 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.160550841 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081112326 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147846205 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.099535474 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118998598 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.265018473 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.200160112 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181604624 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.147484098 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102812324 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10043433 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082954116 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.100132394 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.640863586 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1656404 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.141717305 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098611681 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106644264 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102865702 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366396117 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089221406 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098651445 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082305396 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083952001 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165217815 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083283629 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.187189018 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.104772076 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103697832 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135119504 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196367077 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129562894 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12071602 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099419352 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078075999 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.199053236 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081319935 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106450076 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081064151 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123252911 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136757689 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121210889 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.10071948 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099742556 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.209099359 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.100070404 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099837575 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.961781529 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183015406 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.106429164 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097967246 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.331436676 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10699528 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101039972 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079034936 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.287912718 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.188661861 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101511132 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081463528 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099326471 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082684665 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.402647647 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083016925 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.739137132 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084308534 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.110429583 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084446018 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100486788 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106275144 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089784819 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119544215 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.0789271 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099776756 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082360303 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.100743062 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079528591 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.102658657 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110513852 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090327435 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09912961 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150479261 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097242936 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100226442 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130531259 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102519213 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07940267 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13409215 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103500824 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082300247 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136000719 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101367875 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.093574695 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101627544 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14322182 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100533982 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.144604796 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080449098 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128509509 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102006705 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115612899 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115645185 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101185618 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085852052 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098546316 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07834176 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096210505 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079704021 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167296298 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084747958 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100173216 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112495032 seconds)
  done (took 22.958694258 seconds)
done (took 41.229367409 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.330580725 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107680335 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107745669 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107506852 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104423824 seconds)
  done (took 1.581417544 seconds)
done (took 2.37443662 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.302032679 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.179586347 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09930027 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.175018999 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096679632 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1809351 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.165958727 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114755583 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209275308 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098797813 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.169850494 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097443343 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078140629 seconds)
  done (took 2.790813387 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09770801 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118356106 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083445451 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114506267 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077596812 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115506825 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094158262 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121066706 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113368411 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089328729 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097213255 seconds)
  done (took 1.913676721 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096867839 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116794406 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084634953 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113657864 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07770366 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11417337 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093764171 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120083038 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112990736 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088140613 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097056449 seconds)
  done (took 1.906108224 seconds)
done (took 7.393804944 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093724024 seconds)
  done (took 0.876869593 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.963439473 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.072515876 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114959236 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.153428378 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.313165423 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.198325402 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.488566263 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130117961 seconds)
  done (took 11.43555072 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.149658707 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.088444094 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.107274809 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085223048 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.106837761 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088076534 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.106723092 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.103093488 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085951358 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.102587792 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086752482 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.103080195 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.106284107 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.088321978 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103590445 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084604666 seconds)
  done (took 2.447437096 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120673686 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120605302 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110933679 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112164224 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089211675 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.110834873 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109740912 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090476705 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.106417 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.107673422 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.0920357 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109781178 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106871777 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081459515 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110438269 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11183857 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087378638 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110199787 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.110754583 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091394773 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.111328474 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100001845 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08875368 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.110681189 seconds)
  done (took 3.406085994 seconds)
done (took 18.953685494 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.166974801 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112232272 seconds)
  done (took 1.067284052 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098520262 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117180301 seconds)
  done (took 1.011136603 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100803953 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.100197325 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12612496 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114255423 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082502444 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100524386 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124827567 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081723727 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.101023342 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081095569 seconds)
  done (took 1.813798824 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085396717 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.113948249 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104871664 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097494727 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110168686 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098566688 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090367292 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.103074179 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113185798 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079006377 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106116107 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118187378 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08739055 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.120488082 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.108142143 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084127971 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107614543 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102593225 seconds)
  done (took 2.6317362 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082552478 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100076427 seconds)
  done (took 0.98403278 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08442084 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097626719 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082749568 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100930311 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.097567952 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.0795077 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097954388 seconds)
  done (took 1.440698614 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.507270493 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139066412 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262941675 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086867199 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124857725 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.311016056 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.10210135 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0871065 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107650627 seconds)
  done (took 2.592152519 seconds)
done (took 12.334939123 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09614473 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.12071872 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114596439 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.482443894 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110190141 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.102523274 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149271325 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.257871346 seconds)
done (took 2.237973906 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.146879184 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334402031 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119702388 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068757212 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.102020056 seconds)
  done (took 1.431721515 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08243812 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102686875 seconds)
  done (took 0.990269269 seconds)
done (took 3.381033374 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083642778 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.136334956 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08061658 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.10269271 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.078457211 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.103281264 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.078541261 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.100895176 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081081822 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.101267391 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.098894525 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082643598 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099316316 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080262601 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097415371 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080648706 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099848145 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079902266 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.097419841 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080077109 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097877621 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082758292 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.098016107 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079147176 seconds)
  done (took 3.046012767 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10232948 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.10374818 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10676869 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088774874 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105935967 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086363142 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.107245061 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101523557 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088130948 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103100009 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10374326 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086781654 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102652213 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085852544 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103585652 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104672305 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088302203 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10139543 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084302525 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105104932 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.106181789 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083105394 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104576855 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105150777 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086193701 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104783254 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083650113 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101087596 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105696117 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086003648 seconds)
  done (took 3.738847596 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088189853 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097158967 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080500065 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.106595376 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079739144 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100352739 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079385116 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099111415 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08091697 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.099371705 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080887455 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099318806 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07930292 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.1009549 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079383938 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.104254801 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111098944 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080327808 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098553444 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08083144 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.102047831 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079961039 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098320174 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07976628 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098627512 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079173278 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09881228 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079533938 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099867487 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079301961 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102407118 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082796676 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.099226064 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08539244 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102543449 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078595303 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102730321 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078761609 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.101445958 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096654963 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081122938 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097102715 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081298083 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104367802 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080846269 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.101166323 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080241848 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100761754 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.08020704 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102184086 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07923135 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.099071533 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081140216 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100892093 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083140281 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.099113159 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09811664 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080937939 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099358061 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080632978 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.098135217 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08075449 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100701794 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081299864 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.116082105 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087105595 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098812203 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081037552 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101405025 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081016504 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101771773 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111424703 seconds)
  done (took 7.41703859 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086031755 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109697817 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082191109 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101377307 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077480736 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100613483 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101965057 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081291713 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100306207 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087343925 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100835699 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080735975 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101760426 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110802705 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082234804 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100133862 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087136131 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09789339 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079634671 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103744877 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080236914 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104417482 seconds)
  done (took 2.873727433 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.215516965 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.110325677 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146389547 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.111660584 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085010243 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11010932 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.106088859 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089153292 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106554611 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084769463 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105052063 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106145489 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08503274 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104803127 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103689858 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087988033 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106182279 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08650543 seconds)
  done (took 2.771417743 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096844904 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102517613 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104438932 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.104001043 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103016233 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085738157 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107743745 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110807695 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086560768 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.101844985 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091642372 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105355336 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104328523 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083636737 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104989517 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083201711 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105158574 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082197608 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11250168 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10820527 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107046664 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094262022 seconds)
  done (took 3.007715165 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099946748 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104750256 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.122287523 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087493632 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098649945 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081453084 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109981162 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082552376 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111485734 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103296633 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083574007 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100742392 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089598851 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102589592 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107302889 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083694648 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104040485 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083184031 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10425463 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078360443 seconds)
  done (took 2.761830409 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105182594 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.215030913 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102032583 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094721166 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104111941 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084611747 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114089207 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104090021 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084880811 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129831629 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104241768 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083927924 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114500635 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110465352 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102542014 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095990749 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113794897 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113642443 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08508739 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10458072 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129564831 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083999228 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113349323 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10387119 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08519367 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104134763 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102999576 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091322083 seconds)
  done (took 3.806100779 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083876969 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100986399 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081631573 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099160212 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081488142 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099465006 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081877399 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099187287 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083410264 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098916173 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083231304 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101869585 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085594362 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102646665 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082523503 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.10250802 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083778543 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.10034178 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081410361 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100403764 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082646436 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103385127 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082559464 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100835445 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079839387 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102866414 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079866663 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100414174 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082101539 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100665654 seconds)
  done (took 3.57740635 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.094358901 seconds)
    (2/2) benchmarking "in"...
    done (took 0.110754938 seconds)
  done (took 1.03171775 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081913679 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118478166 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080003794 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106999181 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087924828 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.105009172 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111493025 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087956222 seconds)
  done (took 1.607050713 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100004219 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114319429 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084715346 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116895596 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113374091 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097938262 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169819531 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104885262 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088279934 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102738757 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116079404 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083486073 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108345656 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08427821 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10854697 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090829793 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101867563 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089819477 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.106890909 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10142162 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085506861 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114117743 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085658955 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100554796 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084442609 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.115556018 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111974415 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085179692 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107490965 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111905941 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090126265 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096871039 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084243116 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104014395 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081243881 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113428904 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115615746 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088359444 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112360242 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084734665 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114875749 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09733879 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090424105 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109258296 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093323401 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104475259 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084336399 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.099780691 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080833573 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106774319 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098282581 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084829344 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097179809 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091571338 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107387633 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115479827 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084679938 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10561698 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087578988 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106766193 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09024635 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106304546 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085776491 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103734792 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110594052 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089041195 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110827003 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.082388838 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098831977 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082149363 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112520031 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127551837 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092885688 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105611136 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084721224 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102559409 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107057565 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087248171 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110764059 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092011158 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.105129789 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111336017 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092616004 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.1044741 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087029633 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112774675 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101046255 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08732835 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.101348551 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098666126 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103467716 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081479884 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.10213332 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112317829 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088406249 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103046188 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081809592 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111673806 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07833298 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105600589 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085157214 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10505035 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112059332 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091437351 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110453991 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110594279 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092391602 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103809626 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087411513 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.10039998 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085807916 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.107300226 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090953392 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09892993 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105501909 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087160726 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105461181 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091744419 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.103328736 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084464411 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112540691 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109987345 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.08431286 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.100613483 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087215777 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.104103714 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087944173 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.11147025 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102426762 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080576091 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099041203 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089234921 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10373433 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089496089 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110501331 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106856502 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079606659 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102204743 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090065987 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112537138 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084037497 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10533978 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108749601 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085054015 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.103819732 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090361583 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106597231 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083087776 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109768901 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085428713 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.100924344 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108160006 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087700454 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.103116284 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089342182 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109795196 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086061552 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106429916 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102434752 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091230879 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105493107 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.0829319 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104998816 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082749371 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114260869 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105517063 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081097551 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101708816 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093171954 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.102023018 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08455713 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104449088 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086058557 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10675256 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102212975 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085109424 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106141884 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097316582 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110140479 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105557074 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090745017 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.114020179 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084873994 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107053022 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084282945 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107414571 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105682464 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09248657 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110296327 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090331125 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107868736 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080792734 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111992928 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112339685 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083604644 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.102535834 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083270294 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.109384273 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109702938 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089930456 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106913078 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083203413 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105568839 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088761667 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107895991 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103559368 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084532362 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.109911947 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.084070473 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.112692162 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084945275 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115415892 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107926303 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.08051368 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109858264 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082589001 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.111594921 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078799259 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.103369921 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102961093 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088068109 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103366519 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087392786 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.098338314 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091761994 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113710259 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08473566 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.105334086 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104093196 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095026853 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.106428655 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087991292 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108909977 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089759284 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118714082 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103943769 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088474957 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11464224 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.084043528 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100146738 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089080619 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.105202747 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103644522 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085444007 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.1030208 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088142454 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115264097 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108485231 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079686408 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106931433 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083818358 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.10276342 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080712763 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112056581 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088213814 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.108063277 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113711545 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087301459 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106632892 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08879419 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105844361 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086318183 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.107003971 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108058462 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08640929 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10751508 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084545656 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.108161334 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084321224 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.106560445 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08625839 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.106703152 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083788528 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113151897 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104313122 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085500847 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.108432855 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08681331 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107448646 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084906855 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104957187 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107925071 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086770695 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105154122 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088217149 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.100956704 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092959319 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105775176 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092209638 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.106452246 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100923729 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091514611 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107895642 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.091372169 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.106735957 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104392128 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087795375 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10441733 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088717453 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114461272 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082977566 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115206765 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110457397 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086809615 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.108500988 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084675846 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.10684661 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084530226 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.107200937 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085863935 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10653792 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084243468 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111970676 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.108317869 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086770004 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.107744922 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086549182 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.106342615 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086219616 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.100573587 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083588246 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106868931 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105613318 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093799823 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.106919166 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087690179 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.105340096 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086674091 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.105647813 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081226948 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.115191513 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116794279 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085593692 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115715633 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104343579 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086975316 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115039994 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080113584 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.105310183 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08256237 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.104435751 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112283088 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08753114 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113625247 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085317183 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105249794 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082999236 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10779108 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083624381 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100558225 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083263998 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110639478 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.107456234 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085534255 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107469008 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089076945 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108184384 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10109326 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106293118 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086315351 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10713589 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103533307 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085341505 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104227109 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.089542466 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.107968586 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083330807 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.103913032 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084935561 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.108800077 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085230772 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.106679776 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106831331 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093229659 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106129727 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088495182 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111042654 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079221797 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109782371 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.105992205 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086735928 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.1047417 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090236547 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109994664 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087130856 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11408558 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105798159 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088553552 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106238328 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084639856 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105654064 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085643226 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108048897 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08473057 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.108244699 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114206691 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08473882 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108243686 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085500751 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.107360849 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090630271 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108115993 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086499522 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115424171 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.109340554 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086452247 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113403455 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088670687 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110603849 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107284417 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087748116 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112879241 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084549126 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115007064 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084793934 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107935706 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107070861 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084189021 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106140368 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086232173 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105404739 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091103307 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.108010461 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084346393 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.106025213 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082510833 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109394848 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110664708 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094217509 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108983954 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088004513 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.102784564 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081886219 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108026844 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103781687 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088680583 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109250583 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092295545 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.109246248 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086268202 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10641073 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092521833 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114151356 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.111771086 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083975266 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.111747138 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087611828 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109665769 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086036108 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.108324893 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107736339 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092348031 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.108710469 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08546028 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115688175 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088808489 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109434344 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.108454837 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086897466 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107018285 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.08187215 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10829286 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087752385 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114334784 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10837724 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087218028 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115964441 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085243088 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.106700378 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089957405 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107822167 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.113736309 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082149228 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107216839 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087538932 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109650955 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080635749 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.106361711 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083111978 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.109857476 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084661948 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.103455309 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115764618 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094054063 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.109136383 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085014603 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106859554 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08150489 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103104259 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084464875 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109382036 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.108249658 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096196035 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106142409 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085439148 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.103888103 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086532708 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111482147 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109557937 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085313557 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.10206679 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086331534 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108465944 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093590874 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10663458 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08574269 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111392738 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.0871034 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.106589738 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110546798 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083279657 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111062305 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096763941 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109443698 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086451581 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114319333 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114911302 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087569686 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104056598 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088087108 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.109760739 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085592523 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.110121017 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10844298 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100470313 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110992906 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084587616 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10757336 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108846279 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08755876 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113531498 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088124451 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108662195 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090009875 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.10995122 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117184701 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088783272 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114364237 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088686936 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.110419207 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08443713 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109019035 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105259297 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084838257 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.109237936 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087929289 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112710935 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11557312 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086907431 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116947472 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094571735 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.113174168 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082621096 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.107584718 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085886728 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.10400806 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108272577 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085972544 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105369398 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085662282 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106174243 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086452337 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114979412 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087175815 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.109321487 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085345536 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.103389875 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.110709404 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09021196 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108062492 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084472859 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107362205 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088131159 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114138247 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110628595 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.088461151 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109249046 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08922528 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108321248 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082291981 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.114416409 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085409187 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111265004 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085353299 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109025873 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108450678 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090931922 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113730302 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088406676 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.110710131 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119989106 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090076626 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.105278842 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084846315 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113539945 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.085102005 seconds)
  done (took 59.868620425 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152389098 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084201686 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103321321 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081607018 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118192767 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103816071 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082793505 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104764188 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083785446 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108160801 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082248749 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103895839 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113016289 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129705129 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09725428 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10885447 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081427883 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106049938 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102855641 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084159845 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114457245 seconds)
  done (took 3.028274497 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108782525 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122821285 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119945164 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124685219 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093251465 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.120683911 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119401287 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119865737 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102594073 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116256512 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123986163 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120250956 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094175376 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.116098465 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116402349 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096006871 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.124693511 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115207771 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.12035114 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098306482 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118046617 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119939627 seconds)
  done (took 3.3869667 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08829717 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.107280187 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088147362 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.10323798 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087065625 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.103276385 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.091236371 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.106463888 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089707593 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.107432176 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084398382 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.108114291 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.108599985 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082519273 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106792413 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085129175 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.156128504 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113527757 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085204213 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110134055 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.08133966 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.112291977 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102782879 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083308182 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10649421 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091434689 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109473914 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083817486 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108960043 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084455096 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.108580439 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084180945 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.109875275 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107680855 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086646248 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.1063431 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08705731 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108163768 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081955997 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.105809545 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086902899 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.10402428 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086919512 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109855286 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08437099 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.107437501 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087182208 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108880265 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.080451362 seconds)
  done (took 5.696614968 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.108642847 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.167275425 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089052389 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.148767936 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.125802879 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.118863158 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090806315 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148424614 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10826971 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086313476 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129181078 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.126552356 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110679496 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092606702 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.117123238 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109415235 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089770385 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108735206 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.112779227 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088653573 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11493496 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093580881 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.125899965 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123499074 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113817726 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086425011 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.108746633 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11380451 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101234537 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.115251697 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.114698159 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094000235 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126057515 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115855039 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10657665 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091618984 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.127527753 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109604306 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09121219 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.107146286 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090273187 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114891827 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.116222729 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106097135 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110405367 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114937643 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087521337 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10664691 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123860518 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091094664 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119504629 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125412694 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113367292 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089371158 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115144695 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125392013 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087789823 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.1081428 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090592183 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.122523196 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10788719 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091422851 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.125535696 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112657834 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117806869 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104177318 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115259736 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114052801 seconds)
  done (took 8.543083433 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098153143 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.117194725 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125491232 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127232885 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095137798 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.116436556 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116038194 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.094679653 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117125097 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123736741 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116782861 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.140397436 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090280306 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121088682 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116822789 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095245326 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11704318 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116945809 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095660996 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116992785 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.117079653 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126213878 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095084279 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126234645 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.148331832 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110826702 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093421115 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117829838 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126096234 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116118182 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128339579 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09553356 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117416474 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127438722 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13005759 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094377227 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109857861 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116518486 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.095395523 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116771554 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110975489 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104643323 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118496493 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111100591 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094467165 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118623857 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126990245 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129516481 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120786844 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100342581 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117351252 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127516056 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116115129 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09568653 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127300564 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153715193 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127098831 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127839063 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117222024 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105067026 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126327992 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134614689 seconds)
  done (took 8.067640268 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111684403 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121700617 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.124004791 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10615384 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086885537 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114801075 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085856318 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108404162 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118653714 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098871985 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122280922 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114240848 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096048949 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123664249 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115107918 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1182692 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092477241 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.114444727 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120389658 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113555132 seconds)
  done (took 3.098175526 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097933528 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.130403778 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087700695 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118399732 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.113987556 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094421964 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.11312402 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112992255 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091206865 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113708665 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099806608 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122931731 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111639692 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094894724 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.122639461 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.118870315 seconds)
  done (took 2.633928037 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100979373 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123964278 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.127195169 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088054307 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.109377415 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084121579 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.1123556 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.10665282 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085725454 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.127253954 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088499654 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.116550362 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.11148699 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086962806 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107456888 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091350388 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.107690965 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085593937 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110570683 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125632959 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099429018 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.110405814 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.110897891 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.092269967 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.110936135 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093889551 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.111780781 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108560729 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087319687 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111627776 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088227512 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.119580679 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.107585761 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087588431 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.108936066 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086569915 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.110751698 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089051186 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.11552726 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110284608 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088318892 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110765394 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089819786 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.112962808 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084395904 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.113149895 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105658942 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096352097 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108813044 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088311826 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.111351015 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090547864 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.113456534 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.121469385 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092225439 seconds)
  done (took 6.580105838 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10354519 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115458985 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084103992 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.109193112 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092809894 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113861745 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.114172038 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092466461 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112964639 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086689875 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114035216 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092985018 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112998597 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114845344 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091799894 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115062209 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084424828 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113279557 seconds)
  done (took 2.7655571 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094559059 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111213738 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09683081 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.111733312 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088003362 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114124461 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083645965 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.111235578 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109331638 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089625339 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111642488 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092107281 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109907624 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091158452 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111650823 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088239964 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.114444674 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109279803 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090189061 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106605441 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091923355 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110086458 seconds)
  done (took 3.136631835 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.12419648 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.13181972 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.095857065 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.24546361 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.107482554 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.139188503 seconds)
  done (took 1.744146269 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11405792 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127128204 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112060843 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111669609 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12157049 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090422233 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114334413 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113843169 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123274776 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10586282 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114040964 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124880769 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123666977 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10151099 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120725534 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120748376 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112477804 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09244196 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111878178 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134015189 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091703978 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123916812 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114322847 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091566482 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114978113 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12464233 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123970445 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127637035 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092421733 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124396679 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120204454 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091311054 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124571204 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128590856 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114840999 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102993565 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115039604 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134858356 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119543936 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100809442 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.115850784 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121589337 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101519741 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120619683 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123608089 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11462102 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09815303 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115309072 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113826105 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143090037 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097949898 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123346382 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121345482 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125126983 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101944285 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164749737 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106806875 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123809598 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121785963 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12874175 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123347102 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09864082 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123499072 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130063082 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12217374 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123511585 seconds)
  done (took 8.581582787 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10696382 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132699407 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113933772 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128885849 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102481179 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115449067 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114648317 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092384135 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115034544 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112806138 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159662055 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093112337 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123897388 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123793882 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091040623 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115529879 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114464255 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122866518 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090961927 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142295164 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114496076 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124032127 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123345464 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102369168 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128087763 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121877791 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113778699 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093106731 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1140371 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113145475 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099400193 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115749395 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124263194 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089999401 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124552251 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114446193 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090687359 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121823524 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115961924 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120947788 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102580329 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134857138 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115201374 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113558211 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106926718 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115204346 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11460247 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090420057 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114654145 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112909484 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106899937 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128966232 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128939704 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124002743 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114008629 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091530976 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11562138 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114590306 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092241673 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122824794 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124815157 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091004452 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164626351 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093455144 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115075439 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124331589 seconds)
  done (took 8.459269287 seconds)
done (took 162.034753625 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.230984565 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.232188777 seconds)
  done (took 1.366867238 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103498025 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.142366162 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099912429 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176283692 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106544118 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121586846 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138174415 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096884965 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107428226 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090495815 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.114469144 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091088087 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.178988488 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084552475 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107330377 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113986404 seconds)
  done (took 2.785200689 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.208268276 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.267279936 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106671027 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.11303012 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09286638 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.118310167 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.110307261 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096655443 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.116380306 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.090619053 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.115214307 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090579696 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.112775796 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089998467 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.116957908 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091997641 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.113518689 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091724161 seconds)
  done (took 3.054318936 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118552268 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.156763647 seconds)
  done (took 1.193529089 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124539475 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.188107646 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.327375207 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.163181597 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.111261994 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.134955792 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.163374 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.138081452 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205991066 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.129826693 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129793142 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101819778 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14886029 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.122687875 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098456782 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.125530974 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.148410831 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.097120441 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.122317725 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.122991598 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121958229 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.113424205 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.121284751 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.097866553 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.189712364 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12703607 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.089089715 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.113443699 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121956684 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09902712 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.120153246 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.131240878 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102464444 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.187116723 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107225176 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.186063994 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102308665 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.118816837 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.120323156 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096811554 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125835674 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.12468916 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.110472654 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.12570401 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088327373 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125094726 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.112158433 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089849845 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.121594688 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101887815 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.121837412 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.120141904 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.163721698 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.125307042 seconds)
  done (took 7.939130859 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.809117179 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156112961 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089389538 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.900379234 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138327724 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105329216 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.791860744 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136953252 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240539295 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.774728295 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136907701 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127979464 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235935202 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.245347206 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958861411 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315213813 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.685735243 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106640582 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.158585288 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.16066704 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.125281178 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144417398 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.113627543 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.457292091 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100406474 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118743426 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100672971 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127495994 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166258767 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.132552973 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.121123425 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.186898382 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.25682237 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209481938 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122033308 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094945598 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117516875 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.177250212 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27820453 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223765213 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.187663927 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091910415 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.117086808 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10510426 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.139851024 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114806225 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.170825606 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181334092 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.202226857 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097030481 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127610669 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12620747 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.104258759 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.19546352 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103476352 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.328466212 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322214116 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118502674 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103275003 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135243618 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274213489 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129741519 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.210450497 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145819476 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221259557 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.117838497 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786929521 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.198265448 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095111038 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124323157 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102337974 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123739465 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128163303 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174352444 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.397370999 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130615729 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098151922 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118587039 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21142697 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.132824625 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117630855 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171303559 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.09943727 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127648359 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132099045 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129150582 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17806986 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.239637282 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130262068 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126068365 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099406669 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131782267 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.123049457 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.219807597 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229291284 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.170409666 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.216563445 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129916606 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.171622136 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.198200322 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10430385 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.202166212 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.103935297 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132252312 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129200711 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225059382 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152556325 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107515589 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121737756 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12437084 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.15510379 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111948405 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126721371 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.177325312 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.487298726 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.176314237 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.115086789 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111806867 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124267741 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.166448349 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124595146 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26912659 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105677488 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.200586057 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103461649 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.11661509 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126705549 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.173742083 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128726285 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105364112 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129860368 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124816898 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.243031546 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.227953728 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105992079 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252828008 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.191930797 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125675221 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180348707 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128994131 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175523749 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12702818 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10498277 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124538516 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.810219501 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105568047 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125145188 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121763733 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195390614 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089694656 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.130210438 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126706641 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086283585 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.78164663 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129434096 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098847199 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.12506763 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119458968 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120326258 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096082909 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115841422 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165792184 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240324571 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127916297 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103343256 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.133199362 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.168011946 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125524849 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.132969291 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.13110934 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.110051182 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128687569 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120855314 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108543965 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194250746 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.16842552 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230450988 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.576949749 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120523791 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.13171741 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.215310908 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120178991 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299560086 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120934633 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.210379109 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.196814367 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104312179 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.320090582 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.196215479 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.194107467 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.11257626 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.204691517 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093224004 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.125834028 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.17301585 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.118832583 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100074761 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.192327768 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108793078 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13161388 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.967767896 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089768325 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248937945 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.091571717 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172366577 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120854097 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121648416 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30095537 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090733885 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13019784 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166371916 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119067538 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.130494789 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.712685732 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12640146 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122321548 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097498143 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228835867 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.171049761 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127412021 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126923724 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104026857 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.19479734 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.220746649 seconds)
  done (took 45.483812122 seconds)
done (took 62.730716629 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.289278975 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.228061758 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.281458814 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179209849 seconds)
  done (took 1.997237041 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180623288 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.158852296 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.127392233 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.115676643 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.160014797 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08943345 seconds)
  done (took 1.772915411 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.374753208 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.283854367 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.250252749 seconds)
  done (took 1.854109004 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.297064394 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.25538884 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.475605378 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324672062 seconds)
  done (took 2.425100857 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.21825615 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.141463513 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119800048 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.11021867 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.208999063 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.258733323 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150757769 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.212541997 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.10568205 seconds)
  done (took 2.51786159 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.206883826 seconds)
done (took 11.719537364 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", Float64, true)...
    done (took 0.271350849 seconds)
    (2/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.240362083 seconds)
    (3/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.167012944 seconds)
    (4/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.123441699 seconds)
    (5/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.263927774 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.159170618 seconds)
    (7/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.229148733 seconds)
    (8/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.273105033 seconds)
    (9/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.133014123 seconds)
    (10/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.237753798 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.120621801 seconds)
    (12/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.185112263 seconds)
    (13/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.21433147 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.132164665 seconds)
    (15/286) benchmarking ("sort", Float32, false)...
    done (took 0.180578939 seconds)
    (16/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099703314 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.124515554 seconds)
    (18/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.239468307 seconds)
    (19/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.2236234 seconds)
    (20/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.154942476 seconds)
    (21/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.227047403 seconds)
    (22/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.222448202 seconds)
    (23/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.199788821 seconds)
    (24/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.203063854 seconds)
    (25/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.100426452 seconds)
    (26/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.124437538 seconds)
    (27/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.181216676 seconds)
    (28/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.167853109 seconds)
    (29/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.144268589 seconds)
    (30/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.23277976 seconds)
    (31/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.081246673 seconds)
    (32/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.159453142 seconds)
    (33/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.089158646 seconds)
    (34/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.207570363 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 0.230816249 seconds)
    (36/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.087364075 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.142867791 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.099749347 seconds)
    (39/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.151888469 seconds)
    (40/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.098422589 seconds)
    (41/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.18256489 seconds)
    (42/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.193829158 seconds)
    (43/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.18246244 seconds)
    (44/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.102455868 seconds)
    (45/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.146809782 seconds)
    (46/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.102969255 seconds)
    (47/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.124784958 seconds)
    (48/286) benchmarking ("sort", Float64, false)...
    done (took 0.178654344 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.117985946 seconds)
    (50/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.175460659 seconds)
    (51/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075004235 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.124718169 seconds)
    (53/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.121196284 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117827553 seconds)
    (55/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.176011619 seconds)
    (56/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095010964 seconds)
    (57/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.134490867 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114685857 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091186089 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.12168058 seconds)
    (61/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.153608791 seconds)
    (62/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.121229365 seconds)
    (63/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.140285374 seconds)
    (64/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091903281 seconds)
    (65/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.148005797 seconds)
    (66/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.192651805 seconds)
    (67/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.132695133 seconds)
    (68/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.149022194 seconds)
    (69/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.2174393 seconds)
    (70/286) benchmarking ("sort", Float32, true)...
    done (took 0.238743169 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.11980584 seconds)
    (72/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.19730387 seconds)
    (73/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.096520152 seconds)
    (74/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.173897963 seconds)
    (75/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.151187681 seconds)
    (76/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.070840384 seconds)
    (77/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.107636739 seconds)
    (78/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.103219449 seconds)
    (79/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.132250382 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.145010803 seconds)
    (81/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.072487967 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.143297882 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 0.093038078 seconds)
    (84/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.123854393 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090817331 seconds)
    (86/286) benchmarking ("sort", Int8, true)...
    done (took 0.225507209 seconds)
    (87/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.174044842 seconds)
    (88/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.086556428 seconds)
    (89/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.12443414 seconds)
    (90/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.103720745 seconds)
    (91/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.204449576 seconds)
    (92/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.177912718 seconds)
    (93/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.182184587 seconds)
    (94/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092053019 seconds)
    (95/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.107684675 seconds)
    (96/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.103121624 seconds)
    (97/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.108096659 seconds)
    (98/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.08976444 seconds)
    (99/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.197830494 seconds)
    (100/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.080340694 seconds)
    (101/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.147514232 seconds)
    (102/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.071507757 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.117484086 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.099907083 seconds)
    (105/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.19231345 seconds)
    (106/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.142461737 seconds)
    (107/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.072437878 seconds)
    (108/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.13205229 seconds)
    (109/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.161554099 seconds)
    (110/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.099316043 seconds)
    (111/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.100961303 seconds)
    (112/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.125190114 seconds)
    (113/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.102894026 seconds)
    (114/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.125223095 seconds)
    (115/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.071433364 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.190499935 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.12660218 seconds)
    (118/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.071809024 seconds)
    (119/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.117194959 seconds)
    (120/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.136502753 seconds)
    (121/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116655112 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.119587439 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123350833 seconds)
    (124/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067413718 seconds)
    (125/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.192818694 seconds)
    (126/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.127655393 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096411034 seconds)
    (128/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.095519582 seconds)
    (129/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.100403933 seconds)
    (130/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.121025031 seconds)
    (131/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.152215564 seconds)
    (132/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127755711 seconds)
    (133/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.140962757 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095737557 seconds)
    (135/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121589846 seconds)
    (136/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091212818 seconds)
    (137/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.116321913 seconds)
    (138/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091532401 seconds)
    (139/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.111663467 seconds)
    (140/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.200466505 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086001885 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118321304 seconds)
    (143/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06761346 seconds)
    (144/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117955161 seconds)
    (145/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.13499664 seconds)
    (146/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.111852125 seconds)
    (147/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.16177459 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.111768001 seconds)
    (149/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.141020828 seconds)
    (150/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066883701 seconds)
    (151/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067474643 seconds)
    (152/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.121766248 seconds)
    (153/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.077509882 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128303146 seconds)
    (155/286) benchmarking ("sort", BigInt, false)...
    done (took 0.230434921 seconds)
    (156/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.137387545 seconds)
    (157/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098205661 seconds)
    (158/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.114057685 seconds)
    (159/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138560231 seconds)
    (160/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.087360479 seconds)
    (161/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117793957 seconds)
    (162/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090037443 seconds)
    (163/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.120402655 seconds)
    (164/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.132865012 seconds)
    (165/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.113174917 seconds)
    (166/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.174081631 seconds)
    (167/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.11858149 seconds)
    (168/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067896797 seconds)
    (169/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.113529096 seconds)
    (170/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.168021234 seconds)
    (171/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.12215739 seconds)
    (172/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.112667582 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.095944602 seconds)
    (174/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.10250126 seconds)
    (175/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066399758 seconds)
    (176/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.158334674 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094131987 seconds)
    (178/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.092651811 seconds)
    (179/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.147704281 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.12321741 seconds)
    (181/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.183077938 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089589457 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111162666 seconds)
    (184/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.333745059 seconds)
    (185/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.161344648 seconds)
    (186/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066547412 seconds)
    (187/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114428327 seconds)
    (188/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.123153556 seconds)
    (189/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088551829 seconds)
    (190/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.065967279 seconds)
    (191/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.092604299 seconds)
    (192/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092756657 seconds)
    (193/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.090577768 seconds)
    (194/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068047618 seconds)
    (195/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066092401 seconds)
    (196/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124552543 seconds)
    (197/286) benchmarking ("sort", Bool, true)...
    done (took 0.218125073 seconds)
    (198/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084238775 seconds)
    (199/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127310184 seconds)
    (200/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116494839 seconds)
    (201/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075862284 seconds)
    (202/286) benchmarking ("sort", BigInt, true)...
    done (took 0.231067631 seconds)
    (203/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066362672 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121923926 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093798835 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111242325 seconds)
    (207/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.066760981 seconds)
    (208/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135007872 seconds)
    (209/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066984198 seconds)
    (210/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.09181568 seconds)
    (211/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102489164 seconds)
    (212/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.092594934 seconds)
    (213/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.0946488 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116191077 seconds)
    (215/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.112007743 seconds)
    (216/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.13401969 seconds)
    (217/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.22876646 seconds)
    (218/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114342821 seconds)
    (219/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095028277 seconds)
    (220/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118577525 seconds)
    (221/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089690887 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109129561 seconds)
    (223/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068190924 seconds)
    (224/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135725334 seconds)
    (225/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088867328 seconds)
    (226/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120436589 seconds)
    (227/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086184694 seconds)
    (228/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119207306 seconds)
    (229/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.092019772 seconds)
    (230/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.093020477 seconds)
    (231/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084355752 seconds)
    (232/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069099145 seconds)
    (233/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.095708986 seconds)
    (234/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.071589986 seconds)
    (235/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.124467892 seconds)
    (236/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098997795 seconds)
    (237/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068279957 seconds)
    (238/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.094444183 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089491412 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.110127245 seconds)
    (241/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066601163 seconds)
    (242/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174904797 seconds)
    (243/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.089504359 seconds)
    (244/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.123060607 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109760732 seconds)
    (246/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.07798422 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.085083537 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117092102 seconds)
    (249/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068333588 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120300421 seconds)
    (251/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085616031 seconds)
    (252/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.11227485 seconds)
    (253/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088418412 seconds)
    (254/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114627075 seconds)
    (255/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.098789507 seconds)
    (256/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111315165 seconds)
    (257/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.162135073 seconds)
    (258/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.068184983 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118108228 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087104546 seconds)
    (261/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.074894714 seconds)
    (262/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.113673774 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084163304 seconds)
    (264/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.092071399 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085722251 seconds)
    (266/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137390585 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.093979023 seconds)
    (268/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.100876089 seconds)
    (269/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.091476007 seconds)
    (270/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.093978474 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086824397 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116000534 seconds)
    (273/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.0671212 seconds)
    (274/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.111284421 seconds)
    (275/286) benchmarking ("sort", Int8, false)...
    done (took 0.18880138 seconds)
    (276/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066024615 seconds)
    (277/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090525933 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093298913 seconds)
    (279/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116093139 seconds)
    (280/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093451839 seconds)
    (281/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066965496 seconds)
    (282/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.112283029 seconds)
    (283/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.085705924 seconds)
    (284/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.093786246 seconds)
    (285/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067578801 seconds)
    (286/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110421404 seconds)
  done (took 37.076444371 seconds)
done (took 38.024206226 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.107149441 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155362002 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.099150516 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137216136 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124064811 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091493466 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118898532 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09680473 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124445599 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124158442 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097417243 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09372021 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096789694 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121758761 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097712965 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140123569 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123625745 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093133507 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119108629 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085986623 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120185428 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085710705 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114257285 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069194318 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12227073 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.09375235 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11817502 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120083007 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087642106 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110223144 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09110258 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117364384 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086697286 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124340999 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09455921 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120427452 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097209679 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121694881 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087702597 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111360011 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117636082 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087529875 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117905839 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095669904 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116769404 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093134005 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119549644 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099431135 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14116815 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117061836 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.098503486 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121761845 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096380273 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119582991 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090207637 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121031986 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091122211 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140207453 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120634037 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093875156 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11892914 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094791761 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117215296 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09382564 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119995165 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.1205342 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098762372 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116787254 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097470015 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116877141 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087111608 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120042445 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089786148 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111863831 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094994703 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123332451 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084703297 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118657003 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093092704 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117201023 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109181937 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091002847 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112001249 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093819207 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112511684 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072146344 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.091522093 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118365402 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085531175 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121882799 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116222922 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09435832 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11272692 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098829731 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11141638 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092139304 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111614723 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087144451 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113507778 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089694418 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111007335 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08906032 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.12143203 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088060662 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118780969 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.09769176 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112094596 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.11647974 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086727316 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109267695 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10233871 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12187441 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086267003 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117365142 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085563216 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119693115 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08573833 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111482087 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085814724 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112074805 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092574327 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.11207725 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088164172 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119691379 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124558846 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087592209 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114166085 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090244313 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110547219 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093701149 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111294875 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087504063 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112928266 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080789882 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113291506 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088300104 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118013914 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090971429 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119937242 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089127541 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120892537 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091709367 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117589316 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092025113 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111375271 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074417586 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116764771 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091732543 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113638645 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088132865 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113695174 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.090112637 seconds)
done (took 17.054212381 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.094245961 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.1924379 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15236644 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142479102 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106735075 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113078475 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122189935 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118706951 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114973421 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143788615 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110088779 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133142966 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147023425 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088432617 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112438745 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093110362 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114418422 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101986616 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147062926 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133208008 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164420727 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085585833 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148318459 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135851027 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.1205136 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106091531 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113064643 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09136346 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116638739 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112163384 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132810672 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090179842 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113556878 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134482775 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104361305 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121593104 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086714261 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12032712 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086737339 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112691458 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140571 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10829575 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119444719 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118217383 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091699911 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114988825 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089941725 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121581222 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097541581 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117249715 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126063361 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155848965 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091430135 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122255543 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086079849 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123542897 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121530464 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09096963 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112375324 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09109592 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110883844 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091354582 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127861535 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144018027 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091799602 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122224545 seconds)
  done (took 8.701303449 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110924872 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.143270901 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.128712399 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106763299 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112384993 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.08842383 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113218743 seconds)
  done (took 1.809422216 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095615687 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.143038135 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117599734 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137010117 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131707543 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109904323 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123474993 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088797483 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132398892 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08870524 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135368527 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152024319 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.08883687 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121359589 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137886868 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088603004 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137760881 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088310385 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11765781 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110900595 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117588382 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134941407 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090447629 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114008585 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102384377 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114894413 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162827911 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09409799 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114965019 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09203713 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113156148 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165430743 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101281822 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126481312 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087699864 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13014299 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.144915032 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087014275 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130197593 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095083011 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128900601 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089077393 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117657409 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086316295 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118598151 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124208103 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.092121856 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114023027 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092390315 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133635872 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088972996 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128291736 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087887349 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118920716 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.08928214 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121076413 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122361941 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090581933 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133588562 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090810457 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131473963 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104461602 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.13064721 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130388997 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09142911 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128863895 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101973996 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119016539 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090112832 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119124232 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130128212 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088107404 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114739869 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100307912 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115826464 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11170186 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137651586 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089564112 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124907007 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114098022 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090686916 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113837457 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.114310265 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122093828 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08981295 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122102826 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09241069 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113601953 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087729351 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.120575695 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08632154 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.1186892 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118271988 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090516217 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115922574 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106395035 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115438733 seconds)
  done (took 11.935966019 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.098387397 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.119205334 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09305047 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114432563 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092029738 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115560437 seconds)
  done (took 1.649977885 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12107707 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12164263 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102646487 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12200663 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156428064 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103239547 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130559255 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124091448 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106643093 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128385603 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128538602 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10430274 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.1366364 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12113322 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103817242 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120965273 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103997841 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126195581 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127688869 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095550575 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138072599 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121060733 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096065008 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132630563 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11766713 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097599538 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126179346 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102588379 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128238483 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12311062 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097283407 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11948118 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096153209 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125248793 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131447271 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096040717 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121909227 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119469141 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100629264 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118879077 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104465864 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123021119 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126037274 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09390407 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124362949 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120628575 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095300568 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125651878 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102538403 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120022659 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118920132 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096300153 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118955891 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093044406 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121858386 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12351944 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09528245 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130532268 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095155278 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122341906 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118994677 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093944575 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124191799 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116668469 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105604009 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119482126 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094806673 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123236305 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121213441 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096259857 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119163545 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092265214 seconds)
  done (took 9.292753076 seconds)
done (took 34.392850051 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.709104377 seconds)
  done (took 1.7227508 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.844030835 seconds)
  done (took 1.86023953 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.435416557 seconds)
  done (took 18.48312343 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.510213071 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.593079353 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.004245129 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179115765 seconds)
  done (took 3.304677441 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.986391265 seconds)
  done (took 2.026021586 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.295750516 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232564822 seconds)
  done (took 1.549840498 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.801119715 seconds)
  done (took 1.834995055 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.416148364 seconds)
  done (took 2.437865044 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.337878184 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184884901 seconds)
  done (took 1.556915518 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.56591003 seconds)
  done (took 1.599146216 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.994699166 seconds)
  done (took 8.032091091 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.277981247 seconds)
  done (took 1.320188473 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309154617 seconds)
  done (took 1.341723105 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.647547789 seconds)
  done (took 4.681206713 seconds)
done (took 52.779292527 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105658007 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126859784 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10200222 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125334494 seconds)
  done (took 1.485312287 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.108177015 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.126944795 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099936673 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121350026 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125952606 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097090296 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123365191 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100775893 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122471466 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095804894 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122889082 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119195185 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099290348 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123467955 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093060071 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125500072 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09875582 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122989956 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124869154 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098549231 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119939371 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097249988 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126171052 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093905032 seconds)
  done (took 3.72401418 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107651623 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121364742 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097726623 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117897688 seconds)
  done (took 1.48704885 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.107765792 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.137109243 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105128129 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126384851 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131043341 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.107246184 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117360552 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092457762 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120415327 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100499862 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117023005 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.113344438 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133014954 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125366586 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102579479 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115136671 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090888585 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132049111 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12478338 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102675043 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118259394 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099526411 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115754894 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.111113908 seconds)
  done (took 3.784105524 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176763531 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128899231 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139679944 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095467513 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160604864 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141005587 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089394337 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142156486 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08739834 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132324201 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117496461 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134447535 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130086117 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087204292 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115800423 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087089131 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130365705 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.12898034 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091459647 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128354046 seconds)
  done (took 3.492283184 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105052968 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.1175847 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08932201 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116251601 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099260572 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120939622 seconds)
  done (took 1.691586118 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09763641 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114125513 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090700527 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114525729 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096158031 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114913159 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089449008 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115058413 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090219602 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11490994 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089641397 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116456309 seconds)
  done (took 2.287239235 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.513263336 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121945512 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120017087 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089537642 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121565858 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089589618 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129889863 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092978359 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141745598 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088907003 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11706422 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090547784 seconds)
  done (took 2.759826613 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24384227 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129303966 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288278962 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.371109051 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158092883 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178796614 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285262905 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16816346 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225163167 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167867572 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204215722 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224684211 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153051441 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190454006 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139271596 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144744546 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205347632 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24811528 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154245049 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207676045 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227443433 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167925506 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180411226 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152590833 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139176123 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172506316 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.093682152 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131567654 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234254182 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176020262 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215190594 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162185286 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146200628 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210558183 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254556342 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222194883 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283335618 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137772047 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149094747 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.177280823 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267608217 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139323396 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202797764 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155038928 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131564124 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218167007 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168789716 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177158582 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152514087 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138949751 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196550944 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240612998 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193396996 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1392741 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302956833 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151896847 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.201874965 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195084251 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25497338 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200766457 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213763762 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095428072 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188410887 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221567167 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186170284 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.174915761 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.20818126 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149609903 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203034929 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187627789 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165189648 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222062511 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187112643 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142199893 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170996001 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172414212 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173757673 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25904191 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210986361 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.097075665 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168987172 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149975612 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13405563 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194588723 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1005757 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241177358 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144259081 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162506376 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215146147 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16047922 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16169169 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202495786 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229637907 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150090734 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083310767 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154632161 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156179691 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193642948 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140878364 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15908405 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162837692 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131371752 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183674438 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125969981 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184855148 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.119049814 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175044439 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184405681 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127012523 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160259723 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152122144 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125884201 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200103489 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198867962 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142617285 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105303015 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237997655 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177942999 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151756235 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17722524 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228478446 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117676575 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149525756 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228516977 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216504287 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141600556 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229814124 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156577809 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108324493 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132909477 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182140667 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155486103 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162545269 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135411799 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183959401 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233417072 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098930301 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140039464 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192179785 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135246844 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133283628 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163723671 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14878606 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110158468 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152272978 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154232738 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208993209 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179197171 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154192453 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166596573 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154116678 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254835563 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141655834 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124432105 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150256596 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120261116 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195395948 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19770033 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132252185 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232223276 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173474227 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204204227 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1718768 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135922924 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177577227 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131128026 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093033036 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22243762 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168494169 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162393364 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196518257 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225718087 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.184710033 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.182904519 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201091649 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175085463 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165969946 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157794918 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111461119 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161129414 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170195817 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124274166 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14571652 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133479756 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147154757 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115870671 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135443421 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222625448 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171168191 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189924548 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162372606 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150789113 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181899531 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12992786 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174950355 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179001117 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148349241 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198645685 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222939115 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186428009 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145575923 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201177264 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121701651 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124747786 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115727869 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19617517 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107716682 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136352067 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16372753 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181347259 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181159173 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204381086 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211803445 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200862484 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191514682 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095902685 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169597618 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186827123 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177933232 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.194171064 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14376796 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151400754 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181105424 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159331649 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256473395 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169385214 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176713389 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23686407 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.14963767 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106387806 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152489104 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193680361 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15520364 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205106288 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120006432 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142702703 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16213623 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134362907 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161186648 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185045988 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163503503 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218653885 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150790704 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187278756 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127464244 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165450717 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159780887 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166580354 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081181239 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175612856 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234305673 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149368447 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168830432 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190261817 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132982824 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310952116 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246368984 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197122818 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138664777 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155780769 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161706526 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165697033 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172803951 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180128741 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159793613 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188006209 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160029688 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137990019 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140024376 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121802075 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151465842 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132629374 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149475985 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177943406 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140157396 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186070527 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163133873 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160231888 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173604159 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151337496 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145083231 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151074408 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216182841 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184848136 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240903955 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153055067 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181900452 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235243815 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099565178 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133680571 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.1338668 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178505866 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109405575 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223663673 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188409005 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238249948 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188187517 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195319627 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141605983 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119789318 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132539443 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202093019 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209016327 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155909899 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160574198 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233811874 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118827016 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134226496 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178932505 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295205266 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145978698 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224827104 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080357137 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.284204099 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129342717 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104491485 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16475968 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237705839 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137030256 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.190697619 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174881958 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171520166 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166055239 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151259495 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19212545 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248920269 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205373097 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181573048 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134323604 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157167907 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177330456 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220303008 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158579604 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.114104555 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233573017 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196753169 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197514747 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142588804 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170007158 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169480724 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160200027 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217626448 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107102295 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237632381 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134713744 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195185258 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154279849 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146138401 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177780655 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188871053 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146146057 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2176829 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185387661 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13548238 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106126263 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170145176 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208982897 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158057261 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101018073 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208899793 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098370151 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222486147 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23110493 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137244928 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156081945 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148633912 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107103537 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156014161 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186293266 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114035229 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167837408 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206074489 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136456987 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191620537 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233013771 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171052488 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175205456 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14593701 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693119152 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132061268 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195979871 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160780299 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237985649 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150441312 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175571857 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159343871 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168820986 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196672665 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162382355 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232312222 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221034296 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180765686 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104950837 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159361068 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192316898 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.11598706 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152948126 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169822413 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161204723 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.156041022 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.205624405 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175040872 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.107023334 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142724219 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199304218 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161760392 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212992246 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180945394 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110211103 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202939801 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189679453 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134283501 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181195899 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239721362 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114275831 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154136701 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135870715 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158392538 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265235735 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096798774 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236524171 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18524755 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161819601 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170182465 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147903182 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222804926 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158426777 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18768756 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148533199 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161793718 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157755129 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139082714 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103387731 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157753905 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16921772 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151019755 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161075241 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.167164205 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197432045 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095247023 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145501214 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317293058 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196837393 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244722944 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107910224 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137010065 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163933733 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151935866 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177211683 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179751029 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13753614 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136396316 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108906824 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.15944051 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113417657 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158779033 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197524764 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19533917 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210022204 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137250203 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279863933 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112770786 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157614272 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116978156 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104587569 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151210861 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14717664 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160868575 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193076907 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27051893 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150640477 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134448107 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15093694 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098619993 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137465747 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166939634 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166765499 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178901216 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146624936 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080739643 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15838311 seconds)
  done (took 83.888677315 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173432865 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134013518 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149546846 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205769342 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179273644 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271034374 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211994092 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255196557 seconds)
  done (took 2.71474182 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.100136991 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148682398 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15797378 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133880088 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093112863 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118873923 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.351851593 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13431414 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.119362501 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121265353 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175513082 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09420822 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.557102447 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091053433 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118728394 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109088543 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092446891 seconds)
  done (took 3.845372746 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.486497251 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.735896613 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.5201155 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097269403 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.2534157 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113741054 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.782951947 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.201306515 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117646955 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.491752819 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.780191831 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.169672921 seconds)
  done (took 18.889776993 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.123088223 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.139782651 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122920569 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153674756 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140836523 seconds)
  done (took 1.822075815 seconds)
done (took 132.899205321 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.111304893 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.422208894 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.078416637 seconds)
  done (took 1.6753062 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.117125839 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.145090132 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108544442 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136952091 seconds)
  done (took 1.65955509 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.105817 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126869104 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108835412 seconds)
  done (took 1.484931416 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325335744 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190244242 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.171479345 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.114514701 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129973608 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103525972 seconds)
  done (took 1.4909697 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105404147 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128169226 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098125568 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131095158 seconds)
  done (took 1.606769129 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.103165834 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077945788 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.107355059 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075195559 seconds)
  done (took 1.501970964 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.121948782 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13255052 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102943138 seconds)
  done (took 1.502820785 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.137538176 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.14064287 seconds)
  done (took 1.425152585 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.11377638 seconds)
  done (took 1.254386001 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.125142228 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169186369 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.181959177 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.161529442 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.203729905 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.160694846 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.143944623 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.13809164 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.128711593 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.140248084 seconds)
  done (took 2.700357524 seconds)
done (took 18.238089862 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110733701 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.517895142 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384346211 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145842086 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722220906 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38026903 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.050288684 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14649034 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165516768 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092981008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139859137 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672198579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.04147073 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.477622203 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.001126721 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376628492 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675077523 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122697318 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118936214 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094920652 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.038027096 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092248734 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122647216 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09238243 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705346637 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426403252 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096020841 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.375829837 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093067415 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127383696 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382826604 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123510461 seconds)
  done (took 17.24457338 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103308404 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174691538 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097565842 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138374774 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123828437 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094316744 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124737876 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093377982 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180335332 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123769134 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110732501 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122579933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126416135 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09592095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143109325 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092286966 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125474505 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092006327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12222983 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120585152 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112115554 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120072951 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093877719 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121472334 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094071642 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136620906 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093931266 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122368931 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120292153 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099006645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12778985 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094544883 seconds)
  done (took 4.891203489 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148314402 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183396544 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129261057 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126975515 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169970986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124448798 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198877147 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116868171 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182963861 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124298971 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139604012 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095454691 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158152835 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094458795 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143960331 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120953422 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097881245 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122250625 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092946365 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124789143 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139850046 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094130134 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12240798 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093067614 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12296054 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107129084 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126310574 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.11981582 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094057611 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127812814 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099850594 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124463404 seconds)
  done (took 5.2260256 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104658114 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125346291 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110091609 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138997669 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094154162 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125973317 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097136416 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124449487 seconds)
  done (took 2.074978946 seconds)
done (took 30.575451409 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118935687 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132506495 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.112348946 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134398687 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101733153 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132977072 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090810187 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134420081 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133187976 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103730928 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137553259 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09874452 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122823821 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095414868 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135272598 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097146686 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133811573 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100654393 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134867654 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132040189 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094942495 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.132723313 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.108734602 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133546991 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103573416 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133957022 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13774425 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.106815327 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122764229 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094345158 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124526086 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110413 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130328062 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106313861 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128034704 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.100874053 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125109669 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094193492 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134322956 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132610326 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101268254 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132919562 seconds)
  done (took 6.11891031 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.116750443 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.145673028 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105850857 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081127038 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118031859 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080677266 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137937968 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.085195315 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109986961 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107809243 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074427091 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107356087 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078226416 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101388493 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078295685 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07566538 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108200079 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076681806 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076474739 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105714195 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080392338 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072828693 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.10941818 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078653962 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074655319 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.11061023 seconds)
  done (took 3.658233677 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.108398182 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.13445058 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113571545 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183578398 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160718468 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.0999253 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133153493 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.110378986 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.138449303 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119772871 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096637259 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14954963 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10983652 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.13032351 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091615604 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137798292 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136247353 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095850558 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128418191 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112315571 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139363464 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102364663 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142311372 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132472928 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093182378 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122873773 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097813941 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134870853 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097791338 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132807167 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096174071 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126541262 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122147598 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105581913 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126379326 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094357423 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142002729 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10157906 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131363345 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.09148527 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129925593 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121560405 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114236828 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161022741 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09099802 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129860911 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094443758 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133050772 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120723123 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111723514 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131515401 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091509429 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125572671 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092029944 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122112197 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105898753 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124509259 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094304101 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132391547 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12560954 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106236509 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125533254 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109433732 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122369906 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099438894 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12243523 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093396069 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121937054 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.114857694 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125232914 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16210181 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09309688 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124488304 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101072766 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131269101 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127488309 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094878164 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138346359 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103703254 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125564956 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101881337 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126218728 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094920719 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140656011 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094409586 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125661007 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092704754 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129715828 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123845058 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094251745 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135943698 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091621075 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125342608 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110171463 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122581742 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093344566 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128925675 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126510273 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093068213 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137715524 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097614924 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123267755 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101992505 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123049611 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095076836 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133564606 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.125786391 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092528805 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126525613 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099466191 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123827668 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09419261 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125893091 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094497261 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133419627 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099136164 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128284671 seconds)
  done (took 14.897681879 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234743925 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216140381 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.206498978 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.293866089 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135527172 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114128859 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212570162 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.157007412 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124716055 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159939384 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175481338 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18185803 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.177103576 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.18292005 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171001853 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.096173456 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.14301378 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164063842 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214408511 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257773832 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14522837 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100729066 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161708389 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160589131 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137537482 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131622169 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11007649 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136141824 seconds)
  done (took 5.880671192 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11555091 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156704471 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097768226 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146579964 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149256961 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092174179 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128540634 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093365484 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136616009 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136120427 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092994835 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130508522 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100373473 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132766206 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122840143 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103856 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132375801 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095229924 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126393866 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097408331 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134575461 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101037253 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127662707 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.090745255 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13358926 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121694623 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086766854 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143464353 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092924999 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.145270768 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120205514 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102347575 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137282969 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093989684 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123664098 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095656716 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125596243 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095258991 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125601617 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092513815 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123988089 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077455625 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122956683 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106608741 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130391958 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079948164 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130795231 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.098348354 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125274902 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120182908 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097132217 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125169617 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097565853 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130273081 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096180583 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125334636 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097214942 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115607288 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102935922 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124906933 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085200659 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091653193 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129003275 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118148543 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.107718012 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127818045 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091746638 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12559273 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09724143 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129988674 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095076134 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129847608 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090865575 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125919677 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095534993 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130697154 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095625553 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122660061 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091953482 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.12451102 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074414533 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123961084 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074116097 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126565153 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091587645 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12215479 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095804316 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130973186 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138073241 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096172386 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132655779 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09459947 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122883124 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096735437 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.11403856 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098151112 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140599749 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141235988 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09731053 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122159684 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107979535 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126495059 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093272838 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105749547 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102868801 seconds)
  done (took 13.064792921 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135064475 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.161707414 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098546316 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143159363 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157663447 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.163728381 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102207598 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131415139 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096143809 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142065025 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093680452 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132910891 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094125337 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138444393 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157371866 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103956926 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126180835 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10824902 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128683839 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16988632 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111811853 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143363088 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111074153 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125502879 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.099518124 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141885497 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161591413 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107081888 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138664629 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141694229 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109426742 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162054513 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112088967 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129054379 seconds)
  done (took 5.571293154 seconds)
done (took 50.345740632 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.298217482 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.495128508 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.259520943 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.279761217 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.288558672 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.273351322 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.266040756 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.260661718 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.271292864 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.258972081 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.48552765 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.018397591 seconds)
done (took 59.639726066 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.344109939 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.394788047 seconds)
    (2/2) benchmarking "String"...
    done (took 1.524420051 seconds)
  done (took 4.097194215 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.611851586 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.226758278 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.523410619 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.259276689 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.25605322 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.554996762 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.059186472 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.635300844 seconds)
  done (took 28.693621803 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.266092668 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.349962504 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.291161312 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.268379711 seconds)
  done (took 6.355099947 seconds)
done (took 49.282669896 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.242141316 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.321333436 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.268853913 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.234888314 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.375939212 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.294387398 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.584434899 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.289576184 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.276762004 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.257740426 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.295708605 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.261673346 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.273726663 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.58635101 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.269995607 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.260675309 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.308130973 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.820951411 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.687306171 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.267769093 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.275422159 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.311558465 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.269741708 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.277930496 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.327128131 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.266360831 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.261336172 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.264449051 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.997944918 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.262553591 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.279736527 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.795011547 seconds)
  done (took 192.945619768 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.260240923 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.301323193 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.407246275 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.322424363 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.784113823 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.460002143 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.384278428 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.861400502 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.285189264 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.27030689 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.502434991 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.261803628 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.582819934 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.240562528 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.292118768 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.368867285 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.561845401 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.629221377 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.316432335 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.442130812 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.274934474 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.444459847 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.344567679 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.501545093 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.282338732 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.340141217 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.289387248 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.305381373 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.449943593 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.475191939 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.293021061 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.291273964 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.902439698 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.122071722 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.288454958 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.284656476 seconds)
  done (took 152.605850984 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.326736616 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.263238089 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.262683153 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.263992356 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.263922066 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.297049535 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.262915455 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.866257742 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.869856465 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.772383968 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.689759686 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.748642998 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613965455 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.263608468 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.359247005 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.272801901 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.260509089 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.279074688 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.313208957 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.259142564 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.264001429 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.86841016 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.278509947 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.31183752 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.466085407 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.281218698 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298022222 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.65729621 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.261432848 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299826537 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.602019936 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.316375163 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.258633928 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.693144103 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.612988552 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.379553104 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.262753222 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299663208 seconds)
    (38/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.266065662 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.550558301 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.259714808 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.266679789 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.2658966 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.268577043 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.97662884 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.267085589 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.872235023 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.265477251 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.261235596 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.263845132 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.266833757 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.692699705 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.000427564 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.289050504 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.267341751 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.269156945 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.266077266 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.267321479 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.302844577 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.540250698 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.363793672 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.288388674 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.271303442 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301274619 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.265336453 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.436968205 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.260891142 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.477257881 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.323916143 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.481336201 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.871543006 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.2675296 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.369833288 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.386147874 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.26383235 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.267534272 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.269581118 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.269211727 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.268912099 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.383484456 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.262706482 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.709175686 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.443060963 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.286497427 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.747049012 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.36683015 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.263405532 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.704690903 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.269267664 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.268601494 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.057944937 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.363567124 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.264943211 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.269258998 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.267924606 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.710410075 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.871083642 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.570919677 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.269030061 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.694377214 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.269595511 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.725486437 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.844116629 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.999923719 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.270898745 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.384619172 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.445089426 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.286240603 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.270601494 seconds)
    (109/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.27103623 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.268384654 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.746028613 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.270254561 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.331770459 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.665020032 seconds)
  done (took 374.526402993 seconds)
done (took 722.582607219 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.885261016 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.878164132 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.007223477 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.86872637 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.829984677 seconds)
  done (took 10.657114794 seconds)
done (took 11.84551506 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.477694839 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.476947071 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.336685362 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.478826362 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.300768862 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.498602265 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.456637148 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.290476776 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.380335754 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.362323067 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.379154799 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.329854715 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.302687531 seconds)
  done (took 19.257888445 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.606160683 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.608491415 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.335277042 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.60540115 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.309904536 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.644052011 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.47525172 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.494205155 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.500166504 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.306982262 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.283460243 seconds)
  done (took 17.358026923 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.597395699 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.609161871 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.338179859 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.613879864 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.313894419 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.626554798 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.480608259 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.496570706 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.498814299 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.309291591 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.284771308 seconds)
  done (took 17.357738056 seconds)
done (took 55.160233035 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.283266232 seconds)
  done (took 2.471870615 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.319761575 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.482500212 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.302680883 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.284596882 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.280710813 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.282145633 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.286490648 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.282066249 seconds)
  done (took 11.711384042 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.281930982 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.280385575 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.280259469 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.277998408 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.279038657 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.283370443 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.281031229 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.277084977 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.278207189 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.277154918 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.282532092 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.278687223 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.283000299 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.283037145 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.279007721 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.28014149 seconds)
  done (took 21.675582312 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.282913659 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.278849607 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.278530469 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.280466438 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.279177033 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.280532625 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.281047336 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.277703312 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.277276043 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.279703567 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.280368687 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.279163691 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.280658826 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.278315533 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.279553073 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.279237948 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.280595348 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.279620501 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.284900513 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.278965722 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.279709009 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.2816322 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.280554399 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.280788019 seconds)
  done (took 31.912693932 seconds)
done (took 68.96289058 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.471542671 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.088343548 seconds)
  done (took 9.75219135 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.283914675 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.282316733 seconds)
  done (took 3.761777673 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.282455065 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.282837591 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.280567857 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.28244924 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.283417968 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.282614186 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.28224566 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.283921613 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.283849394 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.283746394 seconds)
  done (took 14.022441257 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.284033103 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.282924855 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.281785212 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.284858534 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.28423767 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.281131918 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.282793089 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.283273196 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.284225204 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.281281173 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.285259022 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.28409055 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.286416739 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.282576166 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.284602955 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.281709258 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.280861602 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.280742067 seconds)
  done (took 24.291339401 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.286339486 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.284843523 seconds)
  done (took 3.764681801 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.283366155 seconds)
    (2/7) benchmarking "second"...
    done (took 1.283201435 seconds)
    (3/7) benchmarking "month"...
    done (took 1.282947922 seconds)
    (4/7) benchmarking "year"...
    done (took 1.282031991 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.283879169 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.283855283 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.282526099 seconds)
  done (took 10.176524756 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.286380303 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.467903593 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.552434649 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.883874235 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.287120985 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.290498125 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.160601429 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.290429277 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.289610558 seconds)
  done (took 14.704607282 seconds)
done (took 81.667322164 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.321718064 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.297617149 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.501383186 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.28279162 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.295701824 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.620499518 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.283529059 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.407610593 seconds)
done (took 38.207108734 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.290817693 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.264128145 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.051419099 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.259407785 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.35626892 seconds)
  done (took 19.126210295 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.36041824 seconds)
    (2/2) benchmarking "read"...
    done (took 1.613772439 seconds)
  done (took 5.171138797 seconds)
done (took 31.784742331 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289698765 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.286522985 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.287911679 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.287182131 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.284070457 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.28672265 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.282714377 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.285933314 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.288424673 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.287746882 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.288487939 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.28772709 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287274549 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285178685 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285498775 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.286353073 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287624781 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.288562422 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.28575623 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285084117 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286601764 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288487051 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.28615647 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.285659118 seconds)
  done (took 32.076753879 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.289267673 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.287708772 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.287410782 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.289491078 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.287447496 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.291047505 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.289039174 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.287769469 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.289875941 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.28945647 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287039515 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.286990114 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.288887691 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.286933502 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289966116 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.28867878 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.290691267 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286429233 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.288720093 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.287600423 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.288427097 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28735893 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.286702214 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290066617 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.288737755 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287691763 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.293254991 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.290854879 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.290763081 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.288093267 seconds)
  done (took 39.860260628 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.297216758 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.300783577 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.291524512 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.290618355 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.289468499 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.293011964 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.291975978 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.291373236 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.290442735 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.292370359 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.29050572 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.290128331 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.292261787 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.291506574 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.291629917 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.292076658 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.291796274 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.291848364 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.291810958 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.290247038 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.291548558 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.292324692 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.292178093 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.292361681 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.2932162 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.292874415 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.29336292 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.293270783 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.292225845 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.292569608 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.293023684 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.293331922 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.292151879 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.294127888 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.292972297 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.292762829 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.299710557 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.300894086 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.292717657 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.29314783 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.293627406 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.293347953 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.293599296 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.293115742 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.292690819 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.295117305 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.293469627 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.293492358 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.295618351 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.293449718 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.292149225 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.293887801 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.292557515 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.295311028 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.294021122 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.29378702 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.293529385 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.294156628 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.293254049 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.294717051 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.29669184 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.294813914 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.294406671 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.292891449 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.29572793 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.295998366 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.294267169 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.295358069 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.292921491 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.295381598 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.294804348 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.296978294 seconds)
  done (took 94.330492429 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.296532746 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.291893978 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.291399053 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.292225476 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290641359 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.293355961 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.2920724 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296235886 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292049647 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.295818951 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295902916 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293551324 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293192341 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297732963 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29783672 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.293159844 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.296535065 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294291844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.296078775 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297440537 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297128127 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.29374291 seconds)
  done (took 29.68324933 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298156083 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.298752123 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.29481234 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.29756047 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.294810928 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.29849159 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297617922 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.299172894 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298591506 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296331946 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293673655 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297553736 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.293941625 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294597605 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295770229 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.298236615 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298200177 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.298657148 seconds)
  done (took 24.550823255 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.295569178 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.296888396 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.298438017 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.294894247 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.294386361 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.298474999 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295596886 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.296817814 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.299344833 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.294812739 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.298574661 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29825606 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.298078554 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297159421 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300167346 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.297330176 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.298683048 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295221244 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300363562 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2953481 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.296902847 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.2976926 seconds)
  done (took 29.746951543 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300596234 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299132621 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295545267 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.294963139 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.297859538 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.299328403 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.298466082 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.297811275 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.299525377 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.298578292 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299658723 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.300779066 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.298284262 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297852884 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.297187656 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296073088 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.300864653 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298340373 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300659349 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.297561143 seconds)
  done (took 27.17751735 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.301311592 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301014235 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.30197008 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302645678 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30238668 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.303600438 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301770444 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.302273645 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301743025 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.302357239 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301382098 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.301397671 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302700749 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.302107274 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.302307196 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303740871 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.302317828 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302607615 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.301987022 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303244696 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303680152 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303442666 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30376488 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304979209 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305351414 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303187504 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302827489 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.303459202 seconds)
  done (took 37.683619377 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303727681 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.304144594 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.300773449 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.300269778 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.300308017 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.299226318 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.301708945 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.300876969 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.303810663 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.299328995 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.302512722 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.303098878 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.30160512 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.302640654 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.301607239 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.303027832 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304371891 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.301198273 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301080977 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300671217 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.302853057 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302606541 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.303467572 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.300737198 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301834663 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.303642004 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302072342 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.30070841 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30470253 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.30071634 seconds)
  done (took 40.269883858 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.32301263 seconds)
    (2/2) benchmarking "in"...
    done (took 1.324054661 seconds)
  done (took 3.858926043 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.303349257 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305766572 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.304483031 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.301053983 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.301273104 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.304703815 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.306149484 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30240016 seconds)
  done (took 11.640884971 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.304604467 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.305344514 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.304750484 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.305113461 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.305636427 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.305669819 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.313143852 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.32924433 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.305137806 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.307139964 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.313371042 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.31383716 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.307867737 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.306371447 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.304489232 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.30884391 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.307310739 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.306278889 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.305330971 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.307240982 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.305834304 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.308999128 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.308642589 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.305715984 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.309301926 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.3189954 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.333258608 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.308166938 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.306511674 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.312045375 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.313192215 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.304397949 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.308516897 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.309492278 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.30858378 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.307618909 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.316578657 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.328155536 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.315538575 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.330927199 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.310358417 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.306250317 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.307927763 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.308853987 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.30930821 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.309951327 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.310216294 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.303868666 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.309160378 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.311445838 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.316271102 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.307941676 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.30597118 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.311885479 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.309056781 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.316491089 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.332193476 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.312711508 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.320228743 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.320600101 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.344722577 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.338639019 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.312277569 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.309379731 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.3187524 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.335621451 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.316791249 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.330585072 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.30728959 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.310180128 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.31650151 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.344126914 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.33906745 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.309527768 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.311356866 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.310952532 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.310297356 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.309654091 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.317928546 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.336232384 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.312063544 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.30993137 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.319896065 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.334526899 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.308417313 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.311271972 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.311398221 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.310354409 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.312434301 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.320724609 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.333893431 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.309628913 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.310757393 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.311602645 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.312550376 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.31131155 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.312543063 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.311621968 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.309626973 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.311903999 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.313840309 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.316581614 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.322672713 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.313023769 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.312033337 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.319435594 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.334538143 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.312637614 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.32008048 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.314834428 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.311981217 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.316017464 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.318968732 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.310597183 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.317403341 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.321680193 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.313822658 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.314635871 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.312705325 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.313594025 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.322860725 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.340714457 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.313412694 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.314530528 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.319170534 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.328868306 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.314182029 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.315477824 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.314140634 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.312177755 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.312142716 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.315511042 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.314869254 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.315350351 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.314113309 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.314742957 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.313495681 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.316162838 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.316116845 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.313900474 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.314155296 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.314934231 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.316147473 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.31734419 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.317089322 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.317128863 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.322402553 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.333504636 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.316201055 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.316248931 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.311689947 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.31472251 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.318827612 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.316757948 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.315311879 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.318164885 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.314798673 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.315612925 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.315281003 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.316468828 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.316490703 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.317117895 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.32068823 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.316118923 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.319868412 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.316852711 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.313933536 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.315946034 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.319129151 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.31483677 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.314774317 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.316609038 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.32022729 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.32563712 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.317425723 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.316879974 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.318832337 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.317527822 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.317264764 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.317865552 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.322106986 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.327190829 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.317475941 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.325754389 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.337332464 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.318870054 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.31731225 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.318254537 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.318548324 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.319557349 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.321859599 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.326329051 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.329869797 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.345584161 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.319772326 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.321359189 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.319288308 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.321902465 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.323096779 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.319420281 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.318204097 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.317399665 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.316688682 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.318150938 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.319619263 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.319205846 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.317415393 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.319105881 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.320303421 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.318854529 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.31925091 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.319497041 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.320068438 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.31516806 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.320241107 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.319401113 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.318065509 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.317109339 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.319583179 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.319188113 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.319659263 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.320251668 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.324790293 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.318577856 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.32108767 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.3207494 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.321140312 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.317929435 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.321915924 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.321516658 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.32087694 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.32784922 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.342083421 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.320196862 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.327455865 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.342407133 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.31867481 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.323189387 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.322888221 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.317112044 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.324748463 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.331346949 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.32189664 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.323587599 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.323369697 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.321319105 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.324914759 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.328033152 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.340437463 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.322396097 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.322765775 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.32306719 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.320573156 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.321818004 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.322541567 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.322925093 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.325297088 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.322046953 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.323376623 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.322672211 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.323292869 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.323329898 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.323326218 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.325704532 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.331740599 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.328553081 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.321959802 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.32540925 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.323652389 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.326774864 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.323066593 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.323800062 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.323803818 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.336898198 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.348590646 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.329105158 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.344656827 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.322517039 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.329517434 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.344888982 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.326721341 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.324130118 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.324432016 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.323088651 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.321384904 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.322176607 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.324608405 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.324441928 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.326185789 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.325387321 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.329192354 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.325275921 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.32357142 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.325563948 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.326350792 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.325204934 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.323577727 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.325786465 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.32777363 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.325191336 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.323448641 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.3230072 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.332108264 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.349192681 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.32723517 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.324717207 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.324657984 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.323092747 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.325588229 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.32537264 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.328371032 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.335378856 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.329998075 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.336376127 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.328874746 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.336716097 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.326189392 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.330235015 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.337107767 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.324089703 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.325796617 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.324680149 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.32671494 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.334535385 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.349936667 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.32749056 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.332857193 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.329126524 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.326681151 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.326617688 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.328191991 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.326320459 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.327332296 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.333913074 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.35199641 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.333570565 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.328421543 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.323521781 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.329086091 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.327324092 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.327547635 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.331641156 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.328847991 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.327253443 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.325806541 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.326925366 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.327111786 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.329217982 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.327966773 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.326230358 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.329341368 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.334201245 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.352053569 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.331952914 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.330264988 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.336360702 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349610924 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.33715311 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.351722386 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.326747043 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.328510748 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.328030318 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.330592541 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.327916341 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.330494031 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.331259933 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.33005412 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.334196391 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.329962622 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.331720833 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.330311762 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.330058519 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.328812326 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.339287979 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.355399 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.333328898 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.336006257 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.327917587 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.33206293 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.336379062 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.330756333 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.331197654 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.332914484 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.342666973 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.340725324 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.32943023 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.329418175 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.333699641 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.330664725 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.329386954 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.331542796 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.332079341 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.331202202 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.333966102 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.331265092 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.334569206 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.329628075 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.333359361 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.33186044 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.333628481 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.342967339 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.353979565 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.333783948 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.33128836 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.332834718 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.333860425 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.332517476 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.332794034 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.332771052 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.333181984 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.335120545 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.342179776 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.340413521 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.334203116 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.334401258 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.330621862 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.334246938 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.333088653 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.332340799 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.334826756 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.333550016 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.335772755 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.333522471 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.33270785 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.332809368 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.33296437 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.334547593 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.33367822 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.336739718 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.34128558 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.33441259 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.331591678 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.333749811 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.334716944 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.333523047 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.333873925 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.339505017 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.357480209 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.345836715 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.34537852 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.34107836 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.33302652 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.336298232 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.344100956 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.334522258 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.333082518 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.334861222 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.336035256 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.335780647 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.337910513 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.334872002 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.342022752 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.354684714 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.333650796 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.344762663 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.360251957 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.335247585 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.33657732 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.339816455 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.337992073 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.333470307 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.336137275 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.336579008 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.343669993 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.35909298 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.339138803 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.338657846 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.336677578 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.338293738 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.340477922 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.334136805 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.338170366 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.33373889 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.338024337 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.338499397 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.339356899 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.333405077 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.33628372 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.336221057 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.340207917 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.346527401 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.334078368 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.337088994 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.33839511 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.338591706 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.339842306 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.339053535 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.33469495 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.334243153 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.337740681 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.338804188 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.337496523 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.338874881 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.336441082 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.337804309 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.339384269 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.338580397 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.341351558 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.349753198 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.348365247 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.337002999 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.336361973 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.338288929 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.339953197 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.339392545 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.338063036 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.339330149 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.340742605 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.338090476 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.340449757 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.338629153 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.3400579 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.35496947 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.363540172 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.340025565 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.33820666 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.341699048 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.340653998 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.334955581 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.339952354 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.34188253 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.341852548 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.349664438 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.341228943 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.344823705 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.363616411 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.340522402 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.345796201 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.346800164 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.350938002 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.342975503 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.34113021 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.339535177 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.345293825 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.36088023 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.342699787 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.350241324 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.373626337 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.363623219 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.340784282 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.342729555 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.341899634 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.343097016 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.341942025 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.341869357 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.342879445 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.341063495 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.343726582 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.344058926 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.346276705 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.343497881 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.344362539 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.343832247 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.342096836 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.34353236 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.338090704 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.34251995 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.342366328 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.343586387 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.342644725 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.343924055 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.342602457 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.354881057 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.374870463 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.340741887 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.344606134 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.340240829 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.346208662 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.343852418 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.356282055 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.35124196 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.341578836 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.343765366 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.343356028 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.344921744 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.341882075 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.345045694 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.343715661 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.341934258 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.341675596 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.354624347 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.371794818 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.348678255 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.34195237 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.343471752 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.34376966 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.344350145 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.34379393 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.343672733 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.344208611 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.347836467 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.349940349 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.343094817 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.343962619 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.347696889 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.353172667 seconds)
  done (took 792.97394976 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.341372505 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.339567956 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.342247909 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.343365905 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.341969236 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339929598 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340611607 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.343845717 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.343416294 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.342106222 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.340817361 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.342398809 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.342851559 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.343468661 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.343004834 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.341782841 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.344599594 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.343062228 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.342517182 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.343898012 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.34135331 seconds)
  done (took 29.437249747 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.345735939 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.341829526 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.343770573 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.346377859 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.343647069 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.347190905 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.342470475 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.34677246 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.347860103 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34399209 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.34913331 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347618243 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.34211528 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.343183913 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342396755 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.347276543 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.346787223 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.346802718 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.347360009 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.346703599 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.348396108 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.344664236 seconds)
  done (took 30.85130323 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.348273621 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.348570013 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.347906357 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.3466401 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.347533571 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.344503988 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.351457687 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.347417364 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.349047718 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.348513051 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.346742668 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.348638035 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.357069892 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.355374612 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.35020271 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.348966008 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.4926177 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.349135064 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.348108657 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.348935273 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.347288702 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.35188226 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.364043583 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.346555504 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.346131314 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.348057136 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.348257583 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.347364031 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.34876135 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.349482254 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.353162139 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.350055157 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.348723931 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.352395574 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.345854953 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.348725923 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.353300018 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.349108461 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.345335319 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.34938518 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.36041147 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.372988073 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.351386642 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.356000127 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.369134243 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.348097729 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.352100459 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.359106937 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.346497452 seconds)
  done (took 67.587239297 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.348627957 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.350267406 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.347432765 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.351800326 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.351258804 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.351853509 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.349169848 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.349017801 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.348394454 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.348983927 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.349103021 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.348988974 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.350444743 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.351811343 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.351659912 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.347327773 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.350588173 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.347169429 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.349122556 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.347522404 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.347379411 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.352585986 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.351596926 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.346977004 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.351509697 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.347891262 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.347984273 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.352505217 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.351019823 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.34980039 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.353625081 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.352189273 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.354523918 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.34915865 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.349504547 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.351553345 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.353493893 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.34986789 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.352876111 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.348231562 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.350399723 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.352711812 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.354830326 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.353335488 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.350559717 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.351912487 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.350807586 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.351090246 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.34791696 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.353304572 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.353791993 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.353799731 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.356227244 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.352088858 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.352723646 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.354232774 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.34917512 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.349669988 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.353841113 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.351133212 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.351711511 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.351886275 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.349071377 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.351773649 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.353523012 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.350278133 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.351025031 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.35419797 seconds)
  done (took 93.118040802 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.352492269 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.351800102 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.352113982 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351723289 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.352026038 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.351658481 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.354283187 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.352924674 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.354512809 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.353809754 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.353584199 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.353423371 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.354576785 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.354561336 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.354707528 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.35688918 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.35616685 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.354355929 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.354193649 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35449078 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.356933337 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.356092742 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.356582428 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.355922032 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.356514374 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.356010366 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.354431192 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.356128135 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.356955099 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.353017396 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.354342989 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.356368324 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.355750581 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.356498899 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.357841599 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.355675406 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.353964968 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.353425792 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.353512805 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.354910726 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.354641081 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.352398688 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.353589341 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.354365205 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.352713031 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.354227175 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.352419051 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.353854472 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.353819184 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.353432413 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.355861194 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.353063664 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351703898 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.352137679 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.351684606 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.352834421 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.350446837 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.352529365 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.352383083 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.352445857 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.352647295 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.352857157 seconds)
  done (took 85.209068753 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.351758768 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.353987914 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.349858555 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.349861462 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.352388163 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.349580911 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.351705399 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.352896904 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.351162925 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.356189389 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353187537 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348869136 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350239516 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352615653 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.349877714 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349499522 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.350940281 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.349546643 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.352116248 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.34761985 seconds)
  done (took 28.279347907 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.349312573 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.352773804 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.348533858 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.351555974 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.351073972 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.349711696 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.353557922 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3511084 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346708302 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353069805 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.354201187 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.352479675 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349043999 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.350177825 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.35360078 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.350013022 seconds)
  done (took 22.871296214 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.349604001 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.352343205 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.353568949 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.351623447 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.348484648 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.351025846 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.352306661 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.351254872 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.349377692 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.352109549 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.352446311 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.354700384 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.353777899 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.352709452 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.349306613 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.351937014 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.348790935 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.349416925 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.353157183 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.352167944 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.350618827 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.350700966 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.352341051 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.354252165 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.350141366 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.352699397 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.35134623 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.350576223 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.351828002 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.353790048 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.350168173 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.35075587 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.350369894 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.351943117 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.353765109 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.351928971 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.354806933 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.355088303 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.355152934 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.35442672 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.356035658 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.351814126 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.352531578 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.356906133 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.351406975 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.354218163 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.351076554 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.353287143 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.352118206 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.352320997 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.354970888 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.357632138 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.357358153 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.355238644 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.355628175 seconds)
  done (took 75.644899308 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.356001211 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.357391605 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.354021322 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.355596524 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.355421013 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.354312886 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.356752515 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.356237255 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353762748 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.356546578 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.3557826 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.357212883 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.353529722 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.354823316 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.353941915 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.355643635 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.354144728 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.352794396 seconds)
  done (took 25.650461286 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.354498382 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.35504711 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.357294259 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.356101574 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.353925396 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.35855745 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355026348 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.357765422 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357316757 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.355361129 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354643604 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.356769482 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358644087 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.357841378 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.355065902 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356459755 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.358060962 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.355753989 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.356251767 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.355213344 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.35834324 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.357454131 seconds)
  done (took 31.098372744 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.356463292 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.357692391 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.357786795 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.373576434 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.378301493 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.378611771 seconds)
  done (took 9.460635696 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366065753 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358429393 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.354356351 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359125584 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358816315 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355253895 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357571167 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357383484 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359942983 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.357163047 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355400968 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360073442 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359982821 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357596976 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36056189 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357618747 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358526429 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356831408 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358097036 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359343093 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35623185 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357265242 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357551919 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355731873 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356800284 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356019564 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358877821 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357903892 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358703844 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362462779 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36111857 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358806506 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361453717 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360045465 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359901492 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362279665 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358397377 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360589587 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361399925 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359681363 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.361237584 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362094922 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360372059 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358817563 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367531885 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358747156 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358871831 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359492079 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35919451 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362326093 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360918832 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362202865 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36168758 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360195467 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363656328 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362250886 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359560478 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360796852 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363344096 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360069969 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358121125 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360841532 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36048749 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359147445 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361903135 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360327279 seconds)
  done (took 91.023093816 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360932509 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.35776719 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359187306 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362325055 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360431156 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361190532 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361980378 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360411424 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359051048 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359728723 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361017286 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35995809 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359217615 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359017433 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359546896 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358861729 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35834118 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359224546 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360190875 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363850748 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360384618 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362325799 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360106241 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35940912 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357769143 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363197616 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359267689 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359547235 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361679132 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357599134 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359542146 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358549964 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358972692 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.360764047 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358546838 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360718459 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.361348916 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360204999 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358394902 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362672441 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358094363 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363065365 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360128693 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360136329 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359185237 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360042601 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359534743 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359090914 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361039594 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359668094 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.361338627 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360625816 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358943241 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360792333 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360491506 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359756281 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359925686 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359151194 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358704972 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361940694 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359589471 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360433057 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362811376 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360979643 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360466745 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361859616 seconds)
  done (took 91.038665382 seconds)
done (took 1846.319808635 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.415827707 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.382883053 seconds)
  done (took 14.062451318 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.525664619 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.4804686 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.359745338 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.393845916 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.353907201 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.375269488 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.375151599 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.355721045 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.359566703 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.360118781 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.359365103 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.549689905 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.407050142 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.353996956 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.359502198 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.454417543 seconds)
  done (took 43.688688227 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.389050985 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.363076101 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.483485749 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.383118845 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.387413061 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.556009204 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.418678817 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.364294673 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.546470269 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.400657741 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.990693928 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.3804268 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.364242815 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.513353448 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.376347519 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.557548325 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.620943801 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.979456731 seconds)
  done (took 31.337978871 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.835854612 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.359761908 seconds)
  done (took 9.459355989 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.383762061 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.365363656 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.363748933 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.360280832 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.353576849 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.347116129 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.361637972 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.363987358 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.178219038 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.49455272 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.359125807 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.370000677 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.383712891 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.365268248 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.36009096 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.399909107 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.517125183 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.362684027 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.361258039 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.368197026 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.36480642 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.490798785 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.403685417 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.361791965 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.500059203 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.188007617 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.367485829 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.367676375 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.500864815 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.363345469 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.363508754 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.365018556 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.367815932 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.975424639 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.843390246 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.366858148 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.398663252 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.371776913 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.360068986 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.558449446 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.364453783 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.368777162 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.368194634 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.842366338 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.495443901 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.485347925 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.671591585 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.379810958 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.365679413 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.427483671 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.363920054 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.363465211 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.393663136 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.146081078 seconds)
  done (took 113.6039276 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.3676994 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.750699746 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.528648246 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.374675313 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.147501345 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.134218653 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.376062691 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.660012289 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.407115586 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.357669292 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.644615512 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.881645098 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.38028283 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.383178792 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.813524746 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.405460549 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.358418138 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.24539111 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.373127 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.35668249 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854226044 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.34988106 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.350634722 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.471506314 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.389021557 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.833179637 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.80400818 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.915040179 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.37378971 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.346743453 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.832706374 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.373028488 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.376540125 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.347190876 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.620980393 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.724073093 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.716791777 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.372406746 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.362830402 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.351026305 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.374121496 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815611969 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.72525533 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.37101032 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.352582515 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.840902084 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.371649916 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.3616511 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.357245964 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.561376938 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.04718311 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.352014158 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.735761718 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.353097512 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.639855155 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.401901882 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.352772041 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.838228054 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.364024411 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.478234497 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.37072766 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.348652578 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.345625793 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.353256004 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.351697447 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.696656414 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.727284475 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.35626208 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.702136325 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.831757343 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.374118885 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.8759855 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.284646236 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.360527377 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.424194383 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.349679452 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.030578575 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.84281864 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.368945701 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.345114747 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.679976885 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.36451459 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.618559264 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.358597574 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.34765668 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.858292313 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.355609398 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.392807939 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.348150087 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.35862126 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.096161062 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.350911135 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.627984832 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.375655174 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.346689706 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.347829883 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.366909282 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.343288423 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.350360979 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.346751315 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.859946605 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.371140436 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.324571864 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.358142335 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.34737358 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.341040851 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.345299391 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.347412878 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.573989188 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.816096711 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.364381442 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.347655194 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.347250905 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.347237343 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.475222502 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.352803807 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.642530851 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.367889883 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.342659779 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.36264818 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.111544013 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.400730279 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.343320756 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.367292039 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.247181824 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.554680142 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.367754657 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.366256572 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.348886594 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.36717917 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.568769551 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.36261023 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.433542702 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.353143858 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045354518 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.380314378 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.386871985 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.691761827 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.35337518 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.221861481 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.376201341 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349678412 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.634023349 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.609164424 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.653011809 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.346145046 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.365390684 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.018136103 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.412588458 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.496905124 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.368645432 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.331429823 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549525941 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.511269363 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.352128216 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.940793618 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.353123387 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.567367408 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.351301977 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.647733533 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.83183033 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.364763417 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.354004317 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.050640461 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.04091169 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.124344611 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.352517804 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.615322776 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.31938264 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.813023415 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.349098993 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.350826328 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.928771082 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.354007602 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.353738532 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.351352017 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.350848995 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.414425374 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.524799288 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.53119726 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.357846418 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.794922952 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.407555814 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.34632628 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.355467755 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.346574774 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.699124853 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.429907123 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.35148446 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.35920436 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.352663648 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.360300157 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.817127533 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.30946606 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.354286979 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504262836 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.974059867 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.367975684 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.352806694 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.986581081 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.566503529 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.883797742 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.42645375 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.6517041 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.37851222 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.391864899 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.969815437 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.374665786 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.854314942 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.371364528 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.355393932 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.942994594 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.37004153 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.418968047 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.353176997 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.355023177 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.880493797 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.370023432 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.356591768 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.539873969 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.368192439 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.609555744 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.356044573 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.368263877 seconds)
  done (took 1115.117522719 seconds)
done (took 1328.534283017 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.355944695 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.349106172 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.33960096 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.357036895 seconds)
  done (took 26.664846869 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.365893277 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.362395558 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.362952208 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.361201707 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.364152399 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.360524082 seconds)
  done (took 9.439412486 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.414487796 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.349568019 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.356934034 seconds)
  done (took 19.384463013 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.562125268 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.635239634 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.707651047 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.566924226 seconds)
  done (took 10.737741851 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.364868769 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.362038957 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.361995167 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.365522433 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.368890873 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.366988406 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.367476275 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.364430835 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.368656676 seconds)
  done (took 13.55470683 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.363261771 seconds)
done (took 82.408369538 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("sort", Float64, true)...
    done (took 6.365042571 seconds)
    (2/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.381098002 seconds)
    (3/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.511073853 seconds)
    (4/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.382757894 seconds)
    (5/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.037112863 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.970800615 seconds)
    (7/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.353029951 seconds)
    (8/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.334706463 seconds)
    (9/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.359973858 seconds)
    (10/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.376504542 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.605624295 seconds)
    (12/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.823001338 seconds)
    (13/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.34603137 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.396437327 seconds)
    (15/286) benchmarking ("sort", Float32, false)...
    done (took 5.35110104 seconds)
    (16/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.399999947 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.385484894 seconds)
    (18/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.341957402 seconds)
    (19/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.341367389 seconds)
    (20/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.37655673 seconds)
    (21/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.09139102 seconds)
    (22/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.350906935 seconds)
    (23/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.358398823 seconds)
    (24/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.558306483 seconds)
    (25/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.480268348 seconds)
    (26/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.339152901 seconds)
    (27/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.340391479 seconds)
    (28/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.346672895 seconds)
    (29/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.377021645 seconds)
    (30/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.614797508 seconds)
    (31/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.560721779 seconds)
    (32/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.176393676 seconds)
    (33/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.339949309 seconds)
    (34/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.540012645 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 6.356983093 seconds)
    (36/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.865305616 seconds)
    (37/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.639751949 seconds)
    (38/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.461448261 seconds)
    (39/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.540095006 seconds)
    (40/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.341687826 seconds)
    (41/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.334475987 seconds)
    (42/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.342598675 seconds)
    (43/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.620477282 seconds)
    (44/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.467473111 seconds)
    (45/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.443686386 seconds)
    (46/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.485858985 seconds)
    (47/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.387843612 seconds)
    (48/286) benchmarking ("sort", Float64, false)...
    done (took 5.663886684 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.360716435 seconds)
    (50/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.334942779 seconds)
    (51/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.76199323 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.491551747 seconds)
    (53/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.609654528 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.633646626 seconds)
    (55/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.33997286 seconds)
    (56/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.393710731 seconds)
    (57/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.201183138 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.411860887 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.972593921 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.374699614 seconds)
    (61/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.354782334 seconds)
    (62/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.425655417 seconds)
    (63/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.370873746 seconds)
    (64/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.568405071 seconds)
    (65/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.83408135 seconds)
    (66/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.641227473 seconds)
    (67/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.15713858 seconds)
    (68/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.569112511 seconds)
    (69/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.75783095 seconds)
    (70/286) benchmarking ("sort", Float32, true)...
    done (took 6.375334207 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.991602933 seconds)
    (72/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.343291176 seconds)
    (73/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.349467299 seconds)
    (74/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.876798371 seconds)
    (75/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.969201826 seconds)
    (76/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.540980236 seconds)
    (77/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.342698597 seconds)
    (78/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.396277816 seconds)
    (79/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.560334419 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.266196174 seconds)
    (81/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.125466511 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.72954602 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 5.535364066 seconds)
    (84/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.107938132 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.762024519 seconds)
    (86/286) benchmarking ("sort", Int8, true)...
    done (took 6.380005354 seconds)
    (87/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.362910468 seconds)
    (88/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.199793182 seconds)
    (89/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.740146969 seconds)
    (90/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.357469235 seconds)
    (91/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.358525125 seconds)
    (92/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.349123026 seconds)
    (93/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.623486718 seconds)
    (94/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.403768588 seconds)
    (95/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.730940237 seconds)
    (96/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.389466991 seconds)
    (97/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.343117656 seconds)
    (98/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.850834636 seconds)
    (99/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.461950849 seconds)
    (100/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.707875437 seconds)
    (101/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.199858895 seconds)
    (102/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.359605174 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.934172386 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.579305289 seconds)
    (105/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.454722526 seconds)
    (106/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.809597554 seconds)
    (107/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.359785924 seconds)
    (108/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.489625215 seconds)
    (109/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.956284634 seconds)
    (110/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.353420504 seconds)
    (111/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.382173802 seconds)
    (112/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.106970734 seconds)
    (113/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.425187741 seconds)
    (114/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.448359048 seconds)
    (115/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.324130173 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.898028928 seconds)
    (117/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.402362214 seconds)
    (118/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.724690884 seconds)
    (119/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.380930382 seconds)
    (120/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.66083286 seconds)
    (121/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.181484775 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.282701193 seconds)
    (123/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.64705994 seconds)
    (124/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.344959198 seconds)
    (125/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.89729532 seconds)
    (126/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.415546556 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.105330818 seconds)
    (128/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.957878116 seconds)
    (129/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.626647717 seconds)
    (130/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.371067345 seconds)
    (131/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.361742134 seconds)
    (132/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.707426811 seconds)
    (133/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.548750289 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.511279372 seconds)
    (135/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.375951337 seconds)
    (136/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.471314443 seconds)
    (137/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.467573918 seconds)
    (138/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.856659642 seconds)
    (139/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.39255243 seconds)
    (140/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.453562056 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.130348451 seconds)
    (142/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.395258686 seconds)
    (143/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.346522668 seconds)
    (144/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.447872739 seconds)
    (145/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.78405042 seconds)
    (146/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.465972075 seconds)
    (147/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.191055943 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.283256374 seconds)
    (149/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.360038057 seconds)
    (150/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.382097404 seconds)
    (151/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.347938153 seconds)
    (152/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.401607846 seconds)
    (153/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.611867567 seconds)
    (154/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.392515472 seconds)
    (155/286) benchmarking ("sort", BigInt, false)...
    done (took 6.366675423 seconds)
    (156/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.74278638 seconds)
    (157/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.395012308 seconds)
    (158/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.366368365 seconds)
    (159/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.684473583 seconds)
    (160/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.49242587 seconds)
    (161/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.394251689 seconds)
    (162/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.369045987 seconds)
    (163/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.441781863 seconds)
    (164/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.412283419 seconds)
    (165/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.377801878 seconds)
    (166/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.349710311 seconds)
    (167/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.181711601 seconds)
    (168/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.340716289 seconds)
    (169/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.463355849 seconds)
    (170/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.355944796 seconds)
    (171/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.729459035 seconds)
    (172/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.123020168 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.780126242 seconds)
    (174/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.666488309 seconds)
    (175/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.572589876 seconds)
    (176/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.136827541 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.395110071 seconds)
    (178/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.348908544 seconds)
    (179/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.417372846 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.430365351 seconds)
    (181/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.472121378 seconds)
    (182/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.27397588 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.772844092 seconds)
    (184/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.403564846 seconds)
    (185/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.486727086 seconds)
    (186/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.369678617 seconds)
    (187/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.452417855 seconds)
    (188/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.477706611 seconds)
    (189/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.470502816 seconds)
    (190/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.881538408 seconds)
    (191/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.964229299 seconds)
    (192/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.395637817 seconds)
    (193/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.749065112 seconds)
    (194/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.364460258 seconds)
    (195/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.480425982 seconds)
    (196/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.469590151 seconds)
    (197/286) benchmarking ("sort", Bool, true)...
    done (took 5.446507912 seconds)
    (198/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.444681849 seconds)
    (199/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.074267046 seconds)
    (200/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.416061431 seconds)
    (201/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.776778494 seconds)
    (202/286) benchmarking ("sort", BigInt, true)...
    done (took 6.38957861 seconds)
    (203/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.353578966 seconds)
    (204/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.990802338 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.578109762 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.963790948 seconds)
    (207/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.874247649 seconds)
    (208/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.389437936 seconds)
    (209/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.365256784 seconds)
    (210/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.945951721 seconds)
    (211/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.726292346 seconds)
    (212/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.351300121 seconds)
    (213/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.370680966 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.44781433 seconds)
    (215/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.207835582 seconds)
    (216/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.846052534 seconds)
    (217/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.372540648 seconds)
    (218/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.434828518 seconds)
    (219/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.196841385 seconds)
    (220/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.39669819 seconds)
    (221/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.518698279 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.411004396 seconds)
    (223/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.902057112 seconds)
    (224/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.374911574 seconds)
    (225/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.478418771 seconds)
    (226/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.380839526 seconds)
    (227/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.385974672 seconds)
    (228/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.374648599 seconds)
    (229/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.458563516 seconds)
    (230/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.379995621 seconds)
    (231/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.078480123 seconds)
    (232/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.086025998 seconds)
    (233/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.147460577 seconds)
    (234/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.796452485 seconds)
    (235/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.380844369 seconds)
    (236/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.398189072 seconds)
    (237/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.183791666 seconds)
    (238/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.901341931 seconds)
    (239/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.013699501 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.579793433 seconds)
    (241/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.369459701 seconds)
    (242/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.353946115 seconds)
    (243/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.379698958 seconds)
    (244/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.455002358 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.721729808 seconds)
    (246/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.164742194 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.219327997 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.39385974 seconds)
    (249/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.388018507 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.774382884 seconds)
    (251/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.740131548 seconds)
    (252/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.451757301 seconds)
    (253/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.437130892 seconds)
    (254/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.43712117 seconds)
    (255/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.077916065 seconds)
    (256/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.83526722 seconds)
    (257/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.394603131 seconds)
    (258/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.736708032 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.456163853 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.781738974 seconds)
    (261/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.775819173 seconds)
    (262/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.481978665 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.455997803 seconds)
    (264/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.576931504 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.485289632 seconds)
    (266/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.403403277 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.19363258 seconds)
    (268/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.713609159 seconds)
    (269/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.421424867 seconds)
    (270/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.347973305 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.221704877 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.410145647 seconds)
    (273/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.354896651 seconds)
    (274/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.37661582 seconds)
    (275/286) benchmarking ("sort", Int8, false)...
    done (took 4.406424075 seconds)
    (276/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.338780439 seconds)
    (277/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.348784284 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.415158099 seconds)
    (279/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.402029194 seconds)
    (280/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.495145193 seconds)
    (281/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.182154829 seconds)
    (282/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.375304994 seconds)
    (283/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.423512144 seconds)
    (284/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.363952686 seconds)
    (285/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.349885176 seconds)
    (286/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.104167989 seconds)
  done (took 945.421440732 seconds)
done (took 946.6886616 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.40636812 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.403320312 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.385634458 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.408058282 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.498687037 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.411612605 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.396936696 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.387859834 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.433122323 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.435838157 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.384403949 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.408722248 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.388926854 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.386797199 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.384461018 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.40133629 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.408694771 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.388348514 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.403063835 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.395181322 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.40401418 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.384592395 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.435411404 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.409159575 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.388074708 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.38793117 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.390322772 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.405573245 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.498212509 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.391400182 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.39024912 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.400670579 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.40812938 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.386852633 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.381645452 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.408870898 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.399405603 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.398137702 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.391900865 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.421212737 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.792329041 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.394787546 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.388308982 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.388938714 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.390212092 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.392516441 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.389732639 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.393127772 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.401462761 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402490736 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.782792444 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.412727371 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.390645522 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.388645115 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.39973719 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.387058724 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.391651204 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.406945927 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.408072583 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406745106 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.398209611 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.394378587 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.389916307 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.407384235 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.397368845 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.825238939 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.393405624 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.39346222 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.808956167 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.404834092 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.825375916 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.40642994 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.391040849 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.402672693 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.420345694 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.412003336 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.384910306 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.388972871 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.400803945 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.389228861 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.400591583 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.405036141 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.39681334 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.390242469 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.408418309 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.417361551 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.402687222 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.393147827 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.399884738 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.411952624 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.400724004 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.402171782 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.394832436 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.38696998 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.40178195 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.395791915 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.393625897 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.395905507 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.395959032 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.40326926 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.796353712 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.417788131 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.389428934 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.388608825 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.392501981 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.406457211 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.794054382 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.40019236 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.414399859 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.439697212 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.39455894 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.403031205 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.394926535 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.410626442 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.402369266 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.397769515 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.38984329 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.405173597 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.820356419 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.422052127 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.394109167 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.390528277 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.41130688 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.39374279 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.390359846 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.42038205 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.397235864 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.409923246 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.513622828 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.40422821 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.425153235 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.392429178 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.397034471 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.418665797 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.412844039 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.426609206 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.396929041 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.414214276 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.41133929 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.38957449 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.406184843 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.406505942 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.396151171 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.401761559 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.390417139 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.418439694 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.410061821 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.409611216 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.415949318 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.51547735 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.391453111 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.41181888 seconds)
done (took 233.893285814 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.452973548 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.38358239 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.476928661 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.392466042 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.493224151 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.492489719 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.390016371 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.3906607 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.389456074 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.768741574 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.389852229 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.388087061 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.384942902 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.391090766 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.474151848 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.392407346 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.39355286 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.732985431 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.392438399 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.463624723 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.393155111 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.390505435 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.394795063 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.77335764 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.391816934 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.39204865 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.463866274 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.393148147 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.737312773 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.387833898 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.39195459 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.738921247 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.484404875 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.411293083 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.403340127 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.4022948 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.494000031 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.415466429 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.476055596 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.473202834 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.478985948 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.43367203 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.388598569 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.387097216 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.396699619 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.397400729 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.39273493 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.422935761 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.39654513 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.394710264 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.735219054 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.405189902 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.402427828 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.393305713 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.394401109 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.415896814 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.392998309 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.395404256 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.484662369 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.395837085 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.45732046 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.774221104 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.770794963 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.395152288 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.394302792 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.394706644 seconds)
  done (took 152.425346034 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.462292053 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.469029487 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.505910691 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.411235148 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.448014424 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.509897451 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.413372686 seconds)
  done (took 11.513503436 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.402730238 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.396977336 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.445256339 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.445438094 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.39657215 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.543632584 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.396174312 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.409729951 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.393424678 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.44915127 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.398747138 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.398784514 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.404619639 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.39784742 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.445050889 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.409131748 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.512487216 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.398720055 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.398305084 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.549665344 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.397026029 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.405837288 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.451803929 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.407906813 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.400082781 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.405130801 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.020775745 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.398902894 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.395186904 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.399430805 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.397333718 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.436248075 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.399213457 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.396268476 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.395256896 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.551341001 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.396369513 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.397122297 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.39946039 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.398429693 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.398639139 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.398629631 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.39877044 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.397724021 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.399449994 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.424509722 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.398695831 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.399073669 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.399899879 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.400620147 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.449079928 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.399345891 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.398310043 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.397706437 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.454954023 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.405481481 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.401063063 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.395359307 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.400338881 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.398051197 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.551441507 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.44688393 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.399329291 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.44926913 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.401397696 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.401897793 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.400256719 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.400216951 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.467010081 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.39992726 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.447778075 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.398160576 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.555093988 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.423941332 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.401525387 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.403800973 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.40343714 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.401957196 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.396374598 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.407526555 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.399069908 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.402655269 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.407601689 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.399489559 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.398675649 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.534468984 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.530822378 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.400920858 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.414893111 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.409375422 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.399871782 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.454818629 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.401633115 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.401859536 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.455426612 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.516518814 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.456954488 seconds)
  done (took 159.800073323 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.406853542 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.410584457 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.404646716 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.418075328 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.401731603 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.401468579 seconds)
  done (took 9.744290125 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.404991757 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.40551332 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.402675263 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.404239565 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.403195331 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.403525869 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.40373643 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.404175591 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.407020263 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.404003225 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.4051674 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.403488571 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.403503916 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.404266611 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.405202164 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.40341963 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.402533465 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.400227501 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.403681361 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404089917 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.509593385 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.403846531 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.403878495 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.406220558 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.409185598 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.403642254 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.41371382 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.404054184 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.404342263 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.412127073 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.425092383 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.40736654 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.406231065 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.410462259 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.409399327 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.406929929 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.410220403 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.405363323 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.402869709 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.40759675 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.406419333 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.407352693 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.405453465 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.405850854 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.407984457 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.410539953 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.410298655 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.414496913 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.407202653 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.406291256 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.407963294 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.406141629 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.406153851 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.407393059 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.409424391 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.427172144 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.411355863 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.406364216 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.406727445 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.40848705 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.409439442 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.409133259 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.407907712 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.411039216 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.405132906 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.409275041 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.407157218 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.411903455 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.408238226 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.406081972 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.408856199 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.405607248 seconds)
  done (took 103.722695008 seconds)
done (took 438.496253248 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.727397875 seconds)
  done (took 8.032336259 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.410391277 seconds)
  done (took 7.715562011 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.707576602 seconds)
  done (took 22.020910771 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.409639096 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.518622004 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.429645819 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.417275489 seconds)
  done (took 27.080062745 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.780318153 seconds)
  done (took 8.084618267 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.400422222 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.392117566 seconds)
  done (took 14.099363993 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.474505057 seconds)
  done (took 7.779663454 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.441872328 seconds)
  done (took 7.745579279 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.415909089 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.428059049 seconds)
  done (took 14.160692903 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.380398473 seconds)
  done (took 7.685160714 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.252996505 seconds)
  done (took 8.558694046 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.403077096 seconds)
  done (took 7.709060577 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.480582367 seconds)
  done (took 7.787391574 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.279389475 seconds)
  done (took 9.585126109 seconds)
done (took 159.349435288 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.399350897 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.402228565 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.401420978 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.39893875 seconds)
  done (took 26.906554459 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.441897269 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.442451214 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.443412528 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.453295698 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.446065888 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.440828861 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.434384616 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.438214903 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.453651381 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.44654628 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.444799831 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.445561105 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.444626378 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.436718483 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.44682266 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.446638814 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.453594019 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.444390219 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.436256956 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.446754119 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.411432822 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.456480538 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.447038498 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.411597897 seconds)
  done (took 35.922155061 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.930343161 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.48495744 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.564292231 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.462426151 seconds)
  done (took 7.748151958 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.462372695 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.463291681 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.476457261 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.51548112 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.546156114 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.47366879 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.435611724 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.432601805 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.418524735 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.464609673 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.539769628 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.482116105 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.559478092 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.411218224 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.609967132 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.413138827 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.413845885 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.463626196 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.515966343 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.530543064 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.413096458 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.461978054 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.469419404 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.482274969 seconds)
  done (took 36.762232758 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.412187805 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.430315151 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.411795627 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.41005525 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.420139654 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.411739517 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.412171523 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.411890164 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.411826499 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.417604786 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.410625466 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.423881136 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.412051501 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.412272452 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.418059255 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.412146634 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.417281509 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.412657364 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.411757642 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.417973892 seconds)
  done (took 29.610034873 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.406691302 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.258658429 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.75846506 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.661809739 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.407067565 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.400305086 seconds)
  done (took 28.202484018 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.479641618 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.627143147 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.414694137 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.76186263 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.852990753 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.430822298 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.415544883 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.648329269 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.956570737 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.950269874 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.47086673 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.47953827 seconds)
  done (took 20.800653175 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.407566258 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.407759409 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.417053181 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.424504783 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.466637784 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.43362914 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.420483527 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.40841216 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.467311199 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.4866554 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.432045262 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.468698716 seconds)
  done (took 38.551582395 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494874734 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.452479154 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.30816537 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427255763 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.119461829 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613757005 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.469732191 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.866848039 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.410671619 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682711198 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413156729 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500713456 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663326483 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41710518 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410493532 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.423161073 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652674892 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904852414 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411292932 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.487313217 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436099462 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409069055 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.57275632 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.441927109 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622050817 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.549976726 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.671744274 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.186618411 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.703420959 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.423025268 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42063857 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410616591 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685847333 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073018755 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523704154 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420744138 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420390271 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.957621475 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.392779395 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.477189684 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416554417 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414176881 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422905968 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410179673 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.346055211 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412545776 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881464037 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.413772256 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.123933982 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.411974736 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424927426 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506677965 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.415487254 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.404151813 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461074232 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.429989829 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.409648704 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504198504 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99638061 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.909372811 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424258901 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.348496947 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.432209344 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.392213463 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05768481 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.534473316 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.415538595 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.41678692 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347375944 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.465515635 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430273209 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56016428 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.428494088 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.063186787 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152972044 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.434095662 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.360669143 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97019945 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429959543 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.34884045 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636966142 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.187726495 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349086833 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.353746618 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.347555283 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120750171 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417271652 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.840105027 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433314885 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.893931401 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.418154054 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432088589 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436547759 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.636880994 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.288323895 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415058861 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.409557054 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540895233 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429929525 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.884734642 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343803038 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.41186905 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.670361371 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.623304255 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423557937 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.417894882 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651748399 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422113027 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.429558214 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.425250488 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.425218618 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.991023461 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.441929296 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.910994311 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431397472 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.189856001 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153485201 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415226121 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.51793617 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.417438014 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658701709 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.206675715 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.569045324 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481030821 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41688892 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415323257 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.494467263 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.008745321 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.575050657 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.411097338 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420066289 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.426173455 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.418244986 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366660354 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.417664236 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429509524 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.192537575 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.640287558 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42128924 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693054817 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351429157 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.563288181 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.420980783 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.633822957 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.623774443 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.433510401 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.096818662 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421669165 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.422264087 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429467879 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437261708 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519859306 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441409071 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.419200949 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.675406303 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.419097779 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.421193412 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.5127821 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.198135645 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419898836 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.425882988 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43548277 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014443027 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414247207 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.422537224 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30957466 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.432047192 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488656455 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.424964992 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.4297252 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.205734304 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447365718 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.426613735 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.431055669 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642881611 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430837077 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.422275738 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499004046 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.633304498 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007776993 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450442559 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.354390176 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.131463963 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.113108412 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42344894 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.609335352 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.423783824 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432021194 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432964879 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.42064184 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.004631382 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44068703 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.417527297 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.428723214 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.43299294 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.426393902 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417942347 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.189417169 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.950998736 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.437626659 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.433809129 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565221503 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.436416125 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.357341386 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.940399479 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.426925006 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.4176945 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.198768704 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455777529 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.432573515 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916790045 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674873649 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421935975 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.43519382 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.541840793 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.453141198 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.422479041 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425022157 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417804811 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.431977126 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42462786 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.430672248 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.432443282 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.786063421 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986436113 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151597467 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988196645 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356457599 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.419128678 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.306046404 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.888262986 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350871291 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.079457547 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608518451 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.906724755 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361262831 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636637328 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.631424663 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187561439 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43543871 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652555091 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337904695 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.425618379 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430432181 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633996993 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459599182 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431596387 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.354540341 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.699317067 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.698360284 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424030736 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.497250666 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888646148 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430111601 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.195752475 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.483975388 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.753680617 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.611593893 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.047893003 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.813058815 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.420019486 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.442072453 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926555739 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.425772782 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.950512871 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060487746 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.439506804 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.644163227 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353780823 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.4369481 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.436816103 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.421163776 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.707789274 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.424045738 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.674884357 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.436321114 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360209897 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.436967428 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968822035 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.293493228 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.43179035 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428960102 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171598831 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41994064 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.72290046 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.444362985 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.18417266 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449074523 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.360466999 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360723442 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.119653177 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.429721028 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403733577 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92662513 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.424045448 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448170209 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462641031 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273470496 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.678796185 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.436386309 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.026055784 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668451387 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.442369085 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452198904 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.53005063 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.438383372 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.411101236 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.309009063 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.664154435 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.48365258 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.646788821 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.31782068 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.328041099 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.456080051 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632017796 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.310862212 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.438143643 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.691853936 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.156076379 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.429498126 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128347338 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465088575 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.43765794 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.441867784 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.425981522 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464562036 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514013512 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.441959874 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.441090411 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.441584458 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.607685089 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438167047 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433536524 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.445469978 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526106999 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.959234753 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.203944434 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.198604557 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032939152 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187871637 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.032788908 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462315379 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.432025179 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443173773 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36458293 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5762433 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.95574667 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703926372 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560065393 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.423140013 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455158319 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.443012781 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441454368 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.644674341 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706325154 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.404878613 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439249424 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.218289394 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.587564459 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.443302406 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.643824839 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943044693 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002831242 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545704015 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.432271283 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.902094967 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701032608 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.52263993 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432861846 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.024227763 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.431560567 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.763685665 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.45149193 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448307901 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582903408 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.441778517 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094457187 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.45619302 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.587492267 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.206057548 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.467503848 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.689752146 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.905134746 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.439111846 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035654513 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.168974082 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689204635 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499621825 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.443873504 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.542766773 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577769688 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.445281275 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.324675549 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432130879 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277514662 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.140456245 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.443504713 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026899582 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.724557218 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.431533467 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.430049304 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465108547 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.444248469 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.658439466 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140073653 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.651241093 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.442158453 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.43665684 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.002854268 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029025191 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46442902 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367212597 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.433494375 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690365203 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.689817471 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454586589 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.88860052 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.147413354 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000676096 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.402941999 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456959669 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.446269127 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.151123749 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031982877 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.22139807 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950283435 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.089478133 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439253964 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71202988 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.44185326 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435108274 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.731069906 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.441997678 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.441904349 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44879673 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.040143318 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219034211 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.458986782 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.560899805 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.375241829 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.659819305 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.475774487 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366655481 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.431417017 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.620723799 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.43705607 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567915726 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441279563 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.447799641 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440226592 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.187430402 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.710749358 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.438011546 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.434449664 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.417679602 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.454473997 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533078267 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709788192 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437225007 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.114440926 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.791513115 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.694750898 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.44091096 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.417562198 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.443170321 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440644555 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.15833874 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.444377133 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.443572646 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018393163 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.440947032 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.450549483 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.443159787 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.656364168 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648157682 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440140421 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.452157764 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446033592 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456059275 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.338887324 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.207380747 seconds)
  done (took 1685.92249447 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.459599236 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.457271148 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.44716754 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.50213304 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.455407272 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.548793448 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.485137112 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.563340755 seconds)
  done (took 53.258927438 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.448894871 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.598336098 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.468339411 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.446468092 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.451674536 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.451634605 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.894323826 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.453297675 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.459607651 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.450404401 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.443701477 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.441366727 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.112172424 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.450610226 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.438114589 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.437782395 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.447848661 seconds)
  done (took 67.239283184 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.450857953 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.022101349 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.541434303 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.440550478 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.496896718 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.463583481 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.243345547 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.445594168 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.437895836 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.793195157 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.104908918 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.456316056 seconds)
  done (took 86.239983392 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.45939528 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.455812674 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.455601635 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.455558986 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.456461933 seconds)
  done (took 8.625872294 seconds)
done (took 2127.098706855 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.446396275 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.145572333 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.071767988 seconds)
  done (took 5.55958905 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.587687094 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.637053777 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.758459236 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.762040434 seconds)
  done (took 8.087466885 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.726617653 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.826017791 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.635836163 seconds)
  done (took 6.530051492 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.719623422 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.453671695 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.455132805 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.444272073 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.442295316 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.441927652 seconds)
  done (took 20.672475091 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.446811967 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.450709168 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.44768994 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.45130318 seconds)
  done (took 7.137851255 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.426236595 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.134438957 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.418086435 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.432313158 seconds)
  done (took 18.754595927 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.195074395 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.201033782 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.193140854 seconds)
  done (took 7.932944217 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.472011583 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.465506155 seconds)
  done (took 4.281135599 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.735891486 seconds)
  done (took 3.078696223 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.460091675 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.49975368 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.489014454 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.418283801 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.784010162 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.752190602 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.048799351 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.643541333 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.392179309 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.621997306 seconds)
  done (took 31.454356699 seconds)
done (took 130.908185682 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.241010613 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.819352512 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.649432332 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.205882112 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.668478283 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.646076405 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.646211544 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.176787121 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.758918371 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.711332973 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.246474958 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.667655665 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.596739084 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.833696189 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.598027102 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.449764763 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.676491337 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.284887087 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.888077389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.084762742 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.643821883 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.842701001 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.080011398 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.902076494 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.678240914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.609353017 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.425330095 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.447394092 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.063642967 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.484563543 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.598365537 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.261585674 seconds)
  done (took 193.230223388 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.451410301 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.445597479 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.456467124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.452615604 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.450074924 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.447121111 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.447330697 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.448350444 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.442423832 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.447974349 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.456059233 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.441186224 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.441991163 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.469989838 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.440649529 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.456168009 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.466233106 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.445552129 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.440951996 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.456930525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.442332413 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.445750513 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.449633264 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.45114915 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.447958724 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.460284168 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.441985172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.441953201 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.440703891 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.442334912 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.44758031 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.448583104 seconds)
  done (took 207.711142411 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.451450509 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.451022936 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.443609715 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.449919384 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.445268778 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.445617621 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.450114102 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.446330681 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.464655531 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.456390302 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.443449565 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.442227339 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.443180858 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.444993975 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.46224443 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.443476511 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.447859041 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.45031903 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.461671164 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.458053301 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.45427661 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.447016893 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.458697447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.463088023 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.450492235 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.452080537 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.45884323 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.457756531 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.445610229 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.446753818 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.451818017 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.475018117 seconds)
  done (took 207.81429404 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.653453502 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.456123468 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.459252872 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.410039672 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.458693668 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.455298597 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.453390141 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.641212255 seconds)
  done (took 15.338976881 seconds)
done (took 625.438706901 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.757607199 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.474250556 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.654763914 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.472785702 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.231064654 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.487534672 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.474607779 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.644521957 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.388489512 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.651110704 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.700837177 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.487501268 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.832435544 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.470490527 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.729865551 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.570677931 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.378509588 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.501721964 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.78991836 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.008365647 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.743811193 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.970367544 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.662372318 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.376786609 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.851957247 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.951368015 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.187191455 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.380971715 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.484271243 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.794969183 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.10997462 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.431271139 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.533516359 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.533829591 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.594175457 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.574202765 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.420322404 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.531176594 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.673427818 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.740789411 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.027523326 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.215506941 seconds)
  done (took 96.847754004 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.444596304 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.437098439 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.439811515 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.441535144 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.441746212 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.43962925 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.439051802 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.439606633 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.440445039 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.438646018 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.442297949 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.442290151 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.437338697 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.440019004 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.438578777 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.439673624 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.439166112 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.437538395 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.438219502 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.440662591 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.439007682 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.437888037 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.442741432 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.440764146 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.443406722 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.442769037 seconds)
  done (took 38.797129919 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.458611133 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.706005409 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.867790103 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.469286007 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.457051625 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.462161089 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.535147476 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.462916867 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.464796736 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.460895139 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.60998981 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.463999146 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.492138011 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.891428675 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.463473431 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.459319921 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.460227745 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.459428324 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.714746121 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.469408627 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.550345459 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.460076542 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.537760131 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.470841442 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.477018835 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.459608956 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.464486883 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.044022241 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.478836596 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.614757162 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.269394048 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.536002641 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.986474468 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.901200555 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.267618687 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.464675612 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.464969272 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.619473724 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.463336316 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.458866974 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.536234661 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.465109145 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.879584324 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.132222842 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.482102347 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.462080801 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.068452215 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.635971072 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.702503953 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.469732471 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.904888815 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.467434379 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.463075064 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.466693068 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.70118067 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.473429727 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.461988185 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.062302115 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.485358556 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.539031207 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.465743733 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.466368751 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.72349013 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.461167741 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.712950018 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.46597991 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.471865623 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.478652028 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.884449068 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.468671619 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.150526398 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.481103386 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.462193836 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.616440975 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.713743981 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.094221057 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.483130783 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.730318214 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.992850605 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.554163303 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.469053152 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.034557688 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.555919009 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.468349231 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.464195307 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.465716611 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.465691488 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.512342842 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.539017573 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.088482552 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.151203027 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.090014507 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.560293607 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.481638065 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.466089022 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.068006694 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.487037933 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.464920641 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.874782453 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.153798964 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.484108025 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.473190144 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.15296111 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.486357843 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.543893992 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.473183646 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.890525242 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.46709398 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.511736918 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.464077932 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.472345691 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.485461117 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.543346196 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.468726573 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.463679439 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.121535385 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.642732191 seconds)
  done (took 191.922030572 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.458478706 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.453714466 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.458742689 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.456120187 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.459513911 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.467916709 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.46220003 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.45999647 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.466065015 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.460614083 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.459019175 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.458557385 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.460098509 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.468806972 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.485502359 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.4663559 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.116055824 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.46095102 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.460126893 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.458716815 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.256716912 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.463574595 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.462263684 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.457947986 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.458942782 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.461364746 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.463282929 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.457927994 seconds)
  done (took 155.740686531 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.470715835 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.024963679 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.488593779 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.597797674 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.490596428 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.467443734 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.595330973 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.52585816 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.480357989 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.464694266 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.466315988 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.768836012 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.470319572 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.984773386 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.655496139 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.614337616 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.981208407 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.483936786 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.467906301 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.468634698 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.600352177 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.473576546 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.769916775 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.023020592 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.483255326 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.024258207 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.4509358 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.471067535 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.468382201 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.027341317 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.478705918 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.770474772 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.542446152 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.530761306 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.043777957 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.99715575 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.99741355 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.613237783 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.470091494 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.469703513 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.471380076 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.454075027 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.029169333 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.48473594 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.471412628 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.01798241 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.486760747 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.475682227 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.479602216 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.469613647 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.52821513 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.544594592 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.786460931 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.029942726 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.557884306 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.483831947 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.602341145 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.842463256 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.474150731 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.98532633 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.453071803 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.035430359 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.486067251 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.455192436 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.474008038 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.476801523 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.619139295 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.600353345 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.98279567 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.485734099 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.98491255 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.634690537 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.470923573 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.469837287 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.472268193 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.037811985 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.999924513 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.632421816 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.609485647 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.663898516 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.456138174 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.474798142 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.456681298 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.550850439 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.473652138 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.042669434 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.004980338 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.493867538 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.473497383 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.47498467 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.474878274 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.646932374 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.054677641 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.564719709 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.981608578 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.796256568 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.777238269 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.475174286 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.534915153 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.488855138 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.779000829 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.478762559 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.533403641 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.914420189 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.780555761 seconds)
  done (took 173.94434218 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.715520185 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.677129266 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.562143211 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.624800718 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.079135361 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.04072332 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.745277898 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.61021537 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.583418818 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.724748724 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.609155588 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.563764073 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.688366257 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.551032994 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.20777811 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.559659532 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.579293691 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.620880912 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.62587059 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.470826021 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.158145758 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.763834465 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.654638895 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.33824128 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.562319075 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.243968681 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.025336553 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.049478432 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.645567225 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.786141827 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.030170911 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.588991275 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.425217033 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.165554365 seconds)
  done (took 69.647437199 seconds)
done (took 728.246491834 seconds)
SAVING RESULT...
DONE!
