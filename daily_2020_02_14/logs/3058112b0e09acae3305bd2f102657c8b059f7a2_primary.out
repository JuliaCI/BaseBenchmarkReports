cset: moving following pidspec: 17273
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.303058838 seconds)
loading group "string"... done (took 0.605638736 seconds)
loading group "linalg"... done (took 7.912369952 seconds)
loading group "parallel"... done (took 0.185376366 seconds)
loading group "find"... done (took 1.221110275 seconds)
loading group "tuple"... done (took 1.982642243 seconds)
loading group "dates"... done (took 1.32055796 seconds)
loading group "micro"... done (took 0.249302655 seconds)
loading group "io"... done (took 0.97789257 seconds)
loading group "scalar"... done (took 40.786360717 seconds)
loading group "sparse"... done (took 12.93908139 seconds)
loading group "broadcast"... done (took 1.031466879 seconds)
loading group "union"... done (took 13.028847649 seconds)
loading group "simd"... done (took 4.984270603 seconds)
loading group "random"... done (took 9.47977051 seconds)
loading group "problem"... done (took 1.854008936 seconds)
loading group "array"... done (took 21.797619618 seconds)
loading group "misc"... done (took 1.701831774 seconds)
loading group "sort"... done (took 3.447803343 seconds)
loading group "collection"... done (took 17.948177449 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528460873 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130749745 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133697298 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12499607 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151800838 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119278295 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131859471 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090571389 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.83492648 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154772836 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12308201 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.442987863 seconds)
done (took 5.281446278 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178079676 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087288122 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088574822 seconds)
  done (took 1.307993266 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071388207 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129435178 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070300757 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071495 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070946222 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070226501 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069796091 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.071214076 seconds)
  done (took 1.686608087 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076976278 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072975496 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068944864 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072056398 seconds)
  done (took 1.425046816 seconds)
done (took 5.813783988 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.814015821 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.21994028 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192590964 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.429223024 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136927231 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.167657474 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.650466467 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318940399 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19468628 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084987625 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114016825 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.351058889 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116144496 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.648902508 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081795912 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09645792 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.145235487 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.423652112 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071155662 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085503223 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092649486 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131916665 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089686319 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077981079 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148272578 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071296104 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.141284211 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084456492 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070115597 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.22474994 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175894834 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.666114315 seconds)
  done (took 10.490921117 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.105031671 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.105651175 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071855415 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13015828 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104285471 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073331309 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079549519 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071321446 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095164043 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.136105983 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09697946 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107785149 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069997352 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.0730078 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089628125 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211144255 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.087832931 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087496131 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075345045 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083669497 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113272106 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082564657 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08531975 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085032454 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133342142 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183682175 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100616357 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10301384 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070097182 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087621328 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117940912 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132166756 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069242912 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069844055 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131427505 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097916851 seconds)
  done (took 4.786726095 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.048690734 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15032939 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094523655 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140790624 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069097208 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114207401 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069178068 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085466564 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217514931 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.341401014 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.121013659 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.639120821 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114960307 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110918033 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07171987 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072871908 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071017336 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.58239884 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101686941 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112581274 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08687755 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075130845 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073282465 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360618701 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071857144 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068131369 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07267779 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060732254 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067952256 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129758564 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071756201 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.985503909 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168637213 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071132955 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104998444 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.293910665 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098670604 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149609135 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073860207 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068566391 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162469464 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075334019 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071894181 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089762781 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108528169 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124489544 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070882681 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071133883 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170129612 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068489328 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085357753 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.124140462 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158847022 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081647159 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068908514 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.263894496 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093890493 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07411019 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06903146 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.194727272 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135880982 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072031514 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070711385 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07408853 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073767268 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364188685 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070041161 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.865065174 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074253472 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082937767 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076401062 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073821808 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077118627 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076299263 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092082257 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.072485777 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07945751 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06987657 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070012292 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071102493 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087209689 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.407588099 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070270844 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072314422 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.069078182 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093748885 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10039075 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069711482 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.17148161 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10437378 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072105114 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070847034 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06773301 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.111901224 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071755428 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087699538 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073914222 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117078344 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.073086604 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.103223803 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072666143 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102496992 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.0742516 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103050677 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083893715 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072277161 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.449407844 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.067615551 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06850886 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069960671 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072816859 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070016724 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071751348 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070665714 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083877889 seconds)
  done (took 22.247048785 seconds)
done (took 39.708368375 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.267642188 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080687486 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077374979 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077946119 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078227868 seconds)
  done (took 1.813712519 seconds)
done (took 3.025193071 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127850023 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105375573 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068522451 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102572895 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067917903 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106652683 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106275686 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081691957 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106933489 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068583613 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102117663 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068409914 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068264468 seconds)
  done (took 2.412504392 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088923534 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089227119 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074457975 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087747309 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066962906 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087939315 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087194709 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094517293 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086397971 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077160161 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067851745 seconds)
  done (took 2.112758332 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087840757 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089496753 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073751281 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088119442 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070345013 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086377558 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087025231 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090313173 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086858126 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078822792 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06960705 seconds)
  done (took 2.10725951 seconds)
done (took 7.833555533 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082411951 seconds)
  done (took 1.273044695 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.607684386 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.140672116 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08595217 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115791125 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198510657 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123000597 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276215852 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090791642 seconds)
  done (took 9.016893509 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093421194 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071805659 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074754957 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.074829824 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073913784 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08796683 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073466751 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075164432 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07520728 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076227186 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076750606 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075944261 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073868349 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076467955 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07481301 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072590174 seconds)
  done (took 2.490655095 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096480085 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098319047 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.079518355 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.081063101 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.079300667 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.077788095 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078676862 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078460512 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.076564936 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077982195 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079246051 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077373392 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075491193 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067970575 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078073777 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079243311 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074772033 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077353725 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078052964 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079104331 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078824253 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067742186 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075140201 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078256477 seconds)
  done (took 3.192687245 seconds)
done (took 17.176309587 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110433171 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071154099 seconds)
  done (took 1.38031514 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085490915 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08747825 seconds)
  done (took 1.378751243 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086772397 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068704837 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094890524 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.082218984 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070022044 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069136479 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091151604 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070071074 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069217785 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070197757 seconds)
  done (took 1.978585754 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07206187 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080779501 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073404006 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085299005 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07711815 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068114948 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075664259 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071654169 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080596844 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067238301 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074879174 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086692991 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074679792 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088835585 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075953834 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072950528 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073932235 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070989522 seconds)
  done (took 2.579299806 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069587845 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071606385 seconds)
  done (took 1.352805146 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070289985 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067965507 seconds)
    (3/7) benchmarking "month"...
    done (took 0.071538705 seconds)
    (4/7) benchmarking "year"...
    done (took 0.072647693 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068699677 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066777729 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067748499 seconds)
  done (took 1.693933997 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400521222 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121065078 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.324342067 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07530188 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086073859 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.269998085 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.070009715 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075336951 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074812224 seconds)
  done (took 2.751388257 seconds)
done (took 14.329651737 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083885301 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.090839057 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100579185 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.393945497 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095163158 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069995301 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116806673 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.194574561 seconds)
done (took 2.369730642 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217664444 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.721595442 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.448759871 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.220107598 seconds)
  done (took 2.606221625 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358138824 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093743173 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062988873 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071054682 seconds)
  done (took 1.809947342 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070167214 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073503569 seconds)
  done (took 1.364864691 seconds)
done (took 7.223980411 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070140548 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091881937 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.072383204 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.069596261 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070317651 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067317407 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067487405 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069894436 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069648262 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.070748942 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.069677626 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070207065 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067128214 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067298356 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069649426 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067617273 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067552228 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067361125 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067754153 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06983728 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067768155 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067636326 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067180963 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069789161 seconds)
  done (took 2.933192337 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088284989 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069577732 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076330135 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075104484 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07318046 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075632768 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074565972 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070395329 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074719135 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072037312 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073124501 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072964169 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072093751 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073477562 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072360907 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072908681 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075068924 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069427336 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07239024 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.187036884 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074957663 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069538311 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073051486 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074691625 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072470806 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072623414 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071982892 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070280423 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074823754 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073428644 seconds)
  done (took 3.547652784 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074121167 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066600938 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.0674917 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075498803 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066964171 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067708803 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066476526 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067992635 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068134289 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066945437 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068161537 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066547836 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067518876 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067644945 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067841211 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070873838 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084169454 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06749489 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068922717 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067879605 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07081668 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067432851 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067097416 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067466854 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066848027 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06646204 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067873373 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067096184 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067832101 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06705173 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070737626 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070911629 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06750841 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074139427 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.073132212 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068696905 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.074114294 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.068872401 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06945438 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.069519282 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068766052 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068764698 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.069582437 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076842648 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.069113899 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.070713621 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.069636889 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.070524715 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.069956288 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.072091283 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067551539 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066862174 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069425753 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067948684 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072856902 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.069168949 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.070397825 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.068980278 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069668917 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068863138 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067583622 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.069163297 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071994189 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069957013 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08551893 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076736232 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.069794864 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071553641 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.070156141 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.072324362 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.070822003 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.084120134 seconds)
  done (took 6.277109708 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093876024 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090821485 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069762245 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068767991 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065778493 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06761161 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073852133 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06788083 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069331344 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085641942 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067702609 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068944499 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068922401 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071044553 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067729284 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068901309 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075644762 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064799881 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06768949 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071712588 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06797934 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073479523 seconds)
  done (took 2.829059931 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159083621 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074334143 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109655028 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078826089 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073964569 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078600609 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073874125 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073689102 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074256738 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07120882 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071847059 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07358965 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073401307 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07127022 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071759484 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071196398 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073372691 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071393114 seconds)
  done (took 2.680993699 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080884054 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069334685 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090287549 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069900236 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069771283 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072180753 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073825612 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077692829 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072154415 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069904404 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077792484 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07274641 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072111326 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069438073 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071778841 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070168352 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072255719 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070288308 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078209936 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073795373 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073250611 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077499574 seconds)
  done (took 2.861418018 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084890872 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072661195 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086130354 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072322101 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065458187 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067504645 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074459694 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069662259 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074232449 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071736162 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069632507 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068073974 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072140569 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069657536 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073125786 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06992419 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072165235 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069685047 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071824161 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065570084 seconds)
  done (took 2.679756613 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091179908 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070888394 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072285196 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079717946 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071950548 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071408019 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079977841 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071776686 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071363408 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093082131 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071159956 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071803272 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079142127 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076575218 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071500921 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078573526 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078950186 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0792014 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071377079 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071989574 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092483213 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071223452 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078631419 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072009443 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071741592 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071839305 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072096475 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076138822 seconds)
  done (took 3.369308932 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070494239 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070043947 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.068168124 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067283545 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.068040103 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067072703 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067241942 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06744466 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070051478 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067839086 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069711711 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070302811 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070018375 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069373945 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070100248 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068960692 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069350079 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066658168 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067737877 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067183066 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069387355 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070027631 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06970512 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067328504 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067224158 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070018144 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066872389 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066818394 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069759095 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066753182 seconds)
  done (took 3.299867984 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080440895 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077013483 seconds)
  done (took 1.401830228 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067060296 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084291211 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06664643 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074014809 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073411221 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070414677 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076996783 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073128852 seconds)
  done (took 1.826359123 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.0864519 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081898053 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.073159794 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083886087 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080582723 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087848753 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141906281 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070121824 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077360938 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067917081 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087082914 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069143775 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077299329 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071128203 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075727636 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076483116 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067229967 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075510845 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071927504 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068987491 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071050587 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079729339 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073198763 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06514198 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071786076 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095391797 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081348896 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070140671 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073392972 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079543058 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.078700165 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06684083 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.072582762 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.07251915 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.070329492 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.083594582 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089061723 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076083138 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.081998892 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073307172 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082298486 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066689093 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.077289001 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.079698911 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083294761 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.073886512 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.0734936 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.067430632 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070487238 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.074956737 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.067237042 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07288229 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.066765942 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08055753 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.076694246 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083679176 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071077188 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.074639364 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076051899 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.075578208 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.079692656 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073570819 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075124461 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.071368609 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083803584 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076170861 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081642137 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.067672391 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.066042535 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067862704 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079952012 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094808708 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076602413 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.07059952 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071426687 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.0677695 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073221505 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071458883 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07593791 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076633701 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070188886 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075501621 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077471064 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070616914 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.0729388 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.078143782 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068900941 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07287402 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068031967 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087098774 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069575678 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068332391 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068983124 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080354468 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073685942 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069467647 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067382922 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077064187 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063523222 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069497862 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070415353 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07003879 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079679643 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073471091 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073781377 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077990521 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076344372 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069464835 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071778509 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065811485 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069499922 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068592689 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076459277 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063163491 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071691059 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.194498983 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071872208 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079848871 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.068951935 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071571457 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079064029 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07676107 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070002846 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067202028 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074076663 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070388454 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073524923 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078555389 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068853798 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065427857 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065699232 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074303088 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069813632 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.0741532 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074325026 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074405485 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.0650641 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069164743 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07601912 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079181201 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070698336 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072083784 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076314759 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072128835 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069817612 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077142499 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073162981 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069272824 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076639138 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071648327 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065812341 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073098147 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07288654 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068711917 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074482215 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075156031 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073775401 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071131344 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06907963 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077257615 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070870603 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068700717 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070234875 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069192967 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081004823 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072519532 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065745976 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068798291 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.081718743 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070869358 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.072728006 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.072482777 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.075049059 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.07462454 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.070731115 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072472238 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.075017157 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082721615 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076866921 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074120036 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.078356442 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083918941 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072301169 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074822443 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.072430246 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072573748 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.073145849 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081072009 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.078747176 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07501462 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073114449 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067530792 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075682327 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078604555 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070077299 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067969349 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069429259 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074166848 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076482903 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07448665 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070983691 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068810339 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071681967 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073313294 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073597019 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070160613 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069797134 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07745119 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068322298 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077070154 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070782761 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080476968 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073758323 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064473377 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072475294 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068372953 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076532368 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064670214 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.0683529 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068628926 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070022789 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068373776 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071726279 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062926209 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075918973 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076628696 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069974905 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068640877 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068990997 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076339836 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07049572 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0726999 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073566071 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.201854302 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082334568 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.0700755 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074973824 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080998504 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071197669 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064719262 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07606461 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069666181 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068902984 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070177838 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069390976 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073479202 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078323853 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.078126388 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064504493 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073232409 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069234321 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069889428 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066070858 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074950825 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07447036 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071898496 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077414856 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071594872 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071420352 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07505569 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.07013153 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071841641 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071494751 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073727026 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.072590129 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071932722 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070168527 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074602074 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.07175075 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.069970467 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.075416322 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.073115445 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.074340659 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078822965 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.072314523 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07252087 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.075198746 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071817872 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072526121 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.07023298 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070033817 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073773919 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071758447 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071309357 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07291915 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065659363 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077836388 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070035493 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077521401 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070806841 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067104893 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076173301 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073293465 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075974661 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070732885 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07099035 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071376263 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069410112 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072556528 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077190078 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068388794 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081104882 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078191113 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071244108 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074360056 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071096764 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072215384 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071717801 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.073436267 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.073211577 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.073041979 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.07208567 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.077379725 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.075437581 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.073790169 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074179084 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.073080968 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071909902 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071185276 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064698714 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069974018 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069791852 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072416749 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079945628 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071827316 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070573074 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069714362 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070994703 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069612546 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067295345 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.079125936 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078796802 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071483386 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07781954 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069427906 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072227158 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08036139 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063746709 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068233317 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067413323 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067874795 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077102212 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070667538 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079324004 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070015839 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068588549 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066062923 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069425699 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067649181 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063623444 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06732219 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073682529 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068478369 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068865015 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.07011835 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.203138236 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07302191 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081081107 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.07337701 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075381878 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.074929714 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.070456656 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.072876535 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.072511164 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07654663 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.074364337 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.070873924 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.070131986 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.072311337 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.074234056 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.075112103 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.072829283 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.074964007 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079823524 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072891484 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.076647036 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076327087 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.067931843 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.075810127 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.073463575 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.071747522 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.072932218 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.076823115 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07587703 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073892094 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.081666549 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070661199 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072979983 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073106949 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.07083791 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.07199411 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.071951719 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.073423327 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.072139815 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.073678992 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080524289 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.07041286 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.076125257 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072901297 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072926824 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.079513899 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.073713085 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.076506352 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079889931 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.073246952 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.075569609 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080745359 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.075046072 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074288405 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07287545 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.074108586 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078334391 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.072104029 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.080206091 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07336962 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.072331589 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072503956 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068416023 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069977052 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06978515 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069880293 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076139831 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071551764 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069436019 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070461903 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068474791 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071547393 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072807543 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078127493 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072055431 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073900055 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065097881 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067400803 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071617378 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068198525 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071801776 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072810372 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076475746 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072933717 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071091155 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06986387 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07987289 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076041364 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074135701 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068969295 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074627505 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071053285 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072337367 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071743844 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070766299 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072830874 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074781302 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072241732 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069992947 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077885857 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074055258 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071976785 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071787852 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071084849 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070458169 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065321674 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069852142 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071665551 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074514594 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072520351 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069713378 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080613766 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067243481 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069841374 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07182341 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068969613 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073484503 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063821602 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071292069 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069688744 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069606161 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064031847 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.199147224 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069836833 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073992663 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070259741 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066682888 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081101465 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080366133 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074151516 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070780155 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06958396 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065062258 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066169153 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070514963 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071478712 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072344866 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081253165 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070397826 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069900588 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066374749 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070534582 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074320534 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074292869 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06759794 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065471999 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070058016 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073766882 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076640268 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070691186 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070086844 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07466048 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072878049 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068949673 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073546571 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067222353 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074499131 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083461583 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070922065 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070834777 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076874791 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078505153 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.07059511 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065675987 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070871671 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073614075 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071348812 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.07106722 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.072301043 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085995198 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073770975 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069836793 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069438254 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074300405 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069865743 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079968502 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071231591 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.072161854 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076022439 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072409776 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081192174 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076304096 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08041909 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.076260481 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.076305548 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.072052857 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073084949 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.071876458 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071848016 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.074079169 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.072559168 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077861686 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.080388255 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071707876 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084110801 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.082140514 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.074880712 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068812116 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071517561 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.072343388 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.067599745 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.07398105 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.070339613 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.070953423 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.070919351 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06980211 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071533143 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075071482 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071361759 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070579071 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070245688 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064454511 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073230276 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073235745 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071621622 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066959031 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070934007 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070931775 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074609451 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07352071 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06801617 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072341238 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071934841 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070911509 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064845409 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076691055 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068861917 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071840699 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069285796 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070076361 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07022666 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073775018 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074617881 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070823853 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072005304 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073526846 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071369691 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066654167 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066867865 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075021905 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067014871 seconds)
  done (took 45.320552758 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106653056 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067205199 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06579058 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065286153 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077360478 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066472112 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065572045 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066759766 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066254656 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068618993 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065500613 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065199715 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073793365 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080770987 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076339833 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069526174 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065354505 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066080333 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065673163 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06629589 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074393019 seconds)
  done (took 2.835087545 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07779658 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081413325 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079059848 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085440332 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074262672 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07350495 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079118189 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073921198 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081326518 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076226887 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081629488 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073449181 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076143243 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075852964 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075867984 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074097812 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083999517 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074935876 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074330495 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078685433 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073822977 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078542488 seconds)
  done (took 3.023664686 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071791297 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069938728 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07150142 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064928515 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069605235 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064594447 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073079478 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067638433 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072662324 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069206212 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069138441 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068704676 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071851226 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064921556 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070188602 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067436284 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110727444 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072979912 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069178249 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070436393 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064784295 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072061298 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064771293 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065786678 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069041977 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073659747 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070573938 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068072591 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069758122 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068896178 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070134306 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067978525 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071690655 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07038096 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068565889 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068898303 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069482321 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06952843 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064828086 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067944691 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069889328 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065987619 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070182513 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071028292 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067309623 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067799223 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071754374 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069204456 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065177359 seconds)
  done (took 4.748140498 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082716683 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114177411 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071623755 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094030181 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08307804 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075670863 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073193798 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094921067 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066473672 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067769624 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084850856 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082085427 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069429505 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073736324 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075983157 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06883045 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069986883 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068198915 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072518918 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068589382 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073108938 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075784038 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083011456 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081475456 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073006097 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067836524 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068270809 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073205962 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080453354 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073101812 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073832601 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074514439 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083855292 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071045834 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068223994 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071138553 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084383573 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068962771 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071385333 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066644125 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072907073 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.075296081 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076201105 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084650944 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06936824 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07610863 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06999595 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.068113898 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084204664 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.074589152 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079473434 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085611147 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075459518 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.071536331 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076157142 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.086232233 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.071395928 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068212826 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073537503 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08251139 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068192402 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075275654 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.084565478 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.074194789 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.078423629 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082963263 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074687236 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072763927 seconds)
  done (took 6.640243289 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079831017 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100015439 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087654264 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086804068 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079512376 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080563707 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078732108 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079635876 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079211357 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084726869 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079367965 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.120529436 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07519166 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081991163 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07917173 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079337117 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079241216 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079703021 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07891873 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079289304 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079178891 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086831314 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080408528 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086142875 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092154592 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075002629 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079046427 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07947537 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086415436 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079318568 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083215329 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.078955865 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079068284 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086452669 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083349956 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078922952 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069374487 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079202569 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07913594 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079121787 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074535556 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086483886 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078813387 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074772124 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079314804 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078908059 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086691979 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082842645 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081501763 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083976639 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079381921 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08698079 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079118419 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079499447 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086457481 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088871484 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086745401 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086412803 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079203044 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086561799 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086980288 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089689572 seconds)
  done (took 6.458074986 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086009234 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077845575 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.086165828 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064556432 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067341714 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075528604 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067987774 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067699195 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077282464 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077376991 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079543218 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075196048 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078243509 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079668806 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075246018 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07794302 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074836782 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075338004 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077398195 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075357995 seconds)
  done (took 2.861215006 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078533406 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087712197 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070655141 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075069314 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073419573 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07526777 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072243798 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072903897 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070272528 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073216531 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079364487 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079235409 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070071263 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074990566 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08004771 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075400231 seconds)
  done (took 2.54592389 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087697739 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076026241 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083699328 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070236604 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070311385 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066303937 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06949413 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064953285 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065308047 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081940857 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06952477 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080823336 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069222689 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068457464 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066175361 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.076657953 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06763745 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067914751 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069044438 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082102668 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073454268 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067576536 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07307189 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069523275 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071819967 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074119668 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068864673 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069496388 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066663666 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070095797 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072105695 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072436447 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066253899 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067562017 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069311735 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068257501 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072093926 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.072222437 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07696932 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.07197852 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.070434995 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072487258 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069636009 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070548613 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065662742 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070259035 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066194059 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071772629 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067463592 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072435407 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069049217 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072074152 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069827437 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076414621 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072599045 seconds)
  done (took 5.263494099 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083025228 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073458381 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065505905 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067656743 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072582252 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070378822 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073502629 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070916717 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071524467 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067729626 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071013516 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07274205 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071296282 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073736681 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070994684 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074202873 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065310084 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071641435 seconds)
  done (took 2.637196358 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075040903 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070483286 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076662517 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069964744 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069898878 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07271274 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065514917 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067712059 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068450695 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069770918 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069409635 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072193319 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070809553 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072968 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069399976 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069565196 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072313833 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068411517 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070088549 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066186587 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072955863 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068557673 seconds)
  done (took 2.895465613 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.099439621 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086980189 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143610961 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083373672 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089347661 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076677594 seconds)
  done (took 1.927902937 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096449302 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105331063 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070790069 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074467209 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080071316 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074445098 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073656306 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074438534 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082456023 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07976902 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074443288 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082241255 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082510506 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081405666 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079502049 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079349014 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073654908 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073704729 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070159976 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086776904 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073954161 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082321145 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074108925 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073273597 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073695848 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08160409 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082609423 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079913439 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073583362 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081935898 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079168406 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073843949 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082203338 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079458103 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072794473 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081970784 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073605164 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087582832 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07948126 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082718318 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073955896 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07985238 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08220524 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079128941 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081846373 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074234957 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078308174 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074097695 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076173069 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092262098 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082202749 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083545903 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081538436 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085614355 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084920399 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091696033 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08191403 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083586879 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082262422 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081909168 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083719093 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082182682 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083538114 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081979528 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082188877 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083623714 seconds)
  done (took 6.644082477 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109635618 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072421456 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074423278 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079677582 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081909672 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074095759 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073968212 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073895554 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074486864 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071798316 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112838739 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074257303 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081183756 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082466433 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074261095 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073993721 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073947153 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08084509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070932617 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088808327 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074117521 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081205092 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081078967 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081434042 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079593427 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079272922 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073809153 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076326434 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076378365 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07604192 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081098596 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07628834 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083751723 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073204016 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084203835 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076532554 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07635969 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081043597 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077006185 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082624355 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083968891 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090094854 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07647178 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076491558 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082059998 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075816678 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0765651 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072903487 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076441328 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073541682 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081863021 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081743092 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082171686 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083803577 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07610528 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075726056 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07643055 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07647601 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07622358 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081898678 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083888618 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076702565 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092284939 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076137913 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075517451 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083343262 seconds)
  done (took 6.601463906 seconds)
done (took 135.329538661 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.193445528 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173571624 seconds)
  done (took 1.710414953 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073459475 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102967658 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081033228 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.1327188 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070754033 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104378451 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10317597 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082565923 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070196002 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070523243 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070408485 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072843565 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138031563 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070668734 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071043351 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072657867 seconds)
  done (took 2.744500369 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104225392 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169738979 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108507691 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068584956 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104166087 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076368728 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069239299 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079612726 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075211579 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069380039 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07660551 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074397399 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068811206 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074672539 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074535541 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076685314 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068872612 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076070645 seconds)
  done (took 2.873777096 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102492173 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095196073 seconds)
  done (took 1.558999759 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.165064072 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138798047 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.210906847 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.359647464 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16493928 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.152827347 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.148486675 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146990157 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117122462 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.143017567 seconds)
  done (took 3.105305149 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105165362 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159973085 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.28059758 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.122978814 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077355468 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09700287 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125214884 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082944047 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084598813 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083961469 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084001055 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080579948 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105172021 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07711392 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078840543 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079953794 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10868658 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077205918 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078856692 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079756745 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105770267 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070407548 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077377099 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07718402 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081132837 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081469619 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070244342 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071921154 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080640761 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.08089571 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081904015 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096007934 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081573732 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110119534 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075222312 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110733427 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080484695 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076725193 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079320478 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07738041 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081662147 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081886734 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077357213 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080522866 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069581566 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080701969 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069973157 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069883463 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081748163 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071298768 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081579769 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080596273 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109834573 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070565279 seconds)
  done (took 6.227927799 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11001659 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112573423 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076097449 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.119410072 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108991675 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07646651 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110066118 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102941895 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110815127 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074362954 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072328698 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073987248 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086230406 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.087352124 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.122386241 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.114436958 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077547355 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074806038 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112816818 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111547555 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073437418 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103480501 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097560853 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109926975 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071043717 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07501204 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071811923 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074048352 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080952398 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082694646 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072916087 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084636716 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088662917 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081314945 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071213458 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072362373 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072015556 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083555104 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083160307 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082988826 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081322822 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072180987 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072304288 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073990772 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073910715 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071670161 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082014793 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084518343 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08290428 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073758857 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074114675 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074886976 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073870073 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083991785 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081618441 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08489757 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084435192 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072708925 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073026642 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077392521 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084851155 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083508148 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083554132 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074007075 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083582464 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072574511 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084318155 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087624884 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072498295 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074440598 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073254435 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074019627 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073684947 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081372102 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081669953 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073661538 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07370147 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07194712 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084263766 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082133435 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071868509 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081129863 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071299889 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07240159 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073820475 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073406355 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080340918 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082804143 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073205279 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072357719 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073039383 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072250102 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07071741 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079564388 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082266249 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081188682 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081568261 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072513062 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081814049 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081075826 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072725695 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081214111 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071510948 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.203591827 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074374864 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083099072 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082630705 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084636302 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074188666 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.0728882 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08315194 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084516031 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073474253 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.083322214 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085104461 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.084370777 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072138079 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084835885 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073368837 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084089952 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073627345 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084369758 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072108167 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083970495 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072464582 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072308498 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072758376 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083740357 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074589572 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0730586 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074928613 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073803015 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08388457 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087394145 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074945947 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082329622 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.083246142 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074470889 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082233527 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073539386 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083225237 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073991132 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073969854 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072188262 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086255694 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073029196 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073220396 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073110765 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084331504 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072406431 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083309446 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082383457 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072417327 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085182203 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084352275 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081780816 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.0844976 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07461691 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072963232 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072105606 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07411261 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08133215 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084045099 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074691104 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072961314 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082328794 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083957885 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07200781 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082017032 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082869131 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082364399 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072985189 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073826949 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084028954 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084885319 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081862312 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.08177011 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082235853 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07277936 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081801286 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082355488 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072451467 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088078603 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072689116 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08643072 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082842694 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081360721 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082670316 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.084628997 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.084212011 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084456804 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086525726 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071565542 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072024516 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083011232 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071463353 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072875225 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.08043566 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072589822 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07303321 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085941434 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071886839 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082076915 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070853969 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081222527 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069993202 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073052553 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.217676962 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073061311 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074310821 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084237972 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074257859 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082759894 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086273984 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08407354 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072525781 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07447643 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083469157 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083199312 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072872026 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073355698 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074758522 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.083367501 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081669457 seconds)
  done (took 19.609297374 seconds)
done (took 39.200250083 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.217038677 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.159172846 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179569264 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.12357877 seconds)
  done (took 2.146744141 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122576005 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106205034 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097365873 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069007046 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103698127 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069764069 seconds)
  done (took 1.967986728 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317896505 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216764008 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.194289906 seconds)
  done (took 2.125047997 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215792725 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.2026753 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464546131 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.285265223 seconds)
  done (took 2.680783309 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150340282 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092614189 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071819489 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088947561 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138402751 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165772279 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104889072 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130192044 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.084285371 seconds)
  done (took 2.47969666 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.154373432 seconds)
done (took 12.962969343 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.100198107 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.268156017 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.215662388 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.079246312 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.24455911 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111822778 seconds)
    (7/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.119699975 seconds)
    (8/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.188331456 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.107429017 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.117218809 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.141042868 seconds)
    (12/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087535715 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.087531385 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.095115792 seconds)
    (15/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074237713 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.08303438 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078741388 seconds)
    (18/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080955029 seconds)
    (19/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.170273673 seconds)
    (20/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095706804 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.153373724 seconds)
    (22/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079743795 seconds)
    (23/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.189833984 seconds)
    (24/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087099908 seconds)
    (25/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193023355 seconds)
    (26/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077153116 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.096758801 seconds)
    (28/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.123504907 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.106369978 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.077178736 seconds)
    (31/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084554109 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.151897008 seconds)
    (33/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.088284269 seconds)
    (34/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077869224 seconds)
    (35/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.073369183 seconds)
    (36/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.163484027 seconds)
    (37/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.174756335 seconds)
    (38/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071670083 seconds)
    (39/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.21525912 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.072399292 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.247159759 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.10823731 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.15239031 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.104823092 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076337129 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100134365 seconds)
    (47/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066757322 seconds)
    (48/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.15241363 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054686973 seconds)
    (50/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07114445 seconds)
    (51/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.161701953 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.097725291 seconds)
    (53/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.201080311 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069641763 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.094079711 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145523985 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.211474765 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066913028 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.097760374 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078086274 seconds)
    (61/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.175142261 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077643768 seconds)
    (63/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.212953517 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093686189 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054792822 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.077648666 seconds)
    (67/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.100852419 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.278710699 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.098710841 seconds)
    (70/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.158704016 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07185991 seconds)
    (72/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.107043968 seconds)
    (73/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.184415229 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.078068626 seconds)
    (75/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.082545835 seconds)
    (76/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.170915751 seconds)
    (77/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071616754 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078330092 seconds)
    (79/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07618274 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.212872833 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.101105464 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072830241 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079379696 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.069852741 seconds)
    (85/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160833335 seconds)
    (86/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.165107531 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075025116 seconds)
    (88/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.251070717 seconds)
    (89/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.173978645 seconds)
    (90/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076534357 seconds)
    (91/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.209804603 seconds)
    (92/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.078503482 seconds)
    (93/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096873697 seconds)
    (94/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.116573122 seconds)
    (95/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.081886124 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.190202663 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.194496781 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07797888 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.084236351 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142374073 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132877373 seconds)
    (102/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.209976274 seconds)
    (103/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.125711776 seconds)
    (104/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096420359 seconds)
    (105/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.197040106 seconds)
    (106/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.10739705 seconds)
    (107/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.082079746 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078166947 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095799061 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096007699 seconds)
    (111/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077423722 seconds)
    (112/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.067866373 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147038718 seconds)
    (114/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.185335436 seconds)
    (115/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.164116445 seconds)
    (116/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.228491047 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.203544145 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.21609076 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069617886 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.103429159 seconds)
    (121/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.066498861 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.146190376 seconds)
    (123/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054372926 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078525615 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071157086 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.090889613 seconds)
    (127/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055371631 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076122762 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077795452 seconds)
    (130/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054828739 seconds)
    (131/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056055641 seconds)
    (132/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069293118 seconds)
    (133/309) benchmarking ("sort", Float32, false)...
    done (took 0.138919402 seconds)
    (134/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076832535 seconds)
    (135/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.057371771 seconds)
    (136/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091452565 seconds)
    (137/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.16180363 seconds)
    (138/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07889315 seconds)
    (139/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06710311 seconds)
    (140/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054141554 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070130775 seconds)
    (142/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07755543 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077942791 seconds)
    (144/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.055978904 seconds)
    (145/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071107281 seconds)
    (146/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079947911 seconds)
    (147/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12666759 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.129402086 seconds)
    (149/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055122954 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070560422 seconds)
    (151/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.118725063 seconds)
    (152/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055638699 seconds)
    (153/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.067475627 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078138208 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078038474 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070160564 seconds)
    (157/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.169520762 seconds)
    (158/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084741659 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094394889 seconds)
    (160/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056073814 seconds)
    (161/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.200917536 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146674335 seconds)
    (163/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05461814 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.145650679 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096054016 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.082939184 seconds)
    (167/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054729829 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.095145547 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141239627 seconds)
    (170/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054921331 seconds)
    (171/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071322183 seconds)
    (172/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077272964 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070544536 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.080489287 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05714508 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081640981 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085911415 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055609289 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054531899 seconds)
    (180/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067516742 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06966727 seconds)
    (182/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.116029015 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055733253 seconds)
    (184/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083749397 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057256803 seconds)
    (186/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095274576 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076860838 seconds)
    (188/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055861465 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078289555 seconds)
    (190/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07193705 seconds)
    (191/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054613377 seconds)
    (192/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05481913 seconds)
    (193/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075048545 seconds)
    (194/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082538972 seconds)
    (195/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.066421963 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077730236 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.254735699 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.0709711 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.188813911 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.074553588 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.071953458 seconds)
    (202/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.056114211 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.108218018 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.184167516 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.057211412 seconds)
    (206/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.085348552 seconds)
    (207/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.0593177 seconds)
    (208/309) benchmarking ("sort", Float64, false)...
    done (took 0.13823554 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055960717 seconds)
    (210/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056184747 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070357144 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078354059 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079563643 seconds)
    (214/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056026764 seconds)
    (215/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.119637759 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.155636515 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054942686 seconds)
    (218/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080663026 seconds)
    (219/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.056208073 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09619991 seconds)
    (221/309) benchmarking ("sort", BigInt, false)...
    done (took 0.205029292 seconds)
    (222/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.081193046 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076352217 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.077764184 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.071706375 seconds)
    (226/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.165112442 seconds)
    (227/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.162527771 seconds)
    (228/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077128198 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.069165909 seconds)
    (230/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077111274 seconds)
    (231/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.1075217 seconds)
    (232/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056234664 seconds)
    (233/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161612429 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099244628 seconds)
    (235/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074959014 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147535838 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070155218 seconds)
    (238/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.081508001 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120541624 seconds)
    (240/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054314174 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092639585 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.103097041 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.109265264 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.07133941 seconds)
    (245/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072206159 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.056589099 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054108993 seconds)
    (248/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082212233 seconds)
    (249/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07180962 seconds)
    (250/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078667998 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069815918 seconds)
    (252/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067618949 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069688599 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069287624 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069206081 seconds)
    (256/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072576969 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068667244 seconds)
    (258/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073339196 seconds)
    (259/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.070555762 seconds)
    (260/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.0757022 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076758921 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054571408 seconds)
    (263/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.056203148 seconds)
    (264/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056738171 seconds)
    (265/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081293609 seconds)
    (266/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.055111375 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078149173 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085370998 seconds)
    (269/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069981361 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05498648 seconds)
    (271/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055692998 seconds)
    (272/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054437349 seconds)
    (273/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.110330006 seconds)
    (274/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054679804 seconds)
    (275/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.068596003 seconds)
    (276/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074468049 seconds)
    (277/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055437375 seconds)
    (278/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05449478 seconds)
    (279/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.067499268 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070266972 seconds)
    (281/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094038848 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09507306 seconds)
    (283/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054975705 seconds)
    (284/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055277802 seconds)
    (285/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05584171 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069353904 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07790087 seconds)
    (288/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083764529 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054850684 seconds)
    (290/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069826187 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068381303 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069468911 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153335243 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068458726 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.180281295 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077658056 seconds)
    (297/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.067295956 seconds)
    (298/309) benchmarking ("sort", Int8, false)...
    done (took 0.149162811 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076014532 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068906864 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148050605 seconds)
    (302/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078154309 seconds)
    (303/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069988539 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.115127496 seconds)
    (305/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068438476 seconds)
    (306/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071221243 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070219992 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075659296 seconds)
    (309/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068293152 seconds)
  done (took 32.70515511 seconds)
done (took 34.117048906 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.092504585 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097966758 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080740188 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.099895511 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086023481 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.081420916 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078142653 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083535924 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085152197 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.088006012 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082451203 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058980092 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079116281 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079353826 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080427261 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096317922 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083786579 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078135855 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078309627 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068945459 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077859251 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070298019 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072142017 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058446565 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.08342945 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076366577 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077269164 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078217206 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070017567 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069662271 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073660119 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.078308173 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069992556 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083571563 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076500434 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077495772 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079829791 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081485598 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.07115561 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.07035835 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079614727 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069315554 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077572015 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078154707 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.077407888 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075915111 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07796055 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081924595 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094994249 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071554364 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078846317 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080696138 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079603466 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076942591 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073859013 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077532155 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074787796 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095325078 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078508762 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071860915 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079077256 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078906667 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075260486 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077479875 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077063993 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079707417 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07981836 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075654901 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078806533 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076425895 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069196729 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077343041 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073570216 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070148599 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.08038377 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081955385 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068077848 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075668385 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076878775 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075793607 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068988401 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07188138 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.073713573 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076261652 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071463825 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058656527 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074287801 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077172719 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068686724 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077612157 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07703288 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077212521 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072043526 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079951419 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068814755 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074542892 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069531817 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069866106 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072175129 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074192963 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069297443 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071734051 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079771419 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071030671 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076916953 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083047268 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069464612 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076755495 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067814664 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068093347 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082868392 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079074018 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069646354 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071737972 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067870536 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07632267 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06887979 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069619104 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068647176 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069718159 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07540288 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068612742 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070610151 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076075822 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082484391 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06817191 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072110286 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070832687 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06827071 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07499293 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.204883734 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072034168 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072191552 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067571319 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072754784 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070840965 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078036933 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07242458 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078176825 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072919877 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079098653 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07579974 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.077074756 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075917385 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069671949 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063244327 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071988943 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071620682 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071508394 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070299524 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071297115 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069029175 seconds)
done (took 13.171607549 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070332307 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146150882 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100858943 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100518868 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089947085 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071570029 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.08016616 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104316465 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072128762 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105625996 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09270004 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091656629 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119426929 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068915079 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070094653 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073931838 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071505367 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085819677 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103746706 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.09186039 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12019909 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069171088 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09670072 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09354501 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092599072 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09951071 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070954319 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073837687 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07400841 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.107467473 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093772427 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073785896 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07062341 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103263751 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098221688 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088281345 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070722717 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087678783 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070621526 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070165237 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071565193 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104418077 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084476425 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084929579 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074528468 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080726877 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071092076 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087893341 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09450917 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083269371 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090570864 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106227839 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074175098 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088691047 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06888612 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090503798 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081230858 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072909883 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070081752 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078772842 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070268014 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073632 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085163528 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085365926 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075090812 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.089338554 seconds)
  done (took 7.150893574 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089207607 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097590355 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088547813 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087505001 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070089663 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070513 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070413793 seconds)
  done (took 2.081381167 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070815764 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093349822 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094519081 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094149651 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086482744 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093260261 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080109398 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071276144 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092668544 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071978404 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092504734 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105656955 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074300957 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07830133 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096020512 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070465037 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096272631 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070755494 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073848164 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095500976 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072889603 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.10196654 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07414555 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070869237 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08581697 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071500849 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119941903 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075087319 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072627636 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07395573 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068159498 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112651229 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084680104 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078683354 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070849104 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086370289 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085775784 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068844351 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087520684 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079492114 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085224661 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071182954 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071666633 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068534917 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074735075 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081758656 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07231049 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071567328 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073497948 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091611744 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071975578 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085351136 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074151077 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.0765926 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072185178 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0774642 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081873668 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072067136 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091793135 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071940564 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088566173 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087485189 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085183912 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087890133 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073476594 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085522061 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08534797 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073282002 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07344744 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074265592 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08721201 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068817987 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072776311 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081541909 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073296436 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094917733 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094646602 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07215162 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084876954 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071541624 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.07130466 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070680415 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094236651 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076612616 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070802067 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074984733 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07386419 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06947883 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06935065 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074717871 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068690707 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072802891 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073817056 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07378435 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07455867 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088629285 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073443251 seconds)
  done (took 9.266652242 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07273215 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071709174 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073542325 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072759957 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072353122 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071869358 seconds)
  done (took 1.963390518 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098730866 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073135798 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085260961 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076089489 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.11101313 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.091977147 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091369948 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082221347 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088069356 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083286477 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091425468 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092482924 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096504185 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076972079 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091313166 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075349509 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.092175606 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078379525 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082572213 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077184872 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090067964 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076047036 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077137498 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.0857486 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07999686 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07590404 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082927054 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082812427 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08292149 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082371718 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076296004 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079289309 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074723581 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08178515 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091710978 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074571204 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075581346 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.08138949 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076417641 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080136816 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.093601054 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077452156 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078278929 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.08224946 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081924855 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074337309 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.080828846 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083895397 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091173077 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081016964 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081477065 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075581518 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080024302 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.080954717 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074652116 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081532227 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081375738 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091364126 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076705641 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074997595 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072746549 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079814561 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081662246 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080748428 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085627244 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081699291 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074758313 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076922405 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076721503 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075626861 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080922959 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072555072 seconds)
  done (took 7.41303203 seconds)
done (took 29.375122941 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540783866 seconds)
  done (took 2.037532874 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.644574436 seconds)
  done (took 2.164494605 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.546474017 seconds)
  done (took 8.063479946 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403282305 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.512658241 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.756776157 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139876481 seconds)
  done (took 3.367846721 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.727488805 seconds)
  done (took 2.254485066 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236661842 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221718789 seconds)
  done (took 1.994623918 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386772637 seconds)
  done (took 1.905058473 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.156499315 seconds)
  done (took 2.676388535 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26740586 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184118703 seconds)
  done (took 1.973634547 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.49780147 seconds)
  done (took 2.018655455 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.93116806 seconds)
  done (took 6.454320509 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222015984 seconds)
  done (took 1.78399873 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.24420642 seconds)
  done (took 1.76813303 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.761230641 seconds)
  done (took 3.289073141 seconds)
done (took 43.279390291 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088047275 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090555682 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.09004395 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086738344 seconds)
  done (took 1.868421502 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082103867 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077118085 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081133561 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07742148 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081773136 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078136033 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078383751 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079997147 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077322531 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077473317 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.0773027 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07800733 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079663649 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078987548 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075598162 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079721463 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080742659 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077451819 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080182088 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077813135 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075087583 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079530802 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079730267 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076206586 seconds)
  done (took 3.414962254 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082708331 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077201213 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079934633 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07670919 seconds)
  done (took 1.85078096 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082885748 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097446113 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.095196189 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083340244 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097501967 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.092056786 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073975641 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073714544 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074925106 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082185355 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072483542 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.102111469 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093505061 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08343569 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085018399 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.07047405 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072698757 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092857659 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083689537 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083877007 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074961684 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082857819 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073597459 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093555943 seconds)
  done (took 3.549178413 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090723538 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.1104957 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085365973 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094696515 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097019333 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06934792 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092423197 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095992933 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132272049 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069831145 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075734062 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.07054855 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.078434503 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070079601 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086137814 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113839407 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.118070568 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073670968 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102088067 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070438712 seconds)
  done (took 3.337343457 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078054486 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074353297 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072086096 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070206957 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082175883 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077905432 seconds)
  done (took 1.997802887 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072709985 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072645789 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.0719615 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072544136 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076667693 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071483824 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.0702142 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072500654 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072614513 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071917064 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071440721 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070547591 seconds)
  done (took 2.404384137 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.20829123 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072840927 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073686919 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070708406 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075262797 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071054629 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086120648 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073345829 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097494817 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071421725 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.07131269 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073833598 seconds)
  done (took 2.584505539 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214310523 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080381927 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245929616 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158240135 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117068291 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121213264 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118304498 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119087613 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.148050839 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105748207 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172932114 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173059863 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112928484 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143816185 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095080028 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104341217 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15997514 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169878271 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11137245 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176846992 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151691594 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132656511 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152849219 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107858139 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111278563 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128115168 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076371021 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085696521 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176939803 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139228378 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150217856 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116853814 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097185983 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182692642 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179008277 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145717524 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153345201 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089139002 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10780174 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138294526 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207643646 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096861621 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171954482 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25630104 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086846117 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140397022 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124150207 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.125532585 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109999194 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095951019 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152289889 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192626648 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.142897041 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093372968 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130959526 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119148533 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119083367 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119575748 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189792928 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169467567 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133416594 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076831959 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114071811 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158144412 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138593639 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113830061 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.131068525 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09682659 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141193016 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159738662 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128425404 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150214261 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.122971215 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094540206 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123668115 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145015265 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132631528 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167598022 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129491173 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077054752 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129208871 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106549699 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086030198 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.153574516 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079895819 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179818621 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104098109 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110565129 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130509349 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113457735 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113176755 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163419133 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149942195 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.252157823 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.071347649 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111944369 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126445721 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152443157 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093107484 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114077482 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121500472 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082480183 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142855706 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080312712 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128405116 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080387406 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130926294 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134862718 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.083240031 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128955927 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109732224 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105253615 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138937605 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166214474 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092630601 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086975272 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174291479 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127771529 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.109500572 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150210245 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161914563 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103746883 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10671177 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155385225 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185567246 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094069242 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167838952 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111592353 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088289158 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092823113 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128969155 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116952053 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129638692 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086596729 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.123423352 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173753008 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079814171 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100482788 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139650649 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083234507 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085043566 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109902861 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109564102 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100843883 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104326581 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.107014545 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141463501 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127961365 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109857832 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126921107 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249712676 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17930717 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093096225 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107276002 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111127519 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074608307 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.142121922 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161635946 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08435473 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169456385 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.129964763 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123834682 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123914509 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088911812 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145828704 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083939399 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075075243 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150994495 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115141827 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115275038 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.155890914 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123135506 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.131579432 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.127569788 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138535379 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136335309 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.135606368 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11075102 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.09273235 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116541234 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132632795 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078369517 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095875114 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084582697 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109926545 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100831457 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087980908 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147642957 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128975479 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115180033 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116256545 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101750505 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15257161 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081301881 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134056472 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.123772083 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100230369 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.156299658 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156007597 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136430287 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103767835 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141709555 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074778214 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077802773 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091551176 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.271050033 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089174563 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090115975 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122135409 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15283171 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135310611 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142922802 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129240346 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126977473 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160344596 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075996932 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.125848029 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152883803 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126719426 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109718753 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095374729 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.105312549 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147412085 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113003581 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190083968 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118391186 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128331145 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158250197 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106319849 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084677164 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107692 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14097218 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109259548 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148175644 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104048832 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093089847 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114000973 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079813409 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103082936 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131953485 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123510663 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139028446 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120238992 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138411932 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082258708 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120527843 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126388418 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127613556 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068391187 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124550991 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164803439 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099701322 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121991996 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15657738 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083597102 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.140248494 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177835747 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.296524425 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091703819 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114412829 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125124124 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134523929 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125272678 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147306338 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113555152 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143152723 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1157459 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090871838 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09416636 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102803711 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110239643 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.100432195 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109350846 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.119597147 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100982533 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138787113 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109895712 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114857886 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122334163 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104602836 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096500049 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102493795 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183973218 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123646831 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177243102 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104128144 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.149091846 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169348547 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079969092 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08398651 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08309658 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145419346 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088803329 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135532476 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112905958 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123067627 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128610373 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147673071 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10033405 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073246512 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115947476 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1386993 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130589445 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104174575 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107926958 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167035142 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104546244 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0834347 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117974918 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121005621 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107428912 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173889426 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064853367 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108182629 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079492332 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083689497 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129980539 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152057634 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082689088 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.106937736 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120274976 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113564885 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129749653 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105087471 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111357412 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129398429 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151697813 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129326071 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090668123 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110258234 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124657007 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151350529 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105788324 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098008991 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16594671 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147596046 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.154391782 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087574456 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11249667 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112761407 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107965546 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132644178 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085756889 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157741781 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084043629 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132553208 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102050017 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087718409 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125388849 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.109455305 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088065962 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142473868 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115945715 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08466705 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078252938 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115172916 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118404736 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104910576 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077141253 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13619539 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07566836 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129700569 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155725492 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082599359 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105622269 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096448647 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080677249 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369910259 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111280902 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095793957 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.105231 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182299976 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.0940163 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157397288 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141040879 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121247437 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142453278 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109379628 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.647583827 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.084978609 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15891835 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12380507 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183474299 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107850942 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124085911 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116156176 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131056857 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153811207 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110255984 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.19567107 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1409342 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.122781882 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085366863 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108936272 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109278217 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093266235 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115094503 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119291062 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121540167 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.098253847 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.121592638 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130028998 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087893483 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101736443 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163105667 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122530531 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150199304 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147015003 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09197574 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123008445 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142097389 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085195376 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.125397928 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158039387 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111031031 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105953609 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085436597 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104693543 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315528939 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078789868 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169023502 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125648238 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11537 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118629378 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118488058 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137545419 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113196607 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128795476 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098719488 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.113724892 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119811639 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087755362 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082795742 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113884905 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117612467 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104209517 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10358333 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102773448 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157194472 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077251312 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103805474 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122195218 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149803324 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179991931 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093185961 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087625539 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12420598 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119903142 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.118462168 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126330535 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08443207 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087307887 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084502605 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.083390969 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114687035 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118663834 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120575789 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115355161 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16916994 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088548714 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.24346745 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101206828 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110353516 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074882195 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083062511 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101485094 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10307667 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112699421 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116124293 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16474081 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100759355 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094542406 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095351231 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078650972 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087588143 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1323356 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113728879 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273917289 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107267824 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068073832 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114927362 seconds)
  done (took 61.408283447 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112895551 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087965145 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100792735 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.15012728 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.128028496 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206469195 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.159279502 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194905277 seconds)
  done (took 2.815067148 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072491623 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.101518393 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.109129844 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088612306 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071515721 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072687769 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.238417547 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086934916 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.07192703 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.102197543 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082961212 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074537246 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.445362979 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071338157 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072563939 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066015734 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071670886 seconds)
  done (took 3.568655626 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.411070854 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.622094894 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.366923255 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.081110277 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.988622379 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094472693 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.196607716 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13871078 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083282836 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.52911875 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414118739 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137307142 seconds)
  done (took 18.744940892 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085808115 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078965411 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.095969611 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094956907 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.083021858 seconds)
  done (took 2.114217302 seconds)
done (took 111.24070695 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.086398773 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.622433056 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05716882 seconds)
  done (took 2.385559682 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088258618 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091107912 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.091231856 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088834896 seconds)
  done (took 2.044974943 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079282106 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081272393 seconds)
  done (took 1.841115166 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.24343521 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173737754 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.102251349 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088004214 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084187721 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08433604 seconds)
  done (took 1.94224843 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077396963 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080031689 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.0771405 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081473776 seconds)
  done (took 1.998190754 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081410071 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056221058 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058518918 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061761972 seconds)
  done (took 1.940874622 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091356497 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084593567 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083768651 seconds)
  done (took 1.943489598 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107279251 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090456224 seconds)
  done (took 1.881763925 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08736717 seconds)
  done (took 1.769040655 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099722696 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.106017564 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.138252852 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.116861345 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.146326439 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114971775 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089679669 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090453606 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.08173648 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091717562 seconds)
  done (took 2.756505488 seconds)
done (took 22.786690915 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084126727 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.38036517 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364598231 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095922917 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673870323 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361054015 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.003207346 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098525727 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120740973 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071882801 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.0895935 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652658532 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.991741051 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329181045 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982138786 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.3290025 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654535706 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072702029 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072736285 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072324093 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.986423124 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071960176 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072434425 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072764994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65241182 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377256694 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073582304 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328927049 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072730162 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074348522 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.360473141 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073101239 seconds)
  done (took 16.386756389 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07587992 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127419945 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077865976 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08921903 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074654232 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074287751 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075624072 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090811138 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127184456 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072893156 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090117696 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072143982 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07607516 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072946016 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093354501 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073073962 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07309738 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073116539 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072826113 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072854633 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09249861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072093729 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072910187 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073532173 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072648906 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084939317 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07330876 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073211718 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073123263 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074804937 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075429087 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073375197 seconds)
  done (took 4.262761962 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121282261 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130572036 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079258061 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11011276 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117239993 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074228509 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150517758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098861018 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133427888 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073710352 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090286166 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07240976 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10770123 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073497763 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093121637 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072765656 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073523315 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073156049 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072689159 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073186339 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093202105 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073119078 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073106557 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073768339 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073016229 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087647799 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073963431 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073108966 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072901515 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075234667 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077252559 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074024488 seconds)
  done (took 4.508444019 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076780079 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.08052266 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088446065 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089191659 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074479311 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076504327 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078562222 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074425328 seconds)
  done (took 2.341307388 seconds)
done (took 29.190088834 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084333851 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074265241 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.077337237 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087971498 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077909073 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083362487 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070986176 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.080463351 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077445272 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078566447 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079790523 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071623951 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075931025 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071303331 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079448879 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.07237375 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084202406 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076522342 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083947619 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085538348 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074810768 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078653363 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080201322 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084171462 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084059655 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084381626 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082276021 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077863506 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072736621 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075795525 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082280817 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089555054 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073060613 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084351653 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072350854 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072184218 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.076408592 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.072741259 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084062892 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081997847 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075119345 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081226115 seconds)
  done (took 4.994789323 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093145574 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09818298 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090256083 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066313064 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070837213 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.070430377 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095201447 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06415138 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063633783 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093826498 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.060226027 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063845446 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067805198 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057873246 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.065247386 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061058884 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066713458 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059759811 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064439474 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063909188 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094524082 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.058111079 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082692477 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068077846 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060293696 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06592289 seconds)
  done (took 3.575477127 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079429744 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.090579112 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096704158 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138039456 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111059918 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.085035068 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084423766 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.101238647 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094737091 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071674261 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076045942 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098712022 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095775428 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078699973 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072021304 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091923657 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089258042 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073439765 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078456253 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099851509 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092632457 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091542335 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102845057 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088056077 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071353318 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075670933 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075924094 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086260572 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075949343 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081936716 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07550679 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075867196 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074011301 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08408804 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075329074 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073681387 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.100703614 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082938588 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083930941 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072865876 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.08142669 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073836029 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.098317431 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133879071 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072068158 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078901479 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076035725 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082481396 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.082669012 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09311363 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083977252 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.072034649 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075902362 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071891413 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071246674 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075279991 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073505637 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074263136 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081109719 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077994452 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097634991 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076937409 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088740992 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072006045 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080537468 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071179061 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072941968 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070754544 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101428081 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074431034 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117268468 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073366744 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072885504 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081494748 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080452456 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077953532 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073674468 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088647162 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082781339 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076045533 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080685346 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075657597 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075157759 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.095996085 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074724735 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074198199 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073030281 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078270775 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074742412 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073543989 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085625399 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071487247 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074930079 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089565756 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072001501 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073408266 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077655597 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077079064 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.071492338 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084237361 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076664604 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072701602 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082946461 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072615224 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075953661 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085204369 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079056514 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071440478 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076408336 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077717271 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072934007 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073851609 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075610645 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073657033 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081159836 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078788817 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076693803 seconds)
  done (took 11.278683992 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.17223027 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.165284384 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075435222 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.157277777 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081913215 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084976082 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.158384095 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100799504 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072909979 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073186907 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073683173 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116368493 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.11264795 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121540349 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083604618 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072363337 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090077098 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.121432647 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160422441 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.155182186 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090088764 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082000052 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074937558 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074252314 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075390137 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083141424 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09030236 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083696517 seconds)
  done (took 4.644939057 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085604734 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.111517236 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080121578 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.097929076 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096656629 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072438119 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075740068 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074600974 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086498613 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083100804 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072294268 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077980483 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079670684 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076252883 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073741999 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079595213 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079709508 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074210767 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075750439 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07826752 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08389967 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.098410989 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076405658 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071531462 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077743368 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071923248 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067980803 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089507423 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.07312821 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.101360102 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070439119 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078255465 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.088033671 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073255772 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072920704 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072244914 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072301754 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072117303 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073920435 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071646521 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.07067327 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061573597 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071625407 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083866051 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079806813 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060666928 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077943611 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.079168805 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077804155 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069947065 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075590918 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075399979 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075812607 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080561517 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077067219 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078252201 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07391121 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.079146517 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.082835168 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072513855 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06991319 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070956257 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077722678 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06973064 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081667002 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077787264 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070579384 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07230903 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07597951 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080035313 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07241088 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077067816 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069908396 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074270353 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077002425 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074644979 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073610391 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071630337 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072295771 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073675671 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.0594644 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072547207 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057342249 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075445735 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070829109 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070711787 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072181119 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077310163 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084300515 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073712992 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078634376 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.0731966 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072005638 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075689992 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064566351 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074907754 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083966134 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087003622 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072888559 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070763532 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08634784 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077657951 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071361704 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060066347 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076862094 seconds)
  done (took 9.749985562 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.097177388 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07546227 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089702591 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095914036 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093649901 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079867194 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083096386 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074183118 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089442275 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079336687 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082283768 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073413311 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083924074 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082828168 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074873455 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083250217 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077211828 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090807104 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08876072 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072728336 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081663098 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086500188 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.096167505 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087273377 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08633572 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087155882 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096584063 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083606167 seconds)
  done (took 4.120642906 seconds)
done (took 40.063596977 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.787283331 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.034100685 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.781852128 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.158880296 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.856857258 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.948634251 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.868208004 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.774822397 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.927107872 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.812153667 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.071704376 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.998210457 seconds)
done (took 65.739596959 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.825350505 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.91349155 seconds)
    (2/2) benchmarking "String"...
    done (took 2.019612258 seconds)
  done (took 5.647204925 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.112910452 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.346623508 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.024975636 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.776328895 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.782602904 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.075741873 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.592959784 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.289919769 seconds)
  done (took 30.605955284 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.983051034 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.997444788 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.49154685 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.533815653 seconds)
  done (took 15.774532926 seconds)
done (took 63.765196003 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.799297225 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.783861309 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.786159151 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.760726495 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.838060954 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.787803644 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.872433581 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.778842071 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.77725343 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.767823922 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.778394211 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.259937352 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.787417316 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.907252718 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.78279533 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.78722798 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.822826841 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.248356338 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.936676701 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.79014504 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.789456898 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.795272377 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.783596635 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.790247852 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.81691768 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.77928816 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.164343792 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.779322435 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.599717106 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.77891065 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.828777632 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.125019133 seconds)
  done (took 203.8010579 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.778032682 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.996672814 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.071074936 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.815538297 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.451709173 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.997349775 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.908929169 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.47619407 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.781297041 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.78935257 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.89742289 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.777993109 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.916584956 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.795046485 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.807821566 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.889030722 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.062581958 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.926466307 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.814244851 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.937255069 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.797433764 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.722945123 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.698183635 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.88766341 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.801092279 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.789682047 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.795562689 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.80011914 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.986219554 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.034515352 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.785032684 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.786600034 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.984602575 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.653767246 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.790335429 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.810881501 seconds)
  done (took 170.734425645 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.950549585 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.780767177 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.779397393 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.77999847 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.78645779 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.780203685 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.910822713 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.912171091 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.388138201 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.355906074 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.7843316 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.831270805 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.595087717 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.780854149 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.848361237 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.794497887 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.78207099 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.795988874 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.807707735 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.785251744 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.781627243 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.907982815 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.792266746 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.994137405 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.791507127 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.782553922 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.786576564 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.1505911 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.781844999 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.783224071 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.787156073 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.023025237 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.782723469 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.782352878 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.623160906 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.38869698 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.865109106 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.783760288 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.787752728 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.781899121 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.000611238 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.782979006 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.782500963 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.785474742 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.912231122 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.786184422 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.904354111 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.786328885 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.255337387 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.786088173 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.782125244 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.616193738 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.358603581 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.786568873 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.782049433 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.78557166 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.782935974 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.782944152 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.788833372 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.56914756 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.857504997 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.784176323 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.786339851 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.789188075 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.78350321 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.798416299 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.786605964 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.109831523 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.839446978 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.914665035 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.905962183 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.78778791 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.849867943 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.877419041 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.784429619 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.783213422 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.783714502 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.782913727 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.864075903 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.786342636 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.912139332 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.791852148 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.785459189 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.835573537 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.854796075 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.784765248 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.623179394 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.787986837 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.785051034 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.043325637 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.851477451 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.787968301 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.784873644 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.784688757 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.784146648 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.912693368 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.911162722 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.493266265 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.788692066 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.44180285 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.78834719 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.922919011 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.785543761 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.929149271 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.78997632 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.866306215 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.791456322 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.785312807 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.786502444 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.785220063 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.818402228 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.785943908 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.84408384 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.787633661 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.158620409 seconds)
  done (took 403.012531702 seconds)
done (took 781.26968716 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.441070361 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.407573152 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.50544375 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.43201039 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.40143462 seconds)
  done (took 13.912096806 seconds)
done (took 15.635983052 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.876033116 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.882669896 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.811334232 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.878134099 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.810949343 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.878092445 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.861164398 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.811607705 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.846848179 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.811011355 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.848453511 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.811415428 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.79974536 seconds)
  done (took 25.653123531 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.018951221 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.203584741 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.861782016 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.021330072 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.839022528 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.023868128 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.955826325 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.939264123 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.943503169 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.805990925 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.800888119 seconds)
  done (took 23.140637725 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.027498788 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.029143616 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.869436533 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.028954047 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.842948958 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.021261342 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.957424709 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.942904761 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.940949319 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.805809139 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.801298984 seconds)
  done (took 22.993787934 seconds)
done (took 73.512548687 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.796706748 seconds)
  done (took 3.523550319 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.825434333 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.004034631 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.804235954 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.801098414 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.796738581 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.797884679 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.800830235 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.796226212 seconds)
  done (took 16.355168754 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.792727453 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.792456234 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.794583472 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.793653311 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.793783475 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.797504006 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.794007564 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.796791443 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.796880868 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.796711462 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.796946628 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.797569701 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.794187911 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.797223733 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.796038477 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.793119908 seconds)
  done (took 30.452645598 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.795660872 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.79392905 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.794673084 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.794673053 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.793835346 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.794194438 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.795518238 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.793628136 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.793712266 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.794442787 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.795473466 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.794254533 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.795220851 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.794663012 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.794436978 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.79594449 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.794555717 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.794120993 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.798907071 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.794285675 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.795589409 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.794383815 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.795114577 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.79811313 seconds)
  done (took 44.810328424 seconds)
done (took 96.867745833 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.582283635 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.462864938 seconds)
  done (took 9.77625161 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.802011416 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.800165789 seconds)
  done (took 5.396258357 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.800592624 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.800836552 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.800036199 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.800382014 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.801293308 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.801745502 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.800788934 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.801346321 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.800346451 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.801567851 seconds)
  done (took 19.740449233 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.800688474 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.801752872 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.798029917 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.801260071 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.801481989 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.797972497 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.801012744 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.801759557 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.800841557 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.798027279 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.801341288 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.798381096 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.801106364 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.798550612 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.801468646 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.799744529 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.798386261 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.799369937 seconds)
  done (took 34.133534519 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.80255213 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.802162973 seconds)
  done (took 5.337173362 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.79939234 seconds)
    (2/7) benchmarking "second"...
    done (took 1.799875635 seconds)
    (3/7) benchmarking "month"...
    done (took 1.799020071 seconds)
    (4/7) benchmarking "year"...
    done (took 1.798635669 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.798631373 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.799916884 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.799352 seconds)
  done (took 14.327894892 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.802951551 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.963174852 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.030915336 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.455339076 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.804137124 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.805974957 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.728541814 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.806203762 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.807835565 seconds)
  done (took 19.939067413 seconds)
done (took 110.380644959 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.612235981 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.800454217 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.024023832 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.850182574 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.845464785 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.09476521 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.818588983 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.103443064 seconds)
done (took 42.88308643 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.843688163 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.164287642 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.199372303 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.824313866 seconds)
  done (took 16.922014113 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.783587498 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.322117882 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.838893288 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.388691777 seconds)
  done (took 20.0994185 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.169659484 seconds)
    (2/2) benchmarking "read"...
    done (took 2.147897817 seconds)
  done (took 6.05735072 seconds)
done (took 51.657885047 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.803316643 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.803718578 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.804360603 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.801312786 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.804580858 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.802600485 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.801680585 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.805247544 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.804166366 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.804036177 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.804201075 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805425868 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802151613 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803011149 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804938494 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.802418887 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801045716 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.802315313 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802851756 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.804888961 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.802411702 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.802984299 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.801982716 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.805773395 seconds)
  done (took 45.016854575 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.805212021 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.803058115 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.805673888 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.806001307 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.803834243 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.805483731 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.805093214 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.802367446 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.806882417 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.80524118 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802882855 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.802410181 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.805954488 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.80308312 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806077981 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.804933058 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.805465424 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802907895 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805469079 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.803429602 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.80710901 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804036522 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.804384395 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806444104 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.803767356 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.804160947 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.806038394 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.804852228 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.806903297 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.803747543 seconds)
  done (took 55.87983564 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.811907842 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.815512688 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.807870436 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.807236049 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.806644037 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.806681199 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.807541539 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.807882783 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.807808598 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.806456392 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.807541253 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.807247891 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.807875215 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.807313327 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.807729988 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.807465814 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.807708951 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.807655754 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.808177724 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.807235798 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.807451379 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.806950463 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.807829601 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.8089002 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.807699828 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.807479945 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.80770797 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.808448441 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.807226439 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.808586518 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.808058579 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.80952314 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.808867936 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.810207188 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.808756015 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.808683067 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.812922642 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.81641089 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.808034658 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.808739265 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.808578184 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.808770999 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.808441192 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.809252637 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.808687186 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.808613073 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.809447624 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.808871886 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.809528639 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.809210297 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.809852849 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.809141785 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.809354319 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.809376987 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.809588475 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.809200795 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.809856543 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.809796808 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.809538153 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.810245079 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.809590287 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.810209109 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.810015773 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.809812624 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.810548709 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.810447158 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.810342318 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.811125183 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.811136614 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.811052454 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.810436627 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.81160263 seconds)
  done (took 131.99178609 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.811698756 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.809479953 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.808207645 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.808071863 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808611199 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.810492485 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.807862172 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809966346 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808227207 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.810761009 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81079789 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.808599339 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8079736 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.810641138 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810838583 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.80896645 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.810936833 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.808292348 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.810972441 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.812126504 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.813128429 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.809604068 seconds)
  done (took 41.558564251 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811393551 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.811370503 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.809745922 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.81231221 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.81022468 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.812641592 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.811474108 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.811424665 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811403498 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.80905904 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810150385 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812407705 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.809384654 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809301867 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809572756 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.810317942 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813175059 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.808965718 seconds)
  done (took 34.3375326 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.809684264 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.811061978 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.814021079 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.810130281 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.810489637 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.813341663 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.810277584 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.813827033 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.812851887 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.810123719 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.813413565 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813852891 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.813799174 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811184489 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81325728 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.810837786 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.813968398 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810168598 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.813188177 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811564763 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.810302004 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.812980377 seconds)
  done (took 41.609495184 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.812808743 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.813618379 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.811047295 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.811412767 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.810658263 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.813358139 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.814043819 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.810848055 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.813136141 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.813408551 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811234544 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.813702856 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.811668859 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.812596072 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.811023726 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.810980305 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.813842223 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.812063718 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.81479163 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.811952202 seconds)
  done (took 37.993701697 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815761356 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815287611 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.815188711 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816577573 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.815234602 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.815492578 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816200467 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.816073901 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.817227834 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.816732176 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.816684413 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.816272379 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81702659 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.81707097 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.817139992 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81645501 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.816822955 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.815943151 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.816457446 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.816894463 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.817518464 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.816295197 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816731237 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.816721278 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.816823292 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.818410085 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.817130129 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.817088144 seconds)
  done (took 52.609448355 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.815307308 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.816140581 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.813661422 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.81347311 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.813678786 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.813744711 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.813536597 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.814312543 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.816393007 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.813680824 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.816281629 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.817294665 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.81758417 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.816592034 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.816804906 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.817276624 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817035528 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.814536538 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.814001876 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815413485 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.817368582 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816331408 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.818351878 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.813913257 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814446643 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.816913679 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.81436893 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.813899877 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.818516706 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.815169875 seconds)
  done (took 56.214209841 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.8352327 seconds)
    (2/2) benchmarking "in"...
    done (took 1.835191958 seconds)
  done (took 5.418847677 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.814984539 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818886951 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.818029513 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.815811768 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.814919571 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.818576311 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.817529653 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815642562 seconds)
  done (took 16.283511668 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.817219651 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.819091479 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.819639959 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.819348242 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.819919887 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.818105316 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.824524575 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.817886359 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.819697714 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.820302084 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.825910684 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.826853905 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.822288031 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.819690856 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.819650777 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.820567984 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.819243051 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.819838037 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.820275828 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.820087402 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.819888842 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.821061272 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.821681157 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.815948818 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.820973367 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.831494944 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.824539854 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.820206711 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.81859855 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.825064767 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.82064802 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.81696395 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.820495157 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.820011642 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.819366082 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.820905525 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.828247512 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.820015397 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.826113456 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.821069361 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.821377037 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.817455844 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.822961824 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.8229615 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.82205802 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.821442308 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.820535691 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.817707751 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.820533528 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.824530073 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.826315085 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.820788936 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.819113078 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.825197993 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.823075535 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.827568957 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.822970474 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.824795477 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.831040189 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.831051481 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.835623513 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.829419404 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.82319593 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.822153234 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.831953357 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.845442181 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.82804591 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.818062369 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.81942477 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.822179531 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.828639128 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.83570649 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.831066179 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.822647154 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.822652051 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.822518911 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.822348768 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.823005203 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.829046294 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.825072068 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.822747338 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.823463457 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.832431311 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.846381936 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.821958113 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.823930145 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.823217536 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.823217584 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.82395256 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.832315845 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.823327466 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.822967721 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.823462408 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.823185645 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.824205843 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.824559198 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.822321583 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.824493213 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.821217055 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.823207974 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.824256003 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827410194 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.833941847 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.823983976 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.824629893 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.829535514 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.824516625 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.824086914 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.832911917 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.824852258 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.825519142 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.825532445 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.831833932 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.821286704 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827856222 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.833691631 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.825380197 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.826613261 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.825775518 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.824648476 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.835069941 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.852304618 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.824531971 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.825288681 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.830533715 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.836383208 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.825419096 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.827260302 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.826436865 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.822479203 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.821520144 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.828045534 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.824573409 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.826307774 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.82677392 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.82631375 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.822474778 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.825888115 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.825847105 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.827187968 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.829198055 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.825993272 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.826972933 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.828864086 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.826529818 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.827068731 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.831836701 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.82595383 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.827386393 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.826905008 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.823928071 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.827049084 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.827822103 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.826713617 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.826551172 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.827301718 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.826035048 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.826776141 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.828044031 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.826903852 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.826785941 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.8287256 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.831995537 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.82918329 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.83220691 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.828014256 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.824661 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.829396404 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.827781771 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.826316465 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.82675856 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.826994994 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.83050332 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.836030111 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.829401488 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.828363443 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.831845795 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.827843705 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.829715127 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.829203339 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.831556116 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.836521443 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.829564954 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.83520403 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.831212633 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.828718977 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.828397699 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.827974882 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.829162224 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.828063336 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.831543181 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.836902666 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.842513952 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.837060288 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.829948664 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.832360229 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.83010953 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.833544687 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.833192249 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.830370277 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.829760247 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.828414598 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.828428626 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.828999759 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.830823925 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.83068122 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.828601176 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.830924145 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.82906147 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.829531306 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.829945296 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.830651027 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.830755809 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.827012973 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.829684212 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.830319935 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.828544439 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.826972679 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.828502227 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.830180042 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.829192949 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.831427445 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.836953059 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.827562244 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.83168551 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.831266044 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.830356547 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.829912185 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.831294541 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.83333526 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.831708937 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837309826 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.83055283 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.83193129 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.836733709 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.830687403 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.829459822 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.834337978 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.830893656 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.828841634 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.834850921 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.839770938 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.830021819 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.83160651 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.831133145 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.830678266 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.831377693 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.837110848 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.828728974 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.830693962 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.831530955 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.833990878 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.828740166 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.832938649 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.832825786 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.833346189 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.833875098 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.832744366 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.832496263 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.832582386 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.832906572 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.833384571 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.833421162 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.835440576 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.840887927 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.837426785 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.833263303 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.834518105 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.833711698 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.836826689 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.833317409 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.832937678 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.832023805 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.848155931 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.842073162 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.839808964 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.83443121 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.8335313 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.838334099 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.834795759 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.837178234 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.833985969 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.834078953 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.833354005 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.833209628 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.831166772 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.833855235 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.833854077 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834387782 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.835180891 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.837185441 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.83385688 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.83251458 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.836156796 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.834909606 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.835253362 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.833536166 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.83445868 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.835748161 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.836391099 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.834300398 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.834268657 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.840782055 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.834564563 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.835357501 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.834727324 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.835505353 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.83385987 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.835256218 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.835318332 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.839040147 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.842941816 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.838814812 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.844509358 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.837210272 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.845192123 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.836023291 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.83845136 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.843686624 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.832468588 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.83403277 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.834825007 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.836161704 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.843009389 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.836568765 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.836870772 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.840680346 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.83652953 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.837194958 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.835335189 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.837299499 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.835832809 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.835537893 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.843695832 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.836262759 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.840337025 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.837293933 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.832399431 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.836249635 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.836195055 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.835433344 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.839269457 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.837214 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.837456903 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.836178034 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.836351059 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.836047482 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.836890895 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.836909601 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.833335373 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.83628893 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.84384221 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.838233333 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.842368461 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.837178784 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.845922599 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.836606756 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.843781632 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.837204953 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.838237289 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.838200106 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.83649269 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.839454108 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.837628314 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.838868806 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.838716738 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.839242546 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.841994308 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.838451529 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.840991188 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.839342191 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.842267892 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.837357661 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.847509659 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.863600351 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.84012384 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.841971501 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.834925857 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.84009283 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.844370844 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.838704012 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.838665254 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.841578509 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.84945371 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.846856923 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.838899643 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.839252638 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.839959957 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.840216383 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.839309045 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.839474971 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.840674603 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.839436076 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.841993322 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.839847778 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.843717898 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.83943704 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.840225556 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.840201359 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.84097727 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.850634335 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.84007057 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.839731939 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.840714355 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.840073712 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.840789285 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.83980505 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.840860827 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.840494606 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.840470269 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.841517742 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.846797264 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.84749301 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.842374124 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.840693161 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.840828108 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.840289181 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.840909064 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.840895783 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.841488022 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.843117099 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.841472847 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.841268774 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.841188636 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.839924654 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.840805786 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.842106088 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.84093689 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.844267433 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.848822304 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.842194841 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.838189549 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.840519074 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.842411737 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.840710878 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.842761432 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.849894491 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.845454857 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.852053024 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.850813599 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.846864566 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.840236059 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.843144086 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.847950085 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.839388685 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.840572124 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.840849543 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.841396956 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.84055774 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.843115809 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.840079877 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.846467672 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.839455333 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.841318924 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.847943526 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.84124719 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.839941489 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.842093818 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.843155916 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.84011402 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.8366343 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.841686811 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.839094872 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.848879851 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.841644748 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.841716621 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.843110374 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.838183969 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.841219873 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.846873833 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.840756185 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.841616483 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.838176699 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.841635337 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.841160262 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.841206537 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.83784735 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.841662732 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.840903323 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.84624831 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.848487602 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.837660121 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.842983647 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.841277355 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.842213888 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.842271803 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.841276757 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.838263774 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.839194866 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.841718805 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.842551699 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.843177737 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.845059337 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.842579024 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.843561291 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.843706124 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.844318011 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.844958304 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.853521351 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.85137705 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.8390264 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.842273528 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.843318924 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.8454422 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.842836449 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.843714067 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.842844567 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.845110709 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.842371982 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.843213895 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.84269981 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.846556755 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.859755148 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.842823916 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.842821983 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.843628926 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.845845654 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.8430764 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.841744842 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.843716455 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.846001178 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.847565368 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.851857462 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.843989835 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.849923415 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.844023546 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.845793362 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.847562646 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.848884239 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.852277145 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.846458358 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.843941021 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.844237501 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.848855173 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.861078266 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.844364932 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.854880166 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.874159226 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.844677652 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.84577276 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.844911127 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.844582513 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.845345396 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.846759725 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.846059166 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.844240322 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.845007684 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.845632276 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.845393378 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.852278507 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.847358803 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.846267625 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.844864511 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.84564378 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.848023018 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.843120668 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.845946427 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.845120626 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.845883135 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.846090509 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.846907615 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.847408305 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.859162042 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.856972192 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.845399097 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.846448441 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.842418491 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.85103671 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.849399851 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.856433248 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.853993775 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.845797128 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.847259537 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.846676934 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.846939649 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.844150695 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.84625391 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.847949818 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.845816938 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.842983699 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.860260556 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.855639131 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.851035758 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.84812564 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.847411115 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.846761086 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.847358828 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.847572895 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.847387886 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.847732785 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.847565276 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.851774358 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.846925173 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.84763416 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.850296656 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.855370221 seconds)
  done (took 1095.784443036 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.844707174 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.84498847 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.844139638 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.844529 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844526825 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84461454 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845148438 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.844424346 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.844815322 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.84485841 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.843769672 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845172024 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.845447062 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.845768409 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844855778 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.845301695 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846386025 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.845634026 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.845859879 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845455927 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.845323871 seconds)
  done (took 40.522994671 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.848508517 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.845668001 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.845038982 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.848416345 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.846744297 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.847798751 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.84580527 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849218032 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.848636857 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846339982 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.848551824 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847792189 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.846106963 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.846593742 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844929122 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849324996 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.849134177 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.845481484 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.850201674 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.846164656 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.848914016 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.846441169 seconds)
  done (took 42.42071762 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.850091748 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.849891209 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.849453446 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.847383464 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.849988917 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.846378963 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.84902696 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.850061316 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.85092244 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.851085361 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.849596197 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.850688741 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.857937582 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.855777965 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.852635392 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.850723544 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.994438659 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.849989608 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.851238729 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.851510298 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.847460748 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.855780423 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.847645907 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.848395468 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.850336774 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.852110642 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.85054217 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.850763555 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.851186477 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.850748825 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.855757836 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.850604368 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.850477761 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.852864825 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.85016992 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.851779682 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.855542077 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.851983318 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.848374276 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.851669404 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.860576854 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.87331476 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.852623128 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.85713127 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.851760448 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.851219396 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.855428257 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.859788401 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.84888941 seconds)
  done (took 92.674266549 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.851468667 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.851449857 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.848533501 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.852041343 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.851540786 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.852288134 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.850985136 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.852426239 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.849506084 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.849686169 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.85204717 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.849866305 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.849668314 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.852935643 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.852442451 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.851460003 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.849726945 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.850486166 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.850082299 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.849826939 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.851256708 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.852748753 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.853965347 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.851437286 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.852867389 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.850533632 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.849976358 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.852435251 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.84973529 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.850030585 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.85249671 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.852458908 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.853779824 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.85138039 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.849800007 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.853309942 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.853329542 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.850492148 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.853792134 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.850154796 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.854492031 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.854079283 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.853924063 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.853499779 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.85157779 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.850800797 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.850983274 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.850759157 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.852700339 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.853526338 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.854454174 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.851259969 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.853552884 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.851384088 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.854966949 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.8544824 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.851840756 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.851826279 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.853967687 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.851651385 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.851166521 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.854432928 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.851580941 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.854436607 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.85607336 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.851585672 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.852499429 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.854586147 seconds)
  done (took 127.720074677 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.855261982 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.855337035 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.857124618 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.856943318 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.855775621 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.856265609 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.856530164 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.856271645 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.857092102 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.85603598 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.856847702 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.856931137 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.856533693 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.856661517 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.856818191 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.85684248 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.856839594 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.857613737 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.856862426 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.85668444 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.85717256 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.857626511 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.856195696 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.856502213 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.857668176 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.857347666 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.856913604 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.857185411 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.857302049 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.858177494 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.857545687 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.858516021 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.858423538 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.85787786 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.858649591 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.858333692 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.857685816 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.858182663 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.857928525 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.858815525 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.857906189 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.858258867 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.8579975 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.857190391 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.85904821 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.858226935 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.859054982 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.858680169 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.857892484 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.85870007 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.859317444 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.85903454 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.858040691 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.859330072 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.86011691 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.860063625 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.859485985 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.860332386 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.859293399 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.859786122 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.859987749 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.859428293 seconds)
  done (took 116.968927705 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.858344438 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.858791586 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.855955725 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.856087002 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.858465014 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.855603172 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.858888461 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.859206994 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.858883572 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.858404339 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859655441 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.85589559 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.856538431 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860232968 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.856691797 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857918376 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.856243191 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.855793571 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.858982436 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.856724363 seconds)
  done (took 38.941832253 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.856342884 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.859343446 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.857059917 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.857222848 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.85971539 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.856582538 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.859555932 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859489727 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.857449763 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.859659961 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.860034378 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.860405398 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857456243 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.857667024 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.860257968 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.857480222 seconds)
  done (took 31.525559401 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.856925765 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.86049097 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.86038447 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.861853244 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.858022094 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.857185645 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.861550477 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.858256036 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.859733097 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.860772426 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.861343793 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.860787498 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.860121691 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.861210335 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.858626019 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.860582816 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.857484793 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.858280752 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.86148871 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.861420329 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.859329295 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.85968808 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.861051179 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.862262697 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.859454894 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.859208094 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.859286739 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.85944913 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.8589043 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.86187113 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.858826871 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.860389589 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.858518581 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.859139444 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.862951495 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.859186345 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.862693119 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.862086284 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.862329904 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.86179892 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.863151486 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.859976163 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.862263953 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.862466669 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.859906846 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.863123342 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.860124473 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.85986841 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.859918606 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.860004261 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.863068141 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.863276521 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.863265142 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.863923744 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.862420305 seconds)
  done (took 104.123338025 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.863140378 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.863173468 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.860662094 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.86304867 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.863045849 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.860276121 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.864127804 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.861571907 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.860847075 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.863917415 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.862317871 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.863944685 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.860870325 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.863729667 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.861909511 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.865593696 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.860426282 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.85964338 seconds)
  done (took 35.31550981 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.860023312 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.860229563 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.863125679 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.859699838 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.859637249 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.862372166 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.859577701 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.862600271 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863260245 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.860396827 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860277435 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.863117111 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862884501 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.864384636 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.860303816 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.858843329 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.862237796 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.862964757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.860224806 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.858955815 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.862362481 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.860998251 seconds)
  done (took 42.741519707 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.862923153 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.86109525 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.877867873 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.884845091 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.883982327 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.899911992 seconds)
  done (took 13.0617669 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860202601 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862425894 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.8598101 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862689323 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863695956 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859659558 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860785218 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861608059 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863570761 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860654396 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860644586 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861812418 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861837204 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860093766 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862831198 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860731603 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852629677 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852033351 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851860961 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854893555 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853046757 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853907859 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851046689 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851304123 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850832925 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851589031 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855193377 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851131786 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850705159 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852941763 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853371775 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851165141 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854387194 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851784063 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853198116 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853596237 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850435644 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852507228 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854298524 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851304169 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.853547332 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853387273 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854617453 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850654781 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853938479 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851558969 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850404777 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851217967 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851604115 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854912183 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854024764 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851262501 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854649594 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854553546 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854029172 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856450372 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852136159 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852071754 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854913023 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851863304 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851919323 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855144615 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852714702 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853678223 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854211803 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852108537 seconds)
  done (took 124.217923 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852028332 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.852500637 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852340504 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853247191 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851985849 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851999789 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851868625 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852905596 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85231788 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851581885 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855255409 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852669173 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852682637 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853762674 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853486366 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851968348 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85108533 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852007114 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852400328 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855590306 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851584394 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852464503 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852122029 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853126483 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85233528 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855878392 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853335656 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852094239 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852140397 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853236196 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853027585 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852675327 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852260802 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.852468232 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853289411 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851913356 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851914153 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856664383 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85234767 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854416484 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853289054 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855091512 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852397107 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851820534 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852933903 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852053394 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849696984 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850050009 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849246413 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850135383 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85085142 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846829347 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846547468 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846944124 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846070909 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846934655 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847187631 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846121733 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847142121 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848492015 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847214633 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845790982 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850143036 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847477081 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847280775 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847185969 seconds)
  done (took 123.972976272 seconds)
done (took 2550.639901838 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.864977702 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.854570144 seconds)
  done (took 15.497868136 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.008465007 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.963482238 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.845816812 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.89857947 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.847194289 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.866342497 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.85830809 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.845763421 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.84727668 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.846392786 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.846327214 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.033408008 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.841163013 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.846213177 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.847212054 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.939615125 seconds)
  done (took 51.961271372 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.850576021 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.850554435 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.862481267 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.85350616 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.849342913 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.86310166 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.890321833 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.853631054 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.884232036 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.864397215 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.91922966 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.863569366 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.847617166 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.900326348 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.864894972 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.864635892 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.944924791 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.926629734 seconds)
  done (took 35.531277646 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.929597443 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.853403242 seconds)
  done (took 10.567507098 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.876660058 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.856763968 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.858820685 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.847924944 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.848711712 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.874165323 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.843988883 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.880305296 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.8404022 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.868720194 seconds)
  done (took 70.375388355 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.846295163 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.841411394 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.842516523 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.839114191 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.832771486 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.836825927 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.838155927 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.836717965 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.519619763 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.875811302 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.846749632 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.843774716 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.838291369 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.84015299 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.836130248 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.86447743 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.931888323 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.837017202 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.83550165 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.843635764 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.839809003 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.891912832 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.85218801 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.840226532 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.870464397 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.517961254 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.84895736 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.843509105 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.931976337 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.835411632 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.837524385 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.83840471 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.84109193 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.233922698 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.118969948 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.838063252 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.853763714 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.84727858 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.835546814 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.928294589 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.83919863 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.842857535 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.468267855 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.096178874 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.949051692 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.880166386 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.157882063 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.856182818 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.83842174 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.86476123 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.841389826 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.838930953 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.852067122 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.316105134 seconds)
  done (took 130.488335621 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.830853743 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.185181287 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.003222003 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.834562045 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.124109641 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042930367 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.833583353 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.881283627 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.833525866 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.063530194 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.087408452 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.942288409 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.831340984 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.828018541 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.829246477 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.827455899 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.990258402 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.906491372 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.832274239 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.828714587 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861738897 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074892086 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.959639373 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.830966653 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.860798465 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.045379219 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.956304977 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.938910488 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.612576115 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.826703886 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.89491118 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.831120527 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.82786998 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.826673949 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.990436851 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.949317405 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.914289287 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.829744698 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.825850778 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.82615931 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.503303236 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03262062 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.927015219 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.973174605 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.02892565 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.039398152 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.61359166 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.826083433 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.568906889 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.993198885 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.060099321 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.059743298 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.953747729 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.831665339 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.16192555 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.824795667 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.827027219 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.081116742 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977470608 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.933054398 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.827272495 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.826211632 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.827987719 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.075760572 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.829910426 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.926850286 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.828548661 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.827271309 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.928193988 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.933326952 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.971581023 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.045189297 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.861910861 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.726930445 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.367687615 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.078546399 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.898161908 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083296062 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.828719044 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.826531442 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909626754 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.67993906 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.087475752 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.080139698 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.085480059 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.867461493 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.553807325 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.829239476 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.057945283 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.055871996 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.081747299 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.055633019 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.068538921 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.181482392 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.8279545 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.828336077 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.05873729 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.970179632 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.830272437 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.180747575 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.066942649 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.402561771 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.85192307 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.142467329 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.964598736 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.830732482 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.472628475 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.828034778 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.055751011 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.873579199 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.830813579 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.829461764 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.053661001 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.809528214 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.827958326 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.690099203 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.894526078 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.83159611 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.068227865 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.8316183 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094567062 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.832253869 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.072197637 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.992882345 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.86504763 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.007371452 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.049807913 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.832651028 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.080825386 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.0788079 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.949491765 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.107856718 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.735103246 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.829082561 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122250326 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.832952793 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.829204662 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.005610846 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.831325671 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981823533 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.831907308 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.118932962 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857303712 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086231713 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.831619021 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.089334061 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.868278299 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.885683656 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.833332915 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.960920212 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.831940621 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.66029761 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.99177404 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.833967397 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.83122116 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.390145173 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.833154807 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.990590453 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.067944734 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855985912 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.909391905 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.505308125 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.830069161 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.918671777 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.857760785 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.227813839 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.833530299 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.085378935 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.832832891 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.830829744 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.83139037 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.077783774 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.07299358 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.837914502 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.832260222 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.729565243 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.830219906 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.830468016 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.020787099 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.169019063 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.83205953 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039994616 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.834968181 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.965937397 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.837267346 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.911777998 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.173220008 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.83300413 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.832185507 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.831557379 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.830762799 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.832409513 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.046023723 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.862085018 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.371740536 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.973827163 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105012034 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.148669386 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.084560236 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.879862342 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.83575422 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.091275805 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.836184659 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.900017904 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.836893272 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.857946525 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068229489 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835733759 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.130999547 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.116486514 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.704181441 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.883934774 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.835086121 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.831955716 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.834042043 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.982728093 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.928037429 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.83618402 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.834999232 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.953046751 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.959995733 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.049691254 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.837723322 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.947228501 seconds)
  done (took 896.183705507 seconds)
done (took 1212.3832164 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.834002393 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.835495392 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.823539483 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.837790013 seconds)
  done (took 29.101324292 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.844614644 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.840084267 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.843089395 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.84177171 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.843028499 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.841824815 seconds)
  done (took 12.825399509 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.884619106 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.837766338 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.839587139 seconds)
  done (took 21.333359004 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.908998411 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.228045074 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.949461864 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.263041067 seconds)
  done (took 10.121096646 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.845188817 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.843865056 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.842494985 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.844816475 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.845297765 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.847606271 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.844059453 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.846798558 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.846084203 seconds)
  done (took 18.379499519 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.277214551 seconds)
done (took 97.807352812 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.881011928 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.58200187 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.851661424 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.931766852 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.187205681 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.173371467 seconds)
    (7/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.385971311 seconds)
    (8/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.942143787 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.17107888 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.887077018 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.99837634 seconds)
    (12/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.25633181 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.983748734 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.832690387 seconds)
    (15/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.924443833 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.887388177 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.872513226 seconds)
    (18/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.967868724 seconds)
    (19/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.914126594 seconds)
    (20/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.860704729 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.132070537 seconds)
    (22/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.952253876 seconds)
    (23/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.848261853 seconds)
    (24/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.039031446 seconds)
    (25/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.849341774 seconds)
    (26/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.87548657 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.830208227 seconds)
    (28/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.861115251 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.845441644 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.182446126 seconds)
    (31/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.938417266 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.941431901 seconds)
    (33/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.228148938 seconds)
    (34/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.883634028 seconds)
    (35/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.986910345 seconds)
    (36/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.94669553 seconds)
    (37/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.955892518 seconds)
    (38/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.90206893 seconds)
    (39/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.025759542 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.241225589 seconds)
    (41/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.838887698 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.114818505 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.949268863 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.920436506 seconds)
    (45/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.947867813 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.977234833 seconds)
    (47/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.267690768 seconds)
    (48/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.95472757 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.996118552 seconds)
    (50/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.942176021 seconds)
    (51/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.867548737 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.474182173 seconds)
    (53/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.835521483 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.357418295 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.155867842 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.881176435 seconds)
    (57/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.310834923 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.206790056 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.239603529 seconds)
    (60/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.008460923 seconds)
    (61/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.392711952 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.103924365 seconds)
    (63/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.147577464 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.158392813 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.161753803 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.077938841 seconds)
    (67/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.841747702 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.026464816 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.96148234 seconds)
    (70/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.012430821 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.912073135 seconds)
    (72/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.962768584 seconds)
    (73/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.327228287 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.002761702 seconds)
    (75/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.956396838 seconds)
    (76/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.33400824 seconds)
    (77/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.959953763 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.850440049 seconds)
    (79/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.955265739 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.855049338 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.583828871 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.928410754 seconds)
    (83/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.874093727 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.553491372 seconds)
    (85/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.04015556 seconds)
    (86/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.485822571 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.998682663 seconds)
    (88/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.931611118 seconds)
    (89/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.29478061 seconds)
    (90/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.886196679 seconds)
    (91/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.045151477 seconds)
    (92/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.035559875 seconds)
    (93/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.928259177 seconds)
    (94/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.992953391 seconds)
    (95/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.86787505 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.856384918 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.854248161 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.93657139 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.853932058 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.930984576 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.925423688 seconds)
    (102/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.837144019 seconds)
    (103/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.133991854 seconds)
    (104/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.961728265 seconds)
    (105/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.208492573 seconds)
    (106/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.926904502 seconds)
    (107/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.941734558 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.043493023 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.779232538 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.959656493 seconds)
    (111/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.878075609 seconds)
    (112/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.032117912 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.861636438 seconds)
    (114/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.221578541 seconds)
    (115/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.95790483 seconds)
    (116/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.959621097 seconds)
    (117/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.445641605 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.843967158 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.468348276 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.875124821 seconds)
    (121/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.988701203 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 2.085129422 seconds)
    (123/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.988917757 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.880456237 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.855782301 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 3.634395774 seconds)
    (127/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.157880819 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.077578194 seconds)
    (129/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.106982177 seconds)
    (130/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.040177737 seconds)
    (131/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.248968324 seconds)
    (132/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.243872995 seconds)
    (133/309) benchmarking ("sort", Float32, false)...
    done (took 5.567738303 seconds)
    (134/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.964127641 seconds)
    (135/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.840565164 seconds)
    (136/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 2.480560294 seconds)
    (137/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.955519453 seconds)
    (138/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.857354511 seconds)
    (139/309) benchmarking ("map", abs, Float64, true)...
    done (took 3.642434966 seconds)
    (140/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.769618113 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.076960218 seconds)
    (142/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.883866675 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.882485413 seconds)
    (144/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.98412501 seconds)
    (145/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.860115169 seconds)
    (146/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 8.338335631 seconds)
    (147/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.918961557 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.842329203 seconds)
    (149/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.101957182 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.882687824 seconds)
    (151/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.327796518 seconds)
    (152/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.252547575 seconds)
    (153/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.106783127 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.880460945 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.881081905 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.131754424 seconds)
    (157/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.055354979 seconds)
    (158/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.768488773 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.796154854 seconds)
    (160/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.288386127 seconds)
    (161/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.611186854 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.861474095 seconds)
    (163/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.160933254 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.861093316 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.547618472 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.255938651 seconds)
    (167/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.0986691 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.049862099 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.988048776 seconds)
    (170/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.018788015 seconds)
    (171/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.951589147 seconds)
    (172/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.88107177 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.856628778 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.303717154 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.841095627 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.943108211 seconds)
    (177/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.69666002 seconds)
    (178/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.844401597 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.192136605 seconds)
    (180/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.953146437 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.146239711 seconds)
    (182/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.315132455 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.833066182 seconds)
    (184/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.556524643 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.167134821 seconds)
    (186/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.9845241 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.884126255 seconds)
    (188/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.37060358 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.896582174 seconds)
    (190/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.920192432 seconds)
    (191/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.925493285 seconds)
    (192/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.199778132 seconds)
    (193/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.87823333 seconds)
    (194/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.374529196 seconds)
    (195/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.001840053 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.875591264 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.506417836 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.927933127 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.857697044 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.077069509 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.609245675 seconds)
    (202/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.358082205 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.936966067 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.769155114 seconds)
    (205/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.84518671 seconds)
    (206/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.643198718 seconds)
    (207/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.132725367 seconds)
    (208/309) benchmarking ("sort", Float64, false)...
    done (took 5.711945959 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.988796396 seconds)
    (210/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.27505014 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.254940184 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.063555948 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.662168495 seconds)
    (214/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.134602317 seconds)
    (215/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.118964588 seconds)
    (216/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.865915516 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.157657599 seconds)
    (218/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.019583536 seconds)
    (219/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.615933253 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.806675103 seconds)
    (221/309) benchmarking ("sort", BigInt, false)...
    done (took 6.863854743 seconds)
    (222/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.959430643 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.879086066 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.19165424 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.160056548 seconds)
    (226/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.97657817 seconds)
    (227/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.956371747 seconds)
    (228/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.897869063 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.901756842 seconds)
    (230/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.99378594 seconds)
    (231/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.950601559 seconds)
    (232/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.847001937 seconds)
    (233/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.767009237 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.866952151 seconds)
    (235/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.050845288 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.841949715 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.200876163 seconds)
    (238/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.865943508 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.018794207 seconds)
    (240/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.962805392 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.789549214 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.853821308 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.005476486 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.860404347 seconds)
    (245/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.944663723 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.741041284 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.102477692 seconds)
    (248/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.886147938 seconds)
    (249/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.971376774 seconds)
    (250/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.871962339 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.10046033 seconds)
    (252/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.126397709 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.549067681 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.093893424 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.12557672 seconds)
    (256/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.930879366 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.954072211 seconds)
    (258/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.885050144 seconds)
    (259/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.864302792 seconds)
    (260/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.065658099 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.887918959 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.299929449 seconds)
    (263/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.272741728 seconds)
    (264/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.853972861 seconds)
    (265/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.952088165 seconds)
    (266/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.858775112 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.203551446 seconds)
    (268/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.701289882 seconds)
    (269/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.86897203 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.98614992 seconds)
    (271/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.970808752 seconds)
    (272/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.224811868 seconds)
    (273/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.252702035 seconds)
    (274/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.185567338 seconds)
    (275/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.854486184 seconds)
    (276/309) benchmarking ("perf_sum", Float64, false)...
    done (took 3.187764545 seconds)
    (277/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.115097966 seconds)
    (278/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.941049737 seconds)
    (279/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.038661813 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.150613677 seconds)
    (281/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.888695441 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.677757735 seconds)
    (283/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.002018145 seconds)
    (284/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.938164514 seconds)
    (285/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.191648253 seconds)
    (286/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.04413205 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.979561803 seconds)
    (288/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.435880852 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.236304882 seconds)
    (290/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.871854553 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.01012871 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.193253004 seconds)
    (293/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.866853328 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.036658031 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.864095905 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.588540329 seconds)
    (297/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.023573679 seconds)
    (298/309) benchmarking ("sort", Int8, false)...
    done (took 4.83717773 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.900690779 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.957689964 seconds)
    (301/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.867143068 seconds)
    (302/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.888093009 seconds)
    (303/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.86576854 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.92984659 seconds)
    (305/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 5.076804023 seconds)
    (306/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.972211939 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.865003973 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.968649015 seconds)
    (309/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.96839632 seconds)
  done (took 1005.01956115 seconds)
done (took 1007.075472642 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.896686353 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.891546795 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.874774459 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.896116696 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.986237491 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.902659524 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.885656484 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.87636895 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.921770476 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.924370072 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.873106372 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.902328762 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.877397114 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.875060056 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.875104301 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.889357272 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.191450933 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.907694498 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.892111677 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.885001912 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.891730303 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.874458175 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.925418286 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.902595277 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.878946304 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.877739206 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.879248371 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.895321095 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.987838495 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.880401981 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.878586427 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.887074192 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.191820881 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.905019073 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.871198063 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.896995549 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.887265853 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.885565238 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.880187258 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.908483668 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.287450259 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.916807463 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.878187488 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.878188699 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.878211 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.880569236 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.878281394 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.883526242 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.892368906 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.891458214 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.283650562 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.933281761 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.880985122 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.879358551 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.889236619 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.877887741 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.880598561 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.89338284 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.897522288 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.894695776 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.183206966 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.91212352 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.879122283 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.896054109 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.886724812 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.320250275 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.916246108 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.882608983 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.286377374 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.924137011 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.31919171 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.926892617 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.87940793 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.892405577 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.911518905 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.194742557 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.902033901 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.877352956 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.88620283 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.87784 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.889645278 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.892441134 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.883889175 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.879711489 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.893419632 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.907765226 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.889393431 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.879733319 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.88769287 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.899600364 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.887236123 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.899109437 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.88343564 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.875046864 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.890499674 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.883756271 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.8823918 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.8908292 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.885127219 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.889352807 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.285548561 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.937295156 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.877669549 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.876225851 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.878769025 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.894963357 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.286094217 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.922079512 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.90156441 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.927663511 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.88279987 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.184905688 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.916466659 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.898429171 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.889745937 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.885396889 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.876833051 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.185417876 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.316712332 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.93597422 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.883544347 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.879915952 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.897463472 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.882906115 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.877833066 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.198183028 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.913042929 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894845403 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.002797913 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.891552646 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.914261175 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.88082736 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.884507445 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.911037409 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.897411635 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.913645405 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.884845145 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.897807937 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.897940475 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.878266398 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.892581224 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.892808513 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.884338666 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.888095639 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.87730941 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.912108367 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.896521515 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895434401 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.904013103 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.003821589 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.87978281 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.189154411 seconds)
done (took 295.474378877 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.951801192 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.873406826 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.979763131 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.878873139 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.961130761 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.966259314 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.876538343 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.87620466 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.876211826 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.2539699 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.878434282 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.878403485 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.87340574 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.877759999 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.962212036 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.880573301 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.877038524 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.218666532 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.883109015 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.950748226 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.879163306 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.878632365 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.880506766 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.251479405 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.876882548 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.878616071 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.953167791 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.880274627 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.217335795 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.876706277 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.882359762 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.217581792 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.97127144 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.898761024 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.8926357 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.888113687 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.964445835 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.885546904 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.962377154 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.962305107 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.981804005 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.923645477 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.880924153 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.875556255 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.885973544 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.882920007 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.880358745 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.908725664 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.878551251 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.880791211 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.219378344 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.891789441 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.8802643 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.879746336 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.879993412 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.91402713 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.879252714 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.8849485 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.973116982 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.884168086 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.944752091 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.254209182 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.255854734 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.883158304 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.878640264 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.880218704 seconds)
  done (took 185.045250001 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.949630704 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.954193848 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.949322519 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.887806819 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.931698546 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.95091615 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.887548768 seconds)
  done (took 15.321360828 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.890107839 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.884138685 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.935736105 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.936650315 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.883490794 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.033310404 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.883696641 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.895245831 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.882108906 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.935979347 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.885461212 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.885449503 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.89068716 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.883941753 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.9344869 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.895211633 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.002126233 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.885140242 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.885018517 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.035248385 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.881214345 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.891833128 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.93753411 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.895762965 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.886343272 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.891781045 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.469911781 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.885055314 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.881992233 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.884317727 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.881958503 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.926255046 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.885198608 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.881840971 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.882555697 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.000440676 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.885939276 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.884224023 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.886052221 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.88621271 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.885940283 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.886099393 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.886660577 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.882963394 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.887358238 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.908636766 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.88502233 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.88506025 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.885894533 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.886428432 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.936538748 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.886468439 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.883507388 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.883813697 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.941777227 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.893055534 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.886462549 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.884722933 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.886618611 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.884332485 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.038722781 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.935894064 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.887459516 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.93757482 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.886223076 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.886860972 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.887779891 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.886856171 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.984562439 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.887304691 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.936984205 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.883226875 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.045503263 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.911567072 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.888060081 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.890069292 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.890334316 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.887323421 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.889747966 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.89540391 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.885526973 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.889036338 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.893486234 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.885623332 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.885133804 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.998803933 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.995530185 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.884597613 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.900694921 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.895564497 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.88447722 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.941676716 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.887985718 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.885570601 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.946070083 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.007339612 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.943169906 seconds)
  done (took 207.459258439 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.893482225 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.896438414 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.890078429 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.904987774 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.889819054 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.88813215 seconds)
  done (took 13.177906262 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.891309296 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.888932312 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.890665004 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.888095613 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.888916979 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.889749036 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.889987946 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.891341071 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.893949836 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.888123959 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.889021798 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.890167434 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.889807755 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.889140105 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.890552904 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.889828106 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.890384607 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.886242168 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.890395084 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.890013494 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.038133319 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.889576788 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.889990476 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.892340444 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.894899159 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.889193519 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.897434169 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.889176919 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.891875531 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.898941365 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.894732186 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.892622032 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.891135139 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.895533948 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.895359076 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.891584223 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893523082 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.892192988 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.88791987 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.892397054 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.892170071 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.890655226 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.890880124 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.892694011 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.893923398 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.896028487 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.896675195 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.899315559 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.892344003 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.894209078 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.892146733 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.891422565 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.891703536 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.892912554 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.895560597 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.896832453 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.896416145 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.891623757 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.891434821 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.892031693 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.894164973 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.891871401 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.894144978 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.896013756 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.898734391 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.895185507 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.893047349 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.896278706 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.892559678 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.892499451 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.895727149 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.88886081 seconds)
  done (took 139.213546223 seconds)
done (took 562.041699144 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.02516345 seconds)
  done (took 8.843959182 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.925825126 seconds)
  done (took 8.787768063 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.338829037 seconds)
  done (took 10.160085702 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.931877594 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.901258987 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.897574582 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.890721514 seconds)
  done (took 29.468344255 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.969941751 seconds)
  done (took 8.788820233 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.910609342 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.886970207 seconds)
  done (took 15.654665691 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.021235846 seconds)
  done (took 8.841911906 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.999544821 seconds)
  done (took 8.854193756 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.899227898 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.927684995 seconds)
  done (took 15.660123786 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.871336146 seconds)
  done (took 8.691136153 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.456323779 seconds)
  done (took 11.370097933 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.903933583 seconds)
  done (took 8.826245437 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.933343844 seconds)
  done (took 8.754834788 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.895620574 seconds)
  done (took 8.715236561 seconds)
done (took 163.236447822 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.892258063 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.885902598 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.885922751 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.887011009 seconds)
  done (took 29.371283679 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.928560183 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.925540622 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.927793394 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.937868533 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.929493492 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.929592915 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.919220943 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.919000513 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.93864504 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.930049469 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.929995222 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.930744296 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.927561048 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.919589414 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.932800336 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.929761706 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.939142998 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.929504727 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.920422061 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.93215982 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.896926552 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.940040706 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.931530235 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.897046228 seconds)
  done (took 48.063867597 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.094547631 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.969506917 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.048282865 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.94663865 seconds)
  done (took 9.880350123 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.946442994 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.948823964 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.959917756 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.998379021 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.029939379 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.957825272 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.924230199 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.916783981 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.90292133 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.948388115 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.022846449 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.94502398 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.033796834 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.895418468 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.086669781 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.896660948 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.895107901 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.949046448 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.998815071 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.011352258 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.895281545 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.949796274 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.951830047 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.943775622 seconds)
  done (took 48.832711013 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.893676127 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.902612034 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.902439783 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.894967782 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.895336735 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.896006408 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.901491949 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.895625309 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.916684436 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.89654741 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.895926109 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.894611086 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.895090175 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.895750411 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.895803842 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.907666683 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.90892012 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.895857485 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.899280264 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.901796911 seconds)
  done (took 39.809776394 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.893534003 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.744244438 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.24306497 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.145509139 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.891236673 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.891022389 seconds)
  done (took 31.633095387 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.910513138 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.903047674 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.896583047 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.953655996 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.035885065 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.905900179 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.897695949 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.909397121 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.944770976 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.962965295 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.917741713 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.926831783 seconds)
  done (took 24.991052367 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.892360853 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.893647682 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.90564575 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.90977321 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.908840224 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.904946734 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.905085635 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.891471396 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.912394485 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.917344937 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.905651727 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.909903735 seconds)
  done (took 44.684849292 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981680329 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.785423186 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.941491155 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686396477 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.43071254 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10401571 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.512077233 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.238831817 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.896970398 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16563815 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.843881563 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133836586 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.147374301 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959695984 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.894001102 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.337007518 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190439727 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117552803 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922720835 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.600787009 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00969748 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.427847106 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.635206603 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.016038265 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105541505 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.027919425 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.154069825 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.859297724 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024993398 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932178595 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904223026 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.893878069 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168624157 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267428933 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010615217 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904283009 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.54839269 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.616008332 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.881782229 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.59056139 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.674861561 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.023146493 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903841401 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89497879 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.82906511 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415711749 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248215924 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.901722599 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.596941403 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895784295 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906176126 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985389242 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.899536726 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.711407253 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849353767 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.178750012 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.893601563 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902171472 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.46291087 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.922752981 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.523029873 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.845312247 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.988908711 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.518984652 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35515364 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.046793224 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.899242486 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.898939299 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830547108 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.592696553 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015115507 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.041889578 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.91626304 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545263592 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187888549 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.900361627 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.975276463 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182002818 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.779055633 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.845438359 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127177384 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.854625032 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832194378 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.75894692 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.831590115 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158300211 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936939109 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.522077734 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938174459 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.239299363 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.910986387 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919802117 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904869003 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122351345 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.781311901 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898831724 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.58773535 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.178149735 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920387089 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.236428985 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834424295 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.902440707 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153303887 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.11099402 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.138075366 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.355863353 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054924235 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90024094 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.991352804 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.836193783 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.922930833 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.168935829 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959547608 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.926952586 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026460188 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.85864569 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200829495 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929215443 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.077447935 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.836576892 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159831863 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.214538691 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.154723654 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982968436 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.904846461 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.899294689 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.553070644 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.522645389 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.126468068 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.901488263 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403390567 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922900674 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.901315728 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835837793 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.527982842 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.048345302 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.004033674 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.125316466 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.871567524 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187751464 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834996409 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047327431 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.017891281 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.124237195 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.543323476 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.976397462 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162822414 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409250597 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.156218814 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924429247 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920544543 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993811088 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923913056 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.348577378 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.168990207 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.905954973 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.906244751 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.603810673 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.961985158 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909635175 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.907065362 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.728590859 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181477894 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.927778908 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.909178886 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.79490475 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.916823444 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970775261 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.907543531 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.913710772 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.406263493 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.654629016 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.917506799 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.573021907 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128090259 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913637433 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.626143222 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090893999 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.987520081 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.178919528 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961415455 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.837813538 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.604913644 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.606279341 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903633007 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.839347912 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.903949512 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913589736 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913705673 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.102984072 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.177176196 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945802489 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.600227357 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.014187084 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915690969 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.909368933 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905592407 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.398306601 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936795692 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.546844697 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.926946613 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042032649 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.918532691 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.840559529 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.908624959 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909802226 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.90453266 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.870407642 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95783334 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.527376481 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354381279 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166367607 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.554599072 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924730939 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.62859539 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.030710566 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.928807194 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.573933099 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.993106625 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.915716884 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996701852 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.916515978 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.611766156 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.671432207 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.471955452 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207921705 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.209366311 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.338434756 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.404707856 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.138282458 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.244105467 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144119711 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.436459624 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.96681036 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.253953887 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851203825 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991943264 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.552039207 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257915271 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922230537 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134030911 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288765119 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.646276275 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062399068 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118610324 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941372353 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.831550207 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846857383 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.193508089 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062014441 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.578914985 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133367534 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245599828 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.609106534 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.020805327 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.906856917 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.595755723 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991159851 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.620358931 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.27039629 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.447694347 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.872532872 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396137073 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.91863786 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.354176681 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25744244 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.242679582 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.005732958 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845175601 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.920305688 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.91932986 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.908062181 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.888029669 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.757277064 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.161518497 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919402759 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.143904874 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.181599369 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175903032 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.811176571 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.914872108 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909047983 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208685192 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.715504034 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050701344 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.368648582 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.389374169 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.92060936 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843168263 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843357386 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.612499345 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.909918043 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.886371711 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127209272 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.036854424 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.863224385 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418858389 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129526635 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.166729715 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.923007654 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.179677449 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185313157 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.650250184 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941625582 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.010635784 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.6075928 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.609405742 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.133347089 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145644953 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710392059 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.143542367 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.957053507 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.874695334 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.909956891 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127407021 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.135802135 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.858872641 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154547705 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.635506682 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.917752541 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292935987 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968406164 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.836112084 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.122653929 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.005724874 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922848829 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994155934 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921293251 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.922773622 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.92297353 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958940592 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.833212726 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.040539282 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.927282075 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00421529 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.947979502 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.491369778 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.922868765 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185691848 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259943858 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.235497173 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970025766 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.913146807 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915583443 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84672336 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051923774 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.362514467 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187046473 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.043605942 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.096085697 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939200366 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.598202216 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.317866568 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130918433 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188269333 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.810656503 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913450421 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.028473462 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.137942185 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924585444 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.125049278 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13905229 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228644118 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388457339 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.166911343 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.255410938 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18981495 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.287763202 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914172512 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508133071 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.923095189 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.688803116 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.953760906 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.863107523 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196397239 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925363461 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289494311 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.939108276 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.11421499 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.431453154 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.618375525 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275066486 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.911476178 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.974238268 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186379331 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.294606338 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227367816 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982753965 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926254635 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.613833418 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053382767 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.786786643 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.138396117 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916053012 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127459573 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.627645612 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.926458573 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190722134 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2253083 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.914136504 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.807747868 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94846358 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.926916685 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.140568794 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178045316 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.171777309 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927516611 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.917218141 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.732553139 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190164447 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.972673653 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850935864 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.921044641 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014269603 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.163835344 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936103681 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.433358212 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.620045234 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212810294 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.8379419 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940180085 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441725978 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251683886 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241043763 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.43631872 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142763408 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.47772931 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.899081096 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194328466 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.923866733 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435796448 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19547966 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.922297916 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.590868427 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929359457 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.18749376 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.239109985 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.93422791 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.630115012 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.95857261 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142541035 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.514715808 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867020694 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925140189 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.979017072 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.921668325 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.051030893 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930132886 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.839734387 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768682625 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.776478097 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.412636815 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.925650979 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.909978965 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.65099901 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.471403659 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047049331 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074869477 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923759938 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.636425456 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.212734628 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.175732557 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.428613598 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.99350476 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.923228714 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919484813 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.848135066 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.118713153 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.119661827 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217910167 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.267587852 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.033847312 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.923795412 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.137225647 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13253492 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.856328716 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074849134 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302169623 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036606917 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.840596346 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.633898899 seconds)
  done (took 1702.404853578 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.935661573 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.965871135 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.945737017 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.025028895 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.97595337 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.967191073 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.057675814 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.983959164 seconds)
  done (took 57.711252618 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.920784129 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.126009513 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.93094079 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.921486012 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.939693692 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.923098422 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.139799189 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.932895377 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.984571399 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.93239678 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.922482426 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.946160994 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.291374085 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.948267795 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.921501534 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.929795525 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.957996245 seconds)
  done (took 75.59781542 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.923501683 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.101740549 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.961746 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.93954395 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.808491816 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.936777183 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.917955314 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.939979312 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.927655678 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.087850729 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.264170254 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.979359759 seconds)
  done (took 90.644453149 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.939074537 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.92951331 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.929787225 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.929383126 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.93022693 seconds)
  done (took 11.520516842 seconds)
done (took 2216.992630973 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.172293597 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.151301474 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.152208364 seconds)
  done (took 6.158892637 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.071712608 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.120588003 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.239876035 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.245491218 seconds)
  done (took 10.536053007 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.211232468 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.29906521 seconds)
  done (took 6.364882785 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.249997773 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.938987779 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.305472862 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.923701053 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.924746303 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.926261165 seconds)
  done (took 22.63381579 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.926409536 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.92976237 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.926704399 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.930699124 seconds)
  done (took 9.56944933 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.906500441 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.64238584 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.907744497 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.919670689 seconds)
  done (took 21.232428359 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.67490399 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.324972948 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.669915872 seconds)
  done (took 9.525049907 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.614188059 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.59878935 seconds)
  done (took 10.068755983 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.191171625 seconds)
  done (took 4.047346719 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.956837267 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.19938446 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.474689783 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.490312552 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.592035743 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.156649772 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.281637479 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.165815115 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.378170666 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.412077495 seconds)
  done (took 25.964546298 seconds)
done (took 141.622725641 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.579258915 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.951761888 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.126257582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.319748541 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.167109468 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.127192554 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.146282137 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.338107686 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.86115918 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.876971223 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.329806046 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.166497263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.091281092 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.945727252 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.097524344 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.944364836 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.161313419 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.384279789 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.019936524 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.222504705 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.157645217 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.942135534 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.136749674 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.958840926 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.16401529 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.082367244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.487457778 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.948965244 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.157408834 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.499875957 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.085562602 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.359584791 seconds)
  done (took 170.695471532 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.928694782 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.928649425 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.928092762 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.930549685 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.239082968 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.929163085 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.930826545 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.927496712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.993194446 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.967136895 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.929598482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.22577428 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.931271649 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.9287654 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.929682437 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.92806031 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.137947779 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.929007733 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.930963992 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.928655034 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.930324673 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.070406085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.929272705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.081174808 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.103118595 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.929881816 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.929604438 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.93075015 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.928885808 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.928356329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.931666063 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.935736991 seconds)
  done (took 208.993615948 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.928543174 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.930856821 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.930205408 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.930095022 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.937031401 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.928786919 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.933647468 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.929450203 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.413053061 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.411653368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.931745483 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.931672356 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.931407375 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931172566 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.93328339 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.930283518 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.930394405 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.92958234 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.931712601 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.93208662 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.933806957 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.58217577 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.935178995 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.603108179 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.937570565 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.94499681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.931238415 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.943847737 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.952728773 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.948777895 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.953665215 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.931052062 seconds)
  done (took 222.047025292 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.125642307 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.936477776 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.938264875 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.930586134 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.941089945 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.937655301 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.943425088 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.120094832 seconds)
  done (took 19.761739828 seconds)
done (took 623.362379108 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.434929599 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.277405814 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.122446964 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.964210556 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.215839233 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.999690489 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.960017417 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.028676814 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.687159417 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.03484852 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.649010577 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.982014979 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.743697119 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.988301886 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.080449903 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.01701168 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.555351632 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.647970398 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.138498828 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.040170508 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.137146732 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.901050185 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.042134146 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.725277925 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.769278499 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.952811898 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.126646564 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.569842187 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.97325402 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.121702948 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.743093601 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.356993919 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.97320925 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.962303737 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.017299994 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.996318199 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.309968155 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.972787084 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.088481113 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.703170851 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.041247928 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.569623106 seconds)
  done (took 106.485636577 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.928863947 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.926849961 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.925801416 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.927171533 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.927123549 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.928170001 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.925730798 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.925548189 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.927074514 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.926846479 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.926090672 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.928197735 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.926887008 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.928546267 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.9262796 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.926206402 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.927064651 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.92875188 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.926550854 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.926162534 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.928611664 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.928032689 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.942512262 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.927555289 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.927448451 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.927967055 seconds)
  done (took 52.000237897 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.94117853 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.096273261 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.182879159 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.964047593 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.941724882 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.948314383 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.962175664 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.946919124 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.943159823 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.945434822 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.054462767 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.949382549 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.962667187 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.1833777 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.960878504 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.942760442 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.943044439 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.943207328 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.104784798 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.960742528 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.963424592 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.947964411 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.963309479 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.957261193 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.945291586 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.943362944 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.947962272 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.446079613 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.954306312 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.051657279 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.004389838 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.972052982 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.363523583 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.193559165 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.001688017 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.954601296 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.944246659 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.053555533 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.950335784 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.945858995 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.963507351 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.948283352 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.181010177 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.440390514 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.959832605 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.944339342 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.456397651 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.064245652 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.994412552 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.958875748 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.182615125 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.963548576 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.945179572 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.945349732 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.983457038 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.950419652 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.944559468 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.300348637 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.958633358 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.967083986 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.950580188 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.945550982 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.109551142 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.95420827 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.1027611 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.95560874 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.952115875 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.946930724 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.186554481 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.965607968 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.434292081 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.961945122 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.946044143 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.051934706 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.110579157 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.486733148 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.959081841 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.109924587 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.380223456 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.97194532 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.952659988 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.436386061 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.976160875 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.959115614 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.947738792 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.947788308 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.94632306 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.992407142 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.965332366 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.380224297 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.443075481 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.320882679 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.975301452 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.962956244 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.947296239 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.300924054 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.95733342 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.946900786 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.17849265 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.451931332 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.962505606 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.95483432 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.431351843 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.96504063 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.967509233 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.957510847 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.188182696 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.965599409 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.994624469 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.947318541 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.954575404 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.94977953 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.96764972 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.955639202 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.947440544 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.423654075 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.077122464 seconds)
  done (took 241.386913664 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.944084835 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.972387673 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.94188849 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.974469786 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.942073236 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.947590398 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.940938456 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.94182179 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.947639195 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.941326981 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.942318257 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.94120485 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.943790442 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.953575314 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.058259683 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.950504546 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.552193576 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.942720979 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.943165771 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.946603718 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.693531481 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.950399571 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.943465413 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.954756654 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.943514316 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.942079332 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.951445917 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.046768623 seconds)
  done (took 169.971692764 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.94970599 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.067328785 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.969335855 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.978768378 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.959023579 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.947743818 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.97299138 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.966204076 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.954748903 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.947308725 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.947799953 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.011108523 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.960951386 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.049711572 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.983264475 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.980571689 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.055047734 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.958550558 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.94809246 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.94837477 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.980129156 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.946650109 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.011640445 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.078877078 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.96956736 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.068807972 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.956968867 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.952058189 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.951391983 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.072069935 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.96630117 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.012147397 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.979996132 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.968899432 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.076210878 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.068310531 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.061321315 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.981156098 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.956263891 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.951959755 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.949092975 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.937832243 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.070021865 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.969910944 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.955532184 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.059598228 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.971101631 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.952012093 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.960348037 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.953149346 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.965132081 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.969719321 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.019722648 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.087238713 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.988991956 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.976528565 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.976118736 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.230738275 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.961899739 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.053916581 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.947476342 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.070780103 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.972843674 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.938485015 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.95373345 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.957280109 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.981829457 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.983384431 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.057416311 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.961583314 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.052246652 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.987912768 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.959262328 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.951262161 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.955381575 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.072742388 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.075472484 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.991138049 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.991828273 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.985268054 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.947816389 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.953597071 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.939603965 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.970743369 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.956078329 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.069907069 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.071920034 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.961492058 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.953917489 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.954700165 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.955463531 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.978301349 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.080608626 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.991679046 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.050450467 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.024981844 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.033899396 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.970611366 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.967249213 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.956855928 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.017541687 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.971990443 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.965334253 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.278662961 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.027416088 seconds)
  done (took 211.35567245 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.431112243 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.009029928 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.012184672 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.283004967 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.392705116 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.810626352 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.005107544 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.002613308 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.026938072 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.194041276 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.077228302 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.022309269 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.991051357 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.977816842 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.001196895 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.027319323 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.015159558 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.339615568 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.125626875 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.071650661 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.986257164 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.277315091 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.328746703 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.406688155 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.040031074 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.34442144 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.678286434 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.14654045 seconds)
  done (took 63.912546639 seconds)
done (took 846.97547898 seconds)
SAVING RESULT...
DONE!
