cset: moving following pidspec: 30938
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.345193519 seconds)
loading group "string"... done (took 0.539930733 seconds)
loading group "linalg"... done (took 7.178531141 seconds)
loading group "parallel"... done (took 0.159076095 seconds)
loading group "find"... done (took 1.081998052 seconds)
loading group "tuple"... done (took 1.680427332 seconds)
loading group "dates"... done (took 1.172428824 seconds)
loading group "micro"... done (took 0.223658313 seconds)
loading group "io"... done (took 0.984171939 seconds)
loading group "scalar"... done (took 36.362252393 seconds)
loading group "sparse"... done (took 10.907909549 seconds)
loading group "broadcast"... done (took 0.915689023 seconds)
loading group "union"... done (took 11.800845169 seconds)
loading group "simd"... done (took 4.132512256 seconds)
loading group "random"... done (took 8.472353083 seconds)
loading group "problem"... done (took 1.859771033 seconds)
loading group "array"... done (took 19.759351459 seconds)
loading group "misc"... done (took 1.663666681 seconds)
loading group "sort"... done (took 3.129490724 seconds)
loading group "collection"... done (took 16.480634931 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.481469593 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121710255 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113841661 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11836684 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.139371308 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114431694 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122217046 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083078587 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.786564747 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143623284 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119104176 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410405767 seconds)
done (took 4.939441613 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173752004 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082412893 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081535064 seconds)
  done (took 1.308628747 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064954436 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120050397 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06614628 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066157164 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066446697 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065960498 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065263551 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065233924 seconds)
  done (took 1.659817408 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071703094 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068714148 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068175227 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067548047 seconds)
  done (took 1.421419857 seconds)
done (took 5.781154927 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.763338112 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200816821 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182115739 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.394337869 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125984922 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152678786 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.653313565 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.309140889 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.184862795 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080560011 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102463174 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.314879517 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106737806 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.63141677 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078852428 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089052541 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138532929 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.415838166 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066542011 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081357374 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088379947 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127475207 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086333073 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073787125 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143291982 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067247068 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129254179 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079979797 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066114457 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205519664 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171543676 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.649347661 seconds)
  done (took 10.143161552 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096441955 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096391459 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067513561 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136009126 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098023003 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070160147 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070359847 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066897823 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085756102 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126813318 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088560955 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100699534 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065015859 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067976653 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083598678 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204343017 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082243517 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082467182 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069690877 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074879452 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115393758 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077260755 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077233143 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076602508 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127848677 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179109574 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.0957248 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096718091 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068568749 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079643477 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114389096 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126562462 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067291665 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065570038 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123346601 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094716001 seconds)
  done (took 4.599771841 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.937466315 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138354999 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089910269 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165963285 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066891076 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105663399 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064873981 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083105501 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.198107885 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.361467711 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.568261028 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110515139 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100150983 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06756585 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067690657 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082694157 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065351984 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.342705498 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.120786533 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112166042 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083177293 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073064973 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068030488 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.344932492 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067914793 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065717941 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06795177 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057521075 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111730726 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06762218 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.909159796 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123117396 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065636658 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099494367 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167583591 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088991918 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.264748941 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066143471 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065604501 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149403084 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073483423 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065759545 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082783207 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102852193 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111756866 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068334291 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067309988 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160069752 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06592897 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082796935 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.013395791 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152224749 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078239163 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066618475 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244814377 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085060349 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067595643 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064995264 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.173052432 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.1322727 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067053315 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066406402 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065128051 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068872418 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364623749 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068671084 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.970285211 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069779711 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076509691 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068796303 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065725288 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071851278 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071427994 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084605586 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065203214 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074286794 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065129568 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065458086 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067735965 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083370158 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.35749164 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065787054 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067623795 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064160252 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08514824 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0959926 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068361341 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064896682 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099321247 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071753879 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066699808 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.167332359 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101858254 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066837849 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090344056 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083934167 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068840836 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112933703 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067762188 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063834996 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.082484672 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064964147 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096143456 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069358848 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098283315 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080021859 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067493084 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.39846403 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064680116 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064616307 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06783523 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067189645 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067191537 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068457681 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078584351 seconds)
  done (took 21.160794647 seconds)
done (took 37.985967748 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.274811221 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074033513 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074296484 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074068362 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074225149 seconds)
  done (took 1.804408429 seconds)
done (took 3.020286608 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119724482 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097886794 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063625476 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094227099 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063622003 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098899062 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098213421 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080219755 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098649473 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063501456 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094951544 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063970294 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063651742 seconds)
  done (took 2.335393482 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08290947 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08278412 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069856422 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082138407 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06328587 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08100778 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079879469 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087711789 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079936724 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0721491 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062940781 seconds)
  done (took 2.053625482 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081472031 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083392569 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068864447 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080202934 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063118966 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08028352 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080008329 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084488595 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080608244 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0725223 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063452316 seconds)
  done (took 2.043582602 seconds)
done (took 7.636366922 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07632666 seconds)
  done (took 1.273701423 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.582937276 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.107863938 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081047513 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111203227 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182282909 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118313151 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275309379 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08603751 seconds)
  done (took 8.921884271 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088713363 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06857276 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081388161 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067369685 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068041785 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071511691 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070812479 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071275856 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071527511 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069864324 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070150152 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068927779 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06847769 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067987121 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067539232 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070978617 seconds)
  done (took 2.4106619 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090936538 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090131934 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072973499 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073968563 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071122782 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071705664 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07362387 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07278112 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07001916 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071206489 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074279057 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073086393 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070891213 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064411587 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07327181 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074732751 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070108226 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073488609 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073957929 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074494097 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074225475 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063844132 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070758331 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072922153 seconds)
  done (took 3.066766482 seconds)
done (took 16.878403524 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110752513 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070841575 seconds)
  done (took 1.385145284 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080237301 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081978348 seconds)
  done (took 1.373012958 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081669991 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064855515 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088555828 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076521664 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065770547 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065008967 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086024707 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065421646 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065266954 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065570013 seconds)
  done (took 1.936523212 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068199129 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077029827 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069968719 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08039952 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072847414 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063619295 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072368967 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067253162 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076645322 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062203542 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070610965 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081061596 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070057982 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083210031 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071324893 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067243665 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069531167 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06644277 seconds)
  done (took 2.506512647 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065115883 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066799257 seconds)
  done (took 1.351173909 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066098286 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063217486 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066138317 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066225697 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062937962 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061991589 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062732764 seconds)
  done (took 1.664442543 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.380777432 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11054607 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.2921849 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069806022 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08086087 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247150066 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064641301 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069828779 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069929207 seconds)
  done (took 2.643452801 seconds)
done (took 14.078203608 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078698687 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084538197 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093774997 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.342072336 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090966269 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065516616 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112959251 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188141131 seconds)
done (took 2.284275423 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210352399 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.607614752 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.378538648 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193506788 seconds)
  done (took 2.398891933 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322501535 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085429725 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059079473 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065734218 seconds)
  done (took 1.760582485 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065073638 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068962984 seconds)
  done (took 1.361402842 seconds)
done (took 6.959565192 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065816601 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081672341 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064947459 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06324021 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065283319 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064961118 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062967483 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062595024 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064787071 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065670231 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065845123 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065095463 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065072353 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064756426 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062726697 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062968917 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065447536 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063121655 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065092719 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065786525 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062705893 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065230411 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062993335 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063728156 seconds)
  done (took 2.822826795 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082638809 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066198199 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070168176 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070431578 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06936197 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070687739 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070571738 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06516564 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070988333 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067602584 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06908987 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068885579 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067537988 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069140284 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067301224 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069446463 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070814906 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06725273 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067324721 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06930845 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07015988 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065814854 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069038161 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069858153 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069229834 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068754872 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067463403 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065950084 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070486675 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068859655 seconds)
  done (took 3.310741254 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069391359 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062788474 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063577433 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070556335 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062808114 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064620393 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062973253 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06342661 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06364603 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063079125 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064542567 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062478647 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063014007 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064017885 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063564129 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066699082 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078138314 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063290556 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063218817 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063401171 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066647854 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063068015 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063387296 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062471938 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06307459 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06293011 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06370026 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062731187 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063791441 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062801561 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065894909 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066560548 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062627776 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06973481 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066533599 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062805638 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066873901 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062515334 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06329798 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062310158 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062498208 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062841432 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062669755 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069857926 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062996728 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064149543 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.0628011 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.17572045 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063322889 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065493583 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062409437 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062867854 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064608852 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064191842 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066705824 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062403758 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064121949 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062412056 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063706392 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062400024 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062306954 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061912505 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064919199 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06310676 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07762141 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069169525 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062314766 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064664431 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063939062 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064742968 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064058087 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075228197 seconds)
  done (took 6.002516719 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089610783 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086239195 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064747323 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064242395 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061195843 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06333063 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066593595 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063923212 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065170453 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068927311 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063768218 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064367203 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064382341 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076038012 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064386404 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064536751 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06884952 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06098547 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062904369 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066504003 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063604116 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066506854 seconds)
  done (took 2.728327237 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152550569 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069662847 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104508391 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072071669 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066526973 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07222875 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069083814 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06933602 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06925658 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067849134 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067304189 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06904715 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066553372 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067206508 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067303249 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067049204 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069192851 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067614939 seconds)
  done (took 2.595845753 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076028528 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065264514 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085758705 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065590465 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06542378 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067575097 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069828265 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07329531 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06762796 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065356422 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07344348 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067532017 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067850229 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065308263 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067487799 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065066431 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067436939 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065729874 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07329332 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069932756 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069768113 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073093616 seconds)
  done (took 2.771044378 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07858779 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067369875 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081430426 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068047855 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061368814 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063750189 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06957941 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065125229 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069434302 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066941028 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065108984 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063785105 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068768747 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065658701 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068430346 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065170799 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066623096 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064971308 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066730219 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061249183 seconds)
  done (took 2.592416256 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085793549 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067068678 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067841977 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075324536 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067182379 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066680142 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074258569 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066810608 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066396901 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085894962 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066555328 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066420291 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073806515 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071260159 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066388026 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07393877 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073964841 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073720019 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066496632 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066555515 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086720139 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066819597 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074426579 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066560829 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066972025 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066710611 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066781256 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071242393 seconds)
  done (took 3.234471595 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065893417 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065007115 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063070217 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06261872 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062610419 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063057498 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062649588 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062670817 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065507075 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062655883 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065217387 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065365517 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064817465 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065043317 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065531739 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065284371 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06536994 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062934817 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062683529 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062580069 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065028894 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065752442 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065279155 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062758287 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062671234 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065757067 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062456088 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062683703 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064810721 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062852162 seconds)
  done (took 3.169508404 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074353996 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072568582 seconds)
  done (took 1.397124553 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062165879 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07884782 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063127486 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068306319 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068677745 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066082848 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072599489 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069084751 seconds)
  done (took 1.79492833 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080546801 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076724403 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066943733 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079273579 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075788214 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082290808 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130247731 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066043444 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072136332 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063812848 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078925925 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064836127 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071936703 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066091291 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07103525 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071557416 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063425039 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071385764 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067807836 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063997876 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066712194 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074533498 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06774399 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061059694 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066529406 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086697937 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076167459 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065424385 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068463865 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072615699 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070746326 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059461852 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065270306 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065727179 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063564208 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074887332 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080532966 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068436661 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.07425991 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066517685 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075825019 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060863022 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069975051 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072270761 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07518213 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065908938 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066151187 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060901513 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063183815 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067562139 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060904848 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065460491 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060145835 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074695522 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068634335 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076015905 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064441749 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066969679 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067981286 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068409543 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071866268 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067436301 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06769554 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065185271 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071739046 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069750336 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074302407 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060503312 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059713114 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063691793 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07478875 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08804834 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071702072 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066181777 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066765542 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063766517 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069000143 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067063272 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071168885 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071604755 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066112383 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070471539 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072987852 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066043994 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067605947 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073448395 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063592059 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068290682 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063464636 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081396043 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064011099 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063626034 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063956182 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075791379 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068710741 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065151229 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06333123 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072060311 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059713699 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066285781 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066455679 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066436248 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074856826 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068490184 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068723799 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072765087 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072052507 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065069837 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067153454 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061188547 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065458894 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063448237 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071240315 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058833618 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06729057 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065553425 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064454067 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197545754 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064889666 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065791859 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073986787 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07179102 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064582127 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063485312 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069128369 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065743401 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06932579 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074492275 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065336076 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061759881 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060850728 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069206754 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06574246 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069460035 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070210972 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068970972 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060773548 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063951999 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071738896 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075040605 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066267386 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066702685 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071720671 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067743566 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065466329 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073156507 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068867916 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064889569 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070855415 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067218149 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061401303 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068554181 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068939085 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065621901 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069707269 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06965149 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068373327 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066251022 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064563027 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073208955 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067048116 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065079044 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065956933 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06471336 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076275736 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067593826 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060817047 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062810936 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075003924 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064057325 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065264615 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065170109 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068028068 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066064867 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064387606 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065162386 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068300095 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076417303 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070281447 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0667958 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.0707602 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076780957 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066253629 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067470494 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065632542 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066462352 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066341141 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074399195 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070993427 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069784797 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068137975 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062276891 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070544767 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073093701 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065241493 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063479314 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064603134 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069539976 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071551742 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069552188 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066569683 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064012365 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066149885 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068594377 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068542628 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065480481 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065044397 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07210576 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064155733 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072703831 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066645999 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076303657 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069039253 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061183902 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069397944 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064536236 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07163392 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061244381 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063586493 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064827103 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066596738 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064885477 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068360057 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060573336 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072886655 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072903104 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064971262 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064172145 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064126066 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071160251 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066268251 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068387053 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068271504 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070657211 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074696161 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064217029 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06784474 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074305223 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064398919 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.188449794 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072490882 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065807153 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066362853 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065620661 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064488377 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069772 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075797975 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073170916 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060069202 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069456977 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064680628 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065691452 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062543653 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070928228 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068990045 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066555541 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073048377 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067477593 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067205051 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070776694 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06626233 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067650584 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067590589 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069352661 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066995549 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068577544 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066006888 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069503869 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066543055 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064473937 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068042828 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065599262 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066862574 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071720641 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066425096 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066471869 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068831855 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066838046 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067272234 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066491265 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065267504 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069689259 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066869674 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066508545 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068590085 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061035956 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073221993 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065585918 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074239084 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066873021 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063017795 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073050543 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068910543 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072110951 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066716675 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066743068 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067106755 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066317326 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069440529 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071988656 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063713031 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076914972 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074543498 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067483215 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069244339 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066361423 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068113955 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064837953 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067556806 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067242352 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06641892 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066035341 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070536146 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067910601 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065607054 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067133108 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066237835 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065741541 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066346339 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060156286 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064636417 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064886193 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065186952 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074670546 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066037678 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065352479 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064491923 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066021711 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064952278 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062295554 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073593247 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074711589 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066212499 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073054426 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065292589 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067420092 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076640954 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060398785 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063854819 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06346642 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063411777 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072805798 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066662997 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074382389 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065359118 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064945456 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062821705 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066000242 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064136073 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059877393 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062753821 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068002006 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.0636689 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063253509 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06446214 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066788185 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065235153 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073128073 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063322576 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06512896 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06476542 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061975246 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063383923 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063525991 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.199644314 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06752799 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06472898 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064240886 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065464727 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067263458 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067540013 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065926118 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067709377 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075737204 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065756002 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069325401 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069971609 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061088388 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069046752 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065713784 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065994751 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065454924 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070289914 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069489335 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067223248 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074930055 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066072619 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067422677 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066311238 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064584914 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066002945 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066369812 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066814245 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065427683 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067294198 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073251306 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06397941 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069167294 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06658404 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066779593 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072756215 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067185217 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068524306 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07292243 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066223355 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067902213 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074136902 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071572637 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06959289 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067585278 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067950922 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072655741 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065500891 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072849216 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066827199 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067544212 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068418734 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063585936 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066581334 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065697975 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065506652 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072835423 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066870066 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065334611 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065298759 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063956061 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067036121 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069786283 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073777525 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068116399 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069523653 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061242712 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063595499 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066902565 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064053835 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067999267 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068293173 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071395873 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068241239 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066531835 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064949856 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074072715 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0711262 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069431349 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063868707 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069284037 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066178096 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067653281 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066535937 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06577111 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067155537 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.06918998 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067192465 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064855337 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072409719 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068832002 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066626004 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067312893 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066648956 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066150674 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060897472 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066484634 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067822882 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070705758 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067566226 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065723784 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076039267 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06362347 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066190535 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069228181 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064974773 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070114173 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060974555 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067078486 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066057467 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066085725 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060278544 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064329858 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062754924 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066917325 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063993913 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059942081 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074238988 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072918039 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067038649 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063862534 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063331162 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059968111 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059711585 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.195489909 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067609255 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068444526 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076484982 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064987304 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065732921 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061637696 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066461046 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069669849 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069761206 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063431712 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061660177 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065537115 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068793612 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071984078 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065078158 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06595845 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069001472 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068284516 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064042053 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069562014 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063503529 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069683953 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078325417 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066670705 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066991527 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072310522 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073812999 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066987815 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.0619759 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067100129 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068626084 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066810024 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067337706 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066610234 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080351327 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069478158 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065710293 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065094893 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069224178 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065340849 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074135915 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067140107 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066869332 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071263778 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068089274 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07561656 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069049529 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073618563 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069671417 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069997706 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065439448 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066436682 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064579502 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064739604 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066804266 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066732614 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071184216 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074001391 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065775373 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076747941 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07463048 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067973092 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063456621 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065716627 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065107591 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061414663 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066750888 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064248481 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063568396 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063922823 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064955258 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067505774 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070941964 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066731991 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06668941 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.0654593 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060287508 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067549324 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067841758 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066365359 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06240641 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065364256 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06589994 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070284252 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068413064 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063680503 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066954418 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067648115 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066001371 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061139621 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071792354 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064447692 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067342849 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064895191 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065779124 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06623757 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06904304 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070305073 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066502553 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067817135 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069287516 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06771311 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063134942 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06300923 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071541912 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063756459 seconds)
  done (took 42.189541538 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099164654 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063040121 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061512343 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06134798 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072794131 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062662469 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061315673 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063073983 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062626123 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06451828 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061491484 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061237116 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069756502 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076766846 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072741997 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065903258 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061310275 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061912081 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061513785 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062114392 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070420917 seconds)
  done (took 2.744764786 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072187528 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069079775 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071012437 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075114213 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066213376 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069526151 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071984652 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069535152 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074636041 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066165264 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074683654 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070246727 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.065946592 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06651681 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075043793 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070135764 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074844446 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066735076 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069505635 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071492101 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069973154 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072151078 seconds)
  done (took 2.877542465 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066142156 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064739651 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066537247 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060987736 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065587258 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06120001 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06832164 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063394473 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068948099 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064220554 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064353025 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064166457 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06680454 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060883313 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065125086 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063652826 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106547484 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068169301 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064836396 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065870987 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060846651 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067131251 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060785769 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061126799 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06436531 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068446247 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065815499 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063402073 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064758733 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064018387 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06464316 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062862294 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06691918 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065784654 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064004366 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064207534 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064723022 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064762913 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060762141 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063376116 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065166359 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061004969 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065794338 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066213197 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062842258 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063170487 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066369108 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064553283 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060531589 seconds)
  done (took 4.526356122 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080270782 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107538939 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067319967 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08724926 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079117404 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074573081 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068682993 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088451965 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063025381 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063432445 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080425521 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078582831 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064820308 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069496514 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071456026 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064928879 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.0657245 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063929029 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068824691 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064284111 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069134472 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070968732 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078679668 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077739366 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06834245 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063965391 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064069943 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068897679 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077096293 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069424597 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06915906 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069952436 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079570928 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066782923 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064332752 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06745897 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080540968 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065019015 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06713031 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062535344 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066761095 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068652836 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071335291 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080393875 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06502561 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069802764 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064311935 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061835025 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077355156 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066951842 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072180342 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078831064 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068409981 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065055188 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068835645 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078749334 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06469201 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062815719 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067660459 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076886588 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062380061 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068221471 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078236192 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066654552 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071314226 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078268958 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069603831 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068735314 seconds)
  done (took 6.292290953 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074336863 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071382209 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079904941 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079279358 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071230637 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07122604 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071264116 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07133527 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071117302 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076069005 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071327371 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091763492 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066849882 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074333005 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07132764 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071693627 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071427005 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071524637 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071306647 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071089487 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071452656 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078691794 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071490837 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078922588 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097153294 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066749706 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071136979 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071620141 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079112815 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071478872 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078373913 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071347437 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071278357 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079333534 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078491097 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070995649 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064132443 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07092078 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071718745 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071125654 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066312422 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078808592 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070743553 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067023116 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071441522 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070907087 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078845157 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077936175 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074187887 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075781683 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071177045 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078681359 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070732334 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071460223 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078940395 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103008199 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078627479 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078611721 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07113174 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078329463 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078346316 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084780227 seconds)
  done (took 5.977694072 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082967259 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074489094 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075853672 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060905752 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063332265 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06915759 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063270124 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063713688 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073715009 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073865854 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075634656 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068815927 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0715435 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075558607 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069107626 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071998382 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068976172 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068817105 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07313579 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068824972 seconds)
  done (took 2.761375119 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073697724 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082726342 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065927635 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071567801 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067905805 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070457716 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067390816 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068018247 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065921197 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068330313 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074896981 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074971867 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065934351 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071226234 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075158441 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070535722 seconds)
  done (took 2.473553751 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07378891 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071557768 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079886539 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06531063 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063174224 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061999782 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065010581 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06066533 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061484621 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076935851 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065116789 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067351273 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065438239 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.0639158 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062188613 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067987656 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062089636 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062971557 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065245489 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077124915 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075797948 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063646132 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065869961 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.0650696 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065174505 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070030314 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06432855 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062859519 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062369566 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065352526 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065719974 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068774505 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062489534 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063123262 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064667162 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062538437 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065186079 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065653486 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067866614 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064987635 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063079752 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064741435 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06507095 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065737234 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061877778 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065432607 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061254775 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067313041 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062837557 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065163828 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064988829 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068187792 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065142554 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071660145 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068414577 seconds)
  done (took 4.971270272 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078454653 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068960331 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061759474 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063604569 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068654502 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066735826 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068550135 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067025754 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067177178 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063347677 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066913328 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067893266 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066938727 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069036022 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066790893 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068611555 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061340144 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067013473 seconds)
  done (took 2.559847962 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070644145 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064950645 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072397871 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0654571 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065394584 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0674404 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061402224 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063542162 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063608428 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064943407 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065355937 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067396606 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064131119 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067264745 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065287233 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064791583 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067696402 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063856541 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064968342 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061508031 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067314001 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064037168 seconds)
  done (took 2.788255374 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071943744 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091568002 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136412073 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.08282883 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080392538 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077815504 seconds)
  done (took 1.887220165 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089895199 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078576637 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065862637 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086659963 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072590782 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066573572 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066634156 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066871435 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075339806 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075379456 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066900965 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075443609 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075340682 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074505262 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072576236 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072547461 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066710082 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066525518 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065525179 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08255995 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066789113 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074735465 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06677415 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066484581 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066541322 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074271167 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074936651 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075073665 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066708146 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074987915 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07201712 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066397978 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075007176 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075024703 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068379716 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07516307 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066597141 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082971339 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072444891 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074026722 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068622315 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072503966 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07502465 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071167161 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074795361 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066917217 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071411058 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066709127 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06691946 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084959242 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072338192 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074497473 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07280269 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075454806 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075381965 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08548836 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075485707 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074039091 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072490281 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07771022 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074283446 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072055309 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073828476 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075066223 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072599038 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074671565 seconds)
  done (took 6.164775346 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081323225 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086039183 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067666022 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075807049 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074338309 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066890836 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06667564 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066645937 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067031432 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06658864 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106794425 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067066773 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074960224 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074578858 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067518073 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066753559 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066724409 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074301049 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066310272 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08524117 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066973213 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074121208 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074573035 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074489171 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075106141 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072796549 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066990024 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066837249 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066645193 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066883159 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071575915 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067031513 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07507157 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066731415 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074262782 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067002224 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066659085 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071600729 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066810798 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072298613 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074904864 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082807629 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066904578 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066436028 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07530844 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066476672 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066497673 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0664073 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066579051 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066310116 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075240506 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075230726 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075276367 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074280281 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067415449 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066610821 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066776684 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066775216 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066696696 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072137709 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074373637 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06677875 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084882846 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066569717 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066818117 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074151351 seconds)
  done (took 6.077716598 seconds)
done (took 127.937308712 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184700564 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.170703874 seconds)
  done (took 1.699027691 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067464609 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096060862 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075910932 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.126578159 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066226964 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099614931 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097669495 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077131578 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065330147 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065387672 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065752691 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067388163 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129728294 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065567064 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065279953 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.0674129 seconds)
  done (took 2.654168698 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095549614 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156636273 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098666031 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064764029 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095999378 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072525126 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064367187 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074542729 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070262216 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06445471 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072230384 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.06975312 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064747617 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069834271 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070505324 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072420268 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064099361 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072183689 seconds)
  done (took 2.772260477 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098534857 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089677317 seconds)
  done (took 1.548416448 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157898404 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103971091 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.147395896 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342233422 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165142307 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228721575 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126086484 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126180063 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115002251 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123736453 seconds)
  done (took 2.99290643 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097109625 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.1490621 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253150024 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114031886 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071450788 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093318142 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115393225 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076915832 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080085821 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079572559 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079856894 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07507335 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098050752 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072634304 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072930545 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074995665 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101581443 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071731201 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072978707 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076069842 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098702003 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065475232 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073005747 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07181954 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077122289 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077014134 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065331669 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065075411 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076134372 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07331962 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076051604 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092321336 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076630494 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105491616 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.06934408 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106959675 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075688664 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073468176 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072927985 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073145005 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077915093 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077946155 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071044836 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07517129 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064560123 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075597343 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06487228 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064667718 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077183822 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06583984 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077793622 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07633652 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10530771 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065953656 seconds)
  done (took 5.916219203 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10062384 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103039337 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071240221 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.10775264 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096528381 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070989222 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099393529 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090366247 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101091627 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091331795 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087976708 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070269638 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08126572 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082867202 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108410671 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101098542 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094354346 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070369245 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100278827 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10116893 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068429202 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094170083 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089681725 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100270565 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066666015 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070114083 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067605265 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069951275 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075862988 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076883236 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069656438 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.100311921 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083355568 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07717398 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066408844 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06771492 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067519982 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078079233 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.09594771 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077693044 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076449323 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066783102 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067321632 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070481101 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089622265 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066734426 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077840632 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079255328 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077861521 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069271976 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069788888 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067558095 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069068966 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078577656 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076873163 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079433527 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078690366 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068041706 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067913796 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071313803 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079519313 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077956466 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078549808 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091913768 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078569912 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067882548 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079867457 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083692082 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067886612 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070144343 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067939535 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069884464 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069635595 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077065973 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077277215 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069370055 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069417475 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068055537 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079477872 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077425887 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067802227 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07600916 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066801126 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068045279 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069531187 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069539313 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076403101 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078513867 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06954698 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067310107 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069235305 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0678037 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066592275 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074863972 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077822099 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.076275373 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076779351 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068068317 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076802638 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076591803 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068749813 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077241295 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067074784 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.198461438 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070502615 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078284548 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077642831 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079985447 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070704762 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068311461 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078402528 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080553643 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068388826 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078032423 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080780115 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080321645 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068287955 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081083932 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069104268 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079328104 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070001931 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079077979 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068363375 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079519885 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068522566 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067511239 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068590079 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078805244 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07059679 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06841449 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070024726 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06956173 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078590393 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081972341 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071340134 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080012962 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078094134 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06987114 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07795942 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069087436 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079147644 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070634327 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070461668 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067697406 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08097106 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06854579 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068699831 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07049146 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07978475 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068403232 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079327004 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077649093 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067866591 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080514901 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079985268 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076753616 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079255629 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070608755 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068479373 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06801261 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069902875 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07690977 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079638968 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070389072 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067756643 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077356769 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079614677 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067023103 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077114363 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07727805 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077144546 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068196531 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069459725 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079106873 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079621932 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076994391 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077162677 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077557654 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068105755 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076094804 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076921358 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067527399 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083128339 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067925289 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081151203 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078093318 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075924794 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077878393 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079518884 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079256898 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078575462 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081435518 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066953971 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067164109 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078758635 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067251818 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069018497 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076633432 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069750529 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069224413 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080909316 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067167393 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077178174 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066069729 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075973253 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065418396 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06870609 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080416107 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067104966 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068364066 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07676822 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068008752 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07515687 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078131 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075370186 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066405174 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069176407 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077222083 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075896534 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066602732 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066907163 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068925361 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075745504 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074131758 seconds)
  done (took 18.46562807 seconds)
done (took 37.415739758 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.2107507 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151749714 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.204417966 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.120194209 seconds)
  done (took 2.154152038 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121432822 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100946746 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094908013 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065346557 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102149527 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065595244 seconds)
  done (took 1.952461421 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31382766 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217646382 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181874257 seconds)
  done (took 2.110601898 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197849789 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187253594 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.398656451 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253594068 seconds)
  done (took 2.542961759 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143019049 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089013373 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067272291 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083048973 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133829619 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160188976 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101409419 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125237983 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077995757 seconds)
  done (took 2.433749256 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.144116383 seconds)
done (took 12.777091656 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.166558284 seconds)
    (2/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.1587209 seconds)
    (3/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.247950179 seconds)
    (4/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.178453085 seconds)
    (5/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074443543 seconds)
    (6/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088019861 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082007954 seconds)
    (8/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.190178428 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077366014 seconds)
    (10/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.17494388 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073045282 seconds)
    (12/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.154651188 seconds)
    (13/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080673695 seconds)
    (14/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.161250634 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.080782833 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162355515 seconds)
    (17/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.108359622 seconds)
    (18/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.190993293 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.156909715 seconds)
    (20/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.151818275 seconds)
    (21/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090394989 seconds)
    (22/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072895441 seconds)
    (23/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.140863968 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.118697193 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.172932064 seconds)
    (26/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078780032 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076202927 seconds)
    (28/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.082364689 seconds)
    (29/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.154943597 seconds)
    (30/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078889326 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.20693547 seconds)
    (32/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072167402 seconds)
    (33/309) benchmarking ("sort", Int8, false)...
    done (took 0.148475177 seconds)
    (34/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.149667128 seconds)
    (35/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170499839 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070944231 seconds)
    (37/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08676564 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.148673855 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.081432673 seconds)
    (40/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.097834106 seconds)
    (41/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070782919 seconds)
    (42/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072559109 seconds)
    (43/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074325175 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090125053 seconds)
    (45/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.154808692 seconds)
    (46/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.147996087 seconds)
    (47/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076261988 seconds)
    (48/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.148478026 seconds)
    (49/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.204710988 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.093472856 seconds)
    (51/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148832226 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.094648442 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.186393016 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088604668 seconds)
    (55/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069738242 seconds)
    (56/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07100304 seconds)
    (57/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074797337 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071899569 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071605524 seconds)
    (60/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.081531998 seconds)
    (61/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.192504402 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095301653 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.175519552 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116352777 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066381277 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119018146 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.19098668 seconds)
    (68/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.063773045 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085674659 seconds)
    (70/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.157219505 seconds)
    (71/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05036888 seconds)
    (72/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066105735 seconds)
    (73/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077398836 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132456022 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064715661 seconds)
    (76/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.13753382 seconds)
    (77/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051680333 seconds)
    (78/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074100834 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074008594 seconds)
    (80/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.09565018 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.265431394 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.066208702 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.177021003 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13401479 seconds)
    (85/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.150231883 seconds)
    (86/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.096030437 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052585922 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051769063 seconds)
    (89/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076358122 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073237161 seconds)
    (91/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076117013 seconds)
    (92/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072771492 seconds)
    (93/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051613079 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139767514 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072021137 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07564424 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095303096 seconds)
    (98/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075149758 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087359959 seconds)
    (100/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080404877 seconds)
    (101/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.139683629 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065424056 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064850782 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100323893 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121521477 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172618891 seconds)
    (107/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051989956 seconds)
    (108/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06538311 seconds)
    (109/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051288142 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072077676 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089904971 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065540812 seconds)
    (113/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050911655 seconds)
    (114/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.291451137 seconds)
    (115/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099331744 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.169364117 seconds)
    (117/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051165279 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135845719 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076943791 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051050429 seconds)
    (121/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072554325 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070493872 seconds)
    (123/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054510121 seconds)
    (124/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.170063248 seconds)
    (125/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.106091739 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064721824 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.194976731 seconds)
    (128/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050919193 seconds)
    (129/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066040831 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.13287141 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072850528 seconds)
    (132/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.150657537 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088770013 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066662825 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072445542 seconds)
    (136/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068196606 seconds)
    (137/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050913635 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164620204 seconds)
    (139/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.186275285 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070305874 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070836184 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120086331 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070981677 seconds)
    (144/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063484284 seconds)
    (145/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050931065 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086755982 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071088175 seconds)
    (148/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162375861 seconds)
    (149/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072866904 seconds)
    (150/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052005421 seconds)
    (151/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07914802 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137647288 seconds)
    (153/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.196669904 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.132218985 seconds)
    (155/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068214136 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.149152839 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064758359 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106439858 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071781421 seconds)
    (160/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052204078 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088017858 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052487559 seconds)
    (163/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.1092385 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065111181 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09136895 seconds)
    (166/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071668449 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072998158 seconds)
    (168/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071496845 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064478513 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092844381 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.099908328 seconds)
    (172/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052257193 seconds)
    (173/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070041265 seconds)
    (174/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.05316806 seconds)
    (175/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066033628 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050566708 seconds)
    (177/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051832527 seconds)
    (178/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067792959 seconds)
    (179/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068264801 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086739014 seconds)
    (181/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050660738 seconds)
    (182/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051367138 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173444145 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087119481 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050486173 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.173011609 seconds)
    (187/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051657741 seconds)
    (188/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067183624 seconds)
    (189/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059944953 seconds)
    (190/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07274144 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.231727601 seconds)
    (192/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100598176 seconds)
    (193/309) benchmarking ("sort", Float32, false)...
    done (took 0.128371449 seconds)
    (194/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185105839 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072564337 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076066697 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074173617 seconds)
    (198/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05112088 seconds)
    (199/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.187690898 seconds)
    (200/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068037801 seconds)
    (201/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06674946 seconds)
    (202/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066620973 seconds)
    (203/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051497237 seconds)
    (204/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.151711704 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110512647 seconds)
    (206/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.10900585 seconds)
    (207/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066947746 seconds)
    (208/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065880464 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089922867 seconds)
    (210/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061615643 seconds)
    (211/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052022273 seconds)
    (212/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075683105 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064330099 seconds)
    (214/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051532642 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063338055 seconds)
    (216/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073595416 seconds)
    (217/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062566387 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051873795 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065636725 seconds)
    (220/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108006267 seconds)
    (221/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070642664 seconds)
    (222/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067592325 seconds)
    (223/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064557575 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.097942265 seconds)
    (225/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066390257 seconds)
    (226/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052318879 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.093244453 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072230275 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091078909 seconds)
    (230/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066201297 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.08032792 seconds)
    (232/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053077143 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051687733 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064761061 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068124445 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07016983 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051203748 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070895786 seconds)
    (239/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071746084 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054359124 seconds)
    (241/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071603559 seconds)
    (242/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060764727 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063911433 seconds)
    (244/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070491675 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065339548 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067037718 seconds)
    (247/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06568148 seconds)
    (248/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051004723 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13143953 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065327694 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052629907 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064875951 seconds)
    (253/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051711867 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064695784 seconds)
    (255/309) benchmarking ("sort", Float64, false)...
    done (took 0.123981006 seconds)
    (256/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066896827 seconds)
    (257/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050880508 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053360716 seconds)
    (259/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051772603 seconds)
    (260/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080378759 seconds)
    (261/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065680229 seconds)
    (262/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05198376 seconds)
    (263/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.098519596 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065793293 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064848731 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053339763 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090664148 seconds)
    (268/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078832954 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.138198962 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071703682 seconds)
    (271/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051494283 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073133475 seconds)
    (273/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08753594 seconds)
    (274/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051292081 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094296074 seconds)
    (276/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05098878 seconds)
    (277/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077450342 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08499264 seconds)
    (279/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061322335 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070885627 seconds)
    (281/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052149452 seconds)
    (282/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070206758 seconds)
    (283/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051458699 seconds)
    (284/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101898617 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087887552 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072038411 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052213508 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063433033 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063498594 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071708393 seconds)
    (291/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051557268 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173355106 seconds)
    (293/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06255639 seconds)
    (294/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065608948 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065478318 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.106372923 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070284777 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088658671 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138275677 seconds)
    (300/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061049113 seconds)
    (301/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064494425 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064624083 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064653804 seconds)
    (304/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078434653 seconds)
    (305/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050976826 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069828048 seconds)
    (307/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053052677 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087218025 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.123183673 seconds)
  done (took 30.363106564 seconds)
done (took 31.774717447 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082831055 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091086605 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073561549 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091118056 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079482657 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075532341 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071631456 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076917145 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078469143 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080774021 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077460595 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054562449 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072890662 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073472768 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073535026 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090112624 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07760655 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071734588 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072137072 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064132789 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072294451 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065301557 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06675754 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054359025 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076780523 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070890558 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071237511 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07299848 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064916346 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065476358 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.06830812 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072362662 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065196184 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077336125 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072118071 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07242595 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074064084 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075550318 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066934591 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065452337 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073128308 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065149144 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071810055 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072594694 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071322549 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070341746 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072297848 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076968165 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09025452 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067276189 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073730239 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07539644 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075678647 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071505235 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068785737 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072150801 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069805522 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090766668 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072975417 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067310499 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073114084 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072932715 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07016286 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072069846 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071992573 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07457167 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074756201 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070780909 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074045972 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070312887 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064826555 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07189593 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068286886 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065195944 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074618051 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076007711 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063823619 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070402536 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071992548 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070826695 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064782978 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066698368 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066943124 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07068671 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066516852 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054299898 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068702319 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070820391 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063458639 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072784307 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070682765 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071434875 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066469817 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074454897 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064194044 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069590792 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064723564 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064844818 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065943972 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068128298 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064355597 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066559743 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073105299 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066152241 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07030448 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078582348 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064803118 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070850207 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063522978 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064133028 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078379825 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073635142 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064941294 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066980785 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063654441 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071419404 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063372338 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064792402 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064598325 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064633386 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070237097 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064637671 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066051609 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070634468 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075858095 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063528514 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066791181 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065740568 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063692792 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068999002 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063728901 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063870806 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200308545 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062038372 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0682448 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065092085 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07247678 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068268124 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072716414 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066564541 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072419174 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.0698398 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070620611 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069876048 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064615323 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058583135 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068179637 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067875142 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066787196 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06532087 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066580348 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06509533 seconds)
done (took 12.342907955 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066490834 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141617582 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098309553 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094043652 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085195568 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065879384 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075468993 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100576799 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066806116 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10135486 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086554312 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083950128 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111907126 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064011124 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06551478 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069030131 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066308667 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081020994 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099650446 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085740262 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108449891 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064909673 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093797401 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089041791 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08624791 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100368106 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066067393 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069114247 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068997157 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089993029 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08587957 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068884647 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066014 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099281599 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091505177 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083432796 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06565415 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08108683 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066134246 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065222989 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080170051 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097040814 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078691012 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079447026 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069652903 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06827869 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066402272 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082728388 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087878795 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077420654 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085414151 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.1017692 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067927062 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064990021 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064030353 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084628537 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064752789 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068038741 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065915837 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06762624 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065435221 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068400759 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080091449 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085707113 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068948718 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078872144 seconds)
  done (took 6.765940142 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082352164 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089597331 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082879911 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082623709 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064856313 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066181578 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066030481 seconds)
  done (took 2.041087401 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065531242 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088174905 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088681767 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08788473 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083550807 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086069573 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07617085 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065836619 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079910796 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067174497 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086606237 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100724523 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066612713 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07246583 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090101246 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06572135 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09028515 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066188375 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06915792 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089180446 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067985046 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081539352 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069185156 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066822263 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079898565 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065918603 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111843768 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070162989 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067637634 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06894935 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063937753 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104638236 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079342927 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074809007 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065640966 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080504331 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079963661 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064091643 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081679103 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070682037 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079535712 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066563303 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067014272 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064141341 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070232628 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076019921 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066390866 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066404824 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068290552 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085349699 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066210903 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079233965 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069757058 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068486167 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067253302 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069495247 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075462303 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066371665 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084849204 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06776525 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08219341 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081865211 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.07941229 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081782693 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068206734 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078916808 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079192286 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068491637 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06753627 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068904362 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081822427 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064235007 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067270293 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076247409 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067531145 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.0887302 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088596235 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067529518 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075474852 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066923521 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067409359 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066634677 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088608534 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068546169 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065900224 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070349785 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068838456 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064276826 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065170601 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069336512 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064404346 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067548838 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068562701 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068804433 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068677072 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081772709 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068097513 seconds)
  done (took 8.706327059 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068249527 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067284165 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068759022 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06743853 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067676264 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067528248 seconds)
  done (took 1.933704186 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09308733 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068628942 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080034597 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071582148 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102883661 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086237309 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086010858 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077833373 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083139709 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078289232 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085807783 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087231502 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091932484 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071852103 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086033516 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071637998 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086573532 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07524897 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077433307 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073244 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086214161 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071873943 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072944801 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080663824 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075381833 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071447972 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066746249 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078096001 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077870407 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077740668 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071560833 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075056218 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069736311 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077800306 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08586768 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069928669 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071337662 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076422043 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072052755 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074691764 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087015287 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07249462 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074116173 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076290861 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077532546 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069571238 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077064726 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075123296 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085303618 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076196162 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076570163 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071123286 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074825912 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076462534 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070190432 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077463006 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076213749 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085894049 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071662997 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.06939849 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068524596 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07450719 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077217055 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074279949 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07820964 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076247161 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.06974615 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071681017 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072047738 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071218047 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075916302 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068657316 seconds)
  done (took 7.042198187 seconds)
done (took 27.985818596 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542456364 seconds)
  done (took 2.039255663 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.61477977 seconds)
  done (took 2.135506171 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.596096825 seconds)
  done (took 8.111817377 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.378784506 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.465591081 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.709639333 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129442287 seconds)
  done (took 3.235338324 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.664056484 seconds)
  done (took 2.191339791 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208364027 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195185394 seconds)
  done (took 1.940735141 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.373841993 seconds)
  done (took 1.89700436 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.101673117 seconds)
  done (took 2.624001857 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.25918428 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164274506 seconds)
  done (took 1.949091843 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.456951864 seconds)
  done (took 1.985937306 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.833653935 seconds)
  done (took 6.363233842 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.203916969 seconds)
  done (took 1.774693711 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238160231 seconds)
  done (took 1.766422502 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.717705196 seconds)
  done (took 3.244948996 seconds)
done (took 42.784452833 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078005364 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.07970326 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079286218 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076389677 seconds)
  done (took 1.827201833 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076030478 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072701356 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075465213 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071622744 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075007858 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07126237 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073239772 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07529023 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071034257 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071407175 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071185722 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071634768 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073719814 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072855274 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069802013 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073593618 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074605217 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071246885 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074457249 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071458975 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069807297 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07345768 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073534626 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071135897 seconds)
  done (took 3.277143908 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077034955 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071748855 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073976324 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070859962 seconds)
  done (took 1.831829254 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075843249 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090858556 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088024289 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077368092 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090443134 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085008225 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067845238 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06778301 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072105361 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076030995 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06676201 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09487288 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086233223 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075556612 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077731227 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06511606 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067658379 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085885948 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076097638 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076621903 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068570791 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076342001 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067004365 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087180558 seconds)
  done (took 3.398076081 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076105379 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102519276 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076324194 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086911395 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089276201 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064395521 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073348374 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087954708 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121191532 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064460514 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06909733 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064777106 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071107612 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064440757 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075371061 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103085399 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106793351 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067407318 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095210473 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064478654 seconds)
  done (took 3.166202078 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071203227 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069167138 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06471805 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067871699 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077368078 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072298302 seconds)
  done (took 1.965100931 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06730741 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066392074 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066634567 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065497939 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070976955 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066369726 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064843901 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066213875 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066173315 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065614046 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065564686 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064704088 seconds)
  done (took 2.334550613 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.410315377 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067547735 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067842601 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065119954 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069394797 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06521774 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078901553 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06721687 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089205879 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065563412 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065653718 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067946192 seconds)
  done (took 2.720582608 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202487057 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075408587 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232994758 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135158624 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10972591 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114130684 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102606875 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111451477 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141537342 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100531656 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166108374 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163949822 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105752032 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13530882 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087784358 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096623455 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152781753 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159282711 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102052905 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162858128 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141832544 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122810462 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144616853 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099738477 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103989132 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12012089 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070254757 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078901063 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167394321 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129028279 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144103273 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108965699 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09213572 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172741084 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168583493 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140286963 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13194488 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082541523 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.099953012 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130338926 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194980905 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086623511 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158166727 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244436539 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081213198 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132019274 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118800402 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118438819 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105353411 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089288398 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144137659 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179949803 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136994197 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085782058 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110176673 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114072621 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115078672 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102333984 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178039555 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158631393 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12505 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070546813 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097425797 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150736412 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12980928 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107391757 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125421729 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092403149 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130812942 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151855033 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116084917 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142042276 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126996995 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087026953 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117886859 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137352807 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125692086 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166992075 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122837606 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071783996 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123225347 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102197163 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080160661 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141030242 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074833089 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172755282 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097170912 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104244188 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110797213 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10685401 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106992124 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157245611 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140412102 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242046801 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065372826 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102326442 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119478061 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146249151 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086511785 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107210451 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115227602 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076842679 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137260513 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07407104 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122269912 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074504973 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123689383 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130612549 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074362887 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12014967 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099861753 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099352457 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13213268 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158268192 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088855236 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080839732 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165688796 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120464714 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102836161 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141918541 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154001238 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098130493 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100770439 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145859694 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176808457 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088064412 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159960882 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105692863 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082073265 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08655261 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121917343 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110962542 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120401416 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081132076 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116845266 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165835089 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073830361 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093791615 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132227087 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077787598 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07920623 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101215983 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098711582 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.092819832 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098302467 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101980774 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134576264 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120702455 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10301508 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267051053 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097130796 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168324241 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087452849 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098631358 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102875702 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069272526 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133994665 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155059416 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079039944 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161725133 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12196018 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104249102 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118067638 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081431132 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139419611 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077656275 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070111644 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141843804 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10904794 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109382733 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148682217 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10351257 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125157982 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117514393 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132904257 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13119949 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127426211 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10352055 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087741298 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110829535 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124146989 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071629391 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089946968 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078754885 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10264072 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094093456 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081811117 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140061029 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123110592 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098883702 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110163863 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095361352 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144863427 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075389643 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127072263 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117354278 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092601625 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149517708 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149227124 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129021425 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097214876 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141432296 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06857245 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072751551 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087252196 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.264559576 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082910276 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082838993 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117081613 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145079716 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128027384 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135909077 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11100946 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119662535 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154005856 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068751021 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114813902 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146767857 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120190277 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103451756 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08881568 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097595245 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140352079 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106715767 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179215208 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112910287 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125378435 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151577531 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097787521 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078558718 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106875144 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134097964 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102781976 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142228121 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098382525 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086811384 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108260368 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07312529 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098522671 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12515199 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118502484 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133770598 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113317655 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130719806 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075996965 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115161736 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119323204 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120711004 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063608968 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118033749 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157670287 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091802581 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117214753 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150283672 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077714871 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.121429156 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318052672 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144893069 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084219049 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109013408 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11797073 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12635509 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118474759 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137855809 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107563819 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13372555 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108160984 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08390133 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086983426 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0957067 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103789578 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093512744 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107227882 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11336943 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093675903 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130298185 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101106695 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108059554 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116250186 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.094994064 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088136282 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094770486 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171757024 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117724396 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169175223 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097089348 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143013602 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161840091 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073677935 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078092372 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07711361 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137621172 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082868997 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128513769 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.095775996 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103961347 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122448556 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139544991 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093939928 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067794489 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107035604 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13232155 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1106922 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096967236 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102640391 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160110748 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101739203 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078051965 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111204366 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102757898 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100712773 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16779315 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.059840975 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.239383299 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075035045 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080299149 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126578091 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151451356 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079509664 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100730694 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117583209 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108668972 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126171024 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10057461 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098098247 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11323752 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146683955 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126985512 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08833434 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111270299 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128214166 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154578411 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103941859 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111071408 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169701507 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149749468 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157527208 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087800173 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113217261 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112671098 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106371348 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136944515 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082616406 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161117604 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080716251 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134131279 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102877944 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088843048 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127675439 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097501555 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08717537 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145557314 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115880453 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081411357 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076616028 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116153385 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119408724 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105044178 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074394558 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13658287 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071562481 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12967326 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165449497 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079561321 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101877723 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09386842 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223082757 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107574835 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10199606 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088352865 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097797095 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170928355 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086623116 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14831669 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140133564 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111784862 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134804055 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099041393 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63498444 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076587411 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150980752 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115580116 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170991657 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095863003 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116747272 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108084427 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121659999 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14299972 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104279259 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175471379 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130937247 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114906744 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079213772 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101646675 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101903411 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087116345 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103447101 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11180084 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114616075 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092374745 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11428656 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121100191 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.0810933 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093794292 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15341494 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115081886 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142004516 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137941742 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083927247 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116033973 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135900283 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078419172 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.11932348 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149305239 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104152276 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096282714 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078840763 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.244604033 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167896011 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072112008 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160878141 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117947757 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108431567 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112154297 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112405674 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130827888 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106168329 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119973232 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092968098 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108756375 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111748453 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080641218 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076520795 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103260123 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111488108 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096468953 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09761166 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097186067 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149634207 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070574436 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094665345 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102262902 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143909408 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172099555 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086626094 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081746105 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117975377 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111218374 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111401545 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119557141 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078214011 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081938577 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080592592 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076404705 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.1068977 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111335814 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102914719 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109754357 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161410381 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081279967 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223912262 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093919452 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10371522 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069082303 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077433464 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094424495 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095956354 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106581172 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099720266 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167969155 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092851228 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088411373 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090596836 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072030651 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081320235 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124714065 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253760035 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118022725 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09694119 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062098368 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107505308 seconds)
  done (took 58.101232124 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103243834 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08167427 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096214418 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149636495 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121277615 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210690556 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155854719 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198290166 seconds)
  done (took 2.768662966 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067443994 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093709712 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098102928 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081707049 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066649701 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067565256 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222106745 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078985889 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065819609 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08772271 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07746038 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067847047 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.417502659 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064929835 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066473754 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061090957 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066248186 seconds)
  done (took 3.395828941 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.373190506 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.358531924 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.37002832 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071893106 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.865822995 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087104542 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.072623839 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095436995 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070779361 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.266730192 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.70032182 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091109852 seconds)
  done (took 14.077146198 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075476065 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069311833 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083455105 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083139573 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072775325 seconds)
  done (took 2.111569652 seconds)
done (took 102.540774159 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079757142 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.389747455 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053597889 seconds)
  done (took 2.122605895 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082413476 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084546309 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084229211 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083412098 seconds)
  done (took 1.997468025 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074604685 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075743671 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084997925 seconds)
  done (took 1.891772612 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223203724 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139150761 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086743347 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08238232 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07731022 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07869057 seconds)
  done (took 1.898700206 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071924352 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075402035 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072180439 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076022286 seconds)
  done (took 1.951005968 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076468967 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052516957 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054702513 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055872613 seconds)
  done (took 1.894873665 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085573937 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079291633 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077744158 seconds)
  done (took 1.899459216 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106840412 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085328598 seconds)
  done (took 1.848697145 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081546715 seconds)
  done (took 1.737888257 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098536885 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112693629 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127639597 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108710157 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135433099 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107868078 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085002614 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086033884 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076853304 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086726034 seconds)
  done (took 2.681607455 seconds)
done (took 22.103076532 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078683772 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.375710281 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36264271 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090955782 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667226158 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356520059 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991280554 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091981362 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112997321 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067553086 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083974453 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649284342 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.012816244 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323686498 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.006148444 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.3240716 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654610231 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068201094 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067652015 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067794359 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979221784 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067318346 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067684363 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068347615 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.661441821 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371266476 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068064809 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32484168 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067667222 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069491986 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355880102 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068016799 seconds)
  done (took 16.266560033 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070853223 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118300514 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073483769 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083878493 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069948059 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06940282 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071674703 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069027681 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119493223 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0677224 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084258384 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067399739 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071993277 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068485629 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087025159 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068185525 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06850517 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068541327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068117847 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06833307 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086147044 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06764841 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068579407 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068204219 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067919474 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079524553 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068065463 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067869942 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068309486 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070138716 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070632545 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06895009 seconds)
  done (took 4.056408481 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115589479 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125035664 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074084715 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103470026 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112186538 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070123086 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143596521 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092534185 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127198415 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068178686 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084363918 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068131787 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10108525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068819569 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087531425 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068768949 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069346645 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068823828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068318561 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069035182 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087126171 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068131973 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068414901 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068808658 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068361329 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08170017 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068563209 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069104661 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068484357 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070291056 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071754073 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069175766 seconds)
  done (took 4.318758413 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072217389 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075316196 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083082449 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083683716 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069968944 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071944848 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072813693 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069859674 seconds)
  done (took 2.273019918 seconds)
done (took 28.576694204 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078900355 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068964147 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072676873 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081120927 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073243059 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078270864 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067302095 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075041671 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072823846 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072960351 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075002645 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067258398 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071708898 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067292842 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073466234 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067754001 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07910703 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071730202 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079222516 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079453241 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069770428 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072979947 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074588686 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079216882 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079128748 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078889474 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077364418 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072499378 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068965671 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07046504 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076759838 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083951895 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068580985 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07901748 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067806881 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067609157 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071267885 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067773414 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079410722 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076660452 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069948937 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076526402 seconds)
  done (took 4.756286804 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087906627 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090959051 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085702034 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061631134 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066313705 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065064435 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088296842 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.05935724 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059544306 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087443171 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055859901 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059533253 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062239652 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054240966 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059393236 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056735644 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062073384 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055832991 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05950488 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059449677 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058102209 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054333182 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060078779 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065324793 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056510986 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06175319 seconds)
  done (took 3.372989207 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074064921 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083965124 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08812106 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127026677 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114833677 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07670941 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077758532 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091711056 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084850598 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066749959 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07108108 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093347397 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088175092 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073521009 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067351399 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084850327 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08175034 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068979403 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073152899 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090802118 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08433443 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083857016 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092654809 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081068094 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066914758 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069134281 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071354616 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081228993 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072242507 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076554013 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071159169 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071032278 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069515949 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078919724 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071373169 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069118603 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09062379 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077072124 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078090584 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067888191 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071494826 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068241138 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089167816 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122384034 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066376915 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073707974 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074974231 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076171643 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067236381 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085700616 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078163016 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066645944 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07037311 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066463804 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067474289 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080080899 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069414932 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06951124 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076418118 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070473021 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085795719 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071191108 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.0826621 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067006925 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074702687 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066967777 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068039888 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066425381 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092627692 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069378718 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107997291 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068694502 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068188063 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07598539 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074909326 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073201453 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067688679 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082361325 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07744789 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070853381 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07609324 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070915461 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070708551 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087978758 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070129227 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069292761 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068549652 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073739565 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070378259 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069053609 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080588662 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067959041 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070584559 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083981466 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067353934 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069047492 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073174455 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072372412 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067126892 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078401922 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072166141 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068207789 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076225659 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067338367 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07031532 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077585877 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073573982 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066466991 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071947053 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073618516 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068246882 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069031709 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070355123 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069165169 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07653783 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07393154 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071391818 seconds)
  done (took 10.581603617 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161017554 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15382053 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071128218 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144470381 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076520504 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079113622 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14733996 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093822849 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067791973 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068577341 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068993761 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115393284 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10530776 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121737317 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078183471 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067948414 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082890097 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116641603 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14884492 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142795366 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083448096 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07658817 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070122218 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068844251 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074587144 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082548838 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09019461 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076336758 seconds)
  done (took 4.447345419 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081214584 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100891036 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074595744 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089352511 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090221171 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067629045 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070048584 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069284924 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080387115 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078384378 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067377107 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073275804 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074315619 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074093595 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068790098 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074743032 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074799627 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069555764 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070954223 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072712623 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077464919 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080912615 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07198554 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067689636 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074287293 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067317684 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064163442 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084265774 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068306504 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090064856 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065867099 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075328694 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081398524 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068537555 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067485611 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067673799 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067951175 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067498461 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069582399 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06634568 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066537215 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057862801 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067312284 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079633808 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074120303 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05676743 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072886182 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072599744 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072884392 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065334152 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070501069 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070199642 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070874315 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074875868 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072611085 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072637198 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068683681 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065665405 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075543873 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06795101 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064932164 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066159339 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072150043 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06580134 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075703906 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072173935 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066293781 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067305771 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069493584 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073641688 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.0676024 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070621535 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065070076 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069392182 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072140038 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069328729 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068351321 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065767386 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067182044 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067469165 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055705041 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067251998 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053487005 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070601625 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065624781 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066074873 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066986038 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071975903 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079377026 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06843991 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073109187 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068170121 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066476649 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07059026 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060235788 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070076024 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082555314 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082103344 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067269536 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065424699 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081708903 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071950967 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066307497 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056133104 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074578868 seconds)
  done (took 9.168568456 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094629198 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087535367 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070404039 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083339747 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090316478 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086288303 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074833477 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076827472 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069524261 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082178962 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073547792 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076227016 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067688394 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076889302 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093341702 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076433128 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069778019 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07674049 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071756867 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100299458 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082481504 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081572537 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.07450794 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068139124 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076212444 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079766137 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089409375 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.07969954 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078576176 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075554614 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079774465 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088868494 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074061218 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072562294 seconds)
  done (took 4.423062646 seconds)
done (took 38.418142953 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.762853855 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.937298392 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.757526111 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.117675723 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.839969756 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.921496752 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.811938806 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.75104862 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.957785536 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.788056175 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.98670475 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.834066871 seconds)
done (took 65.156930859 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.773592934 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.894117252 seconds)
    (2/2) benchmarking "String"...
    done (took 2.026975187 seconds)
  done (took 5.613865199 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.063892594 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.283358007 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.997952328 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.750039559 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.756183572 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.064404359 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.552009087 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.272407254 seconds)
  done (took 30.369653253 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.931159922 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.949062642 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.41734692 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.441257167 seconds)
  done (took 15.477631715 seconds)
done (took 63.073559227 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.753181802 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.75361339 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.754588273 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.736212888 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.809339637 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.768242183 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.848596537 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.951399695 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.75580596 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.74469457 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.752636824 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.202321086 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.7700553 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.818365086 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.754933663 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.759015449 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.802424726 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.205307644 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.910835301 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.772738537 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.754077039 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.810439537 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.759573981 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.866112997 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.763070021 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.752885566 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.206452704 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.753647747 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.376154538 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.755497691 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.783542695 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.042570508 seconds)
  done (took 203.941432905 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.753022141 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.806608965 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.873639147 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.803029739 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.293864296 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.950797564 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.884151832 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.3422884 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.75833976 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.779170581 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.001292227 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.756490683 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.010155197 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.706994411 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.760890268 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.752963778 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.042196043 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.021987091 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.758531768 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.015420529 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.761833312 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.918119923 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.828562659 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.970298409 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.766250176 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.767932601 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.780893786 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.760149996 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.947102334 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.018051916 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.782894114 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.760022647 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.958685743 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.626159122 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.763648885 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.758640758 seconds)
  done (took 169.937501355 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.152766529 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.754510748 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.753687096 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.754905025 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.760550977 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.754539696 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.88835124 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.885786863 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.208584592 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.189248354 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.806689537 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.590351492 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.754639655 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822431073 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.766467233 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.755318723 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.756029367 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.770939146 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.782616155 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.760105705 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.755014847 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.884745124 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.767118617 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.918133358 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.762449127 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.755820799 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761393095 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.124597694 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.755820703 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.761395428 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.99911617 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.756309928 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.755889295 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.659317348 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.105648025 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.848987655 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.756723724 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.760972526 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.75645976 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.974808427 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.756718972 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.755481616 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.758245294 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.936388459 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.755637908 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.88385544 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.755720315 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.258281097 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.756031151 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.755825329 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.473282776 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.687485825 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.755997097 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.75334485 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.757086141 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.75370255 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.753176315 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.765616228 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.465161909 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.833200815 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.752513279 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.754475509 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.75632357 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.750696623 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.780836914 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.750189538 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.403819167 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.805572159 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.957793536 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.865878242 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.746779505 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.811389498 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.836572097 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.741301945 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.743497704 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.74117426 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.743125347 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.825104612 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.743039681 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.894562548 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.750912038 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.744291522 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.795580232 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.812730801 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.740811747 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.637476929 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.744819621 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.742831341 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.068075073 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.81085333 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.742321789 seconds)
    (91/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.744203478 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.740788535 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.744863165 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.744236726 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.873595451 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.867700088 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.534490292 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.745157449 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.740657869 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.401629031 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.742109698 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.881569913 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.743313774 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.935400501 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.745094679 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.822470621 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.748226122 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.743158168 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.744530579 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.774070874 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.740889631 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.798080874 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.738881657 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.113539557 seconds)
  done (took 400.618567552 seconds)
done (took 778.397658441 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.404090699 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.365120669 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.487986446 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.391404713 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.366087597 seconds)
  done (took 13.693723514 seconds)
done (took 15.373660091 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.836812074 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.834165801 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.765307091 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.829781789 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.762046301 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.83290347 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.808772273 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.7639227 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.79348408 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.765985264 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.795735644 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.767877673 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.753635955 seconds)
  done (took 24.991303126 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.970095809 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.979383736 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.810235365 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.99169658 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.789635414 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.968442596 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.906585656 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.891541814 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.89444103 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.754039435 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.75178971 seconds)
  done (took 22.388000581 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.975889968 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.9879686 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.815978925 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.983922691 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.789816198 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.981875358 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.906945171 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.896871127 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.894125797 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.756472565 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.751220206 seconds)
  done (took 22.421002418 seconds)
done (took 71.480784939 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.747360119 seconds)
  done (took 3.42857833 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.770655805 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.904916354 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.754442742 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.755176111 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.743235899 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.748981522 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.751235329 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.744426385 seconds)
  done (took 15.857667946 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.746760779 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.7437994 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.748392478 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.742343792 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.742313976 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.746817168 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.747629255 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.746943365 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.745089588 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.744016428 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.747457935 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.745713773 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.741842017 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.746469724 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.744793558 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.745544493 seconds)
  done (took 29.605563011 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.745859679 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.743706978 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.74610827 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.749080894 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.746480282 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.748783601 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.748354193 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.745903495 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.745659717 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.749726487 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.751844541 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.749534713 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.748967728 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.748714113 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.75024869 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.749804965 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.746881994 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.750042484 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.75472469 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.749048527 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.750623818 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.748796341 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.749846918 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.751571229 seconds)
  done (took 43.654032347 seconds)
done (took 94.224353484 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.436315206 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.209968321 seconds)
  done (took 8.328143254 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.752671363 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.747641224 seconds)
  done (took 5.222334633 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.751886993 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.751029308 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.749787787 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.749625865 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.749910046 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.748093252 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.750602756 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.748223118 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.747841868 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.747842822 seconds)
  done (took 19.177736767 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.748008369 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.749384393 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.744611196 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.747744132 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.747996644 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.743990987 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.74774999 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.748607912 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.746298948 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.744792072 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.747151277 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.744806834 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.74899485 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.743134396 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.746260363 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.74340573 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.743062634 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.742799446 seconds)
  done (took 33.111078487 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.743325877 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.743975922 seconds)
  done (took 5.168717033 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.742043546 seconds)
    (2/7) benchmarking "second"...
    done (took 1.742091811 seconds)
    (3/7) benchmarking "month"...
    done (took 1.743444743 seconds)
    (4/7) benchmarking "year"...
    done (took 1.742194718 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.741678644 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.741742829 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.74126604 seconds)
  done (took 13.872815511 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.746272576 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.918688895 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.986004802 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.44847461 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.745307248 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.747786443 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.679023508 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.747343613 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.748643274 seconds)
  done (took 19.445482132 seconds)
done (took 106.007547849 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.584218858 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.740706274 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.093656805 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.789564808 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.791529224 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.042981217 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.782437455 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.955430464 seconds)
done (took 42.4592054 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.826815616 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.209849517 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.218148535 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.011384706 seconds)
  done (took 12.117338676 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.722430036 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.261015629 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.77654778 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.332100523 seconds)
  done (took 19.78125214 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.105710771 seconds)
    (2/2) benchmarking "read"...
    done (took 2.093832432 seconds)
  done (took 5.881551184 seconds)
done (took 46.286403239 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.744060716 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.740032165 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.742913476 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.740323034 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.743425238 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.743970576 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.739783054 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.740809402 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.742545786 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.742556052 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.741324266 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.743252637 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.741972215 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742706126 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.74063125 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739912022 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.742161838 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.740325406 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.742532492 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.739791262 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.74046479 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.742878381 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.740633266 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.740538937 seconds)
  done (took 43.478709963 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.742493123 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.740467154 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.742872222 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.743482491 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.740867093 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.74251635 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.743836678 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.740989716 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.743265672 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.743420359 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.739270262 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.740077051 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.742385968 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.74091388 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742371776 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.740653214 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.742982758 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740797032 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743106884 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.741559566 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.743096399 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741558964 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.73982458 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.742580012 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.740365437 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74033729 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.744293166 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.740600734 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.742635207 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.740677259 seconds)
  done (took 53.932299223 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.748121525 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.750751513 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.743391212 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.743333395 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.743951761 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.743386806 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.743211704 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.744385328 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.743275696 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.742581426 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.743018458 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.742704312 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.743049204 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.743851899 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.743943959 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.74301259 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.744107623 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.74421878 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.74425848 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.743430735 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.742951071 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.743808744 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.74366812 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.743283701 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.744703214 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.743673947 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.7436116 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.743934414 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.744043149 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.743510529 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.744847797 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.743685966 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.74392359 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.743532096 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.744441993 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.743834028 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.748276121 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.749573827 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.743111385 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.743436179 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.743451669 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.743465405 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.743009368 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.743638537 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.743556669 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.742980611 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.743816891 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.744357761 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.743045986 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.743822936 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.743439428 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.743889327 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.7436747 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.743760359 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.743801921 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.743761361 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.743432603 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.743248252 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.743496668 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.744240073 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.74316708 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.742944507 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.74353995 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.743751557 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.745924949 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.742831772 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.74318676 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.743294512 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.743933967 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.743754839 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.745565315 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.743326386 seconds)
  done (took 127.244587228 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.743318641 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.741488905 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.741017753 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.742169604 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.741138702 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.743254716 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.741416833 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742977837 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741774336 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.745586009 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.743712529 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.741275144 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741518503 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.743732218 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.744059994 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.74094087 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.743962468 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.740916945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.743653625 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.743644043 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.744107458 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.740921273 seconds)
  done (took 40.0154927 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.744418588 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.743818944 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.743227535 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.745415654 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.74113369 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.744456489 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.744631779 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.745140971 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744278491 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.74238607 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.741698739 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74535108 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.741826317 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741833517 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743724026 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.74229961 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.744530979 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.742777377 seconds)
  done (took 33.061976818 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.742964732 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.744572944 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.745636806 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.74148267 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.743040211 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.745921978 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.742564615 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.744681986 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.745912553 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.743543069 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.746116812 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.744918221 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.745964013 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744507563 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745765995 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.742966859 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.747115201 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743688764 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.745615002 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.743769213 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.743741203 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.746462207 seconds)
  done (took 40.060560858 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.745474618 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.747299069 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.744045653 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.743560578 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.743998844 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.747490484 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.746108339 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.745473071 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.746323717 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.747293932 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745701968 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.746730867 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.745833432 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.74487906 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.744976779 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.744387885 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.746808136 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.745068746 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749423597 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.744403978 seconds)
  done (took 36.596472928 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.747728199 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.748029805 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.748144238 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.749011426 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.747316377 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.748105242 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.747897515 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.74841631 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.749230906 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.749512029 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.748553095 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.748224033 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.748525843 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.749075087 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.748746578 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.748269112 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.748044759 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.748471065 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.748706574 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.748113341 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.750705493 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.747983564 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.749272286 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.748903906 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.749666894 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.748103985 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.750352042 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.748734919 seconds)
  done (took 50.645081996 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749564758 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.74943782 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.746104375 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.748395008 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.746216882 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.746599823 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.747080721 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.747238285 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.750655787 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.7473852 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.748952054 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.748591504 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.749016499 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.748594277 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.749636553 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.749698421 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.74979696 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.747015556 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747081799 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.74711516 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.749210191 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750337934 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.750111249 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.746054442 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747494806 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.752372879 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.74731613 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.747099384 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.74995198 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.74648656 seconds)
  done (took 54.134586641 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.768103881 seconds)
    (2/2) benchmarking "in"...
    done (took 1.768438709 seconds)
  done (took 5.220655468 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.746804395 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.749252176 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.749840877 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.746961771 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.749613023 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.749503434 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.750963263 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749731561 seconds)
  done (took 15.677324907 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.751202218 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.750242702 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.751162791 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.751892052 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.751652634 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.752666231 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.759001552 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.751280784 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.754732219 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.751913432 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.757992221 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.758397021 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.756901636 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.75217877 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.752025212 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.755785107 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.752058721 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.752598751 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.752590401 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.752595216 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.753342784 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.754309304 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.75454049 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.748839854 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.753268836 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.762937648 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.757472547 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.753073166 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.753499306 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.757924751 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.753001549 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.750875113 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.754373305 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.753859964 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.753331704 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.754284393 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.762657089 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.75402572 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.76012221 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.753339409 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.753279194 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.749977941 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.755483553 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.756822494 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.754457013 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.753414835 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.753570175 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.751603417 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.753711944 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.756171078 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.75640453 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.753513661 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.752393637 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.764404813 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.755821301 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.761392399 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.755005883 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.755784731 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.761170164 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.764370957 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.767454379 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.759954836 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.755428638 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.754825254 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.762922251 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.775583845 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.762535662 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.750988982 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.751953441 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.75342977 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.762819042 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.769256284 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.762870918 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.755327717 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.755795805 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.754386608 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756268428 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.755422468 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.763625775 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.758085025 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.755805783 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.755451716 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.764045662 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.77334767 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.755330699 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.756220492 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.75654618 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.756052454 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.756848231 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.766135302 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.756697369 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.755946304 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.757006045 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.757193922 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.760116384 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.756450474 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.75513749 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.758080504 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.753006205 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.756180847 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.756773103 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.759333549 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.763465473 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.75770587 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.75728246 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.76458138 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.756478893 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.757192252 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.766741124 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.75598878 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.757481455 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.756750932 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.764925047 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.754275491 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.760406091 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.764599267 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.756865033 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.758549739 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.758449256 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.756842842 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.766125616 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.778835299 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.757566655 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.757570552 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.761865281 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.765980047 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.757916941 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.760922018 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.757139383 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.755148212 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.754685912 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.760778177 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.757373586 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.759873542 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.758678548 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.761465375 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.755610989 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.758174842 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.758480633 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.759997807 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.761344239 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.75948467 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.76028671 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.762646739 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.758139964 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.760835019 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.765969374 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.75963955 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.759905356 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.760328373 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.755714425 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.75933244 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.761937027 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.759187491 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.759895839 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.75870513 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.759372619 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.760314292 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.759113685 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.758913336 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.759167512 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.759384748 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.762488517 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.761004756 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.764802922 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.759632593 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.756888771 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.759823297 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.759416139 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.760281381 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.759341165 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.759679963 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.762391479 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.765940206 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.760016736 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.760220698 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.764584086 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.759923553 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.760759723 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.761304684 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.762107515 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.76716104 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.760336226 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.767871742 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.760513572 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.76059958 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.760636338 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.762175528 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.760821949 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.760372599 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.763411171 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.767037066 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.774828562 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.769346319 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.762487096 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.763844674 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.761966703 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.764842382 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.767171021 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.762779264 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.760671872 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.761673988 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.762165794 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.762331974 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.765585695 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.762466706 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.761788407 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.762169914 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.760701871 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.761979416 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.761915259 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.763993504 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.764788293 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.758867294 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.761331572 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.763064255 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.762393986 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.75894811 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.761382609 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.762189183 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.762484177 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.763034197 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.773951127 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.760088584 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.763346106 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.763895649 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.764025197 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.761122994 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.762702209 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.765875068 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.763892836 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.771260801 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.764684852 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.765255689 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.769715962 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.764170163 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.763419665 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.76675048 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.762717111 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.760689241 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.765431276 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.769223474 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.762794884 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.764038632 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.764544417 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.764862083 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.76337514 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.771957617 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.761146296 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.763958347 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.764234561 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.767632856 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.761940305 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.76626352 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.766172092 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.766190797 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.767356787 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.764846554 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.764597684 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.767416947 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.76513969 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.766114275 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.765839105 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.766876091 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.771385439 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.772073138 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.766298689 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.768692884 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.765282443 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.76762545 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.765757498 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.765620451 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.765396487 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.778863644 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.771312924 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.773753265 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.768713781 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.764358966 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.772484718 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.765897377 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.768817975 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.765914375 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.766895331 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.766925483 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.765822362 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.762799538 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.76846713 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.765791203 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.767415613 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.76724045 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.769567865 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.76497388 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.765520369 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.76712449 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.766464002 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.76590851 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.766435577 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.766244416 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.770745496 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.769451193 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.767304445 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.767879388 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.775491103 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.768894512 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.769355807 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.768236552 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.768131785 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.766726035 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.768723023 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.767443289 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.769121138 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.772683802 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.769500953 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.775685506 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.768880468 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.777322919 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.768226415 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.770279585 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.774600406 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.765635894 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.768380788 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.770273309 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.767995331 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.775362581 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.767792916 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.768500836 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.772061217 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.769434982 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.767800112 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.767791121 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.768766792 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.768186094 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.768077255 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.777291226 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.769174794 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.771952288 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.771578745 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.766253647 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.768332431 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.768044503 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.76802682 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.775309095 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.768789905 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.770662218 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.769022453 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.769968787 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.768512114 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.769422933 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.769245387 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.766290916 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.769103923 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.776171282 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.770168015 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.772608503 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.768866949 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.780028823 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.769393243 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.778008916 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.76986297 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.770690523 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.770244052 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.769541547 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.773762638 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.770292174 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.77326492 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.770427425 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.771542016 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.772607778 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.771040286 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.774970006 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.771918865 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.771412975 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.770892165 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.779561521 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.789827285 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.772686261 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.773270461 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.767639952 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.772410054 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.774864738 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.77180441 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.770306438 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.772875648 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.779380949 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.77681045 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.771487652 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.77089257 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.773468315 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.772626058 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.770677671 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.770462715 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.771872515 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.7706951 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.773149718 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.772824956 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.777898096 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.771008681 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.773242139 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.774277361 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.773293854 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.782426687 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.772407435 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.774254471 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.772665161 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.771910389 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.773320275 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.773024718 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.772552801 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.773314345 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.772373079 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.773475956 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.777568209 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.777311131 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.774993276 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.772490254 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.773793765 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.77460734 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.774838997 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.774066397 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.773004721 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.774185031 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.774241614 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.773903311 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.775791384 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.772208285 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.772832217 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.774200881 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.773843657 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.775833205 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.778390557 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.773537284 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.770671405 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.772523017 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.773232745 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.772346347 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.774308834 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.785247412 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.777015039 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.781274524 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.780508653 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.777209687 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.774597218 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.777385901 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.780708765 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.773218531 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.775690567 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.775037959 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.777596951 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.774795782 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.779832994 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.775626317 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.782740379 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.775335218 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.775616567 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.783721146 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.776084577 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.77488096 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.776785647 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.778727076 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.775459722 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.771894528 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.775068826 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.775063165 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.782486065 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.778286404 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775044806 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.777832081 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.774517739 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.775712569 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.778431699 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.775186769 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.775962211 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.773745855 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.776648451 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.775862828 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.775310631 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.773504846 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.776022457 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.776006864 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.778851244 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.781738056 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.773187648 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.778645932 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.776908467 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.777995908 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.776672342 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.776527727 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.774717661 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.773216534 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.777048416 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778139763 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.77765197 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.779628197 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.777839416 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.777496466 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.776275104 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.776814762 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.780075383 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.784632957 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.781972649 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.774050499 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.777371689 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.778598488 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.780668549 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.778013597 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.777519808 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.779226587 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.780941288 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.777134513 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.778390365 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.776623238 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.780219314 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79237036 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.77744578 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.778638417 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.778594229 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.784318646 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.777096484 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.774713936 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.777918884 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.781519726 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.780737048 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.783992338 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.778500471 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.785068638 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.778205106 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.77949965 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.781460449 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.781119884 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.785349112 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.781951718 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.780000501 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.779362069 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.784081867 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.794544767 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.779314572 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.787840513 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804873122 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.781302804 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.780633025 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.779820499 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778292531 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.779222277 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.781958602 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.779589747 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.779046325 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.778807727 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.779775708 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.780426051 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.785558046 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.780634329 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.778988557 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.778860561 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.780458564 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.782877057 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.776644328 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.779601588 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.779585631 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.779319554 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.780171741 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.781271323 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.780855618 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.793434425 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.79045163 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.78004754 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.780620884 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.777690215 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.786056202 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.78302582 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.788794705 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.786326296 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.781262431 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.782019675 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.782942214 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.780711686 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.777736639 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.782267322 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.783046974 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.780150624 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.778238392 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.793973149 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.78903915 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.78691874 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.782464508 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.78203211 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.782221123 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.784044588 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.78177594 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.781900478 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.785322076 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.781509327 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.784689377 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.780898377 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.780410316 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.784062371 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.787761981 seconds)
  done (took 1055.782647079 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.779416715 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.77929558 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.779579653 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.779214313 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.779471432 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.779357497 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.779469239 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.779383477 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.779390585 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.779115115 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.780089922 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780135221 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.779967315 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.780205946 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.77879251 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.779434012 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.779913973 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.780006845 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.779826311 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77937516 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.779785869 seconds)
  done (took 39.08722229 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.782633626 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.779381353 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.780172712 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.782405204 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.7806729 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.782564332 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.780227675 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782761383 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.782817298 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78005006 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.7827506 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783742139 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.781028584 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.779863354 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.7799381 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783312935 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.783766526 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.780182491 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.782697569 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.780603771 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.78256203 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.780484454 seconds)
  done (took 40.911085772 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.784725908 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.784642183 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.783580076 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.781839718 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.784204919 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.781409273 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.786254749 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.783349133 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.784284219 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.7862842 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.78395426 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.7854889 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.789816753 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.788087793 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.787176369 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.785118654 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.929115586 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.78560503 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.784716986 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.785227272 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.781864402 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.791795562 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.782364727 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.782366766 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.783668853 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.786619531 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.78471527 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.783835208 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.785530843 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.785967761 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.788521898 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.784637791 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.78554678 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.78768911 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.785170179 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.786235333 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.787987174 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.786775248 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.78279364 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.785924994 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.794998643 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.801402926 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.786587978 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.794344723 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.785753618 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.785847901 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.788413032 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.792431179 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.783214457 seconds)
  done (took 89.387170842 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.786009798 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.786366296 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.784187203 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.786558039 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.785651859 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.785934395 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.786850201 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.786642152 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.784018689 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.78314361 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.786688934 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.782969625 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.782284223 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.784553363 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.784289206 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.78122318 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.78174743 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.782143473 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.782499485 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.78250345 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.78234127 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.785068047 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.784899719 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.782698384 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.784571539 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.781870022 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.782280381 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.785447426 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.783194214 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.782227206 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.785434034 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.784681451 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.785596086 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.784018066 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.782470547 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.784362305 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.785712002 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.78371233 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.785464651 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.783989185 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.786074634 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.785740226 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.786144873 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.785979326 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.783391277 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.782955025 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.783319108 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.7833901 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.783476104 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.787182229 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.786221283 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.784720208 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.786205424 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.783634191 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.786327676 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.78683572 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.784141567 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.783703491 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.786349866 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.78454023 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.783454237 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.786216599 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.785008296 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.786137541 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.786681558 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.785168188 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.784903572 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.787005962 seconds)
  done (took 123.073456547 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.787847823 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.787948557 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788471133 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.789287216 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.788237514 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.788818244 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.78825122 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.787754358 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.788213487 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.788193692 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.788983108 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.790216704 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.790246408 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.790191476 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.791912639 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.790573263 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.791508221 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.790187304 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.79092997 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.791576054 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.790962204 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.789859931 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.790209346 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.791614381 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.792193497 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.792126486 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.791299011 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.791432976 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.791898407 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.791279022 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.791492574 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.792029235 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.791449329 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.792193323 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.79256756 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.791568324 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.792652402 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.791782654 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.792586341 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.792601318 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.792641002 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.792484971 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.791878184 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.792047896 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.792949055 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.791966195 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.792215121 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.792896099 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.792191414 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.792286697 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.793162254 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.792541106 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.792827892 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.792543849 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.792925813 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.792611382 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792405782 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.793276724 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.792949885 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.793886852 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.793215898 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.792659152 seconds)
  done (took 112.785163501 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792251478 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.7927898 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.789538297 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.791021542 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.792953885 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.791842011 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.792056486 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.793463524 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.793163148 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.793070518 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79282679 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.790496173 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790255641 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792832516 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.790755116 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790026342 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790015491 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.79042864 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.793286193 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.790453363 seconds)
  done (took 37.560178757 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.790534601 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.793448017 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.790986981 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.792046357 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.793463876 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.791410569 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.794139441 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793085933 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791475676 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794194863 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.793648589 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.793576806 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791513995 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.791302215 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.793659815 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.791330394 seconds)
  done (took 30.407128701 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.791118224 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.794207303 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.794810595 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.795685977 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.791866966 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.791661243 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.79418612 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.79266705 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.79261421 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.795179615 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.795444666 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.794912155 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.795390231 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.795190243 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.792561176 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.794979461 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.792377023 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.79296745 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.795780867 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.796264649 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.792885303 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.79238721 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.794869699 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.795707055 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.793416409 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.793613839 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.793502349 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.793881354 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.7928385 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.795896004 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.792820927 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.79388877 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.793614878 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.792647258 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.797080286 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.793487497 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.795919394 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.796645791 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.796805293 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.796473461 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.796162944 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.794159069 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.79589997 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.79609327 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.793959519 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.797475431 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.794923037 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.794421687 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.793599328 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.794084966 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.797307594 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.797897502 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.796792035 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.798537687 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.797276869 seconds)
  done (took 100.437282168 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796863135 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.796478766 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.794638225 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.797565022 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.797986809 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.794880434 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.79784686 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.795064327 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.794993025 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.796974495 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.796232509 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.798829913 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794865198 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.79871885 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.797037639 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799003449 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.796622438 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.795421712 seconds)
  done (took 34.070740411 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.795847751 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.796203809 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.798663005 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.796059523 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.795365141 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.799232922 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.795955868 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.797904718 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797987946 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.796401286 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796084852 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.798576358 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799031595 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.798924159 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.796379634 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796306621 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.799050046 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799539974 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.796556927 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796600224 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.799542142 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799796226 seconds)
  done (took 41.277779092 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.799030807 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.798813575 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.816230296 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.838976743 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.825577435 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.799194125 seconds)
  done (took 12.610207134 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797556739 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799808431 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.796812932 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799802353 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79889884 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797681208 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797781997 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797302574 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799826948 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798323741 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797693832 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800925911 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799487949 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79735229 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800219036 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801270235 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7982565 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798667226 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799230696 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800898789 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798304017 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800889333 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798621248 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794261678 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799540137 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798630964 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801392413 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798103688 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798642996 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801018475 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800466498 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798565829 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800347674 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798693141 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801992176 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801162888 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798595339 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801386674 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800934911 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79942888 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.801515343 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801573512 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801860428 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799044306 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80151642 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799041538 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799128453 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798911349 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799247766 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801761166 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802112944 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799408301 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802259072 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801861513 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803049127 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802537916 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800278361 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799775354 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801634805 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799771133 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800545996 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802891185 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800171235 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800024972 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80209804 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80094369 seconds)
  done (took 120.526692873 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800861545 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.801033606 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800552698 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801056142 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800764202 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80051934 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801252002 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800552761 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801186071 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802773997 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804687449 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802317238 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801544708 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801045986 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802388555 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801211209 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801605149 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802823417 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803029918 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805051832 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802157037 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801842957 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.802630232 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801966618 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802817501 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804525054 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801973082 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802772993 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802254707 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802692283 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803031048 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802378805 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802103391 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.802167148 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801975325 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802290365 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802789961 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802880375 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803178932 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805458472 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80305514 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804918346 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803211007 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802787829 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803214121 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80300798 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802410912 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803634484 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803634466 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803509091 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803959015 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803714242 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803329295 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803502098 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804332618 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80360862 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803192203 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803088423 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803864684 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80597984 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804102576 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803848909 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807071631 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804007085 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8043027 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803689675 seconds)
  done (took 120.727969758 seconds)
done (took 2460.390191492 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.807036931 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.886356662 seconds)
  done (took 15.433124243 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.967937237 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.921935172 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.804747731 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.839335479 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.805732715 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.827677621 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.806568821 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.805672115 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.805524641 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.80497803 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.806299598 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.993002526 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.800113119 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.806550616 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.806094822 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.898790743 seconds)
  done (took 51.257904801 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.809749173 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.809613012 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.82032396 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.812318067 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.809562501 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.820967272 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.84178876 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.812996863 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.843065247 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.83294468 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.878334343 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.819749397 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.810603328 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.858983196 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.822594123 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.824370074 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.909902578 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.884712818 seconds)
  done (took 34.763389476 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.887861581 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.812651123 seconds)
  done (took 10.447967995 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.818155162 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.803924641 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.84106075 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.815393636 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.827823913 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.831952004 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.83767947 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.848398357 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.844900595 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.817467912 seconds)
  done (took 70.049165526 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.815698285 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.81219264 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.812030418 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.809712009 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.803539261 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.808100808 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.810533011 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.806058963 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.489044126 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.846880181 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.817295607 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.815782069 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.811357552 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.811542539 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.808154367 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.833128408 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.927674509 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.807973854 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.807604454 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.815876616 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.811788607 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.902408563 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.824720925 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.811473119 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.840104166 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.491171073 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.81903445 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.816156319 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.947687035 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.808536443 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.811163322 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.811011348 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.813477278 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.20249683 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.09175138 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.811308651 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.820932582 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.819902105 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.808937754 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.982183463 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.813128786 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.817635151 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.793384588 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.080503011 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.894565341 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.855236074 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.176336886 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.815816556 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.814175933 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.843237549 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.815721201 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.813850129 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.826153736 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.324343467 seconds)
  done (took 129.547020033 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.806631258 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.38308485 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.971585044 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.808084668 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.089098291 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050864055 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.80925468 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.857328195 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.809280398 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.057916979 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.984680637 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.927413465 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.809624029 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.807224338 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.806129449 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.807246504 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.961914627 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.878884446 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.810160141 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.806381579 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.845143092 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074851187 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.936147475 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.810280736 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.831276804 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.037422379 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.935357449 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.926411881 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.287349427 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.805604435 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.876127757 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.809807157 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.809276965 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.807648889 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.973792396 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.91666594 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90631216 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.809613009 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.80851624 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.808683762 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.47217144 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.031931721 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.919442263 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.946257174 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.058014687 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.039349171 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.45747485 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.807870237 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.445130891 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008097083 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.019135517 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.064283956 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.938491963 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.811838188 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.057700478 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.808291426 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.809010818 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.071754523 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.038339421 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.92384498 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.811805484 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.808701305 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.808864824 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.125454251 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.812030782 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.921517894 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.811394131 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.810426194 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.922916758 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.926710819 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.041615031 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.054029698 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.841002092 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.727054791 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.316253887 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.094221146 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.883038223 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074782417 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.812181093 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.810135287 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90542057 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.563010809 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.9837696 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.126862002 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.076740695 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.85345603 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.414205263 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.809796916 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.058502192 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.061018123 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.040288188 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.057033015 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.977893617 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.12881186 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.810695012 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.810756506 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.005114782 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.944002188 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.815153984 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.170029521 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061731236 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.544945251 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.843359444 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.117332465 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951183497 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.815122207 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.442141284 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.812061554 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.012998199 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.855000449 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.812732981 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.81318542 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.058646086 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.685099957 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.81184863 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.586200479 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.878189274 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.815346067 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.079563186 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.814812826 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054928706 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.813764201 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.123530481 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.327231715 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.856707519 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.004809145 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.057295645 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.604863167 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.081101638 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.12740922 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.938227036 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.073898278 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.634857549 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.812186174 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09673243 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.815089593 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.811923096 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.982883775 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.813839522 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.969056799 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.815231301 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.075024888 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.839731042 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.985054434 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.815512904 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.087571686 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.86041211 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.867551407 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.815056728 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.93406722 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.817165099 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.852330123 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.998928662 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.817996831 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.815568366 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.389655388 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.81580875 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.964152955 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.114096709 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.841265802 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.885999148 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.343920737 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.813819927 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909494434 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.84316332 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.422131633 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.81603431 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.985508609 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.817640027 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.773295985 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.814657924 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.126532094 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.04169832 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.815955297 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.814645286 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.610145614 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.521033794 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.815364247 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.992819015 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.053803552 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.465812306 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036740418 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.820268343 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949258189 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.817437902 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.896001901 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.166350443 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.815125844 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.816393137 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.816592557 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.816620273 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.817452098 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.043959097 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.845629511 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.512703685 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.954871141 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.06240215 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.130882436 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.080989661 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.869624331 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.817995769 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.085052439 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.819059121 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.883742915 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.818701836 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.841705237 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065966681 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.822060466 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.046898278 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.104519328 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.873387857 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.86735237 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.819292894 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.816873796 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.816920964 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.961988773 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.918936939 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.81872177 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.816400228 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.935420909 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.946662178 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.008535729 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.406292297 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.992296607 seconds)
  done (took 891.363213359 seconds)
done (took 1204.601252057 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.818264986 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.821970496 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.807928976 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.821254015 seconds)
  done (took 29.025908482 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.827288327 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.823940858 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.825164254 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.823276668 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.826319632 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.823866338 seconds)
  done (took 12.706370161 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.854333509 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.821727364 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.821382661 seconds)
  done (took 21.254067426 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.893291546 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.231061123 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.929489497 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.264482195 seconds)
  done (took 10.075291977 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.82617675 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.825918854 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.824297831 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.826857835 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.827103173 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.829034547 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.826677978 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.826942867 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.828726035 seconds)
  done (took 18.199555652 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.962334115 seconds)
done (took 96.979054446 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.153729307 seconds)
    (2/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.822194384 seconds)
    (3/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.80595012 seconds)
    (4/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.883563238 seconds)
    (5/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.918446297 seconds)
    (6/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.918635279 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.982880981 seconds)
    (8/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.212433818 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.86320966 seconds)
    (10/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.115736716 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.847932895 seconds)
    (12/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.823194287 seconds)
    (13/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.821014656 seconds)
    (14/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.069755165 seconds)
    (15/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.412079883 seconds)
    (16/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.915276693 seconds)
    (17/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.906601397 seconds)
    (18/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.005812845 seconds)
    (19/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.92783483 seconds)
    (20/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.150126167 seconds)
    (21/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.822986592 seconds)
    (22/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.878765736 seconds)
    (23/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.996524519 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.810269828 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.900262972 seconds)
    (26/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.934715357 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.904868382 seconds)
    (28/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.313026906 seconds)
    (29/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.091449975 seconds)
    (30/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.94792306 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.106929744 seconds)
    (32/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.847588779 seconds)
    (33/309) benchmarking ("sort", Int8, false)...
    done (took 4.820592441 seconds)
    (34/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.809716478 seconds)
    (35/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.830908167 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.923869071 seconds)
    (37/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.837029959 seconds)
    (38/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.807324757 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.00547544 seconds)
    (40/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.332687649 seconds)
    (41/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.179439451 seconds)
    (42/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.850421076 seconds)
    (43/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.349757512 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.041153861 seconds)
    (45/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.017208949 seconds)
    (46/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.242743621 seconds)
    (47/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.839588327 seconds)
    (48/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.864966285 seconds)
    (49/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.883996856 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.371012381 seconds)
    (51/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.918264864 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.152832139 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.127529157 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.735058571 seconds)
    (55/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.852737617 seconds)
    (56/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.840658491 seconds)
    (57/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.962459717 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.96813348 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.084036519 seconds)
    (60/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.224192708 seconds)
    (61/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.340214255 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.201106383 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.1929463 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.875978201 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.880366743 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.150251741 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.089273464 seconds)
    (68/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.229890013 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.741774567 seconds)
    (70/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.032973984 seconds)
    (71/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.118435682 seconds)
    (72/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.885387318 seconds)
    (73/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.497957775 seconds)
    (74/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.833296238 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.065132458 seconds)
    (76/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.969783191 seconds)
    (77/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.433817645 seconds)
    (78/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.828502163 seconds)
    (79/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.878279393 seconds)
    (80/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.954756797 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.950246917 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.528954597 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.709848045 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.826651771 seconds)
    (85/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.936638945 seconds)
    (86/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.958993038 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.202985449 seconds)
    (88/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.011244203 seconds)
    (89/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.853162548 seconds)
    (90/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.3079663 seconds)
    (91/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.912015159 seconds)
    (92/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.836398953 seconds)
    (93/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.082376131 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.924625026 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.853487719 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.655427494 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.487751611 seconds)
    (98/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.840516358 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.919860525 seconds)
    (100/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.37163895 seconds)
    (101/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.371518603 seconds)
    (102/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.11043595 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.241247098 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.839197427 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.914641899 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.836198831 seconds)
    (107/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.991757895 seconds)
    (108/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.837745796 seconds)
    (109/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.137753462 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.063363363 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.812019994 seconds)
    (112/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.99334224 seconds)
    (113/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.937825428 seconds)
    (114/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.439809284 seconds)
    (115/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.98204086 seconds)
    (116/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.843438286 seconds)
    (117/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.206889645 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.836890368 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.839792877 seconds)
    (120/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.207705277 seconds)
    (121/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.869491717 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.061700693 seconds)
    (123/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.824728886 seconds)
    (124/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.905932441 seconds)
    (125/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.785389456 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.224618217 seconds)
    (127/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.824734524 seconds)
    (128/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.061195784 seconds)
    (129/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.971615143 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 2.284969839 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.861789239 seconds)
    (132/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.89575364 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.096608841 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.84031838 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.096522194 seconds)
    (136/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.836751827 seconds)
    (137/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 4.760969813 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.813902574 seconds)
    (139/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.82626131 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.484208129 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.102476367 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.86110223 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.085286448 seconds)
    (144/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.923104897 seconds)
    (145/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.127765908 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.859075319 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.938637468 seconds)
    (148/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.836813015 seconds)
    (149/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.91318742 seconds)
    (150/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.422418053 seconds)
    (151/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.512049753 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.847834135 seconds)
    (153/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.205142695 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.945434194 seconds)
    (155/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.900020268 seconds)
    (156/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.916225399 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.057785614 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.829755258 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.88131432 seconds)
    (160/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.723418145 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.487185799 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.82996358 seconds)
    (163/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.107305346 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.140729371 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.891560732 seconds)
    (166/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.922383008 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.860457339 seconds)
    (168/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.960742713 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.085574048 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.872695949 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.917767263 seconds)
    (172/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.414374328 seconds)
    (173/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.947099954 seconds)
    (174/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.070955284 seconds)
    (175/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.934055212 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.00330028 seconds)
    (177/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.356828807 seconds)
    (178/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.913150364 seconds)
    (179/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.96230219 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.470160951 seconds)
    (181/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.537372929 seconds)
    (182/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.835268082 seconds)
    (183/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.843181932 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.11142717 seconds)
    (185/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.127543005 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.218237936 seconds)
    (187/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.965581388 seconds)
    (188/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.994738521 seconds)
    (189/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.012061575 seconds)
    (190/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.897262132 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.866494824 seconds)
    (192/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.98691851 seconds)
    (193/309) benchmarking ("sort", Float32, false)...
    done (took 5.621891466 seconds)
    (194/309) benchmarking ("sort", BigInt, false)...
    done (took 6.845105869 seconds)
    (195/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.85132268 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.9243381 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.880343335 seconds)
    (198/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.727109724 seconds)
    (199/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.442822854 seconds)
    (200/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.907939929 seconds)
    (201/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.922001734 seconds)
    (202/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.949084196 seconds)
    (203/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.975798834 seconds)
    (204/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.057356466 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.915064013 seconds)
    (206/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.150944601 seconds)
    (207/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.333983024 seconds)
    (208/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.045152501 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.744563089 seconds)
    (210/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.149871164 seconds)
    (211/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.015510772 seconds)
    (212/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.946014078 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.897191809 seconds)
    (214/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.033573956 seconds)
    (215/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.37628153 seconds)
    (216/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.867461583 seconds)
    (217/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.130005162 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.277874712 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.140965425 seconds)
    (220/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.357772053 seconds)
    (221/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.929945105 seconds)
    (222/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.985210464 seconds)
    (223/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.922665572 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.435972897 seconds)
    (225/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.926879109 seconds)
    (226/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.195719054 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.555019155 seconds)
    (228/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.048799113 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.529860705 seconds)
    (230/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.852293718 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.896366103 seconds)
    (232/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.603058775 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.150250817 seconds)
    (234/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.183527316 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.84494962 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 3.188904124 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.139857473 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.872071779 seconds)
    (239/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.867663823 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.827105332 seconds)
    (241/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.336255902 seconds)
    (242/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.012728974 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.888158922 seconds)
    (244/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.948244461 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.112253681 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.846436271 seconds)
    (247/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.846030537 seconds)
    (248/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.997662179 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.744060284 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.511555547 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.915798069 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.167168515 seconds)
    (253/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.193871074 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.06333816 seconds)
    (255/309) benchmarking ("sort", Float64, false)...
    done (took 5.669928774 seconds)
    (256/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.23089053 seconds)
    (257/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.465725634 seconds)
    (258/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.828164895 seconds)
    (259/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.059141388 seconds)
    (260/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.691676579 seconds)
    (261/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.995594187 seconds)
    (262/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.927564262 seconds)
    (263/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.035641227 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.846111028 seconds)
    (265/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.464892024 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.830355768 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.654559169 seconds)
    (268/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.782114654 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.845252116 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.875595296 seconds)
    (271/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.848417024 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.223083757 seconds)
    (273/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.869106168 seconds)
    (274/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.029474394 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.538609636 seconds)
    (276/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.12324894 seconds)
    (277/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.535132267 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.77982251 seconds)
    (279/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.057627806 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.880896782 seconds)
    (281/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.269629984 seconds)
    (282/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.875714107 seconds)
    (283/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.828069557 seconds)
    (284/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.872523511 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 3.926780117 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.934604963 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.077797929 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.928068838 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.959713818 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.018380907 seconds)
    (291/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.190991268 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.84673524 seconds)
    (293/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.337349334 seconds)
    (294/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.938287405 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.183162408 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.828602201 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.887691582 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.222897728 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.860889538 seconds)
    (300/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.124573788 seconds)
    (301/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.971633544 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.526808369 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.22552895 seconds)
    (304/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.668362573 seconds)
    (305/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.221987163 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.862705557 seconds)
    (307/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.823683392 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 3.320248217 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.933788242 seconds)
  done (took 1014.131947821 seconds)
done (took 1015.902368555 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.870995324 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.866264375 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.850097388 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.869916597 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.961009412 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.8788542 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.860836563 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.852890438 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.89674763 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.898476476 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.849177854 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.876379738 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.851757918 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.849792976 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.849043409 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.863882176 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.157630895 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.877963236 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.868274731 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.85844904 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.866836929 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.84980835 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.898981753 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.879287775 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.853174238 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.852531627 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.853989033 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.870444352 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.962627266 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.854646642 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.853521263 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.861209069 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.158545855 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.87560948 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.845523269 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.871867924 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.862054419 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.859647515 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.855022896 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.884776103 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.299148157 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.856893541 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.852744418 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.850864037 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.852409726 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.854635881 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.852900323 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.858610892 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.864692182 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.866905023 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.296153129 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.873373052 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.855428836 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.852479965 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.863044167 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.853762522 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.855220687 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.868498187 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.872272038 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.867684106 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.15227306 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.882326461 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.853288862 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.868746667 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.861260251 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.334338341 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.853894709 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.856921995 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.300257959 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.86257729 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.333678201 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.867803687 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.854502066 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.867880346 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.885978033 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.16166035 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.873653572 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.851957938 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.86107867 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.852457512 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.863323319 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.865981109 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.859225741 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.853704609 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.867090599 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.882059977 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.863707526 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.856413862 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.86213848 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.87327398 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.862046472 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.865905504 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.856435577 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.850312944 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.863534753 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.857099039 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.858360586 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.858226777 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.859260073 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.864863332 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.29998339 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.877107398 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.853066298 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.85219786 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.853511755 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.869301711 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.29846291 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.862373563 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.877594009 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.9029435 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.856004266 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.152508864 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.885940696 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.871787204 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.864505324 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.858518592 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.850867241 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.153215964 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.323546272 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.876185181 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.857226808 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.855080958 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.872071636 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.856885798 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.851845771 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.16259409 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.882499054 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.870524438 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.977707721 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.865759334 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.889039937 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.85503306 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.858897147 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.886129085 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.872182586 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.887802662 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.857383953 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.871701474 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.874069022 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.852213049 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.867536537 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.867027379 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.857945047 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.862203106 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.850379385 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.884294482 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.869006604 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.869660157 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.878003168 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.979270403 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.85382226 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.153150465 seconds)
done (took 291.498454211 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.926219434 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.852906673 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.956916734 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.854755045 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.939475512 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.94132852 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.850192729 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.850786351 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.850893292 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.298658377 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.851198251 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.850788757 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.84734571 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.850331686 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.939101275 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.852930886 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.852088316 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.206730652 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.855704883 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.924742959 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.854026568 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.851200712 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.853954187 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.23767863 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.852129658 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.850765873 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.926464298 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.855372708 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.20173275 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.850462439 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.848303436 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.202080657 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.945798078 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.873141548 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.865153831 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.862059295 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.941001994 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.858558729 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.937840653 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.937975063 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.958209185 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.896511617 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.854519779 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.8526884 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.857480832 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.856361623 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.852380204 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.882901122 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.85362838 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.853124811 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.208415992 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.865588779 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.854108591 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.853821272 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.853447795 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.88813338 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.853462864 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.859046163 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.946619407 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.857802925 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.919392369 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.240648846 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.299920279 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.85587866 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.858424344 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.854494291 seconds)
  done (took 183.5311844 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.922653808 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.931154452 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.9246102 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.860774405 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.908742386 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.929507993 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.85978159 seconds)
  done (took 15.123403714 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.863098915 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.857912933 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.908264867 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.90753622 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.857651773 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.007026481 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.858760577 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.870080997 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.85492489 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.911161267 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.858227631 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.858383807 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.863836272 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.855483871 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.907543323 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.868597298 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.972759119 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.859982489 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.858237223 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.015486312 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.855422859 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.864338735 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.912892708 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.87013359 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.859820603 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.864534013 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.44814675 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.859195561 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.856502694 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.859660478 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.856180598 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.899520853 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.858214384 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.852993421 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.856361416 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.979446243 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.858668947 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.856013802 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.860032308 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.851783266 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.858352893 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.859187199 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.859472558 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.856801956 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.859432562 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.882954848 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.858697436 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.859248958 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.859248218 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.859755818 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.909843688 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.859524926 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.856760596 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.856703762 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.915447517 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.866250871 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.861552893 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.856940206 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.860137972 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.856577373 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.017574014 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.907983576 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.86032013 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.909229061 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.860251523 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.859533905 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.859921994 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.860233184 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.915955445 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.859898827 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.909178764 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.857938241 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.017618116 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.884872035 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.862020528 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.864162321 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.863249865 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.861644199 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.859838925 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.866914988 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.858988 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.863027578 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.868370831 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.859022334 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.857640622 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.969035824 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.971406485 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.859028173 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.874058317 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.868563387 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.858651904 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.916761477 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.861041398 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.858921939 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.913731697 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.977545283 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.34919232 seconds)
  done (took 205.241625472 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.866442566 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.869951476 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.863947697 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.878562961 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.862109597 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.864254352 seconds)
  done (took 12.996926727 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.864675399 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.863310151 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.862146946 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.862164701 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.863136405 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.864158253 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.864229373 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.864972042 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.86660359 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.862227563 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.863305777 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.864317983 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.864291262 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.86247018 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.86352519 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.862924804 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.863649172 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.86014097 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.863238685 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.864463396 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.005904371 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.86380462 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.863598546 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.865130922 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.867136484 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.863974934 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.871371595 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.863120256 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.864227983 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.871060958 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.867179979 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.866053606 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.865688232 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.869614754 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.868384522 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.866356261 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.8671549 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.865950116 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.861309114 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.864757038 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.865868146 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.865016975 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.864271356 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.865475968 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.866664351 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.869520565 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.870119826 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.872897017 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.865959959 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.866936012 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.866319795 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.864902339 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.866405231 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.866398063 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.869330384 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.871342166 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.87013267 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.866995556 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.866103025 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.866722316 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.865660681 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.866380304 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.867835453 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.871627058 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.873047723 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.868596299 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.867080877 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.870056905 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.86605594 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.865405582 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.867603649 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.863390125 seconds)
  done (took 137.286182771 seconds)
done (took 555.978986419 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.173736282 seconds)
  done (took 8.968593427 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.97926722 seconds)
  done (took 8.879419994 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.420101011 seconds)
  done (took 10.215382527 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.863202984 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.877604573 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.87100677 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.862334957 seconds)
  done (took 29.278220617 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.903190278 seconds)
  done (took 8.699177446 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.873216001 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.859662969 seconds)
  done (took 15.566631763 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.97553969 seconds)
  done (took 8.772509212 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.950215102 seconds)
  done (took 8.753425027 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.88462843 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.869624285 seconds)
  done (took 15.565252475 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.845566044 seconds)
  done (took 8.6418614 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.575951172 seconds)
  done (took 11.383099431 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.863297944 seconds)
  done (took 8.675921153 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.927105243 seconds)
  done (took 8.727105204 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.033535969 seconds)
  done (took 9.833345194 seconds)
done (took 163.755414044 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.867884665 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.867799943 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.864736828 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.866446248 seconds)
  done (took 29.266938207 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.903743244 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.904394838 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.905730133 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.914718045 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.906987037 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.904164557 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.895742653 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.896691445 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.914738854 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.907308866 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.906921591 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.906410067 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.905575438 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.896722534 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.907224762 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.906446963 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.915152042 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.905516026 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.897273728 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.906771426 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.871071408 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.914900164 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.907620792 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.873835026 seconds)
  done (took 47.476719039 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.071406491 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.943487702 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.026000013 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.925265127 seconds)
  done (took 9.767223526 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.923815675 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.92468135 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.936233465 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.976112598 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.009713443 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.933960686 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.898873816 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.893718791 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.879862882 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.924957747 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.00087917 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.9416513 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.009404931 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.872956278 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.060423767 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.872256578 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.872536057 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.925182428 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.975115489 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.990638769 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.872832056 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.924435032 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.92735173 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.941673646 seconds)
  done (took 48.291811106 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.871675208 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.880900261 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.879360229 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.872248451 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.872064429 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.872884954 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.878176272 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.87354398 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.892934923 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.873179504 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.871743657 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.871862437 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.87167648 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.872443249 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.87283474 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.886483385 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.886024876 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.873733752 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.875018348 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.878874479 seconds)
  done (took 39.330837602 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.866141345 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.721733955 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.219309223 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.123582628 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.867021534 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.868317141 seconds)
  done (took 31.469855621 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.886157941 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.936639422 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.881046151 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.931042664 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.010889764 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.880244084 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.874738099 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.941705877 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.98468908 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.945405975 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.894374977 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.900698211 seconds)
  done (took 24.872372497 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.86921779 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.870445466 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.876431643 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.886316481 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.885332153 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.882005483 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.881899012 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.867838986 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.887944532 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.892247524 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.882025686 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.887715063 seconds)
  done (took 44.376815485 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95720485 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.914941989 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.903928395 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.554772851 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.248346592 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.08191686 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.518241114 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.199435753 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.872618899 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142513129 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.866940416 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973008598 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.125818489 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369387046 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.901711548 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.335510007 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167948444 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074452823 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90005693 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.544756229 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935518831 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.060371252 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.706833899 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.928217114 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081437545 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.999044474 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.131568916 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.870300211 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004573857 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910034706 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881502105 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.87075033 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145661306 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244875217 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977715941 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881615332 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.494823528 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.58353422 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.859966654 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.633155853 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.584260163 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.997300881 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882152461 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871946646 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.80649173 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.031669185 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247093861 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.877419711 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.582399486 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.871552938 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883522859 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966210439 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.875965576 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.688721689 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791291877 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.874975218 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.870023115 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879070972 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.447187394 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.982081394 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.065493869 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.844740657 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.964740335 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.550157201 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255212145 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.019994542 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.876417226 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.877123944 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807052963 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.630720908 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929586603 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202612791 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.893688095 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.523020096 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160766249 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.922866956 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816990256 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138277262 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.419244624 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.845004448 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102459157 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874530007 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809708303 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.81670456 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.809210849 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132149504 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914288218 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.644249987 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916911832 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.201596834 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.885126315 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891858102 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897689796 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.098628624 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.758802605 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875821132 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.683899283 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.028960173 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896506229 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.20410855 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810443034 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.879631567 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.132268697 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.087190705 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.960534019 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.382356883 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032223931 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.443695528 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.926771447 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.029351164 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.922067286 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.137438418 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934080315 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.978534854 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928687065 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.875042029 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165711983 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.482091795 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.010577715 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.89896055 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.003303223 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.196458791 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905574108 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959531724 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.885552303 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.876061673 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.650306587 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.428232354 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.877421231 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.880223106 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.963711814 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921567253 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.877439085 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.823314678 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.500540718 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.943888441 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.892177852 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.100819698 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.451080951 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18593003 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811769905 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206220891 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.969709355 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.100940751 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.51978081 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.956854184 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138969219 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.963292537 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.997040698 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924587315 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896802398 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975439689 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899404409 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.040254621 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.169499056 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.881372833 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.881385807 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.638707787 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.915757628 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877467923 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.883335071 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.629775599 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144681118 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902622767 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.882451405 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.767713673 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.893842058 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943292958 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884293736 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.888839136 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.413871476 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.60908026 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.886132061 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.462908672 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103819226 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890141424 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.556378975 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996975885 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.961005054 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144573565 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939457314 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.813551943 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.590181712 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.577117416 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88057782 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.814657157 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.879860959 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889297516 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891503423 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.076853246 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.147003406 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924544527 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.558577598 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.923205404 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.891710883 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.885323272 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881350208 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.39115069 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.99609487 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.078071844 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.92427574 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026836252 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.895087763 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.816149573 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.885866335 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.886556929 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.881712189 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.882562736 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91558517 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.562287028 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25671629 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143823837 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.536505666 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895666792 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.615182525 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.940320965 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.881386479 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.537472113 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.215961391 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.918085626 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897462054 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.894029116 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.63917525 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.590042227 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453794698 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181685651 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176739271 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305768125 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.107468944 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.909214188 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.217149019 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817442248 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.440655811 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940574767 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.224005543 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828013835 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967024825 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.525518231 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230355295 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898142496 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11092453 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257464493 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.605072731 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027449125 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095477939 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917857179 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.045320041 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843466104 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.184061488 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024296876 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.559235329 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091134125 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215665039 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.553347718 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.009757268 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.884704334 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.562602748 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969887733 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.596675674 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.056673638 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.083888736 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.785975748 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355750116 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.890369518 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.110162491 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225744045 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.070178322 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.00387153 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821429536 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.896183281 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.896319577 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.887066198 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.883445671 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.772190662 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.139620648 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896483082 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819724473 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.011044188 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164847053 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.785070915 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.89106398 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886115027 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177725126 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.435654476 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050536772 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.000433607 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.40043887 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89337574 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.820729488 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822196108 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.58038423 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.891264071 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.861315043 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089485602 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.98706665 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832343852 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.98141136 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.963936663 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.143600974 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.900709262 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.149238516 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160436385 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.588440241 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910572619 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.987398504 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.541265389 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.997850043 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.888162982 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.123652542 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.642017187 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.113808543 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.904799876 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.84521861 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.886749539 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101904875 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.887743114 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.76299223 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120408499 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.610992762 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.911123823 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187715882 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960666043 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.756251505 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.933959941 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.979676385 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897978548 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967288728 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898287994 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.90051592 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.899877305 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934058794 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.803931078 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.01348031 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.903001039 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983307463 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.997872846 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.4101592 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.894310332 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154780615 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236143624 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.204758891 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947527145 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.889369231 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889585248 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822316218 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038454605 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.115461369 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166271044 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.018817903 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.003316674 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913966131 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.546518002 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.115599257 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129876804 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165808594 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.786366026 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.416637789 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.928200254 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.890038196 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900829099 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.100806569 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095561367 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188771885 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.034434333 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.985488361 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.248463561 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164219598 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.890531797 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890876228 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.479745317 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.038748804 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.562532104 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.934847829 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.803385801 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166728761 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901178927 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26559767 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.913878373 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.053013968 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.664832668 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.571242716 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.182319661 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.875695361 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.953209716 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157300796 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.262777207 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203013799 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959927748 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901664794 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.006146516 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039217286 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.799322644 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.893481518 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.892187615 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.941934397 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.602165816 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.903409643 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159297484 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201432756 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.890697982 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.788437662 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916357938 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.90305777 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.117229764 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149158399 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145811737 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90190817 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.899231455 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.708319345 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156866603 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948788339 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828350591 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.896552586 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990884529 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.141293956 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913538515 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.346404649 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.605400693 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157917607 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.892422813 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916464622 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.063164316 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244395589 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203489282 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.423470545 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09673552 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.480006549 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.478825397 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19326173 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.899106692 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.062195268 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197816608 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.897631763 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.995882764 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931770729 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.153648673 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203977712 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.993112525 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.560350881 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.86317815 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.237088121 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.455761882 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833933359 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.904450418 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.955127495 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895439369 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.023129331 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906710518 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.796613772 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.065145177 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.676481641 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.173412833 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.900483515 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.888191483 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.588399854 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.187124228 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928424188 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036495741 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896914311 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.715453908 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.247518956 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.152879047 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.992171953 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.904335677 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.900371073 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897114986 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.883776933 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.093281448 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.093213241 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171052103 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.021843165 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.932346389 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900424662 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.112291 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10980672 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.75062966 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02947981 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.994775991 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938100652 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.807896025 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.399470983 seconds)
  done (took 1680.628694271 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.933647451 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.930612723 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.934522203 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.930346778 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.935293941 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.013237048 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.948401578 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.913932654 seconds)
  done (took 57.372807374 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.897858074 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.119213669 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.90712064 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.898807907 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.90719584 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.898302068 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.066215903 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.90757447 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.907779952 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.907551034 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.900826221 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.897530594 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.21428183 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.920436836 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.899340871 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.901393915 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.907178284 seconds)
  done (took 74.909669874 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.899141341 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.934791637 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.924646054 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.909338092 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.947571936 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.913195031 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.772480533 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.921953624 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.901430541 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.029165518 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.528434685 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.916884567 seconds)
  done (took 87.433351018 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.908783114 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.907420287 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.906042637 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.905910117 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.905151748 seconds)
  done (took 11.37076788 seconds)
done (took 2188.394517358 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.153024519 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.115394163 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.125744609 seconds)
  done (took 6.07603664 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.05007963 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.097663579 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.218617001 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.236371668 seconds)
  done (took 10.441143435 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.19100061 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.289204316 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.106522178 seconds)
  done (took 8.422441023 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.302825918 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.911616795 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.010081868 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.897656876 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.901845778 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.901563199 seconds)
  done (took 22.53791611 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.90460284 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.906880606 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.904781039 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.907145648 seconds)
  done (took 9.458822892 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.884534829 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.659597973 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.886907356 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.90141061 seconds)
  done (took 21.16882511 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.652008623 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.662588615 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.648257635 seconds)
  done (took 9.797946644 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.482821057 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.818937647 seconds)
  done (took 9.13872848 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.168092292 seconds)
  done (took 4.005204184 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.037090981 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.171405034 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.367556712 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.395408597 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.475990788 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.777289744 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.213693223 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.149839452 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.296583304 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.338963444 seconds)
  done (took 25.060894552 seconds)
done (took 141.319797196 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.288543381 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.146419191 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.102287456 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.242512901 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.127697886 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.100827618 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.108355004 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.231391955 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.759301568 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.753580567 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.24613472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.127719632 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.263252932 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.146272702 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.266465074 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.149546872 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.129858503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.315017644 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.94575956 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.18588625 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.110769638 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.8817191 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.088255057 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.899826679 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.173216263 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.053814287 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.460699198 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.148008676 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.092163193 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.473804032 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.056173964 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.328029803 seconds)
  done (took 174.241976434 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.8184359 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.902774083 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.904676596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.911678931 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.519627305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.904380023 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.90768596 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.904593584 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.154014629 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.134081074 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.904978968 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.48562842 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.905302754 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.905055389 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.906499503 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.905084004 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.248557904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.847780005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.90488648 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.903417466 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.904981488 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.408645562 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.905848461 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.434109989 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.225204257 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.904266795 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.904218517 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.908780865 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.905053895 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.906875437 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.913710568 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.906092882 seconds)
  done (took 210.045704827 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.903247621 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.905696866 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.906073761 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.905325306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.905470414 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.92381369 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.908768782 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.903426177 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.461672101 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.485308239 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.929236797 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.906665841 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.909776604 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.907070962 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.912388518 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.908136084 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.928774545 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.914192476 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.916650876 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.916410243 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.919594595 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.706013584 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.906797779 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.705923012 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.908469723 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.911956967 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.908283288 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.913065063 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.914214106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.916505867 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.918902866 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.907360887 seconds)
  done (took 221.740535186 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.108653396 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.912142023 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.91557613 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.865077614 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.914055211 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.912614199 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.905020589 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.110636931 seconds)
  done (took 19.499345944 seconds)
done (took 627.377310748 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.369912787 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.21285272 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.086327206 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.934092965 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.189501393 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.96699143 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.930930956 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.993740736 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.123397706 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.005722676 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.574950018 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.950550125 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.661769115 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.957199931 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.061969316 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.990426551 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.471625807 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.559708329 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.110415204 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.001420866 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.104222547 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.868223315 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.007093358 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.16706052 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.691038454 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.908597486 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.127542987 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.47615466 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.943730726 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.100422945 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.707123546 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.3446218 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.94323422 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.932672659 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.98408389 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.966231298 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.300838498 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.940882176 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.056801079 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.670845462 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.004074838 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.99932287 seconds)
  done (took 106.241473882 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.906044017 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.904837003 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.903038115 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.905381287 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.90643917 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.904460569 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.904448376 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.905218094 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.904228889 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.904717931 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.903857899 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.904988781 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.904472984 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.904377423 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.90888596 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.909240225 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.909145712 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.910727853 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.910503848 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.909939715 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.910141304 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.909110266 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.911114512 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.909734934 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.910841005 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.910817408 seconds)
  done (took 51.444204045 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.920675838 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.064956476 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.142030509 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.937512281 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.930722208 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.925044895 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.939949825 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.926576089 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.925670622 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.926528269 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.01869496 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.928744715 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.941509846 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.1436558 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.935010711 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.923077396 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.922196275 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.921965881 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.074817981 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.93797816 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.942285649 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.92682154 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.941641218 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.935497829 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.925219425 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.923164383 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.927652931 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.39074274 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.931562885 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.018431094 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.96729541 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.944522062 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.353180677 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.152811153 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.97474916 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.929904508 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.923424598 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.022668087 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.92867299 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.92491326 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.941751553 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.928120769 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.143155695 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.425104744 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.935488564 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.923401306 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.399069947 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.030066835 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.965621914 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.937194708 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.148017283 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.94025369 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.927085731 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.925695147 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.962357402 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.935858633 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.925622026 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.282010057 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.937043812 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.943726962 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.930022203 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.925839156 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.076530856 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.931171496 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.068649682 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.933197504 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.933413422 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.927298981 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.145489679 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.939465993 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.427620716 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.934302901 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.923944047 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.018076742 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.070564727 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.420179572 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.936419559 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.078494743 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.365713296 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.942497385 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.932056566 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.380049783 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.950385374 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.9319708 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.928034519 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.925874615 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.922507214 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.970683174 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.939692123 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.359542873 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.432304833 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.290796436 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.953659881 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.944352327 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.926551549 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.283858255 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.932856559 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.925607132 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.138990882 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.439049964 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.936466823 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.931256285 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.411742104 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.938053605 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.944458062 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.934057994 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.149522403 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.940219183 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.970112838 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.924233285 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.932760158 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.929516706 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.945614131 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.931709189 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.926942937 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.404293356 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.039226269 seconds)
  done (took 238.411405483 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.922595601 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.921842283 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.921501933 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.923438594 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.920560366 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.925056706 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.92285096 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.921649167 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.925181192 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.919481872 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.921870435 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.922383189 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.923711952 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.922280881 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.952512393 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.925799419 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.532188525 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.926073668 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.923595612 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.932684113 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.570309257 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.925018085 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.918292245 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.923154485 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.928238853 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.923565931 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.9184666 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.948447631 seconds)
  done (took 169.020624564 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.928310772 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.038289611 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.9471802 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.954057154 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.936550127 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.926626974 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.952941639 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.943861965 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.932138447 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.925265651 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.925067289 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.987842854 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.937313252 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.029253175 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.959123012 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.957414361 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.026902719 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.934663392 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.925459493 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.926123081 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.956233284 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.921964628 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.989542238 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.052669377 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.944855423 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.040940519 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.932325503 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.929789602 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.930017081 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.045833323 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.943603789 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.988868102 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.955842947 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.9443115 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.044551293 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.042900475 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.036449103 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.958120058 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.932595709 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.925284907 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.929589783 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.922530637 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.042289335 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.945656477 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.932339884 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.035629963 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.94757685 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.93053906 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.939853713 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.92577861 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.946770702 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.947957633 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.994949802 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.05581605 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.959165115 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.956852497 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.95717082 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.206756476 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.935071943 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.026349974 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.922854769 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.041152593 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.949091093 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.917683484 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.927767384 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.933452879 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.958647163 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.961662736 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.036200572 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.936148793 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.02747018 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.96441819 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.93644382 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.929256785 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.931834421 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.044890792 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.048765847 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.965255592 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.96697894 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.961600623 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.92658717 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.932583277 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.924519417 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.949800566 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.935696912 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.046736757 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.049000665 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.94071629 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.935503144 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.936277386 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.933976505 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.959406123 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.052297832 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.965332753 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.031152089 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.000020819 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.003908352 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.947062398 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.94644326 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.935580136 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.995213397 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.943604932 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.946251255 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.257723879 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.001272292 seconds)
  done (took 208.868680617 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.023104255 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.393394384 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.984963862 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.988009778 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.221643268 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.374170023 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.701907977 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.975839351 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.982615278 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.005964801 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.144597168 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.039355514 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.995711336 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.967589649 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.39171485 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.970584732 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.982500805 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.001692833 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.983163399 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.521179968 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.279369082 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.103692437 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.976149842 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.119068017 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.960393252 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.252104882 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.473042161 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.352583206 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.014513946 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.321335417 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.32029771 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.652095913 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.191026347 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.218309793 seconds)
  done (took 76.753182668 seconds)
done (took 852.581055166 seconds)
SAVING RESULT...
DONE!
