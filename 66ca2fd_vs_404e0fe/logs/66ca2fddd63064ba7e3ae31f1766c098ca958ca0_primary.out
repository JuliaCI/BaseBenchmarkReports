cset: moving following pidspec: 20239
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.954589697 seconds)
loading group "string"... done (took 0.604274222 seconds)
loading group "linalg"... done (took 9.40975358 seconds)
loading group "parallel"... done (took 0.194964607 seconds)
loading group "find"... done (took 1.471598595 seconds)
loading group "tuple"... done (took 2.177251755 seconds)
loading group "dates"... done (took 1.424066034 seconds)
loading group "micro"... done (took 0.218532359 seconds)
loading group "io"... done (took 0.580604499 seconds)
loading group "scalar"... done (took 45.432861773 seconds)
loading group "sparse"... done (took 13.809548532 seconds)
loading group "broadcast"... done (took 1.207803363 seconds)
loading group "union"... done (took 12.376227193 seconds)
loading group "simd"... done (took 2.613030653 seconds)
loading group "random"... done (took 10.459101404 seconds)
loading group "problem"... done (took 1834.12515435 seconds)
loading group "array"... done (took 24.99130396 seconds)
loading group "misc"... done (took 1.158565316 seconds)
loading group "sort"... done (took 3.587617475 seconds)
loading group "collection"... done (took 18.66301747 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.733019644 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139487639 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.213949287 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.265117846 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.227678484 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.147383672 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.165750041 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.585931897 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.95455794 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.269211683 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.148534078 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.578602317 seconds)
done (took 6.088983574 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25466338 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.381893864 seconds)
    (2/2) benchmarking "String"...
    done (took 0.175545819 seconds)
  done (took 1.142041958 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073946739 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.180126191 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110530774 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097074575 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.110741195 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110148144 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.109211709 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110243962 seconds)
  done (took 1.415531269 seconds)
done (took 3.479447423 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.53494069 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.856626267 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.557589595 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.165098095 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.196493122 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.175775849 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.321268035 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.1585216 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.109906114 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.113527579 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.214893466 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.37827505 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.49695559 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.05043106 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.109627487 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.109282891 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.093132835 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.712791926 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080448053 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130967592 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.581723708 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.112904406 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11175949 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124316168 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.201104321 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129152544 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.170378289 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.097642311 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.674470705 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102298899 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.225749553 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082759071 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.169811416 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.251045011 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.082496646 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.104073594 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665511031 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.189249967 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.114440134 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097069904 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.7014631 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07840799 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.234553065 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.110710651 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.106910786 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18782811 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103392538 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093834584 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098184616 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.10234682 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.151991076 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.46667046 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.102455824 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.167336564 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.104967905 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.730449221 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097924179 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155250254 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.138644475 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.10756548 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.080050374 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.107952882 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.148496303 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.109637153 seconds)
  done (took 20.028633104 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.157444644 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.163647162 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.089768383 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13928913 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137879296 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.093661896 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081402793 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08972396 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123565229 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.185995912 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136567664 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.165439145 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.086546455 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083080403 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.137860688 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246231887 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118402985 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.117933111 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.081989198 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102696406 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136388724 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094733322 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105905927 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107963506 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166985583 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199955876 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108438546 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.119312831 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09563943 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111942047 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.137238936 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14556375 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.087934039 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080741449 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.181228658 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.116264655 seconds)
  done (took 5.142718262 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.219259032 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.112118002 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.232678698 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.176550677 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146173587 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.163077965 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151245798 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.295020164 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.220242322 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.18125783 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126423069 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.093801337 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090359683 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078890754 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.184563496 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075717678 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.679537508 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.176833809 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.145402162 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.147348378 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099668605 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080135731 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.744626328 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096385837 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078610435 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098951611 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.074393364 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.214586425 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099092545 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.323074685 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.113006241 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0881466 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128292141 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201747293 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130583912 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136796809 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084978625 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095371037 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.215858773 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095572616 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10457264 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074951797 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125272544 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127111291 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115082968 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094976792 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.093824007 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.227361607 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109767831 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09534537 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102794402 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.11521405 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195464605 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.133846773 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077110919 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.378053583 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094223784 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100777515 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094285293 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.29121659 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135719925 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079029135 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.091252349 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083941622 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.090714958 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.448871859 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090642948 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.078183411 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.09077771 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159766848 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096976349 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102217652 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097140228 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083122443 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113698312 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.076995156 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.092597441 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.092131745 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076453812 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.097750654 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116620723 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08239444 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.091229243 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143703019 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114510762 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.111260778 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120361565 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.081760022 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09171022 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124057646 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080676669 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093321557 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081215748 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.184562804 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086156985 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117398052 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098733776 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.137246647 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079274084 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.216369737 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080484294 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122699431 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096048437 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123641459 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.105340196 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093933969 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096345926 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075161999 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094085623 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143209882 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090318818 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076666221 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097059814 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107337307 seconds)
  done (took 24.333805411 seconds)
done (took 50.090069879 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.50466499 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.114540391 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.115674336 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.113640346 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098819407 seconds)
  done (took 1.613395524 seconds)
done (took 2.252617277 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.370077598 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.18992459 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.116272299 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.181265511 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.101532793 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.190171591 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.18643043 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.100711102 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217593121 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096378593 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.178257003 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096460143 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086337436 seconds)
  done (took 2.779285398 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09610177 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120452401 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082252757 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110145696 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076033195 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109707386 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107630315 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114031379 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109046487 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089035394 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09143863 seconds)
  done (took 1.742718224 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092589566 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113952838 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083270237 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107991698 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07682326 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108012829 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09138373 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117727697 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106902699 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08880393 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092161174 seconds)
  done (took 1.716341103 seconds)
done (took 6.870456394 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.117774618 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.42327282 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.146447396 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.197197009 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.373186886 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.239740905 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.570171028 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.159192419 seconds)
  done (took 11.074230512 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.170564895 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084031822 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099507156 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097693675 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084687173 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097344051 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.083716387 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.095789941 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084885916 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098840377 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096917967 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085151171 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.096129876 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08411616 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096287288 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085043033 seconds)
  done (took 2.245953129 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119271515 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117301159 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105023935 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109841706 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088207538 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102652492 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10515065 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090324376 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100214341 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101810769 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.097627068 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107603314 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107523913 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.087499261 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105553695 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108974575 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087606299 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106321669 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105184537 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092828264 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10901297 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102385141 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.094056657 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109169054 seconds)
  done (took 3.211247281 seconds)
done (took 17.168375965 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.172845055 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097314062 seconds)
  done (took 0.915339747 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.146964903 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.150104493 seconds)
  done (took 0.946471569 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112456225 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096146244 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137166544 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.115238318 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083251452 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095916598 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133335979 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096074797 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083753348 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096142989 seconds)
  done (took 1.703191025 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.087145534 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100224337 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.094409104 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.156490252 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.09580436 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.102379337 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087446882 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100589318 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101239891 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083326327 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105416107 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.119994899 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.089580996 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122559674 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101712148 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.105274226 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.095868411 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.104305826 seconds)
  done (took 2.506423662 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083914473 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097112964 seconds)
  done (took 0.835078968 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.087602052 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096652521 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087730451 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100923587 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096785357 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083672923 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098044856 seconds)
  done (took 1.303993136 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.537150054 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.269251578 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.370632971 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.119209783 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.140900642 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.373981461 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.1569202 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112635098 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09945893 seconds)
  done (took 2.876497591 seconds)
done (took 11.736566564 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089387975 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.22851347 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.588086205 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.120373019 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.081617507 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.151868265 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.296032439 seconds)
done (took 2.214843915 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.358555283 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.153896618 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08928382 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094376072 seconds)
  done (took 1.34891633 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076941186 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104349037 seconds)
  done (took 0.841358073 seconds)
done (took 2.856065168 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080407877 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.092630278 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080627665 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.12672003 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078596441 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095698754 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078842203 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094076992 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07914086 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.094841953 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.092318414 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079909646 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093420794 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079910217 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093366549 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080178077 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092816415 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080543847 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093421271 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079720036 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092719739 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079920016 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093820601 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081319809 seconds)
  done (took 2.811346598 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103676709 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099117893 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10094204 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08745643 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103159266 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087918719 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101744403 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097885915 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087333409 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098038876 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101414351 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087867361 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09708864 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08740347 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096545872 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101223692 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087323995 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097681312 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083710489 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088598187 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101718311 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08425576 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100928027 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10060118 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087356182 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10290419 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.096920815 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084871027 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101247959 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087634899 seconds)
  done (took 3.522876196 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.090593467 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.091443207 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078604522 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104004416 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077781601 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096580252 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077679651 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091656644 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078965419 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091903182 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080076234 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090676303 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077201966 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.093309212 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079032796 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099257302 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112706392 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.0776457 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091760455 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079329892 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098372966 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078302024 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094157028 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076842432 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09153084 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076707508 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09318883 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077441815 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09396092 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077092008 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097935076 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097822536 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.07892581 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.105904562 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085231473 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092229113 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086039269 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092389373 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078255161 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091995163 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076282644 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093013109 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076715586 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104030472 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095015207 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.078747214 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.091435281 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.079668832 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092424959 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.082117447 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.091744422 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.077749981 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094744981 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079033828 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099614782 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077069831 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093022801 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076799675 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095236984 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07917326 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.092415567 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091364548 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.085482417 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093297792 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104889256 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.105835448 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078817217 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094771877 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097076579 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088006431 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094240877 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098545008 seconds)
  done (took 7.051972074 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085002515 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108825954 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084539308 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097109877 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078744117 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093646447 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103485285 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080371936 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096928762 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.099873542 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095075832 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082542343 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09767609 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097028541 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080205141 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097991477 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090118872 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094141852 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079651867 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098313204 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092915498 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.090139076 seconds)
  done (took 2.697102063 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.238839466 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104328531 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.262835625 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.113547035 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119656059 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099098961 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101999944 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103227366 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088320328 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108630714 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106916868 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08740927 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120382676 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108201693 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106780978 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095465622 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10173166 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108671986 seconds)
  done (took 2.850147254 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.100835979 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.101408876 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.122508858 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084661964 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099883797 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085020911 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106659754 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113544143 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083814957 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098476133 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.108383601 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085411126 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098734824 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084532017 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099005102 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084647893 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099075804 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099230956 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094701409 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10816824 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.108330055 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094599385 seconds)
  done (took 2.834432641 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100821764 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09825986 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.135239538 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089086393 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095499651 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079965225 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104540471 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.099871113 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093732042 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099236803 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084919937 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096270167 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.108469341 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085564027 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107037953 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085929561 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098899614 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.099088433 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084222068 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095411341 seconds)
  done (took 2.619970483 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.173309171 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098541997 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114124511 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126495664 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100011666 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115583962 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128401183 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112895303 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100711118 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130209765 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114250413 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.098793854 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126135174 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121791317 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098419179 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128042391 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127875769 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126818788 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.098702615 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114060564 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128415843 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112738551 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112322017 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114000478 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112950117 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099736821 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114712103 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12184884 seconds)
  done (took 3.949549141 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081138873 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095580607 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081157721 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095789707 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081803472 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09523604 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081515454 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095148678 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080623838 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095859945 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080788236 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096146963 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081191321 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.095354283 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081206361 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096164082 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081428986 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095629689 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08262169 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097243818 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082152907 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096796383 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081942284 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096297711 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081825768 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096337323 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081443344 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096593773 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081933786 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09683313 seconds)
  done (took 3.341664406 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.095395736 seconds)
    (2/2) benchmarking "in"...
    done (took 0.120729806 seconds)
  done (took 0.89516001 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.082204373 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116999799 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078122059 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103078228 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106755013 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083514539 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108097751 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091905935 seconds)
  done (took 1.451785898 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.150511835 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.148254302 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089269454 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111376377 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.147715846 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.142115226 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165322024 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088776746 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.101955444 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.094664782 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.144681895 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.078196336 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104683411 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085086304 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104495483 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110497064 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081682858 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109334821 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.091128553 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100253904 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103733291 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097680012 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107771043 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.111026954 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.081795595 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107076968 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094118133 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.111981627 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10018857 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09322554 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.101925332 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07848766 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102181946 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10268205 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081163837 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.146000963 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113554779 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083415789 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106488757 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103658665 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092664058 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095364261 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090075478 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.102837484 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106810479 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.089160615 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104034679 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080126986 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095809217 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.097291506 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.081179234 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09877559 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079849324 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104522509 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089993222 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114642976 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.099615455 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084085957 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.099315809 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.082291048 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.102516957 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.097906441 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090585293 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102478298 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104355629 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089385789 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102685675 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080153659 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094943234 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081851277 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.104145853 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119782278 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091546254 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103883323 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104327395 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081892968 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100533959 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090261733 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103415067 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106497674 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088164269 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106046907 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089756153 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098169351 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.097775326 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090469265 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100443238 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086868801 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.094674327 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117116534 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085068622 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096054471 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087746801 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.106029517 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084219333 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101754281 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079650522 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105997502 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094018328 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.088643284 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105131359 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086231381 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109025029 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104707196 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090135208 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104423413 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.139182288 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08499568 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.099454745 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095112887 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090048901 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.096671638 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088552385 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094998956 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085039607 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10092383 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105030764 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090677871 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.101448442 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087802593 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106508674 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107876911 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.085542563 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09453437 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.083986458 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102593867 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093172839 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108133996 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100484461 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081709058 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097158327 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089225564 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102491845 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.101459945 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088322437 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101094612 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078588039 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096731775 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089074753 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107625993 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.097749575 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085938645 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106838338 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10244764 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087442752 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106598846 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.083070395 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.095728037 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105416879 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084784658 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096053924 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093475653 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.099643213 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083931146 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.100681577 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108785145 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084561142 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.105155414 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084775652 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104762976 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089973076 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.09501793 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099552275 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085910969 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109836503 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084612074 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096685664 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080404435 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10702773 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.096919115 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086721307 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.094309653 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.085654924 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104385926 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081899484 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10186492 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.098047634 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10169497 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.113084112 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089065722 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.103548838 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.107408002 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08797599 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102479376 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.086350099 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105677757 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104502469 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090130322 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.102388097 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089078516 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.100359472 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081252388 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102693159 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10535043 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080545925 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096889729 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.079994632 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104894853 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107916262 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.09010746 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.10449571 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086203223 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103259693 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094217486 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101608742 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102194833 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080785301 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.103428585 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.094455887 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10750622 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090222801 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.108209557 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100426644 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.0820522 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110479402 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085108241 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106236405 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081092481 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096015725 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.095511747 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.090885177 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103405302 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.082545039 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09714474 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090681273 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107022604 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101493032 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.079817533 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104631483 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094889118 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.099553454 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103957483 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084511127 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.103643332 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116514778 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079657653 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10116608 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094497399 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.104033867 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079492909 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.103911747 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101227427 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083323819 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102825243 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085034781 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102899796 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090950128 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.102963766 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095602487 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.083931782 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10086089 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080263917 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097760074 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090759294 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.101573736 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10070546 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095789264 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107010419 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089355381 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103048745 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104353652 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.090214863 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106276166 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08549761 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106235515 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.097707883 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.080142307 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.100337294 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080112265 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098259945 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.082758001 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105242522 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084919722 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103331632 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.1030455 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09106394 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.101487903 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104085942 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106608532 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.098463963 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.096609146 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086635285 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103794653 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08405451 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.099849917 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081319212 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107747986 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10423114 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092126542 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.099919827 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079565187 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106336412 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084064039 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107030049 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104520502 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.091581615 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.100440291 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.088004468 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.101218481 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111769473 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081264184 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110003674 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087744148 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103791945 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.101839795 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087010262 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.099736044 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.080713275 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102566442 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106732547 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087127585 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.103811083 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087714325 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102625337 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083141285 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100169158 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107138911 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08671253 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.106643128 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080684133 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.097992851 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.080415907 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106008145 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105180572 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.090127929 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.098912568 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.087066413 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108733316 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087348363 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097017564 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108990731 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092988822 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106628695 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095376969 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.097738489 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101892057 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097165734 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097095813 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.087128028 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09858622 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082014866 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107886834 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107549987 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.090934084 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102107931 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.07952717 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096836582 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.090708586 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10330249 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081036195 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099501102 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105986533 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083438645 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103182753 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.089930489 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104338049 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09174481 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105784709 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103170589 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085187565 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107374774 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081426351 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.098574906 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080524437 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102174269 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106168787 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082305812 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097496278 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.089367505 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102847295 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086928358 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105223724 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.100251914 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091775787 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104980054 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085510806 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111958624 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081336094 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.102220789 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104468588 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.089500082 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.097571714 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087132479 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103881197 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107141091 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090879485 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104562507 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088550883 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105984783 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081993593 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105552691 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104648077 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.090724315 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.096886508 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.09205048 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110034844 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081968507 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103197584 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101531854 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082364644 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10278724 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.090239861 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103904812 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109568356 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090740998 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103311817 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09014045 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106914412 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086946227 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108814402 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.100737985 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091358225 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.097369785 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093168149 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104131887 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106689582 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086168709 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099247509 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089564177 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.106329982 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089015645 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110187245 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107404547 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081099344 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.098345025 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083261847 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103989166 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111108068 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093097088 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10281383 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087310369 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099527002 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082177402 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109125548 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098856066 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084619219 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105429208 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091101337 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103849272 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.081967597 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104562505 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10849733 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090832888 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105613478 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082126519 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106426746 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107575936 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086922208 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.10055803 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085154332 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107637215 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104690248 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084870019 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.098022814 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095378929 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.108044742 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107802654 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084975393 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.105337941 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086872312 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099506617 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.107138692 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087071597 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10594625 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086966604 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106254238 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114143519 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080942234 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102547154 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097882739 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105360165 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108828828 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083286896 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104451508 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09207435 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107651462 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082742878 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.099138351 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081988532 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10416821 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.097842537 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083447394 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114233424 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09069149 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.104715445 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103848901 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088267739 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098943792 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.082631827 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.098857509 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090888233 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102634329 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111832824 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081542261 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.098559439 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.083797926 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106108317 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088437211 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.106140412 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098417849 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.085505822 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.098468354 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087958364 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.112073633 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088378139 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.106090565 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103645166 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087004195 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100512111 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095390358 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099379109 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086933544 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117833756 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107714661 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090648373 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.105678041 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109392285 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.090887212 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100050077 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.091601591 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.1046303 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.10335058 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.092182655 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.109043511 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104215125 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105701282 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.099107071 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.088351648 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.102302663 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.081762272 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112590987 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108481536 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.092627986 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10505086 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085128166 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109525401 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109474314 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090380423 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103992213 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087209031 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105333166 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086495887 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105936348 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101817258 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.092415701 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108007947 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088976441 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110951468 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082773561 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116178225 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111788814 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.093148307 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099285302 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082319661 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.099416895 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083118741 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110600424 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100895613 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.088165568 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103147465 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088459312 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10612547 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088809699 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10438265 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.108312133 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.090224984 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097415462 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.091150002 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104180517 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088522245 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100329695 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107218782 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.09278002 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.109639967 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095451889 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.108857203 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.1040784 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085638349 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107309761 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.084747028 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108295298 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088842562 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.10235983 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083362364 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106838327 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108676742 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088941127 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108430853 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092839613 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105236021 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.108101448 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094502545 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099396999 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083168685 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107235305 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084328239 seconds)
  done (took 58.81199651 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.158779655 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090511602 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101437004 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08361376 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131413018 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101429151 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083507165 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101649547 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085048213 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.117418528 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100253569 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08452599 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12610566 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134236031 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131452646 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118292529 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083763688 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101632567 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083773396 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10295754 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12554345 seconds)
  done (took 2.978774331 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109459308 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.122143615 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119558299 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124212588 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097651035 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.119221145 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.120934123 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118941866 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.122939668 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098705774 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123718728 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118681071 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.116676449 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.099264275 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116624577 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115258575 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12186486 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096093377 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120735566 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121134109 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115642883 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103376575 seconds)
  done (took 3.251494815 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.094849117 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10504621 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090798416 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.10238955 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.089841136 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.103537186 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.095373937 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.103244779 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.112898545 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.087665146 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.100111339 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.085849667 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107655573 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.085891226 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.10105719 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.085564724 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.111908471 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.105009447 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.091066974 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.10262649 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.126832758 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.087094483 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.104106502 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.083757107 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.115277699 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090229661 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.106245892 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087587777 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.101253274 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.088748369 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.103883785 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105620366 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090633457 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.10043912 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.082877937 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.107686016 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088850639 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.10338713 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.085356421 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.107408363 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.104208217 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.092639176 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.111456617 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.085161657 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.102836613 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.10492119 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.091727753 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.102805005 seconds)
  done (took 5.459830657 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128238711 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.158864444 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.095430819 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.12775476 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127109368 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.120497883 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.109028197 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149549726 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.092174593 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.110669032 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128405594 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.128837076 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.099077091 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.116969434 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.115003873 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.09575508 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112862284 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093031932 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.119737805 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109986049 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.101842297 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112293294 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.1294887 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.127235822 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113933205 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.093220721 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.111873045 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.09946155 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.125998094 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.120150852 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.115126412 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.098983387 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.125442582 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.11515621 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.109021399 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.095225157 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128380675 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.11447485 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.096364163 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.109371803 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.111258451 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09687313 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115944222 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.129506536 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096400539 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114395 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111191067 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.091522003 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125275041 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.11179892 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.103340419 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12722638 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.116433969 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.113145718 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.098404576 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126000887 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.112309697 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.095299453 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.115955262 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.126733057 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.093580655 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.116274083 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.126720329 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110270988 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.101863381 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.129154113 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113793496 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.116046678 seconds)
  done (took 8.625330586 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099937168 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.133751852 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12806804 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127973541 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.097890438 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.114770168 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113255625 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.096566483 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113373776 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122656942 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096483736 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.219018296 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088730684 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122467356 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114308316 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114213731 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.097286984 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113832657 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113662104 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099070222 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113660432 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128594121 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097082016 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128186604 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129088815 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106592096 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09706546 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114972335 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128397462 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112951456 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11353532 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114539535 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114740015 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.127664337 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.129225536 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.097265686 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10434905 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09734477 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.11546751 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.115515207 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.089978928 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127495467 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114952637 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107061371 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097784557 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11515362 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128312454 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13103942 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.10485376 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.122996556 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.115343601 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128146095 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097707488 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114943643 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126801072 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.137976797 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127484054 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12773051 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097594498 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128086833 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.127201984 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.137846104 seconds)
  done (took 7.959976349 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087520971 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104218391 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.087841639 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.103459435 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087666708 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.104559133 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088641583 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104315262 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088241963 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.103598418 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087263435 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104076232 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087356427 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103627084 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087206344 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105483491 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087470835 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104604153 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087991961 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104782839 seconds)
  done (took 2.661443203 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.099992097 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128121577 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08958602 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118914869 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108397821 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098345751 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108056346 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108134166 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092464934 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108695756 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120855163 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10287286 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107686532 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.117340699 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102139221 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116851678 seconds)
  done (took 2.471224771 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.114614977 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122566506 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.162408608 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.11220428 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.087522994 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.119047474 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107485048 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.086081171 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103391187 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.096036152 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.112483537 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.098357385 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106104642 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102290451 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.091617281 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.11167131 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.085259221 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.111937757 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086893039 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.180837493 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097283796 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.11219893 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.0874409 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.11007316 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.110981166 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.096639499 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.116100389 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104866285 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.090418425 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105216281 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.094272588 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116917911 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104026522 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.095980919 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103102958 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.088676546 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105693447 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089222068 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.11244089 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.1064431 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08705717 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.113026897 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087582702 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108046654 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085474368 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108427905 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103009977 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09870108 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109726533 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.094591496 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105824869 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.113328858 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.096013716 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119257298 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.11602421 seconds)
  done (took 6.541289994 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103919541 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109596033 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094423991 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103620545 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.108195813 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.098946743 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110272916 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093572654 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111135232 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085128156 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111117533 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109690429 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093099084 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109614765 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0929442 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111036102 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101800965 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.09341379 seconds)
  done (took 2.590107912 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096855164 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107286621 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096751752 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108238069 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0894837 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109454174 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085663973 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106094866 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104030546 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090563763 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108534485 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090108944 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103350934 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090150547 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108595483 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090309598 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110301731 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103660156 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092448082 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102847643 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089904735 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103442127 seconds)
  done (took 2.941184352 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.10272893 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.164409203 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.119288539 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.174650367 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.109175622 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.086767812 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.119028803 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.10762248 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.106613395 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.106685631 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.105663256 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.088271066 seconds)
  done (took 2.141839163 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118530376 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148695847 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106059501 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090310103 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120968203 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115685687 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098017854 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115697062 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126128684 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129680062 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096200244 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125264071 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125530701 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128291114 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119343053 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103589576 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115397549 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115272567 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09236241 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139067498 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115412004 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126103528 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097854229 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115334731 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11449874 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109818652 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126863701 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131414077 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115976018 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126580839 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10306666 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116216701 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12633109 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131019538 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091629468 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12570294 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115593775 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137553676 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121476888 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111637993 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109858557 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122393385 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108130586 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125423008 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128112918 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114277226 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124177384 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097864229 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115919971 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146053698 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121423636 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127908623 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103260348 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127564005 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127110555 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146076104 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131702046 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129021393 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102847376 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133284244 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129522475 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121299926 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128609512 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13142585 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102677447 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132343462 seconds)
  done (took 8.638455335 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137132095 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109572164 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116437975 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13214942 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110640027 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116157024 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116333762 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096508509 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11712567 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111678072 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166625087 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098473686 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130082305 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130286912 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116491618 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097032033 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119168852 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127458371 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1110151 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145939358 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097966107 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129139106 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128324329 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130044 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132523623 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121512359 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09906737 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116473684 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11654669 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099557266 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123742397 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115370217 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110313774 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108877818 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129007548 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115140338 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098471878 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124608361 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116334258 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103790212 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128970603 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139606393 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115801419 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116309039 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112971724 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116560176 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115718725 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092833688 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116799455 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112640955 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113262516 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132663616 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132897107 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129524733 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115909574 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098094452 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118052913 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116184346 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097638774 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122981815 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1281569 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11674213 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146684336 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097310557 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119095907 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12904516 seconds)
  done (took 8.569846416 seconds)
done (took 158.328932745 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.152541401 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.172211153 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.147619097 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.150016363 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.103432725 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119653618 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137786835 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.147987494 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.084116463 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.104460493 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.084069748 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.108135538 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169346454 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08537591 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.102149027 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.088748307 seconds)
  done (took 2.714293117 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.204452444 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.298445718 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125997802 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.088612072 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.114004084 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.106302923 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08990765 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110839507 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.087255757 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.119794289 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.105125433 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088916833 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.118252756 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106515891 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.086575092 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.105998971 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.099213963 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.106579069 seconds)
  done (took 2.930195181 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112427207 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14520259 seconds)
  done (took 1.023142536 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.125049476 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.191659465 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309219728 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166664044 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.134635449 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129110994 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.165570137 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.106837338 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195119291 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.1294217 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.128278394 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.110600281 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137777093 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.100012226 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.121825007 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.110167158 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121639466 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.120511004 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.119546594 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095125251 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.134259702 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.111524961 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.09929472 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.121371934 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.187156943 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.127720226 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.111353336 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.094247927 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113808369 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.100089141 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.119420442 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.130768829 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128253729 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177378524 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.118575849 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.192398559 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.101536075 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111667023 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119101685 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093152476 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114941128 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.115157214 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.109766307 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.111358047 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.112413755 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101835046 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.112832285 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.093375886 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.123202595 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.122674974 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.12085521 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.098698168 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.194080501 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12185088 seconds)
  done (took 7.728079142 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.898216024 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.133207505 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112378608 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.020399893 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143145315 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127191754 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.877201648 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135418479 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251926469 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.916790475 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107241629 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125152435 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.253465923 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.266140054 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.197950051 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360752088 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.759057239 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104410404 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.141807376 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159497638 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118466675 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13905602 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112522372 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.456864772 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.092045878 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110289962 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097551739 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123022437 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191672188 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.089757831 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113456995 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19518105 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.299549686 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219434925 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09274621 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.108709801 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088386201 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.199772681 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.287839209 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.239582969 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180701424 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085656633 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.108811608 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12312705 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132388517 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085853417 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.196770194 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.185721312 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.206369076 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094583643 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123095141 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118415821 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102118321 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.195223277 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.086091989 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.379952019 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366187447 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088867348 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120578011 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128842775 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.287529099 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089302557 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.268961092 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1187554 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.232134135 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.109091995 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807922128 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.179049795 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109229113 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118970735 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098643695 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115679701 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12181382 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174274907 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39030066 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124535351 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093803028 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107747095 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.258784256 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090571335 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107037073 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.176333861 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111742119 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100432227 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12759011 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124415348 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.184384836 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.285627116 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123623209 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100372874 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114671843 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123718335 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.092676461 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.24437263 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.241603801 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.172301494 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.247626337 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10410836 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.197944438 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.181331251 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123083152 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.203422658 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098904602 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130336306 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123395588 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.238166838 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14966255 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108678177 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096943222 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118710286 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.153820398 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111962259 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100398182 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.20065664 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.477072049 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.19832246 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089383837 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.114337599 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118027906 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176849578 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116235266 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.2837979 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101356523 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.201908639 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097452692 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.107195676 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118934659 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178678778 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126535244 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119443038 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104755827 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119110586 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.263630108 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.261989154 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107252668 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256017749 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184318585 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119905053 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.188380201 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120047629 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.201712434 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102902138 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122034214 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11128225 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800926143 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104264786 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118766973 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114602042 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.197632977 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088662792 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110515694 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088311451 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106678878 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.83121431 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.092012772 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106540113 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.089735095 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121965707 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11993862 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116650451 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09627962 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.195157755 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.257779641 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122763924 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098924994 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.109170721 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.173619959 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.112918916 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.089707279 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.110366873 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090334733 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120032121 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115120854 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.090750478 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.206622309 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.171924865 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.244313393 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567844895 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.109231334 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.089924715 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252955178 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109850718 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.331913263 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119373102 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.24896103 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181009188 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.107773899 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362904741 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.201671068 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201550229 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.093437289 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.206053056 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08766183 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117339791 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.175063688 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110788121 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118640561 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.173717816 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128675881 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125702115 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.187290395 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090465944 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.262418444 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087209374 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.202746117 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092666075 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123897743 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.337950021 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110311171 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112854557 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.197652515 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114692986 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.090962005 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.73143695 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.091180188 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122195166 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12044596 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.248846918 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.179219351 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119911356 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119449556 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122825911 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178546201 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.223635376 seconds)
  done (took 46.373368915 seconds)
done (took 61.531257391 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312922912 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272307649 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.329818315 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.227270182 seconds)
  done (took 2.01157246 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.223063909 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.158526407 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.206830418 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088919831 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.195050432 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.10967311 seconds)
  done (took 1.773794371 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.523146146 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.424346986 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.341876693 seconds)
  done (took 2.086250137 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.259251841 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.283111623 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.358723681 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.439825469 seconds)
  done (took 2.24272222 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.245441382 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131807424 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126003653 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.17765717 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.214477878 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.216253079 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.149069441 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.165688714 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.114560917 seconds)
  done (took 2.384626385 seconds)
done (took 11.293636085 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.192159294 seconds)
    (2/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095585019 seconds)
    (3/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.345136428 seconds)
    (4/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.166380261 seconds)
    (5/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.311072111 seconds)
    (6/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.255668895 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.16108016 seconds)
    (8/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.272985191 seconds)
    (9/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.270590143 seconds)
    (10/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.253896935 seconds)
    (11/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.166839958 seconds)
    (12/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097642434 seconds)
    (13/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.217982537 seconds)
    (14/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.160177665 seconds)
    (15/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.167580468 seconds)
    (16/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.163722684 seconds)
    (17/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.10599304 seconds)
    (18/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.120491973 seconds)
    (19/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.139162781 seconds)
    (20/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.189265277 seconds)
    (21/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.108780843 seconds)
    (22/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.152617602 seconds)
    (23/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.283624924 seconds)
    (24/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.127884231 seconds)
    (25/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.205644315 seconds)
    (26/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.117972945 seconds)
    (27/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.235859069 seconds)
    (28/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.154026898 seconds)
    (29/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.108180119 seconds)
    (30/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.127925852 seconds)
    (31/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.117357348 seconds)
    (32/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.193841604 seconds)
    (33/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.213252073 seconds)
    (34/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.118214385 seconds)
    (35/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.25039295 seconds)
    (36/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.079894147 seconds)
    (37/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.303001302 seconds)
    (38/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.209141113 seconds)
    (39/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.166679025 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.146974701 seconds)
    (41/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.139159089 seconds)
    (42/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.142766205 seconds)
    (43/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.130142287 seconds)
    (44/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.148678554 seconds)
    (45/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114419207 seconds)
    (46/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11487619 seconds)
    (47/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.172585248 seconds)
    (48/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.202587652 seconds)
    (49/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.203460089 seconds)
    (50/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.114259943 seconds)
    (51/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.098754787 seconds)
    (52/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.226347248 seconds)
    (53/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.144020181 seconds)
    (54/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.202361914 seconds)
    (55/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.213437139 seconds)
    (56/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.100015144 seconds)
    (57/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127936814 seconds)
    (58/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.117147541 seconds)
    (59/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.195645978 seconds)
    (60/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.111012795 seconds)
    (61/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.130873875 seconds)
    (62/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.192682664 seconds)
    (63/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.171884133 seconds)
    (64/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.101661388 seconds)
    (65/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.133070074 seconds)
    (66/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.192568515 seconds)
    (67/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.165070905 seconds)
    (68/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.095618465 seconds)
    (69/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.333241313 seconds)
    (70/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.194928637 seconds)
    (71/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100631865 seconds)
    (72/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.119936338 seconds)
    (73/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.140626558 seconds)
    (74/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.119082024 seconds)
    (75/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.251950639 seconds)
    (76/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.103394634 seconds)
    (77/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.097145549 seconds)
    (78/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.168784051 seconds)
    (79/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.163766865 seconds)
    (80/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.143153001 seconds)
    (81/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.106600281 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.094413206 seconds)
    (83/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.158206331 seconds)
    (84/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.104548807 seconds)
    (85/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.124574285 seconds)
    (86/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.102037202 seconds)
    (87/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.145397174 seconds)
    (88/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.093496667 seconds)
    (89/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.123049894 seconds)
    (90/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.092549526 seconds)
    (91/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.109110262 seconds)
    (92/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.080810241 seconds)
    (93/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.128821566 seconds)
    (94/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.09512911 seconds)
    (95/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.115952765 seconds)
    (96/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.078763568 seconds)
    (97/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.115991017 seconds)
    (98/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.129654595 seconds)
    (99/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.080449974 seconds)
    (100/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.115441934 seconds)
    (101/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.094163618 seconds)
    (102/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.100167438 seconds)
    (103/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.104718454 seconds)
    (104/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.126893717 seconds)
    (105/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.225570192 seconds)
    (106/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.203111163 seconds)
    (107/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.187820052 seconds)
    (108/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.080696606 seconds)
    (109/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.190478273 seconds)
    (110/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.109570999 seconds)
    (111/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116661445 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.115636862 seconds)
    (113/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.099966298 seconds)
    (114/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.129915908 seconds)
    (115/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097590328 seconds)
    (116/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.201206083 seconds)
    (117/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.113887522 seconds)
    (118/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.148580295 seconds)
    (119/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081599748 seconds)
    (120/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10954302 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096141649 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11575258 seconds)
    (123/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107060114 seconds)
    (124/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098196292 seconds)
    (125/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.105456504 seconds)
    (126/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.17010595 seconds)
    (127/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117917631 seconds)
    (128/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100509778 seconds)
    (129/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127919443 seconds)
    (130/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127735171 seconds)
    (131/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.080729462 seconds)
    (132/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.194863769 seconds)
    (133/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081649567 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.116414132 seconds)
    (135/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118375585 seconds)
    (136/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079650482 seconds)
    (137/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.174287269 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.116099663 seconds)
    (139/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.080046135 seconds)
    (140/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.100520176 seconds)
    (141/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.087618486 seconds)
    (142/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086867725 seconds)
    (143/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.162620108 seconds)
    (144/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.141297688 seconds)
    (145/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.08141938 seconds)
    (146/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116939095 seconds)
    (147/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.097358245 seconds)
    (148/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.21214862 seconds)
    (149/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.101714641 seconds)
    (150/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.081650586 seconds)
    (151/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.08000697 seconds)
    (152/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121294918 seconds)
    (153/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.162312032 seconds)
    (154/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.080320978 seconds)
    (155/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.101564447 seconds)
    (156/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.176393124 seconds)
    (157/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.192292326 seconds)
    (158/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.158166647 seconds)
    (159/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.086669134 seconds)
    (160/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.195444544 seconds)
    (161/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.127977971 seconds)
    (162/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095481928 seconds)
    (163/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.146529528 seconds)
    (164/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.130654118 seconds)
    (165/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.110843931 seconds)
    (166/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.117467959 seconds)
    (167/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.12328712 seconds)
    (168/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.08207662 seconds)
    (169/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080645558 seconds)
    (170/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.102221927 seconds)
    (171/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096695669 seconds)
    (172/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.10262705 seconds)
    (173/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.198451709 seconds)
    (174/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.080621991 seconds)
    (175/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.131729201 seconds)
    (176/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.097289227 seconds)
    (177/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.102105747 seconds)
    (178/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.081715722 seconds)
    (179/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.10064379 seconds)
    (180/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.099171184 seconds)
    (181/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118129901 seconds)
    (182/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.082373186 seconds)
    (183/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.101906541 seconds)
    (184/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.098702431 seconds)
    (185/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.100948164 seconds)
    (186/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098207166 seconds)
    (187/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.101694183 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089900738 seconds)
    (189/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.101570642 seconds)
    (190/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.089900081 seconds)
    (191/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117621053 seconds)
    (192/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09017086 seconds)
    (193/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.100349838 seconds)
    (194/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.11196899 seconds)
    (195/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.100400836 seconds)
    (196/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.096374237 seconds)
    (197/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.117804613 seconds)
    (198/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083297222 seconds)
    (199/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.100651442 seconds)
    (200/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.080382401 seconds)
    (201/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.108613571 seconds)
    (202/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.145791629 seconds)
    (203/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.117226418 seconds)
    (204/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.126941186 seconds)
    (205/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.087502505 seconds)
    (206/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.121578432 seconds)
    (207/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.106864097 seconds)
    (208/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.101460012 seconds)
    (209/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093469639 seconds)
    (210/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.126981887 seconds)
    (211/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.096055388 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.131434682 seconds)
    (213/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089383071 seconds)
    (214/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.102424835 seconds)
    (215/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080190211 seconds)
    (216/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.127198391 seconds)
    (217/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.209070163 seconds)
    (218/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095879228 seconds)
    (219/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.10960649 seconds)
    (220/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.080495541 seconds)
    (221/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.102038565 seconds)
    (222/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.097921297 seconds)
    (223/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.101424168 seconds)
    (224/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.081777085 seconds)
  done (took 31.111838644 seconds)
done (took 31.91620088 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.491838433 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103851576 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.124869819 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122986855 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.175499758 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102552994 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.131093415 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.12523527 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.105217395 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.120363016 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.11060236 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.105652674 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.121004386 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.177972365 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.124200432 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.093162362 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.114326721 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.105597651 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129280279 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.131639328 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.177153643 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092026271 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.12765015 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.092450054 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.19980847 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094090784 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.123241035 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101250333 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.128168948 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.119384034 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.101234215 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.11371608 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109035967 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.131389044 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11051285 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.097838724 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111549687 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088295621 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.119235226 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.098760301 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.127190059 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.120855304 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.103880814 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.1152802 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.09875632 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.120750067 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111102922 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.103973618 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.113222853 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100565629 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11477769 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.130294095 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.096793024 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111755996 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.090476202 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.115855458 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.126749172 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091987107 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127318366 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089780564 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.115412964 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090111831 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.122719556 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111177038 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.098064817 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.112419913 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09791692 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.123260429 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.117715563 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093165532 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111153721 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.098941632 seconds)
done (took 9.501105079 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.097679083 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.171486682 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.176153389 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.182748387 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.145240141 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.130943051 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.13414409 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.121958066 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.13183719 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.137845813 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.15170076 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.122181667 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.204326447 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.104915809 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.130719639 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.120181788 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.105927707 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.12628985 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.185599181 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.139801435 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147560638 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.106364507 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149454374 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135455903 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.097827235 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.152491989 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.12242143 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.098475666 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122142632 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.127372213 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.116285711 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.121736387 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.120865969 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.118436659 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.130868862 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125682143 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.109189752 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120999237 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.117849624 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.096356302 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133288611 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.136087246 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.096586936 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.131702192 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.120377412 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.104495259 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.128278306 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125758941 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.100305993 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.12266452 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100395739 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.14895461 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.126949115 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125959233 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.106809716 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.12445271 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104189238 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.126930329 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.120859971 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.104296585 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119701113 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.119745116 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.100801849 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145539029 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.12100594 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105895978 seconds)
  done (took 9.200138724 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.117854686 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.153693123 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130507669 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129108619 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.104062402 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.109104184 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.087675796 seconds)
  done (took 1.683500405 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090234145 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.180047252 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.178266801 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.178736183 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.171630557 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.210931478 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112337545 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.113593627 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.147666598 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.101231831 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.17872661 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.234316093 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.097300566 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.129510663 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.181289402 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.112760575 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.183470487 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089474857 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.125990665 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.177889625 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.127498343 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.141396942 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.105422991 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113746129 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.174221874 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.091968397 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.257713873 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128443712 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096992703 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.122870194 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.104008472 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.217526014 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.173867858 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.105186849 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117891795 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.178176344 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.174310752 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124892616 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.190361155 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095471928 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.17344068 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.125276658 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.126338067 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.104072597 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.12492448 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.161878959 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.130320451 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.104267976 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.122160527 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.181006635 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.125325176 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.175087954 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.098735386 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.124079084 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.12441825 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.104725052 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131236751 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.102189803 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.180353581 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.129899165 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.174205731 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.174137714 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.175509484 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.174969325 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137459857 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.176610088 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.172775513 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.123486929 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122528222 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.103107572 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.176800712 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.125992679 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.126681347 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.16219159 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105459607 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.175379185 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.175922568 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122118346 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126222172 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096072581 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121717711 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092107756 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.16172822 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124021986 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.099777539 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134255534 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127337181 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.104102461 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.117507057 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.139532764 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.102700892 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.126514534 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.130692722 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.102441795 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130978406 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.177375974 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.125983506 seconds)
  done (took 14.390296656 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093562464 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114434177 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097965882 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115652271 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09311185 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11545731 seconds)
  done (took 1.497710427 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.126456112 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.127224297 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.137080314 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.105495985 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.182013225 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.179840973 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.208090596 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102740025 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.144266098 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.13717355 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.182835256 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.185838523 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.182557287 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.129235497 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.185541685 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.106293305 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.209209381 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102556855 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.135767923 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100371678 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13274236 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.129029313 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100722248 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.174832775 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.129210505 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.129456453 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101613672 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.13759811 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133704683 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125428549 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.107305896 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.127180392 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098661544 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.126286158 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.18395063 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124507966 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121783515 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.110006077 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129596102 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.127731141 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.186993284 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099508338 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.13487464 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.131925721 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.102867007 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122240259 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.1300594 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102135952 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.206891292 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.1075492 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.1322468 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.127956715 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.106179906 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.131071025 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122741173 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103623431 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.132131937 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.185010946 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.130725506 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.100143732 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.12839707 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.128402336 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.102920841 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.130849423 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.129699514 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.108391083 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121855794 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12862955 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100473891 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.128292603 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.130071761 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.106068846 seconds)
  done (took 10.433092395 seconds)
done (took 38.051190112 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.084309432 seconds)
  done (took 1.949301638 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.923673143 seconds)
  done (took 1.791279863 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.99214507 seconds)
  done (took 16.894677598 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.543428469 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.633740857 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.948430656 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.166099585 seconds)
  done (took 3.158843837 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.961246105 seconds)
  done (took 1.848905041 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.331925806 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.27443919 seconds)
  done (took 1.479702412 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.812621189 seconds)
  done (took 1.69372495 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.351568685 seconds)
  done (took 3.228769143 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.367025978 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.192767908 seconds)
  done (took 1.449479056 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.651340212 seconds)
  done (took 1.536816495 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 34.217141672 seconds)
  done (took 35.103339199 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.240805337 seconds)
  done (took 1.141395837 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309003894 seconds)
  done (took 1.198334111 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.354402452 seconds)
  done (took 4.245152923 seconds)
done (took 77.597215587 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102532849 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127836691 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105341007 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126473225 seconds)
  done (took 1.345944863 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.112541547 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.126817068 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107076045 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.125632694 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.136749059 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.103946141 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125029598 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.133519202 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.103239957 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.128779836 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.102952515 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.127933599 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.128613632 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102266679 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.124292451 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.128702248 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.107364007 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12730747 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.103636946 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.127533286 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.124438589 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.104544906 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12894617 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.103299126 seconds)
  done (took 3.738492764 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102541503 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11790825 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098744591 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119334601 seconds)
  done (took 1.337043794 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.111803921 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142385881 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.141819359 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.111414212 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142907722 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.141110277 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.099520242 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.121851668 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102173812 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.133782993 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.122744738 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.122601352 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.141967042 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117950049 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.113020898 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116413137 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.096231048 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.142161659 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.134961317 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.112228343 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121802807 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.135073036 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.109373875 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139427593 seconds)
  done (took 3.869673077 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.210484131 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.116674853 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.149477855 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.179759989 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.152912461 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.10000008 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.152651545 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130270187 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.10880376 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.128906768 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.12923989 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.185628733 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.106730464 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.131598821 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.127480433 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.109471702 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131529919 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128661948 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.10762021 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.139787587 seconds)
  done (took 3.627713691 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103508221 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117580371 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091296394 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.119491048 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.103158947 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121170766 seconds)
  done (took 1.556116849 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092126481 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113128104 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091605717 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.112676932 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094839927 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.112607812 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089384666 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.112259259 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090437322 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113152903 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090379879 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.111662457 seconds)
  done (took 2.123701397 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.298605829 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094311589 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121640591 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.116567062 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.100609519 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117562963 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.134047881 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093774972 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.249800134 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.094561917 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.134059124 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194255014 seconds)
  done (took 2.64710099 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2237131 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103819044 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28114196 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.380128388 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169144283 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176804925 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27997764 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176261554 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200008411 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148371618 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206994106 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165516219 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162806368 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188121575 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147544659 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.197471169 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187834913 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212961358 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156868433 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240937661 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175540152 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176660479 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192781026 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159820934 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120677717 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168905699 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.126031865 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133204991 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185540745 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182833944 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186966058 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158812623 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14879448 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217729433 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258395802 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192988063 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.324422486 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143123325 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.200226616 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.193384282 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28265816 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148088845 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212716888 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163388551 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138159769 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191795654 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165657093 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.191128774 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141312567 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147721653 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200958883 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18889617 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196822118 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148596105 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.326030236 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132585051 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.155670053 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187170571 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228625157 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203711738 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178856841 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.103828679 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217821759 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194814749 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191977005 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.157452294 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181274141 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133449961 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188761046 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207676296 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19439946 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178509378 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224024732 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141784632 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173314207 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181425174 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162205214 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189569267 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16884074 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.102007066 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158508136 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144072298 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10931325 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.197058503 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129266188 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219020116 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142209369 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.198369783 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217585936 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167245007 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171694174 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174504448 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17900559 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155672783 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126984818 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1547867 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.172041416 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169185905 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114801628 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166947328 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155547176 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.135200962 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160403737 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104351176 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168912475 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.143397255 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179019582 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174974322 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.139587606 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173046961 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134009078 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.171362447 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182851082 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222620215 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115719 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140093514 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206343576 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167400516 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.147293839 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189077477 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201375031 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.177336815 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146674519 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183640198 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208805393 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150382782 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201369278 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153242843 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141385933 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.162252027 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166784726 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168031868 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.139473232 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134659869 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162657702 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207184776 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.133464167 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142479734 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184382147 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110667341 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136512079 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152394942 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14452513 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.124813239 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.162337484 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14919686 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165199447 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169459383 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161766387 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169422437 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153027132 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210148071 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140234328 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169227243 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155971446 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.102474569 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194211061 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222249548 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113226458 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197443601 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.20661581 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206906407 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175267592 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135462591 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193625799 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110918989 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.128602507 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177788759 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172400269 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175483144 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195018872 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226663628 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183358162 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.164404586 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158536897 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179486137 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.185901355 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169652766 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.152382004 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171857638 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184117936 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102281403 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.13375165 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135431299 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122708194 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139387385 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139439748 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195413095 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176526437 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219962085 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1476512 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147180574 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195207192 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.134646761 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174940778 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.185169951 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145962148 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200661218 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193500255 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177859789 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150988218 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182458027 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.128493146 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105997872 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142643341 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180010383 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139709963 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142136349 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127787148 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219186751 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188769222 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157807478 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215474467 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180228413 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230549218 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.104678391 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.173157434 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182162499 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167640744 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189914257 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117709136 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.169599992 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189332773 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154490819 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231854514 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174472118 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178414731 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215944923 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.166809644 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137487663 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159020258 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178652549 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124520578 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175569639 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154885479 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144034695 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164930034 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.145966494 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10923078 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222431082 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125473114 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221982258 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.168094354 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189239473 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130515451 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128129059 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170298025 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154170434 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.123926041 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184683334 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203848184 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155727607 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168873374 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186200656 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13813436 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.320190857 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203351529 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198809512 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148393061 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153020322 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171340506 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172135206 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174913419 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195307398 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155942041 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195335865 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17108773 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.15212404 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141940378 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13161395 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160334486 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.163897063 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14441877 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.16574026 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.149541185 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20159826 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152966821 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168434646 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173904133 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.130878759 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.165309264 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149335813 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215692774 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167764562 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190577557 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.165731594 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179697207 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200270528 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132373779 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133787665 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.110644626 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194871264 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140361517 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171082809 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.19166894 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231464209 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172150341 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18003034 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119864979 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.133088455 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170240855 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158286341 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208374954 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150716597 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.146795363 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205497336 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.16085997 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137388225 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17373052 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287903473 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153207303 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18644046 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.101442064 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285014634 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131297612 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138085754 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169901055 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184650185 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.157167522 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.165195949 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173263088 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154738973 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170733724 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145528448 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19959766 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244538035 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184287693 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189824961 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151802436 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169126884 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17507018 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189866983 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152762677 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.130699523 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172937613 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196114762 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.228749129 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117398759 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172856966 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172179133 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170488179 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215325689 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11552555 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198087058 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137614524 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179336036 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148671946 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131887245 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167623553 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.190227312 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140136889 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188689025 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165981539 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111410105 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135281954 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162629475 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168243253 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152638936 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.111102674 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217997162 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.108635886 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174147996 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191835837 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135855951 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165247828 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129264784 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141338681 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153370164 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152264009 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117014644 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.176045295 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195982975 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.141415549 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190319737 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185690236 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176704325 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170279669 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15302687 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.672606206 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.13714011 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194218492 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129943048 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23301092 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158511466 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177053298 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144733461 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15820966 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182070172 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158790305 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233124947 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1777814 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.169917462 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139817343 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153565878 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153057488 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.115703119 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161300706 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172283173 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148552785 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.147028897 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.169314126 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129457674 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.15347707 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146334179 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197235065 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156431933 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197989799 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197446073 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148615845 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176534568 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189978218 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137310875 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.175200586 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185077541 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151613178 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163328168 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.11270298 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.146482836 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192322859 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.130032188 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170370985 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169696242 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145871427 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174695657 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146470028 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168481889 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151641753 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171654857 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135077402 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.166199516 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141122801 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140302345 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.136418819 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163196583 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169491421 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.167079153 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11007943 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.178225416 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19438962 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.103314467 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143124908 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285229467 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165195748 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232088931 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137610785 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143040775 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152066978 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166750591 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.162991934 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170022191 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.111395691 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138538515 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.141465199 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.18760187 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141373309 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166812507 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191415402 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171957557 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228717305 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.127999373 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279591905 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14781956 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163991516 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114734274 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.138904646 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150253036 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141485681 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130501188 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.2254189 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191979489 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.161370595 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.127906902 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138183933 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.131274089 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113489237 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172182166 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165453833 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169363924 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155615893 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.125441424 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129442048 seconds)
  done (took 82.365331684 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149524106 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.145101615 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150491962 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203360304 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173168585 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262903381 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212133331 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231850104 seconds)
  done (took 2.521434321 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.129120875 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.117289001 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.147924233 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.129339904 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.129194379 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.402677049 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.14367182 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.128118197 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.190570674 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.141267821 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.124754136 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.662584878 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.125482034 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.125351569 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.103383951 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.126640718 seconds)
  done (took 3.905975669 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.283013678 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.522596046 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.680610538 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.247767055 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234714583 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.185120226 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.70376343 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.174775296 seconds)
  done (took 12.024698243 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.130181117 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.143324525 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.209618965 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.207945824 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.15525589 seconds)
  done (took 1.843050457 seconds)
done (took 123.792014065 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.107501586 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.147057351 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106684614 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.149192742 seconds)
  done (took 1.492657232 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.152986928 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.116056013 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093341611 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115487981 seconds)
  done (took 1.472768324 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.517813379 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088407854 seconds)
  done (took 1.631943357 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.135010834 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.149843134 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.150623769 seconds)
  done (took 1.436112221 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.115746938 seconds)
  done (took 1.110739992 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.105235197 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128221403 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.18218749 seconds)
  done (took 1.413436724 seconds)
done (took 9.550590993 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128424593 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.521783433 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.417248501 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114466895 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.728068983 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.408416972 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.023706421 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.160715618 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.170841276 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120731641 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11537323 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.701513432 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.033447874 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.440977324 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.021892278 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.341896026 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703270844 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122992227 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101900427 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122294118 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.999876105 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120390431 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121962628 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.10018022 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701235945 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.401380604 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120867975 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.382089531 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095683404 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126446187 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.387142385 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121160182 seconds)
  done (took 17.166710421 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142066257 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186735326 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130876976 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096545751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.126627412 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095177675 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.133471644 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.136534426 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187859266 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095615847 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142367653 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119657957 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100409632 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122053564 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118252936 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121279153 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097622847 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123993175 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.128929138 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097413038 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142812258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093726712 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123324407 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123504002 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096479101 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134500352 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096299464 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.135168722 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120010069 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101530425 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126588514 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096129142 seconds)
  done (took 4.896897322 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146495239 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195997626 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132395504 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.157002243 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.174631997 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098006391 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.212443877 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.162515409 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189825224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120869889 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11807336 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.12152964 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.161123262 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096891462 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144983266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094807293 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125364894 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098241604 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130269346 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122827322 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117245007 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12080889 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096890866 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.125438952 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.120572454 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111238969 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122580448 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.133814394 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096340797 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126332371 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102137254 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122106193 seconds)
  done (took 5.207144979 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108409219 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.135400767 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.118427799 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.144755221 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.127072118 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.110364174 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.135467857 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.103151317 seconds)
  done (took 1.985872309 seconds)
done (took 30.255288513 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.121258366 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.14079378 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.115860576 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.135176256 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.193715089 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.098405925 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.138932387 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.097923297 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.137654095 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.118211622 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.121845812 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.125760696 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.116063078 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.130465912 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.177905293 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.109619803 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.183154973 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.178164368 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.127792768 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.108050038 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128375878 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.184446664 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.105590641 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.130409799 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.188937856 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.097821304 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.175522385 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.133935779 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.13004169 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.099126905 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.179180257 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.132838224 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.101293794 seconds)
  done (took 5.459465834 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.192928447 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.204979825 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.097310025 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.124812876 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.20670455 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.097695103 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.193095626 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.125254026 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.097411319 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.123845618 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.096856156 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.220965988 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.201751437 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.215481707 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.237537354 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.203165054 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.190015613 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.203284079 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.189763744 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.206311727 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.194399944 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.096916205 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.202662747 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.206483968 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.124016188 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.096685241 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.256020178 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.200165242 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.230517602 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.19200027 seconds)
  done (took 6.244885816 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.111212856 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14018628 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122010648 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.19381933 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.165634059 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.136677352 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.109701461 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.147861528 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.121981733 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123155129 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.106420655 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.160962573 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141243252 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106736438 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.128797437 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.141371926 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.124104056 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.125088032 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102812126 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.144028112 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141161329 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.115520504 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138751803 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.106881404 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.123439306 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134800865 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.102854711 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137112713 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.104061631 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132465002 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.10013069 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.129370842 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.127412748 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.107108884 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127513081 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.109596972 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.150347863 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133274091 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.108551122 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.159504762 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.132438256 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.102681578 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.145457403 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.172737463 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.100501212 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.136186116 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.108794858 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133805098 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.094937621 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143454807 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136112778 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.098208103 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.145634332 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.096004853 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121907309 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103243117 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124816474 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.12503848 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.105875995 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127400512 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.122738864 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.132233357 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129860103 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.099194382 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.128065082 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.097600632 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122071835 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.10356978 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.147212777 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128168763 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.130173717 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.12445937 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.107728782 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130984255 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102589074 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132849024 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.122794046 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103926532 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131315027 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.103356678 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.132849547 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100329168 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.128423815 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141368316 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.120625856 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.137632804 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.134285718 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.109442635 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.127784144 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098268782 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137834537 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09796776 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128853346 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.132399491 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.098674052 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.126461553 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.107644449 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.134157471 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095367999 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.143034484 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.12953513 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097002346 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.140444579 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097711572 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12947456 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.105741299 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.135406645 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.123456805 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.106477492 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.135963533 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097145889 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.12853257 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.100663036 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.124361785 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.140960962 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.107698919 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127665015 seconds)
  done (took 15.483205242 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.293610402 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.303593471 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203103845 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.388671068 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.122188067 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.191091965 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.299088787 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.224085026 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124539408 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.168589346 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.187954119 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.232736435 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.126020763 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.156152158 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.276118113 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.365000901 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.157603907 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.17110233 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.168499305 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.149974557 seconds)
  done (took 5.338110827 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.120778277 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.166671159 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.158200407 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.157789255 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.103820947 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13878904 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.097578993 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.147929925 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.133670277 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.104308469 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.12394831 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.138983809 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.106180956 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132803504 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.115897374 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.173698804 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.130145045 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.104047349 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.148916344 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.130505082 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.10557077 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.153859071 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.137357301 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.152203252 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.11035689 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.141503459 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.096848715 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.131853751 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100368127 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.129971022 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.131174711 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.120869224 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.133227207 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105558338 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.136203937 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.137645225 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.101136794 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.125064694 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.099925511 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.12827564 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.115773178 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.137720569 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.101456212 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.121966157 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.110863511 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.127557167 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.110368173 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.135746062 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.137135937 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.11411461 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.136970679 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.134866118 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.106153432 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.144915974 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.100364629 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.141045758 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.137028481 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.110897559 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.132684069 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096463707 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12360792 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.101036956 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.129053417 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.136240929 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.108281109 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.148765449 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.139876631 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096797196 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.131987673 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.103712879 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.129264972 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141971648 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.124236201 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.131189673 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.100588128 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.146253506 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.128054567 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.090886778 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.135962624 seconds)
  done (took 10.955970934 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.12754709 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.130756164 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.118556074 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.164586846 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.145066386 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.104421598 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.130527581 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.116927318 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.139036885 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.139077842 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.11084611 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140648795 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.150750626 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.112555825 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.130901357 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.113193904 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.136473216 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.170448046 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.118446489 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.159718905 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.142745124 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.105577986 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.140222724 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.110237321 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.162421326 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.138470453 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.132406269 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.1355211 seconds)
  done (took 4.765307249 seconds)
done (took 49.255245281 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.200008813 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.319172984 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.109398022 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.103424392 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.137054375 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.119162742 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.108575241 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.29811078 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.79370279 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.098369591 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.106230598 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.104015885 seconds)
done (took 26.530460094 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.362802826 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.674152011 seconds)
    (2/2) benchmarking "String"...
    done (took 1.425754053 seconds)
  done (took 4.129605713 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.100681585 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.10136709 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.349724239 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.101645955 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.101092865 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.119061478 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.102361425 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.117477136 seconds)
  done (took 15.022046101 seconds)
done (took 24.645631542 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.152568019 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.297817707 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.356490922 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.118316264 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.103110423 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.105530397 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.101221532 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.13499277 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.113809782 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.10731114 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.096945101 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.387741999 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.118939023 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.482659244 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.101698604 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.107081214 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.118673598 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.327620546 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.103838253 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.153952565 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.093275706 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.096330998 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.1213162 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.136150463 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.104804788 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.103807857 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.150403707 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.102567277 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.293710137 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.126775478 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.146998325 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.105686583 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.154717269 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.103820688 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.204484135 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.131683389 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.292117815 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.108591408 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.092428767 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.110942245 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.289965646 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.472920599 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.104600968 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.103213393 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.122217187 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.14429159 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.098176894 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.796613293 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.122679072 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.113847283 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.141171351 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.483563544 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.109303631 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.127647967 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.112448544 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.351271873 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.123860267 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.122604623 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.130873456 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.130039503 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.107499164 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.10426008 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.165200686 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.118717858 seconds)
  done (took 137.101667962 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.103981757 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.108485991 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.109866836 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.164141988 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.109501985 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.109090449 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.104817672 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.106742364 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.109211561 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.140591923 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.112098916 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.105284581 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.109199618 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.075823854 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.111445213 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.120280358 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.110255162 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.116377613 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.113664423 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.106481461 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.108275759 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.111233079 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.122878686 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.107004587 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.143212084 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.179169271 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.126478434 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.12167511 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.115352731 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.105622062 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.141544658 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.171160481 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.657813904 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.970410976 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.118205867 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.140146162 seconds)
  done (took 76.7210438 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.106035533 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.107496071 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.10877713 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.135896881 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.106904251 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.622860024 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.630125858 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.83263289 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.305196806 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.276151469 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.316802793 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.107071394 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.199162307 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.120827795 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.109056642 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.108914607 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.122985109 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.150014833 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.108190953 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.108205555 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.624827729 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.125909659 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.168715828 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.278393516 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.122943688 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.137302789 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.507862548 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.108879922 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.137259583 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.431266617 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.154000318 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.110268743 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.440305873 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.1415463 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220423141 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.110497843 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.13689855 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.108606177 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.384535151 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.108934252 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.107679004 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.109276593 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.112322306 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.712457699 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.108784206 seconds)
    (46/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.10931958 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.625370139 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.005296804 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.110732078 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.109141733 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.109681171 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.014620499 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.626826947 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.123994108 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.110657596 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.113640318 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.109050735 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.108567203 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.138060089 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.041437706 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.203453321 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.126384518 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.114393028 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.138619411 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.110615941 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.267691415 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.109866347 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.823309896 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.186649977 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.229887972 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.630053969 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.114790213 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.204189518 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226682062 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.110321828 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.109578345 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.109803703 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.109964946 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.218680475 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.110874753 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.493238965 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.276778491 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.126740575 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.307737827 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.208022996 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.110943836 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.439688032 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.114030279 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.110705267 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.789110495 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.112166035 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.204917834 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.110801053 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.112277967 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.112621239 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.495262527 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.632493513 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.289453324 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.116219447 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.242016749 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.114455726 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.4999385 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.614505313 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.751899883 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.115480035 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221570298 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.278895616 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.12878324 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.111402651 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.312729438 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.118491907 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.167781193 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.115755685 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.50850672 seconds)
  done (took 354.611372694 seconds)
done (took 569.464622003 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.843487507 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.780592361 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.908191065 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.807822019 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.774550305 seconds)
  done (took 10.155307575 seconds)
done (took 11.194277722 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.292700707 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.294672466 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.168388667 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.292898856 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.144434422 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.310513355 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.273687342 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.133570107 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.213043976 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.189087526 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.212429671 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.164036663 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.148633074 seconds)
  done (took 16.878724336 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.380859486 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.119968662 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.196632033 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.352764829 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.158795823 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.374045174 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.410921915 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.120114125 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.260871566 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.131987562 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.133905173 seconds)
  done (took 16.683241984 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.373187137 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.120139456 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.185436258 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.35547312 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.161215055 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.379736373 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.420879855 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.12086008 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.27883266 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.147880851 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.131685264 seconds)
  done (took 16.717423794 seconds)
done (took 51.319042381 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.160405003 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.277333311 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.142606403 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.132616767 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.127622483 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.12827831 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.136433702 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.129624192 seconds)
  done (took 10.277743472 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.127495172 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.127309239 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.12682359 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.125724606 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.127499698 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.127152816 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.127631316 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.126315952 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.128100321 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.12685106 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.126211585 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.127358769 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.12743942 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.125864131 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.126666024 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.127710555 seconds)
  done (took 19.075016683 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.131154315 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.130321451 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.127741534 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.128098954 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.128197656 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.128501312 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.129970417 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.127777227 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.128653124 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.126685474 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.126774958 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.129001667 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.128020395 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.128567069 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.129232736 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.129485578 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.129096615 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.128314322 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.134132684 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.129804014 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.130083249 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.127522028 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.129101844 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.129705935 seconds)
  done (took 28.142060021 seconds)
done (took 58.53646708 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.131262651 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.127931566 seconds)
  done (took 5.30419706 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.190238623 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.192516323 seconds)
  done (took 3.42948324 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.130397172 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.129266937 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.130944039 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.129015403 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.13010158 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.129761214 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.129447657 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.130483706 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.131301321 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.130080081 seconds)
  done (took 12.345955641 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.130141298 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.128583281 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.130769559 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.130922201 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.131097035 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.130336065 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.131233125 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.13052182 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.130944695 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.131395031 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.129437997 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.130482233 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.130592378 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.130764741 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.131282613 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.130573718 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.129968715 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.130775856 seconds)
  done (took 21.396425989 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.145092718 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.15098829 seconds)
  done (took 3.343064927 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.270447639 seconds)
    (2/7) benchmarking "second"...
    done (took 1.173595245 seconds)
    (3/7) benchmarking "month"...
    done (took 1.254963657 seconds)
    (4/7) benchmarking "year"...
    done (took 1.237421539 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.171565473 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.151690852 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.172486779 seconds)
  done (took 9.478985368 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.132707645 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.330817391 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.433326141 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.683447877 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.133649519 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.177483544 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.994551636 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.178223404 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.166076735 seconds)
  done (took 13.277556576 seconds)
done (took 69.620197469 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.122376957 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.185200962 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.146668018 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.143493669 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.427948728 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.167347287 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.127586913 seconds)
done (took 15.368115594 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.117746816 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.121189856 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.127030417 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.143181174 seconds)
  done (took 9.557879869 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.096436306 seconds)
    (2/2) benchmarking "read"...
    done (took 1.498134662 seconds)
  done (took 4.642132543 seconds)
done (took 15.2478339 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.133347923 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.134126488 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.135061195 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.132497964 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.134776465 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.135161568 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.13265368 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.135355227 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.133239149 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.133893609 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.133374481 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.133860932 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.133810821 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.134955641 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.132722386 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.13414853 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.133049722 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.134267368 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.134014062 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.132878092 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.134895208 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.133973795 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.135055492 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.1336307 seconds)
  done (took 28.265019573 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.134141555 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.13352528 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.134362942 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.133961687 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.135160549 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.134842078 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.135065917 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.134288606 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.135728784 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.136162486 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.13441969 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.135669836 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.134913444 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.134469432 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.134459024 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.136500338 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.135459768 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.135316714 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.135572623 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.136404755 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.134275524 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.135860107 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.136215788 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.135389619 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.13492363 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.136327475 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.134169037 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.135976052 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.135898774 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.134495516 seconds)
  done (took 35.104950192 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.140419388 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.144324928 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.136813504 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.135289506 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.136576517 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.136546154 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.136917572 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.137636329 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.135711291 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.135404448 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.136053978 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.136230024 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.136140373 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.138110422 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.137579401 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.13763653 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.137243145 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.136704784 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.136914895 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.137611584 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.136115387 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.136751319 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.137442944 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.136425498 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.138131013 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.13624619 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.137596362 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.137171149 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.138011198 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.135896112 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.138033455 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.138674762 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.138506477 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.137501391 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.137396842 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.137474744 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.143730952 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.144822819 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.139009877 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.13860031 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.138506557 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.13755567 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.138868226 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.140199561 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.139235133 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.140129401 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.139513703 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.138846658 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.138982847 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.139189184 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.139023315 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.139393977 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.138915073 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.138571619 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.139750928 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.139338326 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.13921195 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.140462453 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.139079932 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.139244269 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.140106534 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.140213575 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.139901904 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.139909995 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.141093888 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.141126169 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.139518104 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.140039779 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.140018029 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.139360516 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.140603181 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.140377653 seconds)
  done (took 83.030226497 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.140095215 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.139738545 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.140970283 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.139942695 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.140508515 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.140739218 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.139771379 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141237465 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.141213885 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.142904306 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.143702792 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.141612512 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.141068327 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.140796202 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.140072259 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.139738326 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.141615944 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.140832696 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.139230521 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.139842096 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.139752381 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.140281456 seconds)
  done (took 26.151996879 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.141284772 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.140989762 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.139296634 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.142774515 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.143528237 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.142702448 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.141469266 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.143045447 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.143371927 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.141135799 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.141023753 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.142303959 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.144573994 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.141934324 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.141530812 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.142411728 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.14267692 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.143291226 seconds)
  done (took 21.614612044 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.143162349 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.141775555 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.14231488 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.142560005 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.142261882 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.142573697 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.143430479 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.143359815 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.14268374 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.142771969 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.142808688 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.14514703 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.143920117 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.144307062 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.141253186 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.144134815 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.144932512 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.141920535 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.144770217 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.143203098 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.144626858 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.14357466 seconds)
  done (took 26.209434409 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.143713078 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.145716885 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.14441379 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.143609897 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.144949245 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.144977157 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.146200603 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.143386512 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.145067233 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.144701942 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.145907061 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.143994592 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.146444248 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.145088669 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.144473127 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.144229486 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.144456941 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.143998489 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.145179192 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.143627295 seconds)
  done (took 23.953500006 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.146317993 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.14642169 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.147204598 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.146259268 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.146879563 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.146481867 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.146773567 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.147227228 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.14718619 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.147142415 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.147076719 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.146888731 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.147472419 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.14677716 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.147469021 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.146045621 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.148563846 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.147723537 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.146674497 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.147086239 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.147104501 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.147458371 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.147248005 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.146718935 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.148091578 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.14751787 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.14715493 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.147151849 seconds)
  done (took 33.176860391 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.146515522 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.147473619 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.146534138 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.148130474 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.147634342 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.14758818 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.147405849 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.146764574 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.147974663 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.146836401 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.148716095 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.147677213 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.149394609 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.148622988 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.148689829 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.148832573 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.147512743 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.148221467 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.148821249 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.149048646 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.147443373 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146886363 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.147857662 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.150015177 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148159913 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.149148942 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.149713487 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.149725225 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.149908668 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.148972358 seconds)
  done (took 35.508682018 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.195461323 seconds)
    (2/2) benchmarking "in"...
    done (took 1.191198187 seconds)
  done (took 3.448657069 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.149435602 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.148816538 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.150703529 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.149453465 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.148823812 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.149564787 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.148266132 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.149043798 seconds)
  done (took 10.256510668 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.146014315 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.148849256 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.148271655 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.149381856 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.148656742 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.146249724 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.150516319 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.167237695 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.145522195 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.145953511 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.15168004 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.152210402 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.148603331 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.147054358 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.147010562 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.148533536 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.151782932 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.150983685 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.151525548 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.151787005 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.15099151 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.149079067 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.150035256 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.151219477 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.14754708 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.156020272 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.166332157 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.152806829 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.146340291 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.149770229 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.146634173 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.149947331 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.151218498 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.151366975 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.15086694 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.150655683 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.154773983 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.166057691 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.152868928 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.168855169 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.152437237 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.15133341 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.149024097 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.149841573 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.150454719 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.152625129 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.152719621 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.152621554 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.148653734 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.150504926 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.158716743 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.147741701 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.153154181 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.150302782 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.150580187 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.156064217 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.171622706 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.151493696 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.157202972 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.159077342 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.177880063 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.171087981 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.150861658 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.152495391 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.157013104 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.167722114 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.156329704 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.171869284 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.153313082 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.15391089 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.155279448 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.17829988 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.172682362 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.155100955 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.154023747 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.155264345 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.150803893 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.153931549 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.155546322 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.171809793 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.155843447 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.155729028 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.159223035 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.166699491 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.150630247 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.157848217 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.154854711 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.15547774 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.152760862 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.161110585 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.173724777 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.155117384 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.150524379 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.150297403 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.152172761 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.154788199 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.150948559 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.151709107 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.155563537 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.156216841 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.154883329 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.154405428 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.159578957 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.156437385 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.154614289 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.156384526 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.174132474 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.151622247 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.157003533 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.156037353 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.156209569 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.154812026 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.158399594 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.155583585 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.154836573 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.158979271 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.158797512 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.154574443 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.1563664 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.157280255 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.160650159 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.174394083 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.159130268 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.1574933 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.157010694 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.166460074 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.157454798 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.153991658 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.157020259 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.1564944 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.158469333 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.153918375 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.158205543 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.153358353 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.157608213 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.153443868 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.157718248 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.158596812 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.15800508 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.154757989 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.154304595 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.152690842 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.154395394 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.154992916 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.157851817 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.154814851 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.159829282 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.171476905 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.154695639 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.155335099 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.159287272 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.158125861 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.154220126 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.157501087 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.154651401 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.159609656 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.154551572 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.158269899 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.160214365 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.160295987 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.159032348 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.156320025 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.158006133 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.159471882 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.158029297 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.155093742 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.159655074 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.161273684 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.161387709 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.153514939 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.159969784 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.15459015 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.158087009 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.167252228 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.15955275 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.160029698 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.158321561 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.160242065 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.160671159 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.161278078 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.160018593 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.163693205 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.160802789 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.16295485 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.176785265 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.160474356 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.159802022 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.157029372 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.156146985 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.159975149 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.159354005 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.168267689 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.167736512 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.178873976 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.157248617 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.164142049 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.15751587 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.163178362 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.161682656 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.159798419 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.161861373 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.161924722 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.157377588 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.163205416 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.158706396 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.162672856 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.157146003 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.161788314 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.163595723 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.161627641 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.163066338 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.157429901 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.15955099 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.162707957 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.161803546 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.161180114 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.157075508 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.16267984 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.157836254 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.158125458 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.162129542 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.162644145 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.164312313 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.162642095 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.158760694 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.160105865 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.159007908 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.157622831 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.163225489 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.160635654 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.158715283 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.16546312 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.177088193 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.159896069 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.164832973 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.176591624 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.15991147 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.161877146 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.163184671 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.162924359 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.161314911 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.169662456 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.163532453 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.16487223 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.16625186 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.159599234 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.164135599 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.166861131 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.180996224 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.160050489 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.163071474 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.162312978 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.165320016 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.160823981 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.162172734 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.159875039 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.162329448 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.164489897 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.16577175 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.162213126 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.164772224 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.164763986 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.16579685 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.163074636 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.173053192 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.166801311 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.160106145 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.16350899 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.16349612 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.16992314 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.161446732 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.164979645 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.161657987 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.173090943 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.188762812 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.167327768 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.180798238 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.166094388 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.167216419 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.179003996 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.16478524 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.16244749 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.161481285 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.161193611 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.16163245 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.167629384 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.162924486 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.166128686 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.163868213 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.162466123 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.169988694 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.168956025 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.164223576 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.168193176 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.167415718 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.168017529 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.162229954 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.166921972 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.164393008 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.164204978 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.163472085 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.16266239 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.169044941 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.181452736 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.163529903 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.165382451 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.162902126 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.162525279 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.164368063 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.168361744 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.168592431 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.172575117 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.166960147 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.171770993 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.165040433 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.175092097 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.168655568 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.167000571 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.175594269 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.169187587 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.163844857 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.164828365 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.170474748 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.175485793 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.18611408 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.167249438 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.172728983 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.16967008 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.168686486 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.168807437 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.170619395 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.169861922 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.169535759 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.174653908 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.183478404 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.169743477 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.169177397 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.169733558 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.16973906 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.169174766 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.166132252 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.170155435 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.169895854 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.167629826 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.165179394 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.166635063 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.171375317 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.170048463 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.172353432 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.171935093 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.172009046 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.172213151 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.185401173 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.176108761 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.170179321 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.173001715 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.189456489 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.17263427 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.188581798 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.167638615 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.171150221 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.172384854 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.168399456 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.167792262 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.169407326 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.171450984 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.167589787 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.175761007 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.171256944 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.169925924 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.168511499 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.172346962 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.167791538 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.175582732 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.190777401 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.169031172 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.176879524 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.172709102 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.168566129 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.176937513 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.171953815 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.167401182 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.17099845 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.177710392 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.182138879 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.169472157 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.173315317 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.169458614 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.17255003 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.172064333 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.173064292 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.171969246 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.172715175 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.169852032 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.173591927 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.1713349 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.17279857 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.170361967 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.170873605 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.169493128 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.179682487 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.192102754 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.169975068 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.172973446 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.175042441 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.17081963 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.170719059 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.173378772 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.170420833 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.173878606 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.170619726 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.177044581 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.176201192 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.173820469 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.169983348 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.174249784 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.171379993 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.171415183 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.173933865 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.175548997 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.176443401 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.171743511 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.174516311 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.170322582 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.169719825 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.17598696 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.171226702 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.176737426 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.172539816 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.177717596 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.171363009 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.175663074 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.175768423 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.175406657 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.170184503 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.171101033 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.177471747 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.191901477 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.181161694 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.179529653 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.180888352 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.171610595 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.174385255 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.178731004 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.170333184 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.172449378 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.176071204 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.172828635 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.172487829 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.176976941 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.178179342 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.178058708 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.189344016 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.171790845 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.179746961 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.190815443 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.177246071 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.173297315 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.177199867 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.174152414 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.176560059 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.177334797 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.173049167 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.178342884 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.193127337 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.176099764 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.173807079 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.173067659 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.175202377 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.182968331 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.179097561 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.174943198 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.178526032 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.174526947 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.177504773 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.178680527 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.17788959 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.172798354 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.173634151 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.175619596 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.181490603 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.178786466 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.17475807 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.175003291 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.174497784 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.17905706 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.180087406 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.179271639 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.178531094 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.174574844 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.179706734 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.174416152 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.176100324 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.173192403 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.176514108 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.182706482 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.179402832 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.175966585 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.183218491 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.18678304 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.178644405 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.174145596 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.174923684 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.176920779 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.179363288 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.179527787 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.175287686 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.175464292 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.180473681 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.180266867 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.181179183 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.178113475 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.190430843 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.198562582 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.175494655 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.176023917 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.179811511 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.180827603 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.179454269 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.181147317 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.177517904 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.178856999 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.187846326 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.179787344 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.183256279 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.194675456 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.177043643 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.185142187 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.177897569 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.182634834 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.178358516 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.179729438 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.182034795 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.179259243 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.190279931 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.180531543 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.183819817 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.203700837 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.195202739 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.17681185 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.181194147 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.17873746 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.180068748 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.177928212 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.180960116 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.182396504 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.181491556 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.180309994 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.176714144 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.181908001 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.179239376 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.183254991 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.179814971 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.175513968 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.177658867 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.181607601 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.180857937 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.182033696 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.180553447 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.181051378 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.181499677 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.176102785 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.186856848 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.20014279 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.18165218 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.181718293 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.182015867 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.180861857 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.178530523 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.185745249 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.189491879 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.181247235 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.182165522 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.177671059 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.18183003 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.185930633 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.177820157 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.175793378 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.178078452 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.182325029 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.187660627 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.204381053 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.182088969 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.179225455 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.180960276 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.181214877 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.179723484 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.183848071 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.18268009 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.179210988 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.179660143 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.185469666 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.182488723 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.183056786 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.179172449 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.189140851 seconds)
  done (took 697.097221718 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.18494595 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183929513 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.184477668 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.183180787 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.183455284 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.183563567 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184101233 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.184253226 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.182745749 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.184723578 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.18268872 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.182888936 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.18346778 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.183601806 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.18451786 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.183098089 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.184493059 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.184795951 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.183752001 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.184162692 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.184191066 seconds)
  done (took 25.954524826 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.184351467 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.185069547 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.183495802 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.184080479 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.184742436 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.184908149 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.185930615 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.184058777 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.185125546 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.184768244 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.184745402 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186414893 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.185570317 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.184057408 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.184345531 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.186383145 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.185301514 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.184597081 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.185000683 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.185954267 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.18520738 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.185159545 seconds)
  done (took 27.164048331 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.184613807 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.184986941 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.180644831 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.184434301 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.186099255 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.185124128 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.184863874 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.186198043 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.186929742 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.181293502 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.180819419 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.181981205 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.18695498 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.193796298 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.183475313 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.185872211 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.186866317 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.18612293 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.188034553 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.185610265 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.187380265 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.206038142 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.186534161 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.181162297 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.186879344 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.186848636 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.185313065 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.187574174 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.183490572 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.190444351 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.187533013 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.182331834 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.185364456 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.18325542 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.186073066 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.190849338 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.187249604 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.187341333 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.186967158 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.191000601 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.206717332 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.187711154 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.188487979 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.206520444 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.186770057 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.186392655 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.193907161 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.188919783 seconds)
  done (took 58.096337347 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.758828073 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.779714361 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.778439432 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.774601455 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.778927718 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.776533566 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.773960114 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.782665503 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.787107262 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.776506014 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.773666598 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.778955471 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.773659309 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.781159155 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.777141017 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.779276784 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.780684072 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.780823286 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.779088573 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.781287418 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.771934698 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.775719523 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.776885484 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.78010983 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.773964568 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.778044623 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.777481916 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.775791028 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.77860483 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.77928649 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.779342724 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.775369573 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.772740584 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.773829234 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.776016924 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.773408691 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.772952591 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.773367912 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.773026565 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.778660923 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.774962053 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.773278587 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.774527896 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.780850774 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.774852028 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.778508646 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.774778841 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.774807358 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.777861977 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.776670662 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.775189422 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.779814792 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.782543435 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.779372619 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.773361464 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.778581787 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.785936402 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.774117378 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.773280326 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.774857406 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.773829958 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.7750585 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.776063604 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.776539688 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.776084849 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.777891071 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.775975009 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.775477201 seconds)
  done (took 121.914897156 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.188923743 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.191673389 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.189301467 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.188249157 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.188899504 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.190058546 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.190647305 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.190375906 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.191383177 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.189649758 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.188733547 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.188966564 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.187857685 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.188599015 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.188291776 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.186957278 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.187977631 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.18726281 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.189699971 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.188224042 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.188229261 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.189006468 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.189047314 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.189442737 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.189510903 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.189319034 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.191572373 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.189355875 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.189021751 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.188708827 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.190148954 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.187786419 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.189931909 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.190826379 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.190261453 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.188506326 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.189010975 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.188413494 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.188599207 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.189115973 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.189495487 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.19101932 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.190265071 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.189441334 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.189374766 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.18962257 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.189175963 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.189107322 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.191243731 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.187675177 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.188913585 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.189542292 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.189634764 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.188622544 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.189255248 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.190572115 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.18704553 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.188368799 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.188600694 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.189584407 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.190995339 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.18949811 seconds)
  done (took 74.836597363 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.189356262 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.18957112 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.189181421 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.189701047 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.189232644 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.193888437 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.189073958 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.189814666 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.188436969 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.189246346 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190215697 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.190434931 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188449007 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191254388 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.188985244 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19101978 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.189981565 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.188924018 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.189809171 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.189614479 seconds)
  done (took 24.893893403 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.188137856 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.18978838 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.188699574 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.188584672 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.189139322 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.188951113 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.188623449 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190334369 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19022737 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190246021 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.190485996 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.190169838 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188681064 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.191005634 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.190562725 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.189325477 seconds)
  done (took 20.130425508 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.19012987 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.189804341 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.190186766 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.191864592 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.191098603 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.1907891 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.189929698 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.19020959 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.189723905 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.191417542 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.190851924 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.190965511 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.189647686 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.190519947 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.191099765 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.191771553 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.191688727 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.192021353 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.191095384 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.189513656 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.191224192 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.191218333 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.190831443 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.190719819 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.191558101 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.192090352 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.190874028 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.192295525 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.191723782 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.190735061 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.19174856 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.191131508 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.190840672 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.192395734 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.191685699 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.191648254 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.191795746 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.192633932 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.191743419 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.191905844 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.191580185 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.192251633 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.191631199 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.19143698 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.191113077 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.192176726 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.192064553 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.193978839 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.191464911 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.192410676 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.194679155 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.195128614 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.195478907 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.195847548 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.1960801 seconds)
  done (took 66.642486985 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.195428473 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.196678582 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.19566539 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.194902144 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.194946491 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.194564267 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.194417955 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.194123822 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.192571155 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.192166698 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.192166665 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.19489528 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.192939424 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.192460943 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.194190387 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.192993543 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.194382493 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.193460057 seconds)
  done (took 22.596771227 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.193075422 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.194577665 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.194183844 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.194395216 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.194338212 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.19614103 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194359005 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.193709899 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.194485504 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.195485693 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192648295 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.194538281 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194433095 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.194792808 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.195105424 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.193436961 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.194852325 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.195543343 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.194279538 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.194347377 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.194853216 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.195106018 seconds)
  done (took 27.381108823 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.19076173 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.190553603 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.189567425 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.204449844 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.207336213 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.189935499 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.190513249 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.189614438 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.208523216 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.245402152 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.241319595 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.208427999 seconds)
  done (took 15.559456838 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195074258 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195491281 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.195613146 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195549719 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195194373 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196243025 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.195799751 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19583546 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196214501 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196184748 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194854951 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195352759 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195648476 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195588861 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197495817 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197625204 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19738415 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196725136 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195473287 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197133873 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199319446 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194908083 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197301138 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19719121 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198452339 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196743223 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19575351 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19841079 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198389207 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197498758 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198259159 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196803092 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196758473 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197613549 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197919875 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.197851288 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197841767 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.197028948 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.197330831 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197849493 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.196919767 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.198117266 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.197782863 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.198542394 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.19868413 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198355592 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199062157 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.198485094 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198228396 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.198212707 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198120406 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197431381 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.198132781 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198567524 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199333051 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.198070433 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198932048 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200382229 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199503553 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199208314 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.199902849 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198444086 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198557579 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199764707 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.19934972 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199036322 seconds)
  done (took 80.142278896 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199660638 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.198986985 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200103663 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200372524 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199175956 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199807422 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199586142 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199942631 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200875901 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200214328 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203287481 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20052287 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19918614 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200250956 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200545041 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200109139 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201059396 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200890656 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200421269 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20049955 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201100582 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201693675 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200799999 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200031283 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203852067 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200882292 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201063485 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201186452 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201389447 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203073569 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20133449 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201933313 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201562452 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.201745018 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201282673 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.200805211 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201861725 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202462221 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201964057 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203830303 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2048725 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201735557 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202315728 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202462721 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202673609 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203043337 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202976334 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20123954 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202441998 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203804219 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203686416 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20269478 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203555718 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203854902 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203416656 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202658668 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202831579 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202252455 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203600533 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20296615 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203378977 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205126805 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206082214 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205975466 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206004125 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204847427 seconds)
  done (took 80.441486132 seconds)
done (took 1670.621004535 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.366295092 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.320951616 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.19788625 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.210951625 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.198173345 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.195797272 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.212197913 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.198736492 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.199001591 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.198757055 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.198381912 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.38831949 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.193359076 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.199051726 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.19858238 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.295032283 seconds)
  done (took 24.883845094 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.224595895 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.209166762 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.306901998 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.224007914 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.229807136 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.370830256 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.261075564 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.209753553 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.355724174 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.226506738 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.193664972 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.225516625 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.205203172 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.196378109 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.220669791 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.372423504 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.430239918 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.201312167 seconds)
  done (took 26.776462529 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.598989403 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.209832398 seconds)
  done (took 4.922483234 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.223229899 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.205423565 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.206748253 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.204470887 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.196627333 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.195873559 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.202639952 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.197362068 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.205703061 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.316312971 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.211175174 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.218056365 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.222319402 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.205378942 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.209573377 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.246913923 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.36494582 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.21090514 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.208804078 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.211490658 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.205010131 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.290882941 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.243554624 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.212488 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.316631462 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.212402256 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.209221282 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.213318409 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.33829197 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.211928928 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.206274229 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.208079559 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.208072344 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.201845853 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.646034092 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.219591123 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.230475539 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.214964425 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.211236751 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.367520258 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.207121546 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.215741879 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.199107245 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.643074496 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.368960676 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.316833949 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.219699285 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.207891986 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.208990306 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.270588276 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.209030274 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.209597879 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.263751145 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.971908259 seconds)
  done (took 78.262183189 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.213141387 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.200160122 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.379212502 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.220395654 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.200575598 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.200733133 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.216426789 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.455887084 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.252239012 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.20243837 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.473311868 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.746028479 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.226644891 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.258585872 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.070723878 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.277597496 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.202639813 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.216081897 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.203667852 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.206880334 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.731672176 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.202299361 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.201022285 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.337482424 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.239800696 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.685853104 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.201556083 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.202461137 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.218368408 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.203294054 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.699083503 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.219300563 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.272245798 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.206047612 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.46019892 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.544612804 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.512662636 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.204358467 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.243186591 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.204814658 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.211498577 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.670154374 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.530126466 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.202758292 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.203809953 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.69992788 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.203776456 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.204744375 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.21175703 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.44983929 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.203788219 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.205559923 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.218156114 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.203483344 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.203143207 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.294847901 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.295271381 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.689496157 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.204405698 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.204471807 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.234628444 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.205215341 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.210745854 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.20810742 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.221465452 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.534181712 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.354237162 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.212559163 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.534461417 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.696478634 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.222577162 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.772964282 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.225247877 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.218269044 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.424381663 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.19949127 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.201955725 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.694311098 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.208420034 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.19401525 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.500746874 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.197584951 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.470299426 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.208865734 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.192137875 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.730335294 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.186590587 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.201135397 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.186831617 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.198379944 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.184524375 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.181328353 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.443387353 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.224327626 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.176089037 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.175844048 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.191072307 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.176184552 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.176937449 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.179373744 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.728623755 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.1904263 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.174466325 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.175876816 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.173297217 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.172921466 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.173892878 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.174775149 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.436926365 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.18102388 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.177549006 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.174838798 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.175156342 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.192616584 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.324287318 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.176830226 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.451157149 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.175278679 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.171781583 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.177616039 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.171321228 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.175875319 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.171902405 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.178361438 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.018298418 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.433241202 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.189108742 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.189228955 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.172818123 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.171102108 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.17305556 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.187233245 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.218745341 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.176570614 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.936287998 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.188074346 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.191829979 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.172872007 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.176743228 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.172153259 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.182816254 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.171409664 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.456564202 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.435246158 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.317766976 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.176411065 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.180621488 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.908453225 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.218163767 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.356632624 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.194785942 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.176658281 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.427961354 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.395446932 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.176692067 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.175619785 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.180913221 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.43341958 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.176750687 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.490804997 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.699683127 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.193639585 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.1805417 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950150052 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.86162605 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.180979305 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.181120083 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.446753658 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.192048175 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.175039124 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.176355509 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.177501058 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.191408767 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.192505967 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.186128927 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.178206355 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.178538855 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.224303149 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.367466771 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.194866357 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.180667025 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.656999409 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.197678765 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.178036925 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.180930524 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.181488975 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.177539002 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.257767491 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.179573697 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.21812491 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.182385916 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.181641757 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.673477623 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.178164471 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.179002168 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.368910052 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.847812467 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.198560263 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.177633198 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.192837463 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.095216565 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.682786793 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.17924447 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.45980128 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.185970204 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.215812802 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.178379304 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.200574166 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.720908182 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.187116945 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.197174708 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.815766288 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.200015252 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.706044985 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.180602659 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.181527841 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.765405825 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.199660704 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.183559299 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.180362083 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.196086185 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479739836 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.180209149 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.197112224 seconds)
  done (took 464.579379996 seconds)
done (took 600.535856838 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.18064536 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.180494116 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.176471846 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.184498268 seconds)
  done (took 9.821606674 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.195889829 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.186935546 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.191771237 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.186904498 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.194416564 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.186194914 seconds)
  done (took 8.240424187 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.180016296 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.181543812 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.185067387 seconds)
  done (took 7.648071703 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.371382837 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.204558699 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.480089596 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.203119098 seconds)
  done (took 8.359060878 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.191764322 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.19407645 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.191855592 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.193242053 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.195456411 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.195557266 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.193590817 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.192285646 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.195008621 seconds)
  done (took 11.841492023 seconds)
done (took 47.011994789 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.275795852 seconds)
    (2/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.208702278 seconds)
    (3/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.172234836 seconds)
    (4/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.200794863 seconds)
    (5/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.40486555 seconds)
    (6/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.924420453 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.258396278 seconds)
    (8/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.285944177 seconds)
    (9/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.030796902 seconds)
    (10/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.292529024 seconds)
    (11/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.173565871 seconds)
    (12/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.214748018 seconds)
    (13/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.275984444 seconds)
    (14/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.24574144 seconds)
    (15/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.418645936 seconds)
    (16/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.479007272 seconds)
    (17/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.320201994 seconds)
    (18/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.231211287 seconds)
    (19/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.381691658 seconds)
    (20/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.19346505 seconds)
    (21/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.188726559 seconds)
    (22/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.189469089 seconds)
    (23/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.221283307 seconds)
    (24/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.228403336 seconds)
    (25/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.345751813 seconds)
    (26/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.199301113 seconds)
    (27/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.364175823 seconds)
    (28/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.219956318 seconds)
    (29/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.238245144 seconds)
    (30/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.225960909 seconds)
    (31/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.211995213 seconds)
    (32/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.266011121 seconds)
    (33/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.427694165 seconds)
    (34/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.274532715 seconds)
    (35/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.305875489 seconds)
    (36/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.080427815 seconds)
    (37/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.333260372 seconds)
    (38/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.363817029 seconds)
    (39/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.02206896 seconds)
    (40/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.298970634 seconds)
    (41/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.233942016 seconds)
    (42/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.389643943 seconds)
    (43/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.261330483 seconds)
    (44/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.184544391 seconds)
    (45/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.213394385 seconds)
    (46/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.24729267 seconds)
    (47/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.374473875 seconds)
    (48/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.332917587 seconds)
    (49/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.257643868 seconds)
    (50/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.379386606 seconds)
    (51/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.238986671 seconds)
    (52/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.867159613 seconds)
    (53/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.200784336 seconds)
    (54/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.276478993 seconds)
    (55/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.364906247 seconds)
    (56/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.258208417 seconds)
    (57/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.29929425 seconds)
    (58/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.351916598 seconds)
    (59/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.186362044 seconds)
    (60/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.185144522 seconds)
    (61/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.248255029 seconds)
    (62/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.341148699 seconds)
    (63/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.827453918 seconds)
    (64/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.981043958 seconds)
    (65/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.209627415 seconds)
    (66/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.321812792 seconds)
    (67/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.233838166 seconds)
    (68/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.184923767 seconds)
    (69/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.838031311 seconds)
    (70/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.264349245 seconds)
    (71/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.374269378 seconds)
    (72/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.378569173 seconds)
    (73/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.187075333 seconds)
    (74/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.962602983 seconds)
    (75/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.283674485 seconds)
    (76/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.918748108 seconds)
    (77/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.215373032 seconds)
    (78/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.392574931 seconds)
    (79/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.250342209 seconds)
    (80/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.329727637 seconds)
    (81/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.358451272 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.298644896 seconds)
    (83/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.268383861 seconds)
    (84/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.247261946 seconds)
    (85/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.274842556 seconds)
    (86/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.873839232 seconds)
    (87/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.340972859 seconds)
    (88/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.295702065 seconds)
    (89/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.189193399 seconds)
    (90/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.301650873 seconds)
    (91/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.181257679 seconds)
    (92/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.382490491 seconds)
    (93/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.281101849 seconds)
    (94/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.263085656 seconds)
    (95/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.317058391 seconds)
    (96/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.222806677 seconds)
    (97/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.301715944 seconds)
    (98/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.278439108 seconds)
    (99/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.323618411 seconds)
    (100/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.300080299 seconds)
    (101/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.296396143 seconds)
    (102/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.180793462 seconds)
    (103/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.387375553 seconds)
    (104/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.233083599 seconds)
    (105/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.873600526 seconds)
    (106/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.341918619 seconds)
    (107/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.9362728 seconds)
    (108/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.981814599 seconds)
    (109/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.308980627 seconds)
    (110/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.287999851 seconds)
    (111/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.284778534 seconds)
    (112/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.291724342 seconds)
    (113/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.238811003 seconds)
    (114/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.266114629 seconds)
    (115/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.230697944 seconds)
    (116/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.382232843 seconds)
    (117/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.213425591 seconds)
    (118/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.39350971 seconds)
    (119/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.193636041 seconds)
    (120/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.280513564 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.334828923 seconds)
    (122/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.285429871 seconds)
    (123/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.292713457 seconds)
    (124/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.222097504 seconds)
    (125/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.336477936 seconds)
    (126/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.337787817 seconds)
    (127/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.238397327 seconds)
    (128/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.268718598 seconds)
    (129/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.362151627 seconds)
    (130/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.229261317 seconds)
    (131/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.945101309 seconds)
    (132/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.337894392 seconds)
    (133/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.299238994 seconds)
    (134/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.331408387 seconds)
    (135/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.227092008 seconds)
    (136/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.322456148 seconds)
    (137/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.237574816 seconds)
    (138/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.272783041 seconds)
    (139/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.847489511 seconds)
    (140/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.929066686 seconds)
    (141/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.356874127 seconds)
    (142/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.198093647 seconds)
    (143/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.335740643 seconds)
    (144/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.322380269 seconds)
    (145/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.363384597 seconds)
    (146/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.227299688 seconds)
    (147/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.229860784 seconds)
    (148/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.188769775 seconds)
    (149/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.316654621 seconds)
    (150/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.184989312 seconds)
    (151/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.411143768 seconds)
    (152/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.24351174 seconds)
    (153/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.253714032 seconds)
    (154/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.395784549 seconds)
    (155/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.877717281 seconds)
    (156/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.183122194 seconds)
    (157/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.365034659 seconds)
    (158/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.259528147 seconds)
    (159/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.299367266 seconds)
    (160/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.184100054 seconds)
    (161/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.217378256 seconds)
    (162/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.207407105 seconds)
    (163/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.242208651 seconds)
    (164/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.318148982 seconds)
    (165/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.271475711 seconds)
    (166/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.204258749 seconds)
    (167/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.395940709 seconds)
    (168/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.184033933 seconds)
    (169/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.203604517 seconds)
    (170/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.299405767 seconds)
    (171/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.242258882 seconds)
    (172/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.964519572 seconds)
    (173/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.201693492 seconds)
    (174/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.904833815 seconds)
    (175/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.212738417 seconds)
    (176/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.527018674 seconds)
    (177/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.307655438 seconds)
    (178/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.198926644 seconds)
    (179/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.394327084 seconds)
    (180/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.2515784 seconds)
    (181/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.225810564 seconds)
    (182/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.184914464 seconds)
    (183/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.238867604 seconds)
    (184/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.235221 seconds)
    (185/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.346603676 seconds)
    (186/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.232842973 seconds)
    (187/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.09319654 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.265469686 seconds)
    (189/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.933618443 seconds)
    (190/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.263505732 seconds)
    (191/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.231610185 seconds)
    (192/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.351729814 seconds)
    (193/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.227314669 seconds)
    (194/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.30877068 seconds)
    (195/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.272906368 seconds)
    (196/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.308081399 seconds)
    (197/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.413178962 seconds)
    (198/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.303621326 seconds)
    (199/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.26117998 seconds)
    (200/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.236272919 seconds)
    (201/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.315672951 seconds)
    (202/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.250989573 seconds)
    (203/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.332612202 seconds)
    (204/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.211183656 seconds)
    (205/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.361317935 seconds)
    (206/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.38950226 seconds)
    (207/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.504262567 seconds)
    (208/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.299449004 seconds)
    (209/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.083066239 seconds)
    (210/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.232421644 seconds)
    (211/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.224414068 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.424130163 seconds)
    (213/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.246510603 seconds)
    (214/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.5327045 seconds)
    (215/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.335357685 seconds)
    (216/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.32408832 seconds)
    (217/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.331504206 seconds)
    (218/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.391890049 seconds)
    (219/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.285213485 seconds)
    (220/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.843760737 seconds)
    (221/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.337925691 seconds)
    (222/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.247346851 seconds)
    (223/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.896387837 seconds)
    (224/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.975272468 seconds)
  done (took 339.783352278 seconds)
done (took 340.883115026 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.254207299 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.38678749 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.204175447 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.204360175 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.248732478 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.191625705 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.250721816 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.212596619 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.215095597 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.214211318 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.192697209 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.217885923 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.217755362 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.244812967 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.319481923 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.212962814 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.205401708 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.212323447 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.254206128 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.272342587 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.250777097 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.250399685 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.226801385 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.206107236 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.255274817 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.253442212 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.212449184 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.208127658 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.217080541 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.254783154 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.199843103 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.217852783 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.262690076 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.261488073 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.25071135 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.213935271 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.250795516 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.38725443 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.249410056 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.245178905 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.217026448 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.263763233 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.217923531 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.216942661 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.262546653 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.225191216 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.254896775 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.329819769 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.200673426 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.191269101 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.262225906 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.273675754 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.218102593 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.188604786 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.206695222 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.33440207 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.215170939 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.255626236 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.214676193 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.25248583 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.321822743 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.257902843 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.27522486 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.254715528 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.216325347 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.22181614 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.214766653 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.274899245 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.21562309 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.253275657 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.253981623 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.220318801 seconds)
done (took 98.508778131 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.336571265 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.208230884 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.354743723 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.21220965 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.372020495 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.355831608 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.211494256 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.213884165 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.21104103 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.045984863 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.212827189 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.212863051 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.208170762 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.215183585 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.338750662 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.21365357 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.212874718 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.935735643 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.214135071 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.35473971 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.205416178 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.213403891 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.211955975 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.038168451 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.208582621 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.204151759 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.356826445 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.214303457 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.931828143 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.204066635 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.206515687 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.928439954 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.356687211 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.232966175 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.225571131 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.223031511 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.372791718 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.230013583 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.34179932 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.341423257 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.355707824 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.25257257 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.205495596 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.202025108 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.218835471 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.215516775 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.216856026 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.2459897 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.20915837 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.215731014 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.93883761 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.224636154 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.215363681 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.217316845 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.214120288 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.244922682 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.215271363 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.216381633 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.358357418 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.217183399 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.341725049 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.040499476 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.05259021 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.216560387 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.20936814 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.21789466 seconds)
  done (took 100.487816053 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.277647638 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.288433146 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.32378902 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.229174985 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.263149435 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.324043637 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.227572569 seconds)
  done (took 10.055086966 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.217808757 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.217416236 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.261577792 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.262032372 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.21634275 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.368684478 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.218378371 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.223193581 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.218577137 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.264773051 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.21794365 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.218559003 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.226384069 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.211527652 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.262201005 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.223924106 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.32844607 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.21440332 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.216813312 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.369596518 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.218129811 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.226820555 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.265035355 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.224692452 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.218190981 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.24986422 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.983728379 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.218254638 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.218630572 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.218878552 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.219083794 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.266314447 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.21927249 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.213219978 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.222546601 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.328878207 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.21886985 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.218891323 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.220168717 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.210193952 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.219570976 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.219030016 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.219754315 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.219058388 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.219087153 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.236852151 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.222311539 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.220516752 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.220042536 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.219737743 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.265418854 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.220231026 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.219110593 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.21995289 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.270987991 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.230463696 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.221063827 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.21941101 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.220837271 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.2202297 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.371864314 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.265128587 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.221983799 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.263471637 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.220021135 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.221519239 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.21988322 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.220868202 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.306728051 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.220651006 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.264833443 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.220738864 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.396959955 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.239512124 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.222111489 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.218839981 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.219503137 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.219646104 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.21409668 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.222373914 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.221146162 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.21800202 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.223702821 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.222586373 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.221233856 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376647794 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.331786026 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.221827049 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.229247991 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.225219206 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.224681243 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.270054394 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.22220363 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.222344241 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.26915863 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.332276515 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.273566084 seconds)
  done (took 126.264467202 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.232632063 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.230598131 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.221780449 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.244764539 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.220697798 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.218638162 seconds)
  done (took 8.497071348 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.220887981 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.2277896 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.224462831 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.224246712 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.222827186 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.224141489 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.224423971 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.219129106 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.226261924 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.22510016 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.225493455 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.227327954 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.22716346 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.224074207 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.225455483 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.224851521 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.224171663 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.224259241 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.224903258 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.224653885 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.220544362 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.224086149 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.224049681 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.222102053 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.227388715 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.22628728 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.241806259 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.225559976 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.224603349 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.226831657 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.24308924 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.226155134 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.223353244 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.225760553 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.229465873 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.222344027 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.228487419 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.227749192 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.225846883 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.226745391 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.229129823 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.225771048 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.226702307 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.228721547 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.223404507 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.226822648 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.233015478 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.243026342 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.225571831 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.22712599 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.227717223 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.226571125 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.225256746 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.229679393 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.224919656 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.242578756 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.232379204 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.227707972 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.226190496 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.223691224 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.231877058 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.227562907 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.223889694 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.231799078 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.226903578 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.230197811 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.224940348 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.231837952 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.227944631 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.227873705 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.230812773 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.229217302 seconds)
  done (took 90.48581156 seconds)
done (took 336.907238589 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.083689877 seconds)
  done (took 4.214797264 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.224221568 seconds)
  done (took 3.357332506 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.36607466 seconds)
  done (took 21.500858156 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.296912875 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.29368286 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.241387486 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.224977197 seconds)
  done (took 10.188644743 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.483844862 seconds)
  done (took 3.616833607 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.234978119 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.222156601 seconds)
  done (took 5.592284014 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.369127895 seconds)
  done (took 3.503140372 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.681310978 seconds)
  done (took 3.814808568 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.226325028 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.238208726 seconds)
  done (took 5.604178263 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.209543143 seconds)
  done (took 3.342843439 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 35.735108231 seconds)
  done (took 36.869631511 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.234478578 seconds)
  done (took 3.370980339 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.250057498 seconds)
  done (took 3.383585056 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.644999147 seconds)
  done (took 5.780014116 seconds)
done (took 115.271198048 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.219231298 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.218751808 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.221664249 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.219461053 seconds)
  done (took 10.01240422 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.2820328 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.282857623 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.284041387 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.283332889 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.28166404 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.282973433 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.256331783 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.256128798 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.282172723 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.283253881 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.283084472 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.282839065 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.283908064 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.257175771 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.282495181 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.283308782 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.286541562 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.283388184 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.257173187 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.283473607 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.232451711 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.284569343 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.282552163 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.231813805 seconds)
  done (took 31.726250366 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.722401356 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.298403972 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.381642739 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.279919074 seconds)
  done (took 6.819376847 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.309964249 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.309583036 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.324355208 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.362405038 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.373496778 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.322403881 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.259311437 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.253475785 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.240568173 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.310743182 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.362512425 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.302758711 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.388491499 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.23249034 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.438526735 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.232383301 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.233243238 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.31225651 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.362956725 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.363933847 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.233036189 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.310569687 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.312669335 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.311624265 seconds)
  done (took 32.601373387 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.242342806 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.248489583 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.235992295 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.250702981 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.234596868 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.236425447 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.23730175 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.241330812 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.234896234 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.235518116 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.235409987 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.249374739 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.238433894 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.237088076 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.244973471 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.238201586 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.241271728 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.24043087 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.235917503 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.242280472 seconds)
  done (took 25.939464148 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.22396681 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.223493621 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.576310916 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.480407732 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.225276317 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.224047039 seconds)
  done (took 13.091363798 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.29499634 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.44733267 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.235044926 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.55471946 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.645029972 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.235746332 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.232090446 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.468134897 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.757830867 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.727784558 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.290384066 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.298240867 seconds)
  done (took 18.326737347 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.22721151 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.231505118 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.232313758 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.245100607 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.283924533 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.250845963 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.239915597 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.227271344 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.287066932 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.302238927 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.251688713 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.283878772 seconds)
  done (took 20.203720568 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.326152976 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.230725825 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230086852 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322335497 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250934884 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077546892 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.286042912 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.932111482 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.255078271 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.509245066 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.232930978 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.329222986 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.487173656 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233923423 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.234933414 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.184585083 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467021601 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.703055875 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236726114 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232853379 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270644239 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.237671081 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.23601382 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.434798635 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250651639 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232083129 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.496017124 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.231748876 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499481017 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.246453602 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.24305823 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232483635 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.509871847 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861820214 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350252244 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428217354 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253125217 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.239524139 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.240663438 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.253440908 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.243168376 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.235562359 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.245852711 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233778081 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.233641438 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235436522 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923157375 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.259704695 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.233940967 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.234188171 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475221757 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.332206313 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.240812382 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.231802111 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281407744 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237977076 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.241029253 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362454273 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83297354 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240290559 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243577351 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.238835569 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248134492 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241360125 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818491308 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.258060688 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.24280878 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.241811046 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236139294 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.23486924 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.257758228 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235804461 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.262238654 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236700654 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914587427 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.264529863 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238026494 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764120288 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244103275 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.239894784 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.468906487 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235399135 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236210213 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.235342224 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.236658311 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919688864 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.249980716 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.222695642 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.303295362 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.936233916 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.452581572 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277015389 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.267307808 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.460752459 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.224469266 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23733076 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.237385544 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245802338 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.259906686 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.923095128 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25331636 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.243544195 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49637555 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.44910064 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243686397 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.202754629 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691384941 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263524662 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.260766348 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.244929598 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.438400628 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.809745996 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.273009222 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247601459 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.2608625 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.237696258 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986769879 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252190749 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.346042925 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249277655 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.504060056 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.01511877 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244888418 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.305636725 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245651193 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.239416757 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245158716 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245221472 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.23893722 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.426289289 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.266566095 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.253422064 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.240748256 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239849517 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.239256449 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255089353 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.242263808 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.464392146 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249150558 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.524017893 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241700567 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240478934 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242071671 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.464119012 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.240821071 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.600506437 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5034878 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244780916 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.249350599 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.25613709 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.260073972 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344355438 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264048989 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.246471879 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.503788483 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.247436917 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.249141314 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249040434 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.247227885 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246274708 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.251489943 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252845848 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796644178 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24056638 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.252701107 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131573803 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.260060048 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.310958773 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.250221519 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.440914632 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.264799019 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250388947 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.253835498 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.244326956 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.467786762 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.252172224 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.247088453 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32655004 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.695203579 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.807791931 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.277367048 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.243720942 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.243730697 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.241562544 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244346523 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242081139 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.244189425 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440424992 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.279948637 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.244605163 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.804262694 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264177961 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.249613319 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.256753188 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.257215142 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.251279089 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244770077 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.244170912 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260712387 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257678494 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.2597462 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389471264 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.261318284 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.243854334 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.764208908 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.252508944 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.2452699 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.244811413 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282735647 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.251165693 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037833987 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525451502 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250352933 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.494627039 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.251699848 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.269050967 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.244633087 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247830431 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257963082 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.259767529 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275507855 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.256107815 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250347679 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252165013 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822673354 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946422077 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.757263145 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.263316261 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.253124242 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.250221684 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.934938894 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26170939 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247146677 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.471647414 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.955164517 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263843446 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.702203338 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.264853155 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.976621957 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.492832086 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.480056617 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249530144 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.259507021 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501207574 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.461163737 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282536092 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.255824342 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252483793 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.234269656 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778538546 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264150224 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334456107 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938660723 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271360649 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.253736297 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.251712952 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.704535933 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633302117 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.268833959 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248281821 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.258809503 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.253171575 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036431637 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.272215165 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248271638 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830796811 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.264942624 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.721603669 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266258758 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.448084941 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.280887212 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.253453578 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.248812291 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.259455674 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.504007924 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.494401261 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250251429 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.247826638 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784621926 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.143503435 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.258114336 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250099706 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978742673 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263658791 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52432069 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.26151586 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.263842939 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250337455 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.251198617 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24951356 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.249490436 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.258388024 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227366289 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730378545 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.258329776 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278245197 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264574866 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25550403 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.507317407 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.267560814 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.809774966 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.498382958 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247206226 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280314349 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.258729902 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261767748 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.245134475 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.251558072 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.2535168 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257757826 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.478272815 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252133221 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.242192352 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.273036054 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.465728876 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.251915805 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251737073 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484368153 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.272982014 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.269691916 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965016495 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305812585 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.251669081 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257918877 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.265117508 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.299019939 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.340068192 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452527084 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.283546525 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.263834284 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.634458005 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275744372 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257953919 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.270703954 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.350220269 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252794873 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.284960734 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.030015354 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815270595 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972026183 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.816591925 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516637992 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.255762408 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263268035 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254451455 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417270028 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.254553011 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.529418574 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254107068 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.265029224 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280687864 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254376074 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281420338 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.470426305 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532926572 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255152582 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265000177 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259322379 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.254955531 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.266750779 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.466951525 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735720179 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800331165 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257299216 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.256942633 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.953900831 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550503553 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256107579 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256238096 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.256278672 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.276363576 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.277367108 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.267177925 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261112276 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406034102 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.500225402 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90002767 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.285242952 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.28746074 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.775072761 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268359206 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.517256905 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262543668 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.463470289 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842718533 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.939207253 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.528495577 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.325989117 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.456960492 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.277908503 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419556404 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.260173939 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.259807597 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257396526 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25925482 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.257632463 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.266319943 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825644638 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541312372 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.264246538 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.26256532 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289069418 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.269418661 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.482881096 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955570696 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.48653463 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.268462844 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.26367384 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.257881151 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.823665328 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522798142 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260656944 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.266072948 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487422088 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.277007714 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.283455724 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.778335589 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.258667156 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794048945 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.23137037 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281510414 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26276946 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.932416102 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827933054 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.27701736 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753023112 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260018374 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267070266 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54028177 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.268675744 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.260258224 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.542759434 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.266312578 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260342794 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.471692004 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.837880633 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.013415911 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.278394579 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282244248 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.278519202 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261970024 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30281775 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264836205 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26116414 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.657299417 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27891004 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261104815 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.274384909 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.271019546 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262481246 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.26624525 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262193046 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.270695691 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.252956811 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.248814985 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.264647667 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391985136 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800650817 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281268033 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.941156026 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.589565199 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.517153289 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.263288978 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.254635364 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.267893181 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264248605 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262301295 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262072036 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.26110609 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80354561 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.265561664 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.276806149 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.267107849 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.262667014 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474469974 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.263206177 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.468069588 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281272207 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284487664 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.249207774 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262463761 seconds)
  done (took 915.151444125 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.284657418 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.26328449 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.263657746 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.267622977 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.300049656 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.36733818 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.322860002 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.260052539 seconds)
  done (took 19.500729698 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.258916433 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.267146843 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.271272336 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.269029702 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.266467491 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.718884089 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.284482775 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.268749217 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.283981196 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.264897524 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.271989379 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.251831208 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.27472191 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.264360661 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.268105784 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.269505706 seconds)
  done (took 30.926188645 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.107796167 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.356010248 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.914349359 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.328807162 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.268415426 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.273654546 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.427244425 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.275688585 seconds)
  done (took 25.123497208 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.272640204 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.272182963 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.272068516 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.27154608 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.274554201 seconds)
  done (took 7.533654465 seconds)
done (took 1158.091615666 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.271019645 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.272490478 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.271776513 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.271240828 seconds)
  done (took 6.258539474 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.253807806 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.253731381 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.253121762 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.26696681 seconds)
  done (took 9.199804552 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.918836367 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.866435359 seconds)
  done (took 4.957909951 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.733938143 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.734867092 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.732833982 seconds)
  done (took 6.37371522 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.551491927 seconds)
  done (took 2.723064659 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.140731616 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.255639325 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.921522995 seconds)
  done (took 7.488935676 seconds)
done (took 38.174646438 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.26266272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.59979973 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.419663202 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.266746201 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.422213743 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.416722703 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.996637982 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.260412629 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.263614129 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.260217713 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.26175241 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.422085591 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.98240151 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.603200074 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.97918285 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.508523055 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.435869753 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.274883737 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.264910917 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.263569366 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.004003063 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.267851292 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.268816035 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.269847142 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.423814453 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.406692032 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.27166828 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.510714221 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.262055112 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.276849291 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.430025355 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.262103272 seconds)
  done (took 78.993522381 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.262091011 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.27772769 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.263387029 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.261834153 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.262420478 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.263931315 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.264457743 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.262643629 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.284255329 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.264634138 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.26266974 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.262598935 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.263235695 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.266406284 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.266230792 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.2660516 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.263154891 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.262739261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.262773388 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.279009004 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.263840867 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.27574279 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.263333469 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.279103688 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.278684279 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.275356129 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.264162184 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.279436912 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.263895799 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.26418474 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.295398601 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.263448983 seconds)
  done (took 73.763853637 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.267330345 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.275303887 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.264472871 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.265618991 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.264733671 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.266422934 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.265632498 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.263404702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.266442773 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.264900768 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.270915201 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.263947325 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.266973673 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.265801533 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.266310644 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.265870188 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.266506687 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.274009928 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.264609811 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.28002366 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.266698143 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.27476253 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.264405962 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.277573263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.267565709 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.267710018 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.267881555 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.27312688 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.265195393 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.269219624 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.2665901 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.267912026 seconds)
  done (took 73.753961377 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.550844567 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.277490069 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.279833761 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.272469281 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.281017717 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.277389484 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.271877156 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.557122051 seconds)
  done (took 13.94523148 seconds)
done (took 241.628638954 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.284409436 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.768971209 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.314514474 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.27260227 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.299699324 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.300465848 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.490587475 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.315993321 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.490039955 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.292854894 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.293012471 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.272901814 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.036386105 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.423276973 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.086284996 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.196440298 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.110610063 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.268690583 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.839086276 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.542718822 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.297753548 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.278669897 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.081408208 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.138491905 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.273946265 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.350451502 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.368263287 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.491453719 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.427790296 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.348990823 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.771734321 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.27434055 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.276184793 seconds)
  done (took 60.457512883 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.275956506 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.405190448 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.279811288 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.279876558 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.409630929 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.299223598 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.277884192 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.280273965 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.280825296 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.280821138 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.280727049 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.282647308 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.281838543 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.331523109 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.412438782 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.298644944 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.275166503 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.402477601 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.276055344 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.279755751 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.330271032 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.281071857 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.286520182 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.330459759 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.283106792 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.282631657 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.40817007 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.301526123 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.284445658 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.405865328 seconds)
  done (took 40.565530178 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.282782389 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.86357043 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.001534827 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.284405477 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.277755017 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.282629841 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.545901825 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.283194133 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.280263373 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.281854325 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.767762285 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.30049524 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.310956526 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.027619513 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.280726789 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.282760901 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.283589567 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.278945735 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.872720694 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.288406959 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.564084648 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.283659417 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.547876388 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.288740774 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.299211658 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.280729141 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.284753079 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.099603973 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.298636233 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.767961646 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.007763389 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.548060592 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.04179214 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.035659091 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.996336152 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.290575558 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.285393908 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.769559896 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.297882269 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.280398717 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.547587659 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.280646241 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.012336782 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.981151166 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.29848666 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.285153725 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.108901029 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.782067942 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.523151428 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.286204091 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.041197929 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.284449502 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.286936773 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.282448376 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.508450271 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.28538703 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.280496467 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.126025506 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.305848598 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.548844052 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.291662363 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.28184569 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.86747524 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.286832132 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.86450757 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.28705099 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.290448549 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.301300992 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.018960049 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.285030385 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.000539861 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.29886401 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.286765212 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.767151449 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.88350743 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.180596503 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.285728992 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.872981195 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.071976052 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.565375041 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.286693951 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.075198738 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.570467974 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.28517148 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.288768688 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.289281593 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.289403609 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.399248971 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.548331028 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.933239005 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.988045837 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.142048475 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.571527686 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.291308162 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.285777758 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.12399785 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.307568923 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.289017027 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.016301488 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.999418145 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.306023881 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.291920497 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.007864679 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.309766345 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.554340734 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.292238359 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.026222802 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.289337124 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.401224674 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.287879935 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.291476698 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.305382943 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.553855025 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.29173262 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.290385561 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.979676064 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.799695395 seconds)
  done (took 181.838454019 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.288948654 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.278042784 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.283739736 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.278632373 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.277022338 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.285873044 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.279068658 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.277702289 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.283667304 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.277624711 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.278053065 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.288311078 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.286729181 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.278819279 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.283374606 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.280840009 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.280751725 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.287589167 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.280529433 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.280692079 seconds)
  done (took 42.826820991 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.292270056 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.815555809 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.8010747 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.296432915 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.290423526 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.287301431 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.339267335 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.30635832 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.291449441 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.56730238 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.448420461 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.308592624 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.292151264 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.291022899 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.782337091 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.286218182 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.567680403 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.811432534 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.292856656 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.808932765 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.282144677 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.293138278 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.285558689 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.810505392 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.590784176 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.555403274 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.340356418 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.827045296 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.30820745 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.292287239 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.810361991 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.293257422 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.287173343 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.81322535 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.308418804 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.307536705 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.29347698 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.343346293 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.358706184 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.586373741 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.895024411 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.578875839 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.304442012 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.46514078 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.295893157 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.283364763 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.820345561 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.310715837 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.284075731 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.294058854 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.30026179 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.797629846 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.306307731 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.799296358 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.313071477 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.295907226 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.815689053 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.797829263 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.804461708 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.453955094 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.306281038 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.558293271 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.29460132 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.824469401 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.311956203 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.296463611 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.295032384 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.45269627 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.831994442 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.559028194 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.572198379 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.573077173 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.295365007 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.350885892 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.311780708 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.642092853 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.348479456 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.689144674 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.574586999 seconds)
  done (took 117.662465821 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.547000081 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.399938281 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.675058976 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.880431409 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.292339125 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.422584805 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.398113133 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.538582554 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.300977323 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.368181373 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.896869928 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.404679996 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.048239309 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.374708681 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.409395669 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.43239452 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.68555017 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.252536083 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.99018139 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.885958905 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.293933817 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.41398004 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.837680113 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.501408384 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.286554967 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.858610221 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.23651471 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.945580561 seconds)
  done (took 50.772588993 seconds)
done (took 495.301057653 seconds)
SAVING RESULT...
DONE!
