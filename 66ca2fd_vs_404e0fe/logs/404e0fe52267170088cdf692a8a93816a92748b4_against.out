cset: moving following pidspec: 27251
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.035030161 seconds)
loading group "string"... done (took 0.615772915 seconds)
loading group "linalg"... done (took 9.885309068 seconds)
loading group "parallel"... done (took 0.188466636 seconds)
loading group "find"... done (took 1.5570073 seconds)
loading group "tuple"... done (took 2.225259643 seconds)
loading group "dates"... done (took 1.518383327 seconds)
loading group "micro"... done (took 0.244115602 seconds)
loading group "io"... done (took 0.604444618 seconds)
loading group "scalar"... done (took 48.721576074 seconds)
loading group "sparse"... done (took 15.154447184 seconds)
loading group "broadcast"... done (took 1.175609172 seconds)
loading group "union"... done (took 13.853372918 seconds)
loading group "simd"... done (took 2.981306008 seconds)
loading group "random"... done (took 11.543705486 seconds)
loading group "problem"... done (took 1832.829547685 seconds)
loading group "array"... done (took 26.405272588 seconds)
loading group "misc"... done (took 1.170408331 seconds)
loading group "sort"... done (took 3.881135357 seconds)
loading group "collection"... done (took 19.385791594 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.776348937 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146680781 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.220594216 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.379625128 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.243500474 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.169504713 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.177786729 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.589132745 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.988339711 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.292458128 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.157037872 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.60518425 seconds)
done (took 6.45616953 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.270650517 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.386772709 seconds)
    (2/2) benchmarking "String"...
    done (took 0.180467211 seconds)
  done (took 1.196769058 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07848758 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.186031957 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.117846372 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.115343892 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.10257796 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.114952233 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.116115864 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.1157428 seconds)
  done (took 1.50285823 seconds)
done (took 3.691273036 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.559005879 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.879856909 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.592468833 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.175396552 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.206992519 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.184105181 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.32478747 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.165170704 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.13639713 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.121885297 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.209903516 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.420611804 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.520120242 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.08834159 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.105610041 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.113569337 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.101777264 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.716863528 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.084128633 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.137672225 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.598978395 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.116569625 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.12677279 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.133305198 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.217356174 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137594537 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.176795463 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.091559929 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.687426193 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104171892 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.234368924 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.086717795 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.181181603 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.254124901 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.083898524 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.113650459 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.694437602 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.1873366 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.120097102 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103413416 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.713564497 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085041531 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.246311346 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.117803061 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.119566657 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18738572 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.121652923 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.084028858 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.107401494 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102364654 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.171101819 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.468791667 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.110103787 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.179807522 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.112187186 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.711556283 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099223636 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.160321817 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.142405465 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.121941822 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095582973 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.115826022 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159112326 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.112662495 seconds)
  done (took 20.67105366 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.16143791 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.167415415 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09486488 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144698465 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14600266 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100923416 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.10161298 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081142058 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.131204686 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.194045804 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.143891324 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.188761682 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078272591 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.104188336 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.146750057 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253707567 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110282235 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.126030951 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.104644388 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109523479 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.131494877 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115307394 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112684375 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.113213372 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174506781 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208535983 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112747103 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126748595 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.102399562 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.120385071 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144094295 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.152563705 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0939064 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085921902 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.206165409 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122746665 seconds)
  done (took 5.467507459 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.226857327 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119161668 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.237302667 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.180756564 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147983196 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18160993 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.147104591 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.303313004 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.234360816 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.188255046 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133032089 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114953214 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096290911 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083522868 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094855921 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.676028244 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.185734934 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.156027657 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.15682887 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108825238 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101020219 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.743028989 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104280557 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08643771 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106606846 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.080541026 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.2281251 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106267676 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.342737381 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119349361 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108585579 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117720135 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216671187 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.138407174 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149201056 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090220559 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.102074392 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.225959942 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115304991 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.141660869 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09734826 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.130928332 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134435222 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122847223 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.104248884 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.116604199 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.247373855 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087535455 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126072503 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.122770908 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.21616346 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.141431349 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084253688 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.387627935 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100204326 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105863503 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098760544 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.296852971 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.142760724 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084567667 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.160175295 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100703972 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108084434 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085868093 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098901821 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.804693818 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095485224 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.91894024 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084812704 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.167605054 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.101806411 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103570484 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.112298119 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103676635 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090636401 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.123325803 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084185165 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100293459 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.099041466 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082208916 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105391963 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.122888497 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.090154196 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.100104122 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160356301 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.106743484 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119991796 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128292069 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.104606772 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083160306 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134371706 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099720934 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.086107059 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.190886934 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089692652 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.123499262 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10468546 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144092872 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.101395103 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.212592463 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084365104 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129702986 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.106098152 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13247167 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.129364184 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101363532 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089590507 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097851482 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083239963 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168211924 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085334819 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101244241 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104211476 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098607693 seconds)
  done (took 25.484071983 seconds)
done (took 52.25395445 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.52856808 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.122976723 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.122252975 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.120643442 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.120747538 seconds)
  done (took 1.731338071 seconds)
done (took 2.423746664 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.382882853 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.189755506 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121833979 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186929567 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108149989 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.218147411 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184733173 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.12338027 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215773971 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.105062039 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192074886 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.104784124 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.109792109 seconds)
  done (took 2.960175054 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101425363 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.129123549 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088817128 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121091025 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.097521599 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102475467 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117191783 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.143292904 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100862421 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.1111996 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082711924 seconds)
  done (took 1.884754559 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096964537 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124067854 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088309563 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115825457 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.098619728 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09942867 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114785725 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109948901 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11562843 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110662835 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082913836 seconds)
  done (took 1.849064507 seconds)
done (took 7.373551501 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.138505643 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.58470965 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.151793851 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.206031569 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.394857935 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.250902154 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.588423544 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.167923144 seconds)
  done (took 11.387161661 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.120187293 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.163423375 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089401582 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.106386538 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091733873 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.104114728 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104643903 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091609498 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103893706 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.090456242 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.10350866 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.105482929 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.091217599 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104902318 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090245612 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.105241998 seconds)
  done (took 2.428224118 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.144285287 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.143923158 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096802029 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.119320103 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.111593424 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.095466002 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.112860967 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113112099 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095634956 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.110277216 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.11650053 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099994343 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.116037503 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.107721287 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.111952439 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.103639374 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.109474601 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.114721342 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.097964154 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.113316344 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.117322247 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096186556 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115341188 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.116790154 seconds)
  done (took 3.471667036 seconds)
done (took 17.97869593 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.178004102 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104195305 seconds)
  done (took 0.98014738 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.151086144 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.159049318 seconds)
  done (took 1.01492752 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115204724 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.101078352 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.145316211 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.123245297 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.104543858 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.08872478 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.140322957 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.103667175 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.087998573 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.106046991 seconds)
  done (took 1.826132935 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091479793 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10628383 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.115452739 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.154791429 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.102173062 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.110919212 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.110240711 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.093398112 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110743317 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.103705639 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.098158125 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.128080478 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.11207674 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.131771178 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094332188 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.115378489 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118632773 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.111804925 seconds)
  done (took 2.72052525 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.086801044 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.105329845 seconds)
  done (took 0.901592985 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092352925 seconds)
    (2/7) benchmarking "second"...
    done (took 0.102422454 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093915339 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110097629 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.104607405 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088936615 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103956126 seconds)
  done (took 1.403676245 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.543011851 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.28118294 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.388529287 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.126170084 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.149373922 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.408636368 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.151480383 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.123315956 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.121909438 seconds)
  done (took 3.050533935 seconds)
done (took 12.602759426 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093638323 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.23827807 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.611597216 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.129425089 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.087316224 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.164432881 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.327766306 seconds)
done (took 2.367057277 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360495944 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.163279594 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.097224225 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.10314147 seconds)
  done (took 1.433585769 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081297354 seconds)
    (2/2) benchmarking "read"...
    done (took 0.111979673 seconds)
  done (took 0.910223945 seconds)
done (took 3.065564624 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08477264 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.100176048 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.086552154 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100701754 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.086718974 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.102123043 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086444619 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.101108395 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.085556829 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.102361534 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100883089 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.123153117 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10324944 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103496497 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086496937 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.103150545 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086972339 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.102132626 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.08583872 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102141069 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086242953 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102164785 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087372176 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.103694788 seconds)
  done (took 3.068858676 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110443237 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.10749479 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109437187 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092911851 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.112235885 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109106731 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094156849 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.107605436 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.10954387 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089317918 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110167775 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.110491062 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.088909865 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.110300505 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105233025 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094506631 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.109180234 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105804602 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089598352 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.110393937 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.108095849 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09093622 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.108880427 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107963111 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.09415132 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108599034 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.105070095 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.092106757 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108504471 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.109677301 seconds)
  done (took 3.834254576 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.095098653 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0976296 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08526506 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.113081683 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.083661654 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.104967933 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.099044268 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.086332109 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.100423852 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085498643 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.101886932 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.085481115 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.101251882 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085621858 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.103735587 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.107201797 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.105965642 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.101947041 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084129106 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.103607537 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.106186309 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08469417 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.10495328 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085953041 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.102191742 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.084326655 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.101938223 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.08360334 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.102231244 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.098830899 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091284195 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.107358795 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.085013615 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.115735246 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.106955678 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.085123368 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.111121698 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.084286484 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.101274527 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085307752 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.10147217 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.084609321 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.101235318 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.114201337 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.088700118 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.102295254 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086284457 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.103002943 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.085691636 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.105623887 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.099475001 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.085633426 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.102934536 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.087099901 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.106833334 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.084807439 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.102429878 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.099854106 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.088007256 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.101878083 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085333282 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.100552956 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.093535539 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.103661252 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.127880995 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097318401 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.101306131 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08796148 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.106452441 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.109301157 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.08880866 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.122531495 seconds)
  done (took 7.742314817 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.201844821 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114104491 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089731735 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.106998453 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101956292 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08600712 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111916969 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085255781 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107517389 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122884327 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085912895 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1070157 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090322666 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106186594 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101168247 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089986399 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113797804 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102179887 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.085922618 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105017375 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086832459 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113119289 seconds)
  done (took 3.045226753 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.264967956 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09656398 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.159550856 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12396691 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.128135465 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122428068 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09322661 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111837031 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110484679 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100210297 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116132573 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110630656 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.129291711 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100204275 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116293148 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118447752 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09332509 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.118582974 seconds)
  done (took 2.945099335 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104255436 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.105875361 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.131253385 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090797271 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.109825078 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09147405 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116306214 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.124487433 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.107698349 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092685447 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.117372043 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108067607 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092566439 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10839482 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092764507 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108873201 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.108375313 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092353076 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118076011 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116823942 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.11559236 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100811537 seconds)
  done (took 3.090213263 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10529353 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105222114 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.145052287 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096367765 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.104880832 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102888625 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.098049389 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.109307229 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.115675772 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.092282053 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108680199 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088068028 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.116498565 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10874314 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099072513 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108968023 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107076076 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093410231 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108864496 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.087539155 seconds)
  done (took 2.839153157 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.180718242 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106603258 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123968638 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137315756 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122677652 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108025663 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135904396 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123035114 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105096035 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140021438 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.124715479 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.123160146 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135767208 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114648328 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12431417 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136394604 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136479769 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136175596 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10722965 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123824737 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138590099 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106976691 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136974252 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123702472 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123226279 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10674892 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122844254 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132588053 seconds)
  done (took 4.278983473 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085817792 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101762236 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088480171 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.104994904 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089725424 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.105805712 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087403857 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.104897037 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088289697 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106542705 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.104204694 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090144649 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106037065 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088259262 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104474142 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.088420723 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105358693 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.087927871 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104781428 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088053849 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.106468077 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104447371 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08921339 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10588657 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088628014 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.106045009 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088099124 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106593901 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087902947 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106336617 seconds)
  done (took 3.662066638 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09955123 seconds)
    (2/2) benchmarking "in"...
    done (took 0.129752229 seconds)
  done (took 0.97401093 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.08838113 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121940186 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083080599 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112255169 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.117066963 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089598882 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119061083 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116926089 seconds)
  done (took 1.592526708 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.154647098 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.154917943 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094504015 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.117920366 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.154101342 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.151145726 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.175887742 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.115573577 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.093161481 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.104124663 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.159350479 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.103177545 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.096851475 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111959698 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.112775945 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103854713 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.104841342 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101894831 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.116824401 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.109525608 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096556954 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.123066516 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115866697 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.100860256 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107545742 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11720715 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.102915219 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.121148626 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109806223 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.100093871 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111038414 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.102368333 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.094642592 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.113752533 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.087855905 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.15732833 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124586013 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109753392 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097580913 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116158509 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119237744 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.088585873 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.116576193 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.111387841 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100750483 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.113539378 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097079314 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.106645849 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.104223495 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08998135 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.1059704 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089597793 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.105883879 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115515782 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.09874017 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124677769 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.111174341 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.09325722 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.109103862 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10809562 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.096429138 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.109566545 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116294964 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095150003 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115031798 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.096218016 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115543369 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.107540072 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.087403601 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.107074931 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097559864 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.133603944 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.118124723 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.113804296 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097600176 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.105706659 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092991622 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117480344 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113302163 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.099224109 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.115024443 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117408808 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098724231 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106889031 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105124762 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095734009 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.106020894 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091770048 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.104105453 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123699804 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.089971708 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.104261984 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086189603 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.113449733 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.106276605 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.090971177 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.102821298 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11181536 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087815569 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.112683981 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095857946 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109234362 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.120061922 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09840222 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117339126 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.114783041 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.15166938 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092882341 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.110415274 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.087153962 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.1169125 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.108189653 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.097128753 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.106184961 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093799657 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.111788705 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.114415768 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.098426306 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.108929383 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.110202263 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094501465 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114785057 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.107436747 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.085952277 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.109778548 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095410535 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120339259 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.118428672 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093343389 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.108595503 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.089694129 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.114552178 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.110270014 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.093806711 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11247861 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106507999 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.085626744 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.103540947 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.094570438 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.116889977 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.108805228 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.096083862 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.118326582 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.115046948 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.094937901 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11887147 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.108143406 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096772263 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.117436479 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.110143794 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.089901931 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120695408 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.092886005 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.112414753 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.109989052 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102328031 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.110860672 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096113611 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108769954 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.110310575 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094450867 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103197348 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091121595 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.110924008 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.118936538 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.092045625 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.107628742 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.088276001 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.11761995 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.107168175 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.094780475 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106406738 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.110348254 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09855013 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.108063036 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096169105 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.110720038 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.12803572 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105532931 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12396929 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.113441842 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.101397567 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.114960606 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094680393 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.115598125 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116295365 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098515094 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11718838 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.113847714 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09794976 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.110630818 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.089991861 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114270511 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117374067 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.089554467 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.108596149 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.088548918 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.115319587 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11995339 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098139571 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.118154202 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092819882 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11609818 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122622105 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092647599 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.114979156 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.107576528 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.097073454 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.121266404 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099371291 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118103986 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.119973886 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094782664 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.109687162 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120495481 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09567651 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.116070795 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09069492 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.108168749 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106065128 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099403286 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.113915669 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.092175874 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.107756297 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.117892031 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100924524 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.114227455 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088124253 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.116769367 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124006672 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091771991 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115819317 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.111906615 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.097060048 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.128406636 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.107022237 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093103353 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.121880209 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.114246291 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.08850077 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.115788671 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09390889 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.109621507 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.114713243 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095304954 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112596243 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10046595 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.114039177 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.106243293 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.093680723 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.112497317 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.089425272 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.110461311 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.119478735 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.095950042 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.112888482 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122120038 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099244391 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.11926412 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096246081 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.118147021 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.11716393 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100485486 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114051999 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.116550203 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.092527151 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.107174124 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.094665611 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.108367431 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.091027569 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.111623679 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.115970302 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.095479891 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.114614313 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.113820526 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100563807 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.113743245 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.117224686 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.134797091 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.091012941 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.108705321 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095468027 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115603011 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111246295 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.093562339 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.109885638 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099675747 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.118012613 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.119444419 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.09323471 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.109217732 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09761974 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.113140406 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.118218761 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099153346 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.118968221 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.109686727 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098544091 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.111968491 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105419555 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.109763243 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.119510639 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096622117 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11762844 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.112758659 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.095284182 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.112723611 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088633498 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.114509889 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.119277999 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095289891 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.116181866 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.11459919 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.094723804 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.112740667 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091052319 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.120764751 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.114467252 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100553302 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.10834241 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088806131 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.110518542 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.11646556 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099621886 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.119234704 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.111146264 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096955389 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118768035 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.096285551 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.109067079 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101561654 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121406047 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.118759422 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104616477 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.110422138 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113564516 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.1059587 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.109106923 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.109390099 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.087776383 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.106098302 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10048392 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.119013387 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.119658256 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09497906 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.109432714 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.089998477 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.119045735 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.115004174 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.08988198 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.110459282 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098597417 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.110843385 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.095824492 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119613298 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.116109539 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099409715 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118368363 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.115492528 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.095345962 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.119142542 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.089412692 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.110793644 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10864451 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.095825948 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.118045009 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087782258 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.10733136 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.112955179 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091568554 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109872611 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.092843348 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.109041322 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114457571 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09425533 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.111659904 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118706796 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.088411694 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.110339879 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.094445894 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.11210924 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.105582514 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.097284794 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115496467 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100275624 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.12145639 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.117226957 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097168869 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118024645 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.11020302 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.098825917 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.118002008 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098206722 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.111025021 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099751366 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.121499554 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.111360749 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.095348044 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.117083232 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.110291052 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.097064192 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.120090868 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.11544505 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102735946 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.119062004 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.095047208 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.118445252 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.11716576 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096675631 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121086112 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093074489 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120663862 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.107666255 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.103403503 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.116928351 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.117927983 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.093141914 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.10832133 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099193698 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.117858083 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.115291111 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.101982529 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.116973508 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.107776217 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090634994 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.111723453 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.095178934 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124144901 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120670342 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093194296 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112560014 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.090323351 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.106035865 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115098279 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087565904 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.108514086 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094419821 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114913724 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.110718218 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088074173 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.113504444 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115345138 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097293143 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112757198 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.105078434 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093566637 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.116145822 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091767252 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109186516 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.109182384 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096740895 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.11278066 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107244588 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088445912 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12084185 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.115138064 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095946553 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.108676749 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094528227 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10983756 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.106521027 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.096355434 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.110309077 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095056472 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109919624 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113393655 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104351103 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10539043 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.109486137 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102185264 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112141316 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115385632 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.088394724 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.111604023 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096911313 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116787598 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.106917529 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086862528 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.107133607 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.09104671 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.107198232 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.106535035 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103002927 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.116342919 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111444668 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093900847 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111918676 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.088564748 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.107947761 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085904457 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116791484 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.110010721 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.10036896 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106780147 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105763456 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.089277496 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113579362 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092799353 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.112682769 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.106477894 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.088809604 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.106579037 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09351694 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120875766 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113292523 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.095012034 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111396517 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109582644 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.091292622 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121885498 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.090628268 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.113991064 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.129376177 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.101805671 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118040874 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.116159956 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099063326 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.116273061 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.105657561 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.097149555 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.111033644 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092109118 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.115775775 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.115186138 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109212309 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111368813 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104779903 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.094449973 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109681444 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088978484 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.12627607 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117943709 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.09669149 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.113999691 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108194818 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097782778 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.120302301 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116915366 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095303582 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.113844869 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.095425109 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11099431 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.111532848 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.089840058 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.117405246 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.099239645 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115892273 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116973302 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087105367 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124391186 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.124343907 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101396016 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.112091077 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.091693366 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.114618108 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.113192606 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102513269 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.113871092 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.095690822 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.114384027 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.093509954 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.113851166 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112493398 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092477982 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.118065017 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.113502909 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.088025572 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.115261397 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091387098 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115136387 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.106457497 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.096151388 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.117127023 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.114483607 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101273366 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.115128879 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.092094764 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110418328 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113350016 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08960629 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113993705 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093012886 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111380401 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106719068 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09651607 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.116744338 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093386979 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11806731 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118889238 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092438082 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115736733 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118417425 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.088625041 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.10762242 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095180524 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10988219 seconds)
  done (took 64.668883846 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.168158612 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097855761 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114013444 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093980602 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.145491748 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115383449 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109632852 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092028054 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.110841883 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126596949 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090229588 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109031284 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.135468886 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141233847 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138591471 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.1058327 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109556334 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110554465 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089588942 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111165889 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136186064 seconds)
  done (took 3.265816808 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115077658 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.129412326 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128140682 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.133162676 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.125522863 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112377559 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.131084616 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131456089 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.136413873 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.129716849 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135961965 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111968671 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128973393 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.128834527 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.128837892 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107424943 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.133888331 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121821714 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.129690138 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.129421551 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10713574 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.128916125 seconds)
  done (took 3.57684106 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.100273085 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.113234133 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097188157 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.110688295 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.094644025 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.111855504 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120743712 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.091318161 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.119759591 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091427673 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.108819441 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.111137274 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096566978 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.111257098 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.08881098 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.111220757 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.120811823 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.095012417 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.115745016 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.091375319 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.135464159 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.110934988 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.09151303 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110292535 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.124128154 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.096609532 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.115665475 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.09496938 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.109410217 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.114491271 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.092114151 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.113987061 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.096687073 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.110902428 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.108229399 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.095787718 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.115274494 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.093240872 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.112729732 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.116352796 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.093994118 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.117174308 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.099700759 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.113215894 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.110945588 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095205412 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.115759427 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.092038896 seconds)
  done (took 5.915481399 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.153693721 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.170111811 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105525894 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.165976715 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.115988255 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.132002013 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.118685033 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.156501965 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.1164668 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.099188346 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.138160904 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.134599698 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126353835 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107901137 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.125441826 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.131948626 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105401469 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.12028959 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127882703 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098423898 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126336244 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.12163269 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.139190857 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.140558776 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104377659 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.123473357 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.118470379 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.101387261 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.137128358 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.135657615 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.125577456 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126810246 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.114008309 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.122395148 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.117867288 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10026231 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.136011452 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120696109 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.120914648 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.096999663 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.118978517 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128279435 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105831662 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.139538431 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123754554 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.122168786 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.099276243 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.118058722 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.133446556 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.118458723 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108143307 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.139190351 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.120954751 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.119749647 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108079867 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.139653672 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.12213661 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.118863776 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.100794166 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.132366136 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.119350204 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.101775659 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.13516346 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.118305536 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.129150254 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.135836694 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.102747908 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.127485532 seconds)
  done (took 9.339388904 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107232097 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.142649975 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135782712 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136508148 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101176906 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.123515933 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.121361871 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.124253171 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107792328 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.13482024 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128363184 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.212744974 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.118403903 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.136373832 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10776079 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125618415 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.12459551 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122889877 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102646628 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123097153 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.12345418 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.136017853 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10340588 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136684547 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141527244 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.117406789 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101655447 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124308632 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137657737 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123588968 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138126206 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.103440029 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123346762 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135905503 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13889414 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.121254208 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093672191 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123298737 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.12303838 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102791327 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.116561655 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134961341 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102425094 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.116989357 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123607497 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125820036 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114586475 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.140297056 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.130190479 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130455472 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.123183687 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136096982 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103569713 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.1235747 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.133700114 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14710224 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135320542 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136932345 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103489697 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.136322562 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13551638 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.146309849 seconds)
  done (took 8.613299778 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093429917 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.111874902 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.093687408 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.113268739 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091746853 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11391425 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091961609 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.112685779 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092084329 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.11358819 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112220455 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093915234 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112279326 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093552253 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111791078 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093271259 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114151511 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093255252 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112385085 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092062373 seconds)
  done (took 2.88789475 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.105440224 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.137228543 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.117105047 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106254146 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.118093771 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12551771 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.095336997 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116569566 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116557837 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097725144 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.127928085 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.128382041 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096038334 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.125820429 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128619098 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.124929466 seconds)
  done (took 2.703138474 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120667779 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128824795 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.171461643 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.120924888 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.114648018 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104221165 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.116872829 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.095303259 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.115163714 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122642552 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.102581713 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.128737794 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.119475367 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.098052656 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.119226455 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.102836908 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.116581926 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.121828278 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.094384745 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.172197963 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.124149193 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.120694644 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.095266582 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.11793288 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.121000212 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.104434709 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.127153201 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.116780952 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.096651758 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.115490627 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.099211053 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.126949303 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.113175919 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.100898347 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.11299239 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.113462007 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.09568924 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.115678417 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.100965032 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.11521214 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.112325424 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.099404102 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.114796884 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.115622924 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.092751139 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.114508558 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.092637857 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.126276239 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.120828694 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101353963 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.115843023 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.102138648 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.123362049 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.127742146 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.125453278 seconds)
  done (took 7.140854542 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110179176 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119187046 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.121696455 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091143152 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11879494 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104977481 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.118363427 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.119173537 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09965594 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.111214879 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098700837 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.119802888 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1182949 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097974301 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.120226852 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119043478 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091876984 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.118665092 seconds)
  done (took 2.837817597 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103787356 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.117209053 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101221409 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.117123147 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.116226499 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097396718 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112113736 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.091425582 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113453776 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095727954 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118499467 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.115217596 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091968028 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.116270512 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095756212 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118442363 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.115109174 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092407381 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.117877338 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09272052 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11724383 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111995645 seconds)
  done (took 3.210221619 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.109253749 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.17383954 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.128237301 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.1834602 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.117545018 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.114686478 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.106959712 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.116879703 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.134117918 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.09387247 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.115704153 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.114245017 seconds)
  done (took 2.350542079 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125457119 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158345287 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.115186944 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096635693 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13133405 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123981784 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123792528 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103843129 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134378355 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139640231 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124058841 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134416 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113931681 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13620399 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129076792 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12955178 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123273502 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105193757 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11881819 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145409877 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124005079 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114278246 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124896184 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123970235 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1036437 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135840564 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134227839 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138673326 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125487127 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134641133 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129464879 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104876366 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135824778 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138568546 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118402886 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11417284 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125099744 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145854327 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128788888 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137181304 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096916155 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132123772 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13439522 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132456497 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135638912 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103292793 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133549522 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12421045 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123840618 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154177847 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128810162 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116313628 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13074083 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134125024 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133527063 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153846657 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140476217 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135710471 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128737495 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140693439 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115911649 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130027861 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137441206 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140013053 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130199621 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138405276 seconds)
  done (took 9.306080891 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141926707 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118456705 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123859106 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14010657 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135638928 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104157884 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124641655 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12293036 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102981977 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121268065 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171479149 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123799507 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136769582 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136655141 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103666695 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125957365 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123311918 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136244147 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100361064 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.154069289 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12460036 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137086074 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136676514 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136133222 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140201917 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108200048 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12599747 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125704562 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124418198 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104016173 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132412558 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124729008 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136618699 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096631427 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137977437 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125093022 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123535481 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112545628 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125043969 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129247294 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137935199 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145686991 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104541823 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125733978 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140968991 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123775852 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104476428 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120882187 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12471432 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098095078 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142318373 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140387874 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139935573 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137157122 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125504404 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1261526 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105229991 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125598093 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125364669 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110074958 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137967055 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124524902 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153836136 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124952853 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104354322 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138309327 seconds)
  done (took 9.20016843 seconds)
done (took 172.807960747 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.159890765 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.180050995 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.156581598 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.154185762 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.112139995 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.146999091 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.125792497 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.154605048 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.112542144 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090827702 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.112330209 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094514393 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.179876055 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.110676739 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090277155 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11648673 seconds)
  done (took 2.950259354 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.213089356 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305845612 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.133781151 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117255162 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100542894 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.115194245 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.116002063 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.098149482 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.113896193 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126562838 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.094891205 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.115228552 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125843584 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094073725 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.113324676 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.094309295 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.128994067 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.114232557 seconds)
  done (took 3.185872008 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119033907 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.162327079 seconds)
  done (took 1.144329028 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129956219 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.219581874 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299497649 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173999757 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.143531036 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138794259 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.175379989 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132644348 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.205877418 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137901713 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.138336882 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098679178 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147142543 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.126199614 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.10954647 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.12106091 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.148397281 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.129202776 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.108755713 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.122455393 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141527349 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.099723986 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.126512612 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.130300671 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.196969287 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137295163 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.121904975 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101078529 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121731896 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.128430235 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105650536 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137706647 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.13725728 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.208003865 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105993552 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.205076419 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.129634295 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.098012833 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.129238058 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.119618192 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102607001 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.125423831 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136563222 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097260491 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.122396439 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.12887872 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.119961277 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.099980782 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.13040348 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.132052222 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128898843 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106328131 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.20166547 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.130195085 seconds)
  done (took 8.312088051 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.92088268 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.163540517 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097197374 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.046884878 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.153113164 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135466951 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.892856533 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145822833 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.284190831 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.911798909 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13683929 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109228228 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.284537955 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.276312079 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.198328299 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.375872563 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.77244329 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.134595361 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149008339 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.168530318 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103256387 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149755937 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140431372 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.443560028 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.120602266 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117694968 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.10324469 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132216084 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.203142341 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.095469694 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.121250803 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.223481988 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.289260237 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231328004 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118201006 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094798687 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117417471 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.190896992 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.297119266 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.245114528 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.188097307 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114943337 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.116250573 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110374189 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.143181936 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114358036 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185135319 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.217596249 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195192467 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121866571 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130887649 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127024694 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.109166502 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.202351671 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.092595994 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.391048894 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.374996166 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095395168 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128418717 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137666475 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.29483323 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.116406172 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260143831 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146733313 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.244892419 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.095113941 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816704776 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.209400259 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.094657689 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127425797 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126502465 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122877581 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108087456 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180099604 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.420515952 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111877642 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123367153 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116665765 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.247891251 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.118559766 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117523267 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187201929 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120952915 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106276304 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134753702 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131890292 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.214343644 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269606133 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134664882 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127724537 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.101583372 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132102042 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.120885325 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.236809986 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.252268457 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.202237705 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233243934 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131799051 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.207588898 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18751764 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13062444 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192457659 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126508996 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137618276 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131902295 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.248919017 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.158932425 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.117069744 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101756052 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.127295809 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161269686 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.120870795 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.104899475 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.213830627 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.504877858 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.188943805 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.115496451 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101754016 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127509541 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184201177 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126281837 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.294949628 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127806338 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189137711 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127372425 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09347847 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129033629 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.207915608 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134186358 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106575555 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132078561 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126952916 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.27311368 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.251908121 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134870848 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266095784 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.197370377 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129376497 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195925129 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129696588 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.214164232 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107103359 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130607267 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122050188 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812358857 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132777273 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10467642 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12436331 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.210069176 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118227631 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097448544 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.118559844 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09304853 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.83652133 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122102641 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.114772739 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.0978772 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129707864 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127794137 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104490503 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124135277 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.205747103 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268144031 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131759644 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104812914 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.1182706 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.182548018 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.121353459 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.118214922 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.096276804 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.118974262 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106009522 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.123408769 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.118495724 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.194610992 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.201579313 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.253831544 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577665889 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095745665 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.118502508 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.263022991 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118107768 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.341607138 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128004197 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.262853487 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189751267 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.115679757 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.371654189 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.190258131 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.239962605 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.099351006 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.217242321 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095026719 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126483219 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.181879042 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.118420221 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126498339 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180335988 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136516291 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134699237 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.192775656 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.119330215 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251115511 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.116650095 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191775145 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121940842 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131151735 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.344139959 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096656769 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140979092 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.205272283 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101874465 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.119437358 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.745131725 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.096884912 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130812045 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129611187 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.259071426 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187060162 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12771108 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127639495 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133323435 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185381976 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.253806795 seconds)
  done (took 48.626037707 seconds)
done (took 65.08141714 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.331759783 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.287639472 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.343776826 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240852692 seconds)
  done (took 2.186913353 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.231355386 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.169117876 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.219361196 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.095031831 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.227240346 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.094883897 seconds)
  done (took 1.939308742 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.538395859 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.443140813 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.354604562 seconds)
  done (took 2.243552244 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271236401 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.302685961 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.372515482 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.49956768 seconds)
  done (took 2.461469722 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.259889576 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.14280756 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.137606903 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.186810603 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.224119688 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.227464007 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.161330115 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173632222 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.146630898 seconds)
  done (took 2.617138406 seconds)
done (took 12.356060315 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.282394124 seconds)
    (2/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.312656082 seconds)
    (3/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.250119457 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.271492734 seconds)
    (5/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.20701033 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.223622393 seconds)
    (7/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.104386565 seconds)
    (8/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.129372778 seconds)
    (9/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.258374988 seconds)
    (10/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.342844246 seconds)
    (11/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.238080082 seconds)
    (12/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.184775869 seconds)
    (13/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.230972677 seconds)
    (14/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.177636443 seconds)
    (15/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.12578382 seconds)
    (16/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.104218807 seconds)
    (17/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.330422806 seconds)
    (18/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.086404751 seconds)
    (19/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.129500965 seconds)
    (20/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.295104222 seconds)
    (21/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.191488922 seconds)
    (22/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.101633416 seconds)
    (23/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.140153231 seconds)
    (24/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.249802159 seconds)
    (25/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.179805698 seconds)
    (26/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.262578431 seconds)
    (27/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.295215584 seconds)
    (28/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.163421783 seconds)
    (29/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.23365723 seconds)
    (30/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.110683788 seconds)
    (31/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.228929653 seconds)
    (32/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.172930422 seconds)
    (33/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.177806812 seconds)
    (34/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.188034456 seconds)
    (35/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.177501543 seconds)
    (36/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.122432718 seconds)
    (37/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.295991444 seconds)
    (38/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.141275274 seconds)
    (39/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.10543319 seconds)
    (40/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.12675912 seconds)
    (41/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.278278078 seconds)
    (42/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.172989658 seconds)
    (43/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.110714746 seconds)
    (44/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.103329558 seconds)
    (45/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.128286744 seconds)
    (46/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.091868835 seconds)
    (47/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.12496351 seconds)
    (48/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.087061457 seconds)
    (49/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.110328444 seconds)
    (50/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.117234534 seconds)
    (51/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.153453553 seconds)
    (52/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.141497652 seconds)
    (53/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.215012674 seconds)
    (54/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.145298954 seconds)
    (55/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.209907287 seconds)
    (56/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.146991226 seconds)
    (57/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.13870375 seconds)
    (58/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.110271507 seconds)
    (59/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.104179216 seconds)
    (60/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.204079383 seconds)
    (61/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.139619797 seconds)
    (62/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.146768044 seconds)
    (63/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.170705839 seconds)
    (64/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.351775652 seconds)
    (65/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.125958254 seconds)
    (66/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.200513462 seconds)
    (67/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160554371 seconds)
    (68/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.086164031 seconds)
    (69/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.110905016 seconds)
    (70/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.155049464 seconds)
    (71/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.087681767 seconds)
    (72/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.143630284 seconds)
    (73/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.241982779 seconds)
    (74/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.089186573 seconds)
    (75/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.109735095 seconds)
    (76/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.105011345 seconds)
    (77/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.11169122 seconds)
    (78/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.206450742 seconds)
    (79/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.118321495 seconds)
    (80/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.118915754 seconds)
    (81/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.199083435 seconds)
    (82/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.160871362 seconds)
    (83/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.152972167 seconds)
    (84/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.110394064 seconds)
    (85/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.22372939 seconds)
    (86/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.08714158 seconds)
    (87/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.110519249 seconds)
    (88/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.113088495 seconds)
    (89/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.198576241 seconds)
    (90/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.109757734 seconds)
    (91/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.114342812 seconds)
    (92/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.110040006 seconds)
    (93/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.104427212 seconds)
    (94/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.156116453 seconds)
    (95/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.138756418 seconds)
    (96/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.140210058 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.101314875 seconds)
    (98/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.126167248 seconds)
    (99/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.167518896 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116796694 seconds)
    (101/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.125920944 seconds)
    (102/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.226448137 seconds)
    (103/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.154266633 seconds)
    (104/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.093420656 seconds)
    (105/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.137980701 seconds)
    (106/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.085532358 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.126576235 seconds)
    (108/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.126688411 seconds)
    (109/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.148615493 seconds)
    (110/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.216076595 seconds)
    (111/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.128200542 seconds)
    (112/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.165208314 seconds)
    (113/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.095236384 seconds)
    (114/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.130258484 seconds)
    (115/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.113753714 seconds)
    (116/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.21842469 seconds)
    (117/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.113055877 seconds)
    (118/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.098786306 seconds)
    (119/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.17285749 seconds)
    (120/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.137670813 seconds)
    (121/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.087588707 seconds)
    (122/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.137468301 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.159036857 seconds)
    (124/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.159321588 seconds)
    (125/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.088067262 seconds)
    (126/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.129048535 seconds)
    (127/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.148602539 seconds)
    (128/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.217313936 seconds)
    (129/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.143089893 seconds)
    (130/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.128314617 seconds)
    (131/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.203271493 seconds)
    (132/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102745736 seconds)
    (133/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.112288361 seconds)
    (134/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115783294 seconds)
    (135/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.13387054 seconds)
    (136/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.12570589 seconds)
    (137/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095451746 seconds)
    (138/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.128674962 seconds)
    (139/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.143209082 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10224908 seconds)
    (141/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.133010647 seconds)
    (142/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.086331987 seconds)
    (143/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.201133064 seconds)
    (144/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.11013384 seconds)
    (145/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.140697661 seconds)
    (146/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.13659183 seconds)
    (147/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.118990398 seconds)
    (148/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.086502362 seconds)
    (149/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.127434195 seconds)
    (150/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.094584348 seconds)
    (151/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.125949606 seconds)
    (152/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.141213874 seconds)
    (153/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11707454 seconds)
    (154/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.19977317 seconds)
    (155/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.1487063 seconds)
    (156/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.087476779 seconds)
    (157/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.128797899 seconds)
    (158/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.200593023 seconds)
    (159/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094190752 seconds)
    (160/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.116578757 seconds)
    (161/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.103524468 seconds)
    (162/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.12755156 seconds)
    (163/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.10999824 seconds)
    (164/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.093075793 seconds)
    (165/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.153863177 seconds)
    (166/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.089222531 seconds)
    (167/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138569677 seconds)
    (168/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.105776872 seconds)
    (169/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.124631974 seconds)
    (170/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.125932065 seconds)
    (171/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.087614418 seconds)
    (172/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.197993111 seconds)
    (173/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.130508341 seconds)
    (174/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103393087 seconds)
    (175/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.122326649 seconds)
    (176/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.101291969 seconds)
    (177/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.139927777 seconds)
    (178/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.128635829 seconds)
    (179/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.110871497 seconds)
    (180/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.119421265 seconds)
    (181/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.086498584 seconds)
    (182/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.111637332 seconds)
    (183/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.140143431 seconds)
    (184/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.199194335 seconds)
    (185/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.128185652 seconds)
    (186/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.087871347 seconds)
    (187/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.126246672 seconds)
    (188/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.12721487 seconds)
    (189/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.086750785 seconds)
    (190/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.129178261 seconds)
    (191/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.116483519 seconds)
    (192/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136015999 seconds)
    (193/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.122370857 seconds)
    (194/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.092822746 seconds)
    (195/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.135810628 seconds)
    (196/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.094714418 seconds)
    (197/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.117584065 seconds)
    (198/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087508895 seconds)
    (199/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.126736647 seconds)
    (200/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.085781334 seconds)
    (201/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.127648088 seconds)
    (202/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.127113528 seconds)
    (203/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.094470204 seconds)
    (204/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.126069425 seconds)
    (205/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.087607162 seconds)
    (206/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.124514304 seconds)
    (207/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.087083592 seconds)
    (208/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.12616776 seconds)
    (209/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.087351572 seconds)
    (210/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138347364 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.140820633 seconds)
    (212/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.104449244 seconds)
    (213/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.130607163 seconds)
    (214/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.087168831 seconds)
    (215/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.119161066 seconds)
    (216/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.154538609 seconds)
    (217/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090467202 seconds)
    (218/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.110715136 seconds)
    (219/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.087464226 seconds)
    (220/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.085679577 seconds)
    (221/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.112913217 seconds)
    (222/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.086356956 seconds)
    (223/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.132479332 seconds)
    (224/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.110736092 seconds)
  done (took 33.388917937 seconds)
done (took 34.302175404 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.505924608 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.1364771 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.106235785 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.131406835 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.186487767 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.132426953 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.113948173 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.13498479 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.134929215 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.102519605 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.121019412 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.134600721 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106248949 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.185424468 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.134213524 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.123665115 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098639037 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.137610344 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.138003319 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.116733993 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.208709319 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099711923 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.135343896 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098541747 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.18571628 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125251344 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.130384997 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106028283 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.137165335 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.127889805 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107302637 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.122422348 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.138430555 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.116102675 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121815965 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.10351083 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121311411 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.119172966 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.104585716 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.129954206 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.112297861 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.130159917 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.134056727 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.099784092 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.130746671 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.128908454 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096466199 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.135832257 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.121268988 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.106649836 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123763551 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.139746712 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.103656511 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.122476457 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.096505542 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.125625186 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.136097872 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09663548 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.137178643 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096671166 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.126337158 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121071067 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.107176817 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121882875 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.103744364 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12399161 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.127908024 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.105844174 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.128785319 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.123518057 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098191866 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.128193616 seconds)
done (took 10.271823511 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.103554314 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182874837 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.185857003 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.192985236 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.154539572 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140828618 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.145374393 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.154972569 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138827334 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.124295111 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.159140906 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.151949227 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.194093951 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.138252625 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.140955515 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.105909702 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.138403427 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.135644861 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.197559846 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12355064 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.157817529 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.137101825 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.159448014 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.145876315 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.104500246 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.152470066 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.13319629 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.130275768 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105864593 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.146565285 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.149171064 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104991216 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.131330486 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.149305374 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115484277 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.137331167 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.14203429 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.10695163 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.128626568 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.128075721 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142394193 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122047479 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.128346893 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.14071212 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.106085074 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.13687773 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.136805568 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11231732 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.132379597 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.131477313 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.106517723 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158301784 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.136240671 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.137090264 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.111948953 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.136869674 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.13609132 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.110901179 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.132236734 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.134542681 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.104173418 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.129851306 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132224564 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130392839 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.132275148 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.13683886 seconds)
  done (took 9.993098312 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124540103 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.161784383 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13965068 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.139405519 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111431774 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.137838827 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.119939806 seconds)
  done (took 1.910745082 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.097451307 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.190841103 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.188661405 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.212878901 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.182717469 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.199394913 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14427329 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.096551634 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.158071849 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.134099677 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.191464501 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.220668417 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.130677051 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.14003551 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.191457727 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.095345066 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.218453792 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.096577779 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.133980869 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.191132823 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.137792974 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.127029032 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.138273164 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.122419746 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.183579382 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.097544316 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.270510872 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139288831 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.103607893 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.133424927 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.10813555 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.231964002 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.186156739 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.137240096 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.102512172 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.185604277 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.183194256 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13629886 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.201529668 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.129408325 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.185511787 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.1346026 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.109180218 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.135530924 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.135045905 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.170387162 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.115056056 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.137490388 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.132468264 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210139828 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.134681979 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.185480822 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.10555116 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.134346443 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.135260219 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110431769 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.141672819 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.133216792 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.191956944 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111604553 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.183422335 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210364246 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.185711418 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.185334799 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144568811 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.187145929 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.182833019 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.105826704 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133008715 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.13546034 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186142875 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.132988521 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.110140195 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.171974915 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139248145 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.186903078 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185886903 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.132811754 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.111749955 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.128203093 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.132310653 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096832638 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.171746595 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.134187456 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.105183172 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143524268 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137421784 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.136509425 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.102590098 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.148675932 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.134842151 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.110257771 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.1402066 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.134270038 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139903349 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.188965163 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.136559355 seconds)
  done (took 15.532669678 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.099494932 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.124025822 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.104360354 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.126155398 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.124131342 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.099920689 seconds)
  done (took 1.673434246 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.132195585 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.136191321 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.146068889 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.110809054 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.19161156 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.21826944 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.19571141 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.135052325 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.126524846 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.147396991 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.190348699 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.194465019 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.192048922 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.139469921 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.194678962 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.140278536 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.196387391 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.136291516 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.144918124 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106497682 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142190339 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.139324891 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106941534 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.186444703 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.139332778 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.139424906 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.108579605 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.146601411 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.14413748 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.135688996 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.114016968 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.137959626 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.132672695 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109847428 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.222592668 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.107665878 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132524645 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.141215262 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112373678 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.138747937 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.195842175 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.133541537 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.144581384 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.114818365 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.137011215 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.132602258 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.115555884 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.135325076 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.193911471 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.142099373 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.142132303 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.109804674 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.141231678 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.142740865 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.132025035 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110727101 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.142492914 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.195550083 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.140394641 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.133009791 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.111079893 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.139908871 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.134617774 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.115747343 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.139209199 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.140357175 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.105847915 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.138563136 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.134308085 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.110407169 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.14303501 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.137957538 seconds)
  done (took 11.304304831 seconds)
done (took 41.380407736 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.167792943 seconds)
  done (took 2.165202604 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.965885965 seconds)
  done (took 1.967397474 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.726735997 seconds)
  done (took 18.763443384 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.585719216 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.652537346 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.967076291 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176348285 seconds)
  done (took 3.382395807 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.00697701 seconds)
  done (took 2.030456879 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.368318303 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261123738 seconds)
  done (took 1.636906762 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.888152728 seconds)
  done (took 1.905926705 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.443362982 seconds)
  done (took 3.456531035 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.383824233 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.202691718 seconds)
  done (took 1.619421014 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.680406809 seconds)
  done (took 1.705399515 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.277926343 seconds)
  done (took 37.302008854 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.253475144 seconds)
  done (took 1.287943652 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.322044296 seconds)
  done (took 1.345387018 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.671555064 seconds)
  done (took 4.697859121 seconds)
done (took 84.272158602 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.109231005 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.138789934 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.111889436 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.137797668 seconds)
  done (took 1.515373491 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.120470279 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.13726388 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.140042114 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.111814334 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.147061452 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.135674686 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.108809568 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.14380996 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.134854797 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.112371184 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.137859459 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.135774095 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.114163023 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.135051313 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.107854101 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.139965983 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.140643326 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.111473448 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.13850734 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.138578005 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.110383696 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.138331287 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.139484114 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.110641643 seconds)
  done (took 4.122324517 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112060184 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.129532469 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.105614869 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.129138304 seconds)
  done (took 1.511290097 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.118802732 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.154340397 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151911445 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.118109593 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.153251466 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152404552 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.105624158 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.133181678 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.135180801 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.118720387 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135264375 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.1562787 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.151105021 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.103026623 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.146412498 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.100294575 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.130332814 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154002239 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.117613245 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.146325874 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.131808753 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.11941141 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.142655274 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.149450184 seconds)
  done (took 4.257606554 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.219390088 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.124082148 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.16271898 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.188598443 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.164578875 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.133689263 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.135737261 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.142474648 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.144768867 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.112704307 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.140947144 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.197129591 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.140161369 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.14057607 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112336759 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.14485118 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.140890277 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.113403052 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.143765612 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.150401098 seconds)
  done (took 3.98751949 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.111244503 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.129755087 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.097333416 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.130127427 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.136948294 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.106193963 seconds)
  done (took 1.749976405 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.100236148 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.122889908 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.099302763 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.123292356 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.102417131 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.124769671 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.094974675 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.124337439 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096696854 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.124541381 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.123047204 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.096051396 seconds)
  done (took 2.372921604 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.313520588 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.100953621 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.132917396 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.129632685 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.13353863 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.102578359 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145857122 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.101204782 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.26488669 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.129912787 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118244488 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.232574713 seconds)
  done (took 2.948063717 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234110507 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138333989 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268191715 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.402142375 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185132033 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187663199 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.29823506 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18852641 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.240443708 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158118803 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219833899 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175619012 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173533428 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201290672 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157983078 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.206669258 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199426316 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226276539 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167544643 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23070388 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186766194 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188133264 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230421871 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171092727 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128774721 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178930513 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.13839146 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144434196 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19859055 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192573501 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198095174 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16789356 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160523401 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254811458 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24467732 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232231487 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.339682903 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154617414 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.213515443 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.208385374 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299006691 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159258631 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22237718 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174585546 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149233471 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20405333 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177193388 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.204176528 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151796046 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158413502 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212593 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198387839 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.208224088 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157373645 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.34627729 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165998885 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166768127 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196687322 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216431821 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213628979 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186601281 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.138075907 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205553949 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23073014 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203804058 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.16683882 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.192571254 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116285472 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22513889 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219228479 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204669176 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188273629 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.236477326 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150151579 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181980647 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190716392 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173731457 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201940146 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180492885 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.109459327 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16904186 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156255347 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143826253 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.205986438 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112992787 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255376158 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124819433 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.207893539 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256367488 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180513728 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182839771 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187904112 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189675889 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166582435 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.137589662 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138484941 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184323814 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176036742 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150631055 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177838455 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165319646 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.147823701 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171722605 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.111760153 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18066205 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.154476372 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189387098 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184942521 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.150992022 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185412054 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169797177 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.181649621 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194483073 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209378228 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150292368 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149899275 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218804667 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177603983 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.158107924 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199589541 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212950865 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.188067974 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156629717 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194210255 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220794677 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162390904 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21292121 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162232824 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153215434 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.1739712 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1799732 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180398473 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.175495618 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119011902 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.17640366 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248222567 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.117456796 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156082866 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194681699 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148283769 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145307838 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162828052 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126899283 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.160828599 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.173038946 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.160013429 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177029991 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181949815 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173717642 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180176201 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162308458 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222134127 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151947295 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.182098573 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16680094 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.109374708 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.235437213 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209289296 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118937736 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239830944 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.193540636 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218365513 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184328472 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148514493 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205589476 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148919775 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.138587269 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190089233 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185840669 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184463229 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.209770608 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213676473 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.221635181 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.176168152 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140324604 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220453475 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.196308066 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182398021 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.165961166 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183101944 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193106815 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.110972585 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.14454962 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.148400346 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160210461 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120609811 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151092566 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206521983 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185245585 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238043289 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183448969 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160548291 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208252245 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.144695204 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187654862 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.196968283 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157940911 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.213901069 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204432796 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189296372 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163323713 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196693739 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.140087157 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11375208 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.152832373 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191175686 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151169577 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152928683 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164490858 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209633619 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200219911 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168065412 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251176898 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194009659 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217594872 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.139565448 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.154732975 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193964405 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177822396 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.205914452 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151324797 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.183058661 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203153761 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164434327 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217978826 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184046574 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19079715 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256062373 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.176974775 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148182906 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16817712 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189473409 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131539457 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187780206 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165074981 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154869623 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174986613 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.156567304 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146937686 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207587939 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161811419 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204936361 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.178404823 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19910049 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144282331 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164207163 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182364903 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165293751 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106901162 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192928402 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244051862 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166396239 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182051449 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198508741 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147846384 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.330679223 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214718609 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210723989 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15876189 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163364671 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182988173 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181877409 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185905852 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207086466 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16338656 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204393314 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179852207 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.164307048 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154118924 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169059908 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171571455 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.174349264 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.126473835 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177049459 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.160992954 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211027838 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164321126 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18054633 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188451855 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.168333155 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.178818711 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160015055 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22635458 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180458993 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202313654 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.17914741 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.190442793 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212084645 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144749278 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144854868 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.118221974 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234692228 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121658396 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181465359 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.230709693 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217595246 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180020651 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192217044 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158010072 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.142735867 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181526004 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140153869 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250778676 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162841377 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.157565349 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219023534 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.171607597 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119689994 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187450054 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.328088351 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162619499 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198976221 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108334406 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.296304511 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143549097 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150664291 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182376944 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195076038 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.169265654 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.20282596 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188596049 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136149996 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181177452 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157456454 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237091832 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232733598 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19430653 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200430591 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.163601737 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181519725 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185556517 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230115987 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133687906 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.167993634 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182243503 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205761488 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.240837831 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.124987302 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183027452 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185271892 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181346913 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231003002 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122293518 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240822642 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120560204 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189525779 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160198841 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144673254 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179141228 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.202617169 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152662581 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200694319 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180512805 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150248546 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145945759 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142962089 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180540559 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163801998 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.148924395 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203600732 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.146859505 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184530143 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204234772 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147548147 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175964666 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136936037 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151763899 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161882217 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164848346 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15340262 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163627062 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206513189 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.123334345 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199983332 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227298396 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188363356 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18020452 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163821295 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.654728919 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.148646686 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205630387 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167351116 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215061217 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167569857 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186742968 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183036657 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170793775 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190610232 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17008736 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.242173525 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189378965 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.182338348 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149420555 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165260705 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164164337 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.122172788 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17383469 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184261562 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160924499 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.158236241 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180482898 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166560045 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.165295437 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128807922 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206780474 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167790579 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23787329 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209352054 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15912796 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189116714 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201629527 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147704683 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.188348739 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195991726 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161232817 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174881172 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.122896585 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155816505 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20436661 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.140810411 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185432885 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182105244 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183795928 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184645545 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.127183037 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152490342 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163542389 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181360398 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147073776 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178886776 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181124617 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150241768 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.118454167 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177637158 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182058011 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.181222719 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14731066 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.190789858 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207222705 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.111920997 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153816457 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304811747 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179980098 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246526367 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.146807621 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153733142 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16475121 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179934643 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175327423 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181214639 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.14903684 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120714495 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.152588693 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.204950587 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.178608792 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179612931 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202470568 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18262134 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211550699 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.16519634 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.288444326 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156365418 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176143443 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.124165549 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.150028932 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159534339 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123476618 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166570054 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237682498 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204266836 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.171631282 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.164268634 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118894142 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.141079848 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150626348 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181936206 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147500876 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178605812 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164290823 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.137374642 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165276635 seconds)
  done (took 88.391865153 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1637075 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.156814312 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.163482797 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.216401131 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18558051 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.274619565 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.225520379 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244704936 seconds)
  done (took 2.775695481 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.143512179 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.125732431 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.159919883 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.139547151 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.140716687 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.448720065 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.153509324 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.111521642 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.201758368 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.178200844 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.109777088 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.69652162 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.141039763 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.139494132 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.13137837 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.139452476 seconds)
  done (took 4.302984349 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.484283939 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.571063429 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.073425487 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.27076935 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.251735609 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.199784106 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.773658005 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.185805899 seconds)
  done (took 12.951856405 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.145794085 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.159187288 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.355318076 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.225746224 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.176605503 seconds)
  done (took 2.222583905 seconds)
done (took 134.13113961 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.116325717 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.160131142 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.11400281 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.160045681 seconds)
  done (took 1.690922737 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.160375437 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.12950396 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101171225 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.126753862 seconds)
  done (took 1.674177235 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.544082756 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09742166 seconds)
  done (took 1.826985192 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.144317371 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.158787893 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.159931116 seconds)
  done (took 1.627795768 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.124827467 seconds)
  done (took 1.281477615 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.113005867 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.142788373 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.194425289 seconds)
  done (took 1.607436538 seconds)
done (took 10.864818662 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.137905905 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.437207141 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.428532589 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121379609 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.736795897 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.422336336 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.070549661 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171842158 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182112285 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.102577739 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.154273086 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681711584 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.095614122 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.37771796 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.047831976 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.469867953 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.715273066 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.106416212 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.140456109 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.1328276 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018556901 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.132990279 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.105268582 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.135368592 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.710833371 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.411471142 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.133974612 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.483179212 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.103509678 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.137935036 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.393021786 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.132912575 seconds)
  done (took 17.774445477 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148965514 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.19763245 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.142853763 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105175974 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.140045907 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.134472439 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.115198028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148524192 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200045933 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.133245468 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.124675882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.133859768 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.13837711 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.104936617 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.156665862 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102930312 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.136309594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.136059047 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.112119932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.135792792 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.152913929 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.102580998 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.135657715 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.10590816 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.132305169 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.147204323 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.103384572 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.147485248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.132595899 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.109667494 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.138722823 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.104083199 seconds)
  done (took 5.426132378 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154701993 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.208206892 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143330071 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.168459053 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186513811 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.105407104 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.224831917 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176141719 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200433122 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136465465 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.154782806 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.103600236 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.17500795 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.133831873 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.127344912 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.133055865 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.134318698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108070666 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.141593317 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.105484002 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.153946066 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.133600782 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.106430696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137384344 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.132430227 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.119891228 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.133988011 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.147465462 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.104991871 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.139086522 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.110096949 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.134809412 seconds)
  done (took 5.746675088 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.116673518 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.147459255 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.125604053 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.157124446 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.142703538 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.115405251 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.146648972 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.141082907 seconds)
  done (took 2.264040353 seconds)
done (took 32.369519152 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.1304767 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.153258981 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.122377272 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.147167735 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.206501164 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.134798184 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.1209347 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.136234445 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.119359455 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.155801593 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.103584981 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.140575977 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.153531745 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.113430726 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.189895851 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.150229734 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.195950086 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.191907106 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.109332341 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.147489138 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.139661412 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.197875889 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.114609768 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.140030835 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.201828967 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.107180851 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.187884935 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.145369848 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.143228728 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.10651375 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.189253753 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.146821668 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.109118067 seconds)
  done (took 6.012832149 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.209699362 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.21836362 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.105600989 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.138415884 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.217986096 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.136219584 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.206866298 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.10627111 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.136805589 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.105598155 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.136293356 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.207022771 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.214150742 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.229546471 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.247174633 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.21527864 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.203338556 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.216696716 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.202185637 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.251008496 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.20640076 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.106785681 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.21656947 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.221469352 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.136721454 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.105686192 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.24316135 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.245609162 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.244399871 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.205380842 seconds)
  done (took 6.81779574 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.119417536 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.15202083 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.130387546 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.207440053 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.177439182 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.150979224 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.116681378 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.157889414 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.160927427 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.104751791 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.145985943 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.171885 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121976337 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.146820019 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.110158448 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.155978311 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.163012757 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.106154709 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.142792746 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.156822238 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.124316603 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.154300221 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.149218682 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.116126162 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.13592442 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.115006852 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.13960036 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.150181381 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.111957375 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.144577348 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.139595048 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.110384538 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.139796225 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.113966948 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.1399961 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.148906931 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.132087218 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.146345239 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.147691436 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.14011964 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.147745995 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.141496473 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.12708236 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.185664445 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.137826133 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.118530281 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.148641904 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.145554841 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.104925073 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.155888114 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.119857447 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.136586829 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.158198683 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.104956388 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.134814853 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142037991 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.107854873 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.139285077 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.1155761 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.140905139 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.161329262 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.113701032 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143316726 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.107865651 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.1438499 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.135527399 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.106000076 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.143668054 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.128935126 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.141763558 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.170697148 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.106455433 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.148276143 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.14480937 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.111166804 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.146490171 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.105502223 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142882969 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.143692647 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.11321663 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.145712221 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.108243475 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.141880834 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.154734837 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.12708934 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.150361127 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.146358571 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.116410069 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.140250022 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.137508072 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11952594 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.138533921 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.109994194 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.146377426 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.137120284 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.109207097 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.149367538 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.115405637 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.137177142 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.155131919 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.112356182 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.13708443 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.122027108 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.139959505 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.142381454 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.116174386 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.149264866 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.105050155 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.147078712 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.148132856 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.105810967 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.143245924 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.109922278 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.138399932 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.155211549 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.116622985 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.143242382 seconds)
  done (took 17.081853339 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.307947413 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.321755789 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.215798451 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.411578577 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129986857 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.237640541 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.282462008 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.235354245 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.139159231 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180067251 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.198522306 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.274663423 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.10589827 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.17113683 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.319757958 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.383169297 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.169481333 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.185554091 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.182671913 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.161644369 seconds)
  done (took 5.811615107 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.130144198 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.17959063 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169043239 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.170504547 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.112534719 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.151404522 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.136573228 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.16158214 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.115898019 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.145770515 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.106493381 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.151183808 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.145234693 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.118037276 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.156433489 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.186484766 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.111515547 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.145147699 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.160232055 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.113767465 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.145298256 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.166978966 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.147339784 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.135036779 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.148860094 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.152742743 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.105244778 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.145115067 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.109396495 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.142150901 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.144098688 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.1567251 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.115498365 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.144313927 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.115983606 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.151474197 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.107992549 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.139291501 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.13816996 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.110518424 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.154787402 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.117633885 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.140981788 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102954767 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.150637207 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108222848 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.149771198 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.148758083 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117453455 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.15327859 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.147703913 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.118484023 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.143204639 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.157446287 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.108248498 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.153485795 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.15068805 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.119022918 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.145275324 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.135533032 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.105376779 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.141744559 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.111479608 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.15163237 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.145257915 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.130331005 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.153790049 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.137481278 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116499983 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.142855311 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.111197616 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.158622785 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.165972011 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.14257991 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.110181508 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.159648015 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.109477669 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.129994608 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.116707633 seconds)
  done (took 12.061032939 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13691087 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.14418133 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.127209221 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.175862146 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.159243717 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.112489546 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.144119605 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.158015807 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.119514502 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.152015468 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.151004796 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.120423119 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164856064 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.151166293 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.111099112 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.154172863 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.116751711 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.182398441 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.15986284 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.173090879 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124877988 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.144638674 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.152447378 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.119887276 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.175192899 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.151273974 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140427505 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.151911071 seconds)
  done (took 5.296594134 seconds)
done (took 54.244976922 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.335647372 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.506284727 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.283071473 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.279025491 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.320675586 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.312404488 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.281257372 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.471283613 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.015510391 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.268255811 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.281163882 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.281788198 seconds)
done (took 28.872990452 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.284843622 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.911553868 seconds)
    (2/2) benchmarking "String"...
    done (took 1.602912217 seconds)
  done (took 4.724718554 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.272487755 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.2748902 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.51681958 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.274392797 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.291996855 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.292907694 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.282653952 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.28948227 seconds)
  done (took 16.426930333 seconds)
done (took 26.914834997 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.341006171 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.468156596 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.54144049 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.306302198 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.274837079 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.283476321 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.270612926 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.311817434 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.283441683 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.267789975 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.28048583 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.556086812 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.270373386 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.687458457 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.281972892 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.289060624 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.292596107 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.522564543 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.274881496 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.336717015 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.273044767 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.268017612 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.31792918 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.312260868 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.289077123 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.277982544 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.281115167 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.272570356 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.487458093 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.290336344 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.33067215 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.278940608 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.286956134 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.289794018 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.388556741 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.302967063 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.477834509 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.278255926 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.27432367 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.280311113 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.47268411 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.68326575 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.279089483 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.268504191 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.295111213 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.343503733 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.274605412 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.039749519 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.279432909 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.269809131 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.316421599 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.683888249 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.279494268 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.277104424 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.288438387 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.539037771 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.280457582 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.324676351 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.302927686 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.277221575 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.276893046 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.28730344 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.288005599 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.277155236 seconds)
  done (took 148.511733191 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.278108833 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.280373398 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.28084152 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.344319557 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.282848447 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.280411716 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.277514197 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.277872801 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.28004474 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.310666443 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.280658822 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.281439393 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.280497552 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.247813967 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.28369348 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.298928718 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.280725121 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.282714955 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.287422354 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.278052194 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.276783298 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.281093436 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.29662645 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.278296989 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.28075472 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.349591509 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.322960447 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.285035632 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.286983181 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.27792378 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.324555241 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.300193914 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.90507085 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.141355427 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.289574181 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.305704493 seconds)
  done (took 83.106302995 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.278358061 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.280169605 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.277657077 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.311901193 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.278567228 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.857593452 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.866751413 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.020866471 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.664758344 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.694083788 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.554977563 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.278606039 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.374943832 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.295336371 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.280798767 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.294887466 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.323716722 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.282424125 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.279983915 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.857067981 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.289621382 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.408486552 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.460909009 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.297996468 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313516214 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.683476547 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.280214256 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312039602 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.618924662 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.331545452 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.27916304 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.677080944 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.830617622 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.392977086 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.280998702 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313213995 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.280274734 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.562819509 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.280848857 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.280876662 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.280377954 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.28345615 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.963731709 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.280030518 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.856356363 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.280745673 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.245815908 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.281864521 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.280879027 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.40028488 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.982792224 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.299106082 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.281709804 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.282631227 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.279753086 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.28150115 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.312978398 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.489878581 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.394214361 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.298667236 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.281711249 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.283664392 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313552964 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.280426768 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.280097812 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.502375573 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.283680655 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.099528499 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.359291485 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.40344248 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.281309381 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.869686565 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.285449517 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.379027175 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.404433459 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.283628156 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.281393637 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.28265152 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.282056105 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.393292946 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.283073758 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.711134061 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.460300811 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.300725635 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.703668533 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.382389176 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.281385054 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.685635344 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.284440276 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.281266739 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.03901307 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.381199104 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.283930162 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.282902938 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.281904162 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.715118596 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.872835749 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.548175165 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.286250943 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.582160848 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.287096995 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.724344808 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.853122013 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.980807787 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.286580596 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.398086214 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.462851936 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.302716142 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.283470896 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.704094544 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.286099451 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.340392973 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.284905777 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.684575485 seconds)
  done (took 376.1598573 seconds)
done (took 608.983247948 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.989179959 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.94300205 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.07696587 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.968590924 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.936197065 seconds)
  done (took 11.126325806 seconds)
done (took 12.339247087 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.479272652 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.477578902 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.346108565 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.481633793 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.317218624 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.493799188 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.459369771 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.304535547 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.392276946 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.366282301 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.391640994 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.336767448 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.318075106 seconds)
  done (took 19.378084747 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.57326313 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.292863432 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.354595934 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.539610894 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.332092502 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.578760876 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.595624892 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.293038739 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.443423547 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.330999511 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.303037679 seconds)
  done (took 18.850443366 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.568702254 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.291966806 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.357075733 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.548051668 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.332906325 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.562164535 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.612003611 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.294639179 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.444874702 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.303158058 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.303738019 seconds)
  done (took 18.833539756 seconds)
done (took 58.277132779 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.331136967 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.45569319 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.316717002 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.304056679 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.299982457 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.300831587 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.305989312 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.299128883 seconds)
  done (took 11.829026884 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.298312183 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.298361359 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.296513271 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.298107801 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.297177459 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.297026735 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.299241396 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.297141479 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.298129162 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.297013745 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.297112619 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.298292958 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.297975585 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.297816323 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.295815339 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.296824681 seconds)
  done (took 21.976839937 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.300837663 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.297001724 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.298168602 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.297475582 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.299317465 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.29809664 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.299459142 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.297982619 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.297581791 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.29748739 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.29902087 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.300469764 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.299884647 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.298377981 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.299040661 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.299456587 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.296324719 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.298624836 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.303960344 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.298323064 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.297742414 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.299477679 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.300287104 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.29890307 seconds)
  done (took 32.391124116 seconds)
done (took 67.411828165 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.28996284 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.291568615 seconds)
  done (took 5.797892401 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.358772544 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.360928015 seconds)
  done (took 3.937887805 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.299868032 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.299275838 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.30083691 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.300200989 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.298114834 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.299038834 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.301024745 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.300283998 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.300504448 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.300910604 seconds)
  done (took 14.217011558 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.300014828 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.298841679 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.299837953 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.300821357 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.302755819 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.301901004 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.301066641 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.301014803 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.300313231 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.301610099 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.301827837 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.302276229 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.299854279 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.301121751 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.301666723 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.298845869 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.302229171 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.300915591 seconds)
  done (took 24.633918556 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.313664961 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.318824964 seconds)
  done (took 3.849479969 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.440771175 seconds)
    (2/7) benchmarking "second"...
    done (took 1.341012962 seconds)
    (3/7) benchmarking "month"...
    done (took 1.417669752 seconds)
    (4/7) benchmarking "year"...
    done (took 1.406398998 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.33969148 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.323804333 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.344274372 seconds)
  done (took 10.831639995 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.304611761 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.502652793 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.612584233 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.841165075 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.302836059 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.347934573 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.125649376 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.347423773 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.334367568 seconds)
  done (took 14.93898788 seconds)
done (took 79.422421473 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.288162447 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.352074616 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.309989535 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.311831863 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.597927549 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.313016647 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.291980151 seconds)
done (took 16.684308847 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.283490417 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.284057465 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.312440625 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.306748794 seconds)
  done (took 10.407266844 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.291992368 seconds)
    (2/2) benchmarking "read"...
    done (took 1.666508361 seconds)
  done (took 5.177886512 seconds)
done (took 16.805809812 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.305701766 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.301902116 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.303564869 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.301761245 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.304587097 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.304477062 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.303614358 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.301828349 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.304052603 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.30319834 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30434319 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.303903189 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30299081 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303134527 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304130445 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.303970281 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302986457 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.302219457 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.304444359 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302951481 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.300934019 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304019245 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.303718715 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.303589387 seconds)
  done (took 32.50354109 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.304821679 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.303423601 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.30297381 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.304502044 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.303543101 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.304892496 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.303217524 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.302783537 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.302699906 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.303852619 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302808439 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.305322477 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.304877311 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.304773721 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304420699 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.305786099 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.305721927 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304318525 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305449431 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.305357099 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.306377514 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304615934 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.305665367 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30343531 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.30347604 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305174529 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.306269709 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.305955112 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.306038212 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.303875976 seconds)
  done (took 40.358321847 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.309631368 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.307851259 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.304967532 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.305152782 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.306284698 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.303575675 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.307130565 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.305841788 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.305520018 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.304809779 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.306782681 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.306015717 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.307115568 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.306178114 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.307742843 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.305532833 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.306388056 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.306080909 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.30791211 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.303966486 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.30661023 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.307122079 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.305893573 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.308528946 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.307380284 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.305225863 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.306326055 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.304774252 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.304302128 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.306056132 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.308360516 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.309426817 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.304819446 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.308462077 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.308077696 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.308253265 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.311940944 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.31272258 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.30609175 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.306294682 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.305917287 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.309434596 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.307231801 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.308529955 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.310275877 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.308579572 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.303521558 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.308643132 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.307128137 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.306970906 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.308818647 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.307247799 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.310358693 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.308427827 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.309743353 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.308759406 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.309301574 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.310261986 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.310028649 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.308941498 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.309522227 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.308691346 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.30783883 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.308505739 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.309217631 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.307544847 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.30752789 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.310470233 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.308802602 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.309846362 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.309073058 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.310640759 seconds)
  done (took 95.373558265 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.308490138 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.304390123 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.307567107 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.310800312 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30751741 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.310878703 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.310053012 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3073508 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308633978 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.307374201 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307393339 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311141411 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307487281 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.304145118 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.308015923 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.310670028 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.30734076 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.306410307 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.311106789 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.310792372 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.308731178 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.308762162 seconds)
  done (took 30.0111123 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.310647811 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.31289322 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.311758379 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.309867877 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.31398617 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.309774285 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.311467574 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.310555152 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308274768 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311067458 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310071994 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309900081 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.310171374 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31269501 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310312094 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.312309852 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310808207 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.312660056 seconds)
  done (took 24.821489429 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.31312202 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.308037924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.310754494 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.309094239 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.311285553 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.310776865 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31199069 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.309654607 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.312746556 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.309913145 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.312864816 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306737511 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.313384094 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31118141 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309465774 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.310787768 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.308765317 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310940269 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.308482016 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.307538018 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.310319961 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312313173 seconds)
  done (took 30.048692072 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311959019 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.313277805 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.310782282 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.313634116 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.307955503 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.312789141 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.313063176 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.311863092 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.310217196 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.309929085 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310733356 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.314601152 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.313940073 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.308660966 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.31124516 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31151075 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.308958514 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.31330387 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310380062 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.314020792 seconds)
  done (took 27.459607967 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314954623 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313360521 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.314582194 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309948533 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.314275746 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.317522053 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315391588 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.315298208 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.311806428 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.315510194 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.312882158 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.316800218 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315925521 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.315937962 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.31674989 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.314479425 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.314316367 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.317066839 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.316545813 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.316040817 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.312344068 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.316248873 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.315794181 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.315765147 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.3159449 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.315336759 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.316939182 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.31665087 seconds)
  done (took 38.054944615 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316545058 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.31064876 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.316445024 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.3144543 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.316007225 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.313110367 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.316436436 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.315577623 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.317264164 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.314448921 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.317598699 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.313092186 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.316808553 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.313770166 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.312706836 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.316148924 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314435816 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.316827075 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314812812 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314873954 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.317739254 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316383493 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.317020524 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.314757576 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315379191 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.318242144 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31521154 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.312976578 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317375798 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.31259958 seconds)
  done (took 40.692511811 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.362665918 seconds)
    (2/2) benchmarking "in"...
    done (took 1.362596939 seconds)
  done (took 3.954141184 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.316498167 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315987082 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.317247175 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.315723374 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.315728299 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.314560355 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.31705482 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.316550691 seconds)
  done (took 11.763164693 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.313674926 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.315906866 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.318523791 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.315988899 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.315025352 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.311052807 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.318500289 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.334851386 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.310608682 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.310489134 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.318634074 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.31720073 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.315359473 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.313161079 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.312350893 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.316392443 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.315886209 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.318133086 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.320667349 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.316103072 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.321086957 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.316947424 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.312739105 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.318841937 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.317840055 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.324466228 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.319073531 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.320631493 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.313808957 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.319454821 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.311934679 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.319094558 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.318781176 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.318992775 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.320242024 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.319070997 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.322020152 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.333177735 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.320673185 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.321446776 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.320584087 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.315335938 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.315866252 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.317295248 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.3168801 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.320122938 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.320141555 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.31900934 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.314972046 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.318226941 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.326834866 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.315490259 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.319923918 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.321543101 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.313312155 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.323021402 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.340196731 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.315816082 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.322532469 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.326907073 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.328444947 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.338333185 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.318310587 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.318589958 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.323072589 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.335561633 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.324523637 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.340392781 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.320745733 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.319378147 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.323223332 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.326361116 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.340651473 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.318385927 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.322439925 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.324194158 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.317122615 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.321791773 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.322748884 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.338539832 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.322907561 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.320421023 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.325374748 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.332364509 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.317522657 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.320649446 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.322723619 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.323470293 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.320348494 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.326707727 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.341594206 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.323919172 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.315721081 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.318526136 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.319311725 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.322976186 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.314889782 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.319773144 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.322712848 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.324028403 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.320893321 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.323297165 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.328405936 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.320661299 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.324631282 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.323447274 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.323871652 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.319553682 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.323852551 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.323232023 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.322699603 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.321149334 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.323598238 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.322431818 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.322210514 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.326997686 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.324473854 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.319164953 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.32327737 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.323423698 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.325280389 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.337972799 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.325477219 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.318318827 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.320477595 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.334142748 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.324290968 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.322756956 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.324260474 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.322607777 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.321797724 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.319313144 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.323564855 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.317805212 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.322200062 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.317819508 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.322405932 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.321676617 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.320398792 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.31914612 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.319147138 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.317742646 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.318320829 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.319708979 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.322230008 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.318842638 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.323257487 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.31773406 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.31780632 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.317432863 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.321671236 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.322743623 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.319533283 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.323103893 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.319026118 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.322939528 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.318112612 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.323917754 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.3243203 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.321663351 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.322164279 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.319582303 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.323223552 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.324365379 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.322341307 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.318707717 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.321211315 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.323048796 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.323125403 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.318796889 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.32394958 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.317771158 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.321681929 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.331244933 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.323794152 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.322398054 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.32181265 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.32514767 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.323219322 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.323567761 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.32323264 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.326155396 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.32442593 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.32480887 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.325152887 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.325138793 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.325470142 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.321273119 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.32030931 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.323539687 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.323354827 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.33115537 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.332824235 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.346060216 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.321631387 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.328155472 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.320663297 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.327340144 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.323869071 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.325512813 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.324605877 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.324441816 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.319732176 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.323958869 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.323322956 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.325769423 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.320762021 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.325142105 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.32552094 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.326024267 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.326120405 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.320394027 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.322175167 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.325523763 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.325794283 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.32516872 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.321809435 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.325449095 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.320611509 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.320720838 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.326686911 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.323986051 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.32699038 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.325661052 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.321889901 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.321979716 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.321467091 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.320034303 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.32641771 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.322194068 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.323158898 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.328087823 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.34125168 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.323173184 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.329387808 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.342024149 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.323394434 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.324402775 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.327644103 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.328255013 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.325224634 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.334950866 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.326320413 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.326795094 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.328687348 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.323459372 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.327539271 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.330328422 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.327643144 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.322673525 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.327059927 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.325004553 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.328032085 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.323921747 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.325532296 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.323697428 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.324972355 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.329229084 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.327426266 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.324349863 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.3279458 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.328830042 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.327768798 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.326337392 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.334817484 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.327724709 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.324118312 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.327419468 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.324062748 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.331181182 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.326497994 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.329299591 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.325119599 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.337218254 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.353603114 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.331250433 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.344726506 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.329152711 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.329094168 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.345329617 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.328480089 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.32540566 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.325430942 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.325056051 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.32389575 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.330243933 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.325784638 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.329981786 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.325625576 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.325267636 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.333918851 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.330146592 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.326474632 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.330452038 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.328791628 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.328693585 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.325870972 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.328974634 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.326784012 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.325891711 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.325444801 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.325962741 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.332222479 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.345309724 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.326680736 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.325272095 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.325607701 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.326008962 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.326171307 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.329037785 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.329644285 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.337447018 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.328766869 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.334202316 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.327050101 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.333190019 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.329257527 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.330490033 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.33873654 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.331840279 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.326451631 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.325633907 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.330707663 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.332952787 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.350357539 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.328014834 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.335859279 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.331480614 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.331634807 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.332683243 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.332705384 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.332241261 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.33084951 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.335683354 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.348830672 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.331243311 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.330881311 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.332509811 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.331681158 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.332023296 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.327832122 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.330284335 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.333666401 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.328596832 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.326885823 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.328398943 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.332683062 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.33399247 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.335139959 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.332654938 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.332011145 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.334035909 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.348814988 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.336452246 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.332839173 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.334478605 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.332161791 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.335163153 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.351638061 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.330643251 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.33309147 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.333601991 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.330858449 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.327859466 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.328893183 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.332982514 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.329085354 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.335282796 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.333035911 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.330634424 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.329230223 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.332940068 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.329262875 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.336015945 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.35048762 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.331623755 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.337269415 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.3338377 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.330444355 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.337096333 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.333046712 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.329491122 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.330993868 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.338910879 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.341360745 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.330813346 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.33470788 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.329448547 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.333268427 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.334593958 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.33489446 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.334033272 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.336073873 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.331006597 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.334812897 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.333064926 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.334218572 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.329035793 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.33262814 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.331720757 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.340799572 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.335463477 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.331889569 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.334844899 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.336575562 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.330866348 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.331531452 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.336482634 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.331944781 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.334603428 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.333119579 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.337973575 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.336920548 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.333404592 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.330761203 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.335276198 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.334265183 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.333770585 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.336177704 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.335722716 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.334512196 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.332064049 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.33580353 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.333365463 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.331898577 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.336210394 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.332108864 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.335839459 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.335040923 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.33814272 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.331583802 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.336024412 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.337866693 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.335034007 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.330223311 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.333441817 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.337898058 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.335353851 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.340754773 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.341417988 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.343799891 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.336576669 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.339623441 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.343711158 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.33450991 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.337296493 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.340068962 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.3374115 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.336742595 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.338723914 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.338680983 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.338792564 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.332803801 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.332386994 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.341418938 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.354216417 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.339171795 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.333909706 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.337677371 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.331713223 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.337071252 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.338136017 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.332410433 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.339340283 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.354820613 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.337681667 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.333546833 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.333394934 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.335491491 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.341056765 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.34003681 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.335443572 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.338480393 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.334085126 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.338583571 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.339752509 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.337930397 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.332510851 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.333942111 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.338078108 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.341170209 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.338735064 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.337408008 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.333925354 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.334766271 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.339105786 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.339195945 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.34005274 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.338830573 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.335762068 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.342553973 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.336070042 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.337857886 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.336831514 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.337421704 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.342117274 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.340290813 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.337840576 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.34455387 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.346083189 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.340449708 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.334980463 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.336420959 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.337714291 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.340876852 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.339437207 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.336767054 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.338584985 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.341273594 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.342003075 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.342351492 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.338605937 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.35251614 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.361113948 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.333958876 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.336416122 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.338234948 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.34097484 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.338319989 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.339605465 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.33739616 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.337903691 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.348367996 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.340904603 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.343353867 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.35797352 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.336859398 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.343549571 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.341158963 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.342154848 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.340039392 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.344220713 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.34542976 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.343921505 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.354853166 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343740495 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.345475212 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.363859846 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.360134226 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.341857026 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.342496897 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.337386961 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.341518925 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.338103283 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.339560429 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.341688556 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.341575194 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.340485037 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.33887545 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.343129228 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.339034628 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.343708111 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.343110986 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.338262817 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.338679069 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.343344117 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.342506865 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.342540513 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.343345295 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.343682012 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.343032802 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.338913282 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.349539086 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.365313114 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.343650076 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.342991859 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.342909455 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.342953059 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.341366495 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.348252992 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.349978178 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.342258994 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.342334405 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.341783928 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.34266686 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.346159666 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.33994675 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.338555331 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.337774889 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.342836085 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.351770507 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.369895868 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.344103564 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.339155604 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.342690799 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.344839583 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.33972972 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.344342779 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.344744413 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.341375247 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.341406909 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.347213439 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.346941468 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.34401118 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.343141643 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.350874601 seconds)
  done (took 794.329930621 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.345646382 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.34491674 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.344292082 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.343742407 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.345295848 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.345189328 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.344766377 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.345873644 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.346073695 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.344168971 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.34550405 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.345395619 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.345188249 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.346030243 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.345968917 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.344967075 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.343868816 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.345601786 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.345366322 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.345861202 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.345840988 seconds)
  done (took 29.507395204 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.345780508 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.346697942 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.345496634 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.346308254 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.34587145 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.347035067 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.347643128 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346664053 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.346451529 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.346834401 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.34660235 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345830039 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.346275124 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.346370702 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346706149 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.345981504 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.346930335 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.346172863 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.346228397 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.347743263 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.346878303 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.346806216 seconds)
  done (took 30.882059447 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.348104694 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.348234206 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.342392874 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.347827134 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.347418465 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.347321063 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.347291681 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.348595045 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.348561365 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.345570501 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.343306487 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.344578717 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.349602295 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.354831747 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.345405107 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.349162097 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.346922496 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.3477808 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.347470422 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.34817808 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.34900166 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.368355148 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.347221523 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.344404852 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.346589965 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.348708995 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.348058797 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.346988388 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.344475525 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.352386009 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.349724569 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.342993949 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.345553353 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.341026208 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.346434741 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.352845913 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.348017226 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.349436703 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.348517678 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.352281592 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.366201763 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.348215665 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.351340803 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.368696903 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.348544099 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.347189425 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.356708074 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.348578026 seconds)
  done (took 66.019032375 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.946982397 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.971996922 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.978348753 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.973786111 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.9814777 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.975649279 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.980552712 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.992980929 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.983161694 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.97589285 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.974748537 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.975114729 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.977088758 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.976889578 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.980056969 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.981365768 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.981654945 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.981523889 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.993223498 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.984424146 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.981612516 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.981787214 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.979777969 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.977066902 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.982581451 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.981111289 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.979139738 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.981844084 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.982287844 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.982489234 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.99283336 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.978836637 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.979694914 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.978827685 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.984097781 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.978512282 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.983408581 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.985911004 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.982619935 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.983017071 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.985776539 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.994661374 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.984862586 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.980532884 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.982446807 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.980687114 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.983157646 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.982925514 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.988190727 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.981872864 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.983861865 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.984156225 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.986015772 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.997468921 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.986653619 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.982239854 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.985042663 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.983415068 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.986553537 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.985690114 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.990113843 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.9883218 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.985632768 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.982881806 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.996801402 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.990019866 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.98098059 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.983250132 seconds)
  done (took 136.074391927 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.354179208 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.353323935 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.353976361 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.352782369 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.353843972 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.353620221 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.353321124 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.354959658 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.35404388 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.353806478 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.354430163 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.354439045 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.353877595 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.353723955 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.352922586 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.354018005 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.353352772 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.354244781 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.355181049 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353531777 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.355054144 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.354444714 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.353110687 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.354456632 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.355045893 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.353265985 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.354473639 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.355274629 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354954457 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.354866385 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.354310231 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.353997374 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.353927848 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.35520674 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.356197324 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.355095853 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.354004405 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.353561062 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.354798965 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.355679125 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.355958771 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.355714271 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.355962917 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.35571803 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.356467167 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.355783784 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.356097219 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.357806437 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.356016938 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.356223008 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.355587743 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.355106746 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.357349076 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.357685675 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.356874836 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.35530285 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.356372272 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.356691824 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.357856458 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.358536815 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.356038923 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.356167229 seconds)
  done (took 85.281545364 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.356977785 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.356826783 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.35669079 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.356033985 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.356142265 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.355231665 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.354910436 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.357379339 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.356716605 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.356710272 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356952115 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.356561991 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359047559 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357185385 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.356351768 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35807543 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.356090843 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.358139729 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.35767893 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.357089936 seconds)
  done (took 28.405278778 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.358370476 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.358012857 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.356185331 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.356449497 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.358137139 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.358258337 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.357852983 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358243482 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.357956795 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358399483 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.358211742 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.359029004 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.360020345 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.357680338 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.358345735 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.359713694 seconds)
  done (took 22.999870095 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.358167538 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.356900584 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.358158584 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.358304912 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.357862328 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.358316368 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.359103326 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.35780873 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.355962428 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.356292028 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.358761807 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.360833385 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.358395395 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.356912279 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.361993102 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.360833672 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.358978825 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.358821528 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.35753113 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.358464685 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.360801183 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.359659147 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.359342449 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.357676144 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.358640308 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.358595865 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.357731205 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.358111595 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.358755921 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.356307736 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.358418429 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.359848836 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.35874792 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.358512615 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.35898944 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.358957442 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.359774402 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.36021103 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.360445751 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.358443377 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.358233695 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.360135009 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.358145528 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.359827371 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.358052609 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.359536685 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.358171875 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.359006584 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.359741872 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.362190816 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.360502502 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.355884471 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.360305532 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.359049671 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.359266613 seconds)
  done (took 76.005802937 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.359508647 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.363065161 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.360764819 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.358083477 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.361881133 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.359903121 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.362480459 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.365672606 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.359283605 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.361000049 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.36129095 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.361716991 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.359051733 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.358363781 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.36152485 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.35939051 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.359552652 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.360531649 seconds)
  done (took 25.763968877 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.362312726 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.361478139 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.361142812 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.357939119 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.36163626 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.359554346 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.359436406 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.357939735 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.361053067 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.359150474 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359745012 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.359588641 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36216539 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.359086298 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.361764292 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.362739299 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.361620082 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.363030967 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.361254214 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.363448236 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.361320886 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.36208193 seconds)
  done (took 31.211632627 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.356167773 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.357100797 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.356484349 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.372501857 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.378019658 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.357309407 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.357053228 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.360101997 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.375855758 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.403511419 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.398966107 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.376243668 seconds)
  done (took 17.720365469 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365037174 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366091989 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.364415 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361615819 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365076172 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362794442 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364762308 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364372075 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3633939 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365679789 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363120383 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363951753 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362054176 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366747173 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364348478 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363870976 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363840015 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366957273 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365256062 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360405322 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362171312 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362403061 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364121445 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364636229 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363049708 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.364254388 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366611676 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366525343 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365261978 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366754 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36503021 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365771943 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.363325792 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367456281 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363556505 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363744647 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364245918 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361885904 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.363798514 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361678177 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.363702035 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364268109 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366504563 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365238733 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363545583 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364002259 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36254841 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363075594 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365468158 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362907475 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366101838 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367608708 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365215881 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367712845 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367027217 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365643275 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370192981 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367354067 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365647711 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367106204 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36669759 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366957966 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368106989 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365165473 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365315493 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36521838 seconds)
  done (took 91.355834464 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366831269 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.364359875 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364253637 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366366297 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366078728 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364321312 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367890024 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368127596 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368728612 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370419869 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363046333 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367745966 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370118234 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367964871 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366000541 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368154228 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368378944 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367762615 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367525999 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364927916 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36849531 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367859385 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368850023 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371563659 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368036245 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368390349 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366168066 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366549182 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367731984 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367754039 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366600061 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.364514974 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368512831 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.366595058 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36982086 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369933732 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370444134 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376399338 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369070613 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369884608 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369157592 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366650826 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369406087 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.37106372 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36753791 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367424983 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366648429 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367226355 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367084396 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366495531 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370035519 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369132578 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369044498 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368057126 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367963699 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369496815 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368510442 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365005071 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369356227 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367855338 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370399809 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370386403 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367510398 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366407818 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36658719 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.371098931 seconds)
  done (took 91.562335524 seconds)
done (took 1903.379984249 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.525515219 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.481326452 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.36282107 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.382950023 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.36479148 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.388515536 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.377425665 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.3639429 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.364277134 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.365357501 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.367464988 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.550339207 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.358313496 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.362210783 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.363322974 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.462982055 seconds)
  done (took 27.717686109 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.394442736 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.373686323 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.493170902 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.391679467 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.397167404 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.570563058 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.43665074 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.375189416 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.554849909 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.393934155 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.365377798 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.394300144 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.371585826 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.359981328 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.391006374 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.574921653 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.635801365 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.371546088 seconds)
  done (took 30.124069957 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.847702688 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.375883273 seconds)
  done (took 5.506311748 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.392374129 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.369879334 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.374059216 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.36866656 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.360986776 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.376530417 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.370688067 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.36643112 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.387243818 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.508007403 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.379795196 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.388259339 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.392501564 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.370024332 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.376870138 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.417235397 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.536388652 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.377285207 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.373767563 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.378521355 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.372551433 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.49473179 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.41662754 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.379150249 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.502870006 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.37794783 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.376981198 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.378604078 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.50490028 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.377578738 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.37012185 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.373057527 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.374703259 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.36461334 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.864808989 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.390883337 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.382369629 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.406456989 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.375246795 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.545248846 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.372948709 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.37997869 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.365353794 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.842305043 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.518975502 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.501555106 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.395325755 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.372347471 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.376086089 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.441348638 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.376615053 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.374478175 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.434259506 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.196812937 seconds)
  done (took 87.735507815 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.376878298 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.364710183 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.545211481 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.393548174 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.365704575 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.363399797 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.366749146 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.673523526 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.406057336 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.364248847 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.670888966 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.971415239 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.386784781 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.418276727 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.277237836 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.435463735 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.367607111 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.379514541 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.364469165 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.371565766 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.932281727 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.379164492 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.365394552 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.494228448 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.406981003 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.902895122 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.366126797 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.379578187 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.365159445 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.365631693 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.912338551 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.392436665 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.436565392 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.368958436 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.646200661 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.760049155 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.724280014 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.366601108 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.395823569 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.369653415 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.379396057 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.885985078 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.741289006 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.366623524 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.366783905 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.889014163 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.36907929 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.37501221 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.377586567 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.623195041 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.366612979 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.367534803 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.383624505 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.368468535 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.366747722 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.388940124 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.451743407 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.899994111 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.367422172 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.366267581 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.39214364 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.369434517 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.368078873 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.372136881 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.385722892 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.745429887 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.521344478 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.375814427 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.744316319 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.908342836 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.38170519 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975821429 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.384732267 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.382457519 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.584836996 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.37054848 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.368957858 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.909808651 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.383725053 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.368051483 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.724095211 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.371167889 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.671821185 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.396341694 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.368579958 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.953471829 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.375627893 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.374840684 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.368932137 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.365810854 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.386280488 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.374247878 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.657948338 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.424823327 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.370479179 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.369490446 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.37622424 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.37111627 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.372237483 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.381693973 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.979848475 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.391738529 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.370374529 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.368562523 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.381242445 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.375069202 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.373330768 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.373573244 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.641367551 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.385366486 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.369930072 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.371555457 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.368411933 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.377459085 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.507088832 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.375706979 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.698366105 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.369382896 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.378284853 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.373463744 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.368312622 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.37680243 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.367791075 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.379820612 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.275608151 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.633618481 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.388623132 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.371188182 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.374182661 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.370743589 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.393607948 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.372830843 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.41109408 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.377438636 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.185649033 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.393232561 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.389093912 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.36978851 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.376321515 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.369899156 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.375957199 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.370825193 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.676061652 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.660552385 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.518824135 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.370472242 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.373570163 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.166063234 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.403110365 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559398461 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.397551216 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.374815429 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.621286927 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.607161144 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.376274777 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.37295956 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.37365635 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.639261703 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.376075533 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.707187746 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.94719773 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.391164382 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.374668117 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.189182401 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.077688382 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.377215144 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.376499297 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.668399075 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.388312055 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.372989105 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.375311564 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.372961503 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.392297247 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.395927045 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.379338646 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.371156351 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.37522031 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.420832825 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.571052282 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.393346693 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.375711888 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.903152352 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.388362071 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.388773432 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.377433339 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.375368716 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.376081708 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.445886269 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.378790572 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.416876815 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.376295107 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.384964406 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.918919603 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.375530963 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.38086446 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.571855579 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.098811788 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.390384006 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.379071492 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.38984838 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.286659216 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.92871766 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.430798912 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.706129089 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.377258183 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.418260505 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.379631726 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.467725188 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.929432707 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.375551139 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.395024677 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.055617558 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.391983003 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.921513007 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.37490927 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.378732806 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.003674687 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.391502323 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.378629354 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.384290644 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.382072399 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.681007163 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.379204664 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.403390543 seconds)
  done (took 507.965729691 seconds)
done (took 660.325109416 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.377416868 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.380941668 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.368571883 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.373928305 seconds)
  done (took 10.796027021 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.386888219 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.380004451 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.38370801 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.379018176 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.386408991 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.379002954 seconds)
  done (took 9.589858917 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.372053225 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.37584919 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.376619547 seconds)
  done (took 8.416629679 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.594849601 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.396506973 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.718564036 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.3944348 seconds)
  done (took 9.397142781 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.383463247 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.382753661 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.384450801 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.384106442 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.389116301 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.388698493 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.385976523 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.387411872 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.389061671 seconds)
  done (took 13.772236533 seconds)
done (took 53.265126598 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.558449798 seconds)
    (2/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.286054238 seconds)
    (3/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.383776754 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.47891903 seconds)
    (5/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.435010391 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.521090906 seconds)
    (7/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.410745349 seconds)
    (8/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.404808576 seconds)
    (9/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.58569279 seconds)
    (10/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.620492079 seconds)
    (11/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.411296569 seconds)
    (12/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.412825233 seconds)
    (13/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.488524884 seconds)
    (14/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.540603906 seconds)
    (15/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.459981424 seconds)
    (16/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.416823647 seconds)
    (17/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.409079061 seconds)
    (18/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.588401154 seconds)
    (19/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.173354873 seconds)
    (20/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.385463556 seconds)
    (21/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.382712106 seconds)
    (22/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.513609035 seconds)
    (23/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.412850164 seconds)
    (24/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.026271425 seconds)
    (25/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.431348502 seconds)
    (26/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.490018409 seconds)
    (27/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.11703205 seconds)
    (28/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.380879962 seconds)
    (29/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.488252905 seconds)
    (30/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.456937332 seconds)
    (31/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.638019712 seconds)
    (32/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.480603383 seconds)
    (33/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.319176568 seconds)
    (34/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.540710587 seconds)
    (35/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.148764275 seconds)
    (36/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.556597934 seconds)
    (37/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.547046589 seconds)
    (38/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.4505116 seconds)
    (39/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.375318164 seconds)
    (40/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.491258992 seconds)
    (41/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.371345473 seconds)
    (42/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.541929862 seconds)
    (43/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.368745232 seconds)
    (44/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.412673404 seconds)
    (45/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.40951272 seconds)
    (46/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.435204533 seconds)
    (47/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.476893438 seconds)
    (48/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.511605186 seconds)
    (49/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.547669411 seconds)
    (50/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.493201671 seconds)
    (51/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.493596029 seconds)
    (52/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.701028414 seconds)
    (53/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.48158078 seconds)
    (54/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.61758475 seconds)
    (55/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.368388711 seconds)
    (56/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.42197576 seconds)
    (57/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.590495478 seconds)
    (58/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.163748683 seconds)
    (59/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.437750597 seconds)
    (60/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.506231335 seconds)
    (61/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.396572035 seconds)
    (62/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.531728066 seconds)
    (63/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.477630854 seconds)
    (64/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.562124229 seconds)
    (65/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.599126411 seconds)
    (66/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.47954174 seconds)
    (67/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.444977655 seconds)
    (68/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.433556454 seconds)
    (69/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.389472442 seconds)
    (70/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.528114689 seconds)
    (71/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.490636388 seconds)
    (72/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.399563298 seconds)
    (73/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.507260956 seconds)
    (74/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.031031119 seconds)
    (75/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.533945594 seconds)
    (76/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.42618663 seconds)
    (77/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.12321181 seconds)
    (78/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.372882262 seconds)
    (79/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.482876887 seconds)
    (80/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.375409279 seconds)
    (81/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.200056997 seconds)
    (82/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.454148126 seconds)
    (83/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.413353834 seconds)
    (84/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.555691632 seconds)
    (85/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.416608239 seconds)
    (86/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.08865187 seconds)
    (87/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.597663995 seconds)
    (88/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.59222535 seconds)
    (89/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.149158395 seconds)
    (90/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.389125287 seconds)
    (91/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.501026556 seconds)
    (92/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.390221647 seconds)
    (93/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.421878417 seconds)
    (94/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.476145113 seconds)
    (95/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.503211945 seconds)
    (96/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.473711756 seconds)
    (97/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.525338684 seconds)
    (98/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.48564807 seconds)
    (99/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.471426042 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.472895291 seconds)
    (101/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.483958567 seconds)
    (102/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.176609444 seconds)
    (103/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.403193108 seconds)
    (104/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.549185553 seconds)
    (105/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.40057878 seconds)
    (106/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.038071828 seconds)
    (107/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.524654858 seconds)
    (108/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.758052531 seconds)
    (109/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.448588274 seconds)
    (110/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.032046041 seconds)
    (111/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.412528428 seconds)
    (112/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.466079042 seconds)
    (113/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.512810045 seconds)
    (114/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.414227308 seconds)
    (115/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.574525359 seconds)
    (116/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.376568235 seconds)
    (117/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.37059108 seconds)
    (118/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.590677502 seconds)
    (119/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.496293408 seconds)
    (120/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.420747944 seconds)
    (121/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.380053733 seconds)
    (122/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.415417225 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.601366571 seconds)
    (124/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.379421453 seconds)
    (125/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.102347361 seconds)
    (126/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.415284287 seconds)
    (127/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.446617575 seconds)
    (128/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.522970198 seconds)
    (129/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.463893263 seconds)
    (130/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.383773563 seconds)
    (131/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.150899719 seconds)
    (132/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.483093532 seconds)
    (133/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.533069294 seconds)
    (134/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.43815412 seconds)
    (135/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.598437715 seconds)
    (136/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.56249602 seconds)
    (137/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.487998896 seconds)
    (138/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.434783702 seconds)
    (139/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.398093669 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.469782523 seconds)
    (141/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.40635636 seconds)
    (142/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.079264822 seconds)
    (143/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.601638619 seconds)
    (144/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.472573992 seconds)
    (145/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.41794557 seconds)
    (146/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.397184561 seconds)
    (147/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.479250585 seconds)
    (148/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.47570032 seconds)
    (149/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.403489986 seconds)
    (150/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.456026114 seconds)
    (151/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.532002995 seconds)
    (152/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.50532787 seconds)
    (153/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.458200166 seconds)
    (154/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.156563866 seconds)
    (155/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.618571479 seconds)
    (156/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.597661807 seconds)
    (157/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.432806188 seconds)
    (158/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.459344436 seconds)
    (159/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.572946183 seconds)
    (160/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.448816657 seconds)
    (161/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.419457111 seconds)
    (162/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.472736419 seconds)
    (163/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.53248884 seconds)
    (164/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.548243574 seconds)
    (165/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.449454333 seconds)
    (166/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.760851849 seconds)
    (167/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.519047399 seconds)
    (168/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.432442561 seconds)
    (169/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.494377069 seconds)
    (170/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.60721156 seconds)
    (171/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.075657179 seconds)
    (172/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.104932676 seconds)
    (173/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.467903519 seconds)
    (174/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.390333303 seconds)
    (175/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.373874184 seconds)
    (176/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.492402498 seconds)
    (177/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.454554733 seconds)
    (178/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.468594979 seconds)
    (179/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.534399134 seconds)
    (180/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.462480798 seconds)
    (181/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.518147723 seconds)
    (182/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.373440561 seconds)
    (183/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.505963024 seconds)
    (184/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.551031776 seconds)
    (185/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.442245999 seconds)
    (186/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.515961586 seconds)
    (187/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.463886191 seconds)
    (188/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.42428515 seconds)
    (189/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.283029258 seconds)
    (190/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.445099205 seconds)
    (191/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.489640743 seconds)
    (192/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.402251127 seconds)
    (193/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.390518264 seconds)
    (194/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.57496446 seconds)
    (195/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.4067814 seconds)
    (196/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.438632902 seconds)
    (197/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.665927464 seconds)
    (198/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.57860107 seconds)
    (199/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.404720481 seconds)
    (200/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.438083661 seconds)
    (201/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.414628465 seconds)
    (202/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.412237432 seconds)
    (203/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.593799871 seconds)
    (204/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.516346326 seconds)
    (205/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.207632691 seconds)
    (206/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.404260632 seconds)
    (207/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.552883562 seconds)
    (208/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.605493405 seconds)
    (209/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.37580139 seconds)
    (210/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.738562245 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.611612278 seconds)
    (212/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.416163027 seconds)
    (213/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.419335077 seconds)
    (214/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.516042048 seconds)
    (215/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.47715838 seconds)
    (216/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.435034303 seconds)
    (217/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.330615537 seconds)
    (218/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.221096792 seconds)
    (219/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.496472271 seconds)
    (220/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.442199408 seconds)
    (221/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.105178117 seconds)
    (222/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.533506654 seconds)
    (223/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.627177259 seconds)
    (224/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.382671926 seconds)
  done (took 384.350894427 seconds)
done (took 385.642255453 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.439613375 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.574164204 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.392510997 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.393103037 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.43522067 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.395703201 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.436084559 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.399957601 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.402998611 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.403615238 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.394103739 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.406024209 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.403706725 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.434494798 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.507077833 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.401675229 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.393626264 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.40108138 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.442882278 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.461506725 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.437632022 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.436593629 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.414356731 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.39241186 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.440197287 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.442730445 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.399333295 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.390652132 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.402639676 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.441171488 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.38378286 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.416495269 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.451322894 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.451952452 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.436765437 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.403985726 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.43837979 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.574588983 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.43755372 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.437214591 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.40633155 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.453104413 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.404303647 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.404416824 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.451922887 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.415974683 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.441879382 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.517527262 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.398504627 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.384831692 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.442375489 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.461875997 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.409351782 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.385082964 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.39272205 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.517687592 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.402871071 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.442182723 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.404161214 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.439221351 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.506234226 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.443114572 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.462269548 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.440493506 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.404062341 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.407282542 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.401724749 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.462042918 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.403373292 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.439141673 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.438607423 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.408048376 seconds)
done (took 112.24858821 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.518362698 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.39220415 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.532070718 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.399181316 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.557594504 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.541099462 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.39875559 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.399858533 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.398889342 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.201105635 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.400392304 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.399197258 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.395775917 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.399542868 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.520234012 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.398926164 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.400194299 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.113233296 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.401857101 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.535973825 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.3936821 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.400042563 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.400364245 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.187174212 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.394455512 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.390985055 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.535176389 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.400193634 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.088549086 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.388931131 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.391586615 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.088347351 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.536143294 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.419056196 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.410135706 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.410297748 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.55896571 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.423612055 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.516708804 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.516704421 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.531797825 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.438183002 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.390285991 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.395617372 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.402529644 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.401555053 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.401227928 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.429847534 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.395632296 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.401163846 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.101673226 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.410740375 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.402001378 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.402823979 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.400544214 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.431061037 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.402759968 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.403468795 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.536370995 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.403912522 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.520935738 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.189515703 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.209003897 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.401339135 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.394694663 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.403983219 seconds)
  done (took 112.666981439 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.463943986 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.474431681 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.512204322 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.416520471 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.449723539 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.52102692 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.4167291 seconds)
  done (took 11.562899228 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.404822635 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.402672468 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.446729324 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.456171728 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.403983004 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.55631618 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404027369 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.411264832 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.404270785 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.452165916 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.403735345 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.403515636 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.41249903 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.396020026 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.446064347 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.408935333 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.512856496 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.398330997 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.401872045 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.553981205 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.402563787 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.413435867 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.452405082 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.409779932 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.40417601 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.407093137 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.168631412 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.403561667 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.404052801 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.404349319 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.403718366 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.45211063 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.404246277 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.397607467 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.404073655 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.51643391 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.403908982 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.404618201 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.40617569 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.390019949 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.405357398 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.405137081 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.405558156 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.405403313 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.404434393 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.42444158 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.403793819 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.404950854 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.405463888 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.405755426 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.451093746 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.405314194 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.405080596 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.404577339 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.457095817 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.413823648 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.404344952 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.404897562 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.40601792 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.405610614 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.556891902 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.458006015 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.406147663 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.44809767 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.405712697 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.406722056 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.405120258 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.405478658 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.491864413 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.405765764 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.450786774 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.407222419 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.585709391 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.427185385 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.407829468 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.405669793 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.403708423 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.406580351 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.400029014 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.409912128 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.407762473 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.403296308 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.409282422 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.407914535 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.406516189 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.558928138 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.512635382 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.407000169 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.415131733 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.411681104 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.409205735 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.456483534 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.405333459 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.407518118 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.453692219 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.517188018 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.457132005 seconds)
  done (took 144.414572401 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.414764316 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.416665541 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.407589678 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.431259547 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.404821854 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.405264918 seconds)
  done (took 9.792526729 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.405504359 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.412150977 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.407441078 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.407737988 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.409346317 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.409002673 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.410097513 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.40678533 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.413266801 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.409158399 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.410002933 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.410227298 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.410283747 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.408896021 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.409120059 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.408700738 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.409719019 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.40883908 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.408610289 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.410483969 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.403129717 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.409238354 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.40911119 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.407826525 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.414014943 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.409066212 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.42477358 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.409792716 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.407542173 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.411691264 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.432047665 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.408558245 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.40760784 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.409954031 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.414255395 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.408471129 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.413933379 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.411909115 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.410148306 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.410147867 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.412802521 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.411233758 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.410093589 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.411742253 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.409798854 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.411975584 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.416299686 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.428302398 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.410907723 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.413393833 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.414151307 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.411447692 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.410177663 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.414343565 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.410402122 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.428792108 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.417590397 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.411364203 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.412505501 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.409275729 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.414576026 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.411222359 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.410579473 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.414869424 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.412524312 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.41362117 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.409749909 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.415786927 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.41349139 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.412539536 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.413849167 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.413427949 seconds)
  done (took 103.966965785 seconds)
done (took 383.708809705 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.436746579 seconds)
  done (took 3.75367459 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.511047678 seconds)
  done (took 3.829238065 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.8424314 seconds)
  done (took 25.164166295 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.458726376 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.508170616 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.444161803 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.402528645 seconds)
  done (took 11.133914633 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.804746835 seconds)
  done (took 4.120939652 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.419685493 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.411651348 seconds)
  done (took 6.153449412 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.767069466 seconds)
  done (took 4.084872004 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.982889601 seconds)
  done (took 4.306073183 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.43426162 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.420889022 seconds)
  done (took 6.182158179 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.409174623 seconds)
  done (took 3.727584464 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 38.226176728 seconds)
  done (took 39.545041005 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.424001466 seconds)
  done (took 3.743859347 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.440470537 seconds)
  done (took 3.758556351 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.297845692 seconds)
  done (took 6.614520981 seconds)
done (took 127.435334074 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.403246156 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.404272293 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.405051618 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.405062662 seconds)
  done (took 10.936316051 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.467263924 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.466961451 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.468107089 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.466622053 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.467139183 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.467818832 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.440435449 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.441769813 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.466487265 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.46794691 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.466949213 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.467587103 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.467351606 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.441384473 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.467458477 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.467536458 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.468975178 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.468495145 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.441961966 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.467261001 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.416433078 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.467227664 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.46786436 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.416911017 seconds)
  done (took 36.332980512 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.905777884 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.481484798 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.565562322 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.462941245 seconds)
  done (took 7.735478913 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.493026974 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.494297241 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.505749617 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.54605144 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.558034189 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.507200001 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.442727189 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.439089464 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.424055107 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.495079881 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.544071706 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.485622668 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.571028001 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.41873555 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.623930264 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.416890849 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.416568759 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.493439283 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.547289694 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.559465047 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.417892342 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.495684816 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.494082924 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.486339188 seconds)
  done (took 37.198962976 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.428650916 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.432626111 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.418516505 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.433488891 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.420282717 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.420364641 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.421182129 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.425053337 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.418672624 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.41891495 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.418673177 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.43306934 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.422662916 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.420245639 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.427613906 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.421961886 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.426170384 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.423863342 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.42065626 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.426059317 seconds)
  done (took 29.800592369 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.407974171 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.40673199 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.759538121 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.663296362 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.408602484 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.408428473 seconds)
  done (took 14.376907557 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.491891699 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.662211364 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.414217317 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.799143404 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.879946032 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.417228295 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.416365688 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.690651618 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.042038478 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.006010103 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.484813957 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.497407999 seconds)
  done (took 21.126249851 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.420826051 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.412720401 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.421285851 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.430573436 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.474896651 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.438896184 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.421794454 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.408357877 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.478556636 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.500841787 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.443776046 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.477135492 seconds)
  done (took 22.659412124 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509723232 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.414926275 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.423243691 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48596981 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417404567 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.265242745 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.470059467 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.143832973 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.440789218 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69103768 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41466095 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531885471 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.670355437 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423734177 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420131097 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.400861695 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.649630423 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967669726 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422320206 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416413702 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454724168 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.432125332 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.422010251 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647914941 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.418561122 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414883524 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.68122432 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.417858156 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726158249 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.435058716 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42645731 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418476291 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694245586 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094148883 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53541984 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.640055123 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427883619 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.417796585 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.40827905 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.440253633 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435933571 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419128787 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428832689 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418201249 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417466294 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431266139 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153273742 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.446240916 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.41772996 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417240684 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701938873 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519247648 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.424551615 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.418300377 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504181083 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423381772 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.424640887 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551054481 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022289788 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429568999 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439532427 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.424809274 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.435536032 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427547836 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079650339 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.432152827 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.425748583 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425126481 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418290018 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421654221 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443466118 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418660679 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.445291849 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418513702 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177001138 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.430409929 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425483353 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0344758 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437951033 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.425439495 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652384402 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419324006 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41961225 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.419031901 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420004156 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207038011 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434529672 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.405127286 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471229381 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.167527633 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666318427 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442411239 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451542172 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.642943779 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.407640752 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421864306 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.430328497 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429032523 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442579031 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.150799281 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440512314 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.427536302 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677949385 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.631595735 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420935803 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.412935643 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918949999 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453259091 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.44556263 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422714529 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.670920348 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.038025837 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.443505476 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428448636 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442593429 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420339188 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249418973 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440176278 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.530229277 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.433707268 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713112525 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.293441515 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427957279 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491076081 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424772572 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421748423 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429676218 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430287394 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422866378 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.63843459 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.443038461 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.440322787 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.421624222 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421608108 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.436735588 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423418168 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.428327153 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.645821278 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433281262 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707639933 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422248793 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422632488 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423139148 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.644563482 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.426976811 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.766086684 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686556685 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421491517 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.448646079 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.461782491 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443706074 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528694861 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445615053 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.423679886 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.686748721 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.428812008 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.431006897 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43542569 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.431048055 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428051642 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.433379794 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422445596 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065555782 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408402241 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.434349707 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.315755929 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.441896145 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491834334 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.432308531 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650477551 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.428980555 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430974658 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.438614423 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.425441299 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649687816 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.433815526 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.430159725 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507898207 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.913529872 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063420262 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445328859 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.428034136 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.425719264 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.424381704 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424262786 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425024604 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.424385342 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.649642196 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.439393299 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.437016083 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054675679 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431938361 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.437197098 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.440099953 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437596331 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.435102531 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426093126 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.425884231 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437737787 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433564717 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.444017456 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571825787 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.44405911 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.425729079 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.94674359 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435933168 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.427185482 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42695806 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462456855 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.434507328 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255523159 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691044893 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423175027 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736769748 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.441702831 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.45184638 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.425695666 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435684455 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433612446 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.444030454 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44245257 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.438343047 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.434419989 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434718279 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003961231 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205267591 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007843547 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.446976242 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.429954603 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.433596724 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.162028168 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447885078 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428090755 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683964188 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162965222 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448260352 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921258133 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.45706234 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.256659336 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.716376231 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.666219128 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439894792 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.444802241 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715487515 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646333635 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462462755 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.430871178 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434772437 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.414098004 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000787512 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457691267 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.512386765 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163600765 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465400519 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.4298983 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.425527891 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.437841478 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861695864 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.451023386 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430813763 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.433965377 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.435260973 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25320663 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438224975 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430903584 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076550858 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.433427602 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.947932805 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454006478 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657586305 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.44313147 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.436105331 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.430121317 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.441130552 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.688971283 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.718060516 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439981383 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.448709056 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015010993 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.306868722 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.439453485 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431239044 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259546934 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437127235 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.769899575 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.442192329 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.436864202 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429911275 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.432133167 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430506204 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.431940336 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.438076708 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407264839 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984327892 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.433694439 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439066625 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440932554 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438650589 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.68641787 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.450285858 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.052491279 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668566558 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431496733 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480602607 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.439218155 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43483537 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.421712037 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432659824 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.433028991 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430573292 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.662610706 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453072222 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.424682962 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493709866 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.649644031 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.433524452 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.443630965 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688699119 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.435398154 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.450032476 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21766802 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472181647 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.450655958 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436580016 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.442539257 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475861366 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505956472 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661911015 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.444226603 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.443829079 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859350289 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45420765 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454461541 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.450888038 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529929468 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43338176 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.462541861 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.211534462 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059019373 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216621039 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.066167557 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.729291766 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.441290056 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444276805 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435472243 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599139839 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.433993119 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712292026 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434288927 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.449832337 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459119401 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45271051 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441885857 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651602201 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712963638 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432861801 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43744333 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442855042 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.43457797 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448880906 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.6463201 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992402972 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06101448 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443472075 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.442224725 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.176658743 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733974322 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439004619 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43816384 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438006949 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.455395093 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.441231191 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.444063701 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434354524 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581607734 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720290226 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122872521 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.46644279 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.467339295 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.957734386 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446076987 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.697312869 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437368576 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.684124937 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06055702 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.191807656 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.709057282 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508195207 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663745915 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.44032253 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600187037 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.45141613 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.445817116 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439823217 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437566688 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.438411108 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.449244575 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069212076 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.710013644 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.443900181 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.453734995 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475110054 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.944391247 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.662799431 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236638395 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.668015671 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.45342288 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.44710973 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.443618926 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069350013 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.732728976 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445714929 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.44942678 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695103683 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.439988924 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465961046 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.960415258 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.438468881 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060400962 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.416330773 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462867702 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447134348 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.198419098 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077040642 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.452639087 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995135852 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.446446397 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44328366 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720284968 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.447761182 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.440366948 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724571339 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.444461589 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.440246033 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673097597 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.06377225 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.279077423 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.46636337 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456215421 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.442730018 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439612127 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518913041 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444860292 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.440725922 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.876227993 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.464359353 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440170823 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453444924 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.450726473 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446182894 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.445729565 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443035634 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.450330394 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.443007573 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.454778129 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.447929366 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580206462 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018095521 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46418785 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.117906504 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.765810075 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.695429487 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.443545853 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.432299625 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.44890339 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442863174 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442512608 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440472788 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.440561339 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067241476 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.454296649 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.456055612 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.449129301 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.441080071 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652846016 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.445797822 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675987965 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444956399 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466286436 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.425644475 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443007147 seconds)
  done (took 1007.387586744 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.471336481 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.459751136 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.436996901 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.513739079 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.467990322 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.479974399 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.482219859 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.493215679 seconds)
  done (took 21.153916757 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.446697951 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.447106579 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.446725246 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.447436325 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.4519252 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.963251845 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.463226979 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.44682012 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.4631439 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.44749242 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.444650534 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.430592653 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.449448819 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.442536253 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.440122375 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.44821375 seconds)
  done (took 34.026459786 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.556749217 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.650855966 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.620547676 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.461068604 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.443150487 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.445027165 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.741645069 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.455019105 seconds)
  done (took 27.723758466 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.447666168 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.446251055 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.448492167 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.447397559 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.449287395 seconds)
  done (took 8.587467053 seconds)
done (took 1280.368592032 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.450259906 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.448168104 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.448079973 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.447278997 seconds)
  done (took 7.140759899 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.428236694 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.428174507 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.42930755 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.446728511 seconds)
  done (took 10.080888805 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.217747955 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.14059366 seconds)
  done (took 5.705075931 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.962101054 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.967681421 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.961408389 seconds)
  done (took 7.242832477 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.739565511 seconds)
  done (took 3.093255976 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.386568642 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.446571796 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.133780438 seconds)
  done (took 8.320723243 seconds)
done (took 42.930245277 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.447176801 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.682926901 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.592545172 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.44238341 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.599165694 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.591179814 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.177388069 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.439752689 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.448798673 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.446115757 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.444429152 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.601740154 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.224501307 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.683169562 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.225922131 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.776830072 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.627173156 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.443569751 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.437504495 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.433394918 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.173320349 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.441443675 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.437188503 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.43881956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.594621505 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.5780258 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.434336174 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.777376409 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.434038205 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.433902083 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.580219496 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.433041307 seconds)
  done (took 84.876184133 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.433650745 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.452511408 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.465828499 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.432326241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.451857168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.445852072 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.435044562 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.438721531 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.436560694 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.433585757 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.433606254 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.450883489 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.434337468 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.43323073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.434666093 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.433332647 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.432076547 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.432132514 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.450892011 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.438345647 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.435379517 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.431492536 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.456393 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.44504992 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.443678696 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.432861824 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.468392952 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.447246302 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.43274029 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.446917676 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.433331863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.451200483 seconds)
  done (took 79.470469054 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.434467146 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.433223949 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.434012196 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.43352307 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.432885737 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.433775024 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.43323276 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.432834586 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.438411854 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.437047356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.434168841 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.434587412 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.43648219 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.434115332 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.43792377 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.435847364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.434508264 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.435329247 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.434797687 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.456508678 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.435852209 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.435370175 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.435680445 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.434414626 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.436031515 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.434799492 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.440578809 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.434701711 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.43420665 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.444800001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.435660533 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.44834525 seconds)
  done (took 79.313810164 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.717410282 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.446467765 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.449478607 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.441143662 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.450774179 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.446269847 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.440939746 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.725285698 seconds)
  done (took 15.463663483 seconds)
done (took 260.477028352 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.440012542 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.999690567 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.489999851 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.456085779 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.467929677 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.468537133 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.672080865 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.486120794 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.670750954 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.463194971 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.463223577 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.439586032 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.288951993 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.601382751 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.32042375 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.441405441 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.354511745 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.443053289 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.057489687 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.735521129 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.46726437 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.437530385 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.331731622 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.389414659 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.443829227 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.532714 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.545747045 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.671505261 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.605261025 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.526155648 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.985080878 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.448057913 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.446176979 seconds)
  done (took 66.93730035 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.445903325 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.572367453 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.448642767 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.448832656 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.576067805 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.468966564 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.443439116 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.449121942 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.450607237 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.449543654 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.449966232 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.45047427 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.451034359 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.500560729 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.591843303 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.46539489 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.44439276 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.566628339 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.443079789 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.446091101 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.497820579 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.450071746 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.451018232 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.501641564 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.448786337 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.451216079 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.571581228 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.472776888 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.452835274 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.572493716 seconds)
  done (took 45.78520804 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.451852657 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.066759857 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.240150495 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.459372616 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.446408566 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.452081779 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.742933806 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.456892978 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.449720038 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.449073032 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.965441849 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.457793641 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.480159504 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.261092755 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.456453402 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.452317405 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.453237522 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.448436389 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.075474755 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.463057302 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.764795687 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.458680489 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.742379237 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.46391476 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.471552575 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.448031983 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.454388046 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.307006184 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.477121127 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.972495805 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.256833657 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.744837174 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.246367215 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.26592605 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.261884155 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.459353509 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.453847644 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.971505107 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.457884168 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.448572655 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.741385607 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.449771272 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.243892701 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.177869715 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.474328473 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.453363441 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.316594934 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.990126788 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.698746552 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.457179555 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.264007869 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.452071402 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.455752659 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.449905475 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.699223154 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.452661196 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.451167869 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.342666719 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.477929673 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.74548243 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.458467393 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.450518299 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.071935961 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.456460937 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.067095521 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.457811167 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.457316092 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.471315864 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.242923991 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.455289518 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.192200702 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.47006964 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.455439899 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.971421078 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.079422934 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.381556643 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.452382687 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.083850453 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.271665988 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.762342741 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.46213343 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.271910959 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.768493862 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.459566926 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.459266568 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.457488777 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.456529514 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.532824717 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.741708794 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.126785388 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.188019241 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.371961264 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.773301106 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.465061075 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.451711814 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.343791434 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.4784442 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.456204158 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.238672572 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.19265249 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.47589841 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.460099277 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.20264753 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.480458324 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.749124023 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.462554993 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.250159297 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.458500477 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.552885533 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.458855889 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.460287334 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.47923279 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.750272739 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.461148743 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.458246077 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.17680502 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.009508069 seconds)
  done (took 203.758785361 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.446615554 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.448059087 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.446602612 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.446382798 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.443777852 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.45554508 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.446625188 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.445207726 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.451569391 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.445701042 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.444685259 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.456906876 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.453319887 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.447586781 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.448146371 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.446376488 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.447499311 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.452712673 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.447233333 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.446384958 seconds)
  done (took 46.326639287 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.457915467 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.036185833 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.003316392 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.463868865 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.458334329 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.453671134 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.511459721 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.460371986 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.459130994 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.763359681 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.63455353 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.485054531 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.458548915 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.45732935 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.997036772 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.457093403 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.758944679 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.024691426 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.460272866 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.028230827 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.452231966 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.459393458 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.454801364 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.025141794 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.769536636 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.747690558 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.52117268 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.034102064 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.466447558 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.458845815 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.033235437 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.464675672 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.454259713 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.0398833 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.4831559 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.475088012 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.459830805 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.514611669 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.517917051 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.768859257 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.120728447 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.761622979 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.476301288 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.637145998 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.466538639 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.450179871 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.046897894 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.485084598 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.450353244 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.461370105 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.466839086 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.009107061 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.481304372 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.011293202 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.484342583 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.462175395 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.039810189 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.014544701 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.024638203 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.637574476 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.4799255 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.750387464 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.465986868 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.046379403 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.483248266 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.461214622 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.460118716 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.633533279 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.057550024 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.752432243 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.768697861 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.767030915 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.46523589 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.523153282 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.480680824 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.839134162 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.525817908 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.869470996 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.772792993 seconds)
  done (took 132.380957794 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.736343308 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.578861107 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.87686089 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.08441919 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.462730182 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.595304086 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.574361379 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.721088009 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.472281178 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.539513787 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.11319489 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.577213875 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.226451342 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.552242801 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.563594475 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.60568844 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.865872308 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.452626207 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.175859982 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.095794926 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.457798777 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.583889844 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.018159265 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.680878021 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.474624426 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.051492414 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.443012661 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.159600884 seconds)
  done (took 56.101106786 seconds)
done (took 552.636022061 seconds)
SAVING RESULT...
DONE!
