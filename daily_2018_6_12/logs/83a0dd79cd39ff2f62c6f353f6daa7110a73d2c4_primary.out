cset: moving following pidspec: 13084
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.070191231 seconds)
loading group "string"... done (took 0.609820597 seconds)
loading group "linalg"... done (took 9.741206412 seconds)
loading group "parallel"... done (took 0.185592269 seconds)
loading group "find"... done (took 1.550031964 seconds)
loading group "tuple"... done (took 2.22596406 seconds)
loading group "dates"... done (took 1.542599138 seconds)
loading group "micro"... done (took 0.24106388 seconds)
loading group "io"... done (took 0.589402011 seconds)
loading group "scalar"... done (took 46.993805825 seconds)
loading group "sparse"... done (took 14.381783441 seconds)
loading group "broadcast"... done (took 1.277819766 seconds)
loading group "union"... done (took 13.054795316 seconds)
loading group "simd"... done (took 2.739948978 seconds)
loading group "random"... done (took 11.095600578 seconds)
loading group "problem"... done (took 1840.313837677 seconds)
loading group "array"... done (took 27.935789619 seconds)
loading group "misc"... done (took 1.215864509 seconds)
loading group "sort"... done (took 4.026128934 seconds)
loading group "collection"... done (took 20.341420621 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.760988741 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141899137 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.219290184 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.375155942 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.243338542 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.151133338 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.170278282 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.601671221 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.006032937 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.273354321 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154764147 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.606402226 seconds)
done (took 6.412550727 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.309460027 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.391650615 seconds)
    (2/2) benchmarking "String"...
    done (took 0.181068518 seconds)
  done (took 1.23393531 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.074142934 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.185940568 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110887512 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.098190405 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.117131555 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.114602281 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.114892182 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.115488386 seconds)
  done (took 1.514275588 seconds)
done (took 3.794993134 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.563180671 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.976295388 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.616945202 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.17387437 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.209360057 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.185597262 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.328531828 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.163523745 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.121896319 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.109113494 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.224841917 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.425597913 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.512233756 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.109312067 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.106570282 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.11195929 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.097643165 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.767123052 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.08128787 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.135988155 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.610691556 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.117014012 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.119786522 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124311463 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.217098104 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135216929 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.158773421 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.110295113 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.741171229 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101500951 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.236595488 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082828804 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.178949773 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.257742945 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.081513292 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109192802 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.741636068 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.181084329 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.117272563 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102985336 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.750455176 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081382019 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.252985265 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104697337 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.097275765 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.203862262 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.120354283 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.105956867 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.084457494 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.099793543 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.174431613 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.533589042 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107719548 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.176076635 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110149992 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.772216087 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098566362 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.161492877 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.140149352 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.111518047 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.083247642 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.114087477 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.18280441 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.117426242 seconds)
  done (took 21.089440622 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.161835266 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.169422841 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092076669 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140679611 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143212505 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094633961 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082261732 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095377243 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.131628166 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.239789632 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.142376601 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.17376965 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090253337 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084078789 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.144427812 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25269597 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124916418 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123057383 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083974395 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106372099 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141646928 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.0953431 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109851447 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.11094349 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171003209 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206450927 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107546191 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122151025 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099170658 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115994123 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139775683 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146943745 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09042038 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082877717 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188310954 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121329681 seconds)
  done (took 5.400111585 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.230893638 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.117449298 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.243036546 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.18009206 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.149548101 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184311593 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144438752 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.309539141 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.236458377 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.200867483 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178755216 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112904671 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111919446 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092424306 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078390109 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.093069765 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.735087931 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.185765286 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15289196 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.151312422 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104067238 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097447558 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.737118603 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086898893 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.09900084 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086345567 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.094872107 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.225056712 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085332917 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.386620034 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118943745 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108384701 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129801935 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194407815 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08384998 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.134873902 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145632046 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102351717 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080425433 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.243424018 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10731653 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077371106 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.128248519 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131160395 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119945926 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102028153 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.113664089 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.247648474 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084042674 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120929761 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.177145024 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.217427604 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.123291764 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101090246 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.379320627 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.120572015 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106659707 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082563528 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.34486841 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137769824 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.10112888 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078356842 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105169047 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095566082 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.795032152 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112518221 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.325101205 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081811971 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.16576726 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099897881 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10571532 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102275375 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084667457 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118296857 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077301546 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.100120351 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095256835 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081978499 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096566852 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086086669 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.122312333 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100986918 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078351585 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161391699 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.122225934 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098039726 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125167526 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099959337 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077001114 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130102745 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096402336 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081689764 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.19511353 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081965753 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108582467 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.121231049 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098444443 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126547525 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.101255608 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.239864779 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08180065 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128194773 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100113828 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127346137 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109124075 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10039849 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100489778 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077480896 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.099192735 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148429016 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095278638 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077526553 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100066554 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11194697 seconds)
  done (took 25.820458334 seconds)
done (took 52.964268227 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.522812619 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.122930895 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.1225551 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.122164259 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.119191835 seconds)
  done (took 1.747953222 seconds)
done (took 2.45521463 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.389491164 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.188810451 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121899218 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188218437 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.106743154 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193371269 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.19409417 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102257419 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.225230845 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.100042065 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.18636483 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099036615 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090211857 seconds)
  done (took 2.923392331 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098287169 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.124281674 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084214583 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115547375 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077242363 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116714122 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115019865 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12221494 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112709856 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090287811 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097705427 seconds)
  done (took 1.862245458 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094593512 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118955508 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084470184 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112016101 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077449099 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111295192 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092287084 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12281216 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110042535 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091302812 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095555389 seconds)
  done (took 1.817892383 seconds)
done (took 7.303073304 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.247166445 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.695719926 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.154863913 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.207413036 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.387438397 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.258128381 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.65822388 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.191697221 seconds)
  done (took 13.726094759 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.178988895 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083198841 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102951817 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103029594 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085995799 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.10307377 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.085441451 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100656176 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085520673 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100634335 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085331481 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.099975286 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099526759 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084550193 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101621348 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085749739 seconds)
  done (took 2.365282999 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.124149138 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122497685 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10889716 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.114264739 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089978013 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106583737 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109971719 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09363589 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.104703058 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106249247 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09762898 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.111883619 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.110629205 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.088138084 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107836198 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.114327966 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089036465 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109042703 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108230492 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.096427987 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.114789704 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.092910594 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113797132 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.115108566 seconds)
  done (took 3.374939949 seconds)
done (took 20.174953643 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.184056798 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099935859 seconds)
  done (took 0.998689645 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.15435619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.155886377 seconds)
  done (took 1.031078317 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.116007283 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097673739 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.145484772 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.12045814 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.100307868 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084094112 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.138313445 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099756234 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083820384 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.100280085 seconds)
  done (took 1.810118213 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089820175 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10421142 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.098394639 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.166251171 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.098412136 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.103735047 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.105259043 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.089177115 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105891509 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.086169512 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108518134 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.126533917 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.107045105 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.111357457 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105416245 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.110594754 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.098817922 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.107917004 seconds)
  done (took 2.646023437 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083350545 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100778661 seconds)
  done (took 0.909196351 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089502765 seconds)
    (2/7) benchmarking "second"...
    done (took 0.101016151 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089562067 seconds)
    (4/7) benchmarking "year"...
    done (took 0.104278707 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.100149212 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.085255595 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.101658047 seconds)
  done (took 1.394529561 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.558363241 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.281367606 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.383975516 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.12356266 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.268453374 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.404967211 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.146444134 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.117112425 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.117278788 seconds)
  done (took 3.168623671 seconds)
done (took 12.677532388 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090420759 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.241308966 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.612630223 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.123825591 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.082746437 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.158143495 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.321140647 seconds)
done (took 2.358149063 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.368652284 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.161353217 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.092314178 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097893632 seconds)
  done (took 1.444591307 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078122706 seconds)
    (2/2) benchmarking "read"...
    done (took 0.106811067 seconds)
  done (took 0.913343543 seconds)
done (took 3.094922494 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080723526 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.095646457 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.118010442 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.098692941 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080115525 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097905891 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.080819627 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.097903099 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08120604 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096725001 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.080776547 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.097174467 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080729688 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098326514 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080552899 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097817214 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08092267 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096309128 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080500295 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097961706 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081730479 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097894584 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08035235 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096619306 seconds)
  done (took 2.942912461 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.108184018 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.102412611 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104765762 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090258587 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.107332197 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10456382 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08996903 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.10130328 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089092969 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101392194 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106283839 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.089289614 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10045568 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.105611544 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085204048 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.106867066 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088851402 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101221321 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099625459 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091415052 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10533489 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101699511 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.089794472 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106697961 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105864611 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090659017 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.102711288 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086024571 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105173615 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.106573629 seconds)
  done (took 3.709434114 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.092145199 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094084183 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083232538 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.107173433 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078661597 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099044079 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079383681 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096342887 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083380222 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098398506 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083779771 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09882217 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079251436 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100652479 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.085448489 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101506492 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108612508 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079324895 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094771117 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.084497823 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101562078 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078938567 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098533038 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081884195 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098649397 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079460409 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098339565 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081815049 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099231104 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081094482 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099922909 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086610848 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097971312 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.093200146 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100247626 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.082090648 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.106010336 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09480633 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.084073871 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095201628 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079096395 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097737191 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079292948 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104682711 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.083861137 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098394195 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080214575 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100726683 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.083302842 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.103337484 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079147565 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096759965 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.085523037 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.102239975 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.086974754 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095952705 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08394852 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.094404491 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084409863 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.099008054 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.0787204 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.095000387 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.104438738 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.083281656 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114277776 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089995005 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095718062 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.086925569 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100163717 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.087918687 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.103534702 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107966445 seconds)
  done (took 7.373524351 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098880528 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111989434 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084185223 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102055236 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083163216 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100204079 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107396089 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083716548 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100615625 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092135155 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099061429 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084688419 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101504746 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101053468 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084638527 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102370551 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093449693 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099948794 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08232376 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101344641 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082727626 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107139734 seconds)
  done (took 2.844940569 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.268633974 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090960409 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.154343458 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11914316 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.125138277 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.117836094 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.08886547 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106870329 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087305723 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110689946 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111878291 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088657232 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.12311433 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112470771 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111571051 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095333273 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1040427 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.113461282 seconds)
  done (took 2.87442043 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102835734 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.104932459 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127444261 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.086968741 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.102952977 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086481844 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11271836 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120629944 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085850792 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.103523396 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.114178984 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086754935 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.1042845 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086169782 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102602671 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10275194 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.086197622 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104105924 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097813926 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112497552 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113189267 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113973142 seconds)
  done (took 3.002352999 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104627508 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103059327 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.142077279 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091009474 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.102123369 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.084333577 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109009774 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.103817364 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094072647 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103267413 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086865619 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101152014 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.112064314 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.08765783 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.111464989 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086756824 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102515558 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105717321 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086150051 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101341378 seconds)
  done (took 2.763664939 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.184523055 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101139862 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118915114 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133562968 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11791723 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101903188 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134200872 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11881374 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103036341 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134752928 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.118590408 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102576182 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132283462 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128207665 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118536701 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115982452 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132623924 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133005467 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120518787 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101449128 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137845731 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120167756 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135148195 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101892741 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118469037 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118628107 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101671354 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.126817213 seconds)
  done (took 4.160917223 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083112184 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098514646 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082808015 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098473161 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.083748784 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099207511 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.083394011 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098248858 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082534173 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100053566 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083214677 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099788768 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082724217 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099012554 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082165782 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099536201 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083338418 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099351463 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083045101 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098541434 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082881329 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100031588 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082794345 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.099245254 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08366213 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099809713 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082724043 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099047922 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083432114 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099768421 seconds)
  done (took 3.483813056 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097212408 seconds)
    (2/2) benchmarking "in"...
    done (took 0.12806042 seconds)
  done (took 0.974389586 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.093659669 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122569942 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08241799 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10256122 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.113808219 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084675712 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115329027 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111415843 seconds)
  done (took 1.579058924 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.1555018 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.155453825 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.091263048 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115363115 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.154641115 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.147118204 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.151658365 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090645388 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105374591 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080975062 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.150572888 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.099583836 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107814577 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085935234 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106693363 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095662851 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.10160495 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.111954439 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.09314197 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.104387096 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090649568 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115163893 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110186639 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095818467 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10051942 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092174951 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112050895 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.116225566 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085989052 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111029132 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086952358 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.10256011 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08790478 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.107596698 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.10451819 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.153231474 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098723226 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104940235 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.089123157 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108306562 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111769942 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.085048679 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.109621891 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.086711201 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111014591 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.108484127 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090857624 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.102389956 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081381516 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.101666692 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.084680833 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101186056 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.085244066 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108997381 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.107250795 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097751167 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.104884668 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103513569 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085987631 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101051412 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088874401 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102810057 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090811354 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.105947414 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10860962 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089729981 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10749262 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.085581221 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.104901464 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.086038725 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107742748 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12633634 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091304469 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.108981428 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109564714 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.086955651 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104486076 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091439746 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106746269 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109058949 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.090481869 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111159432 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091931928 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104125329 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084606307 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110133686 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.104836606 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087478533 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099388428 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101235622 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.10499934 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.084946841 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099367965 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.105251226 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086025335 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.106510737 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081508978 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108742595 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.085008915 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.108433593 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09129918 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105806843 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.110588138 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09077541 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109634766 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.088798998 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.147644658 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104930348 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102716814 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.087859574 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110805568 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087034009 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110707901 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.083363266 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105444458 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083998937 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.108047334 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108492847 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087270084 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10912967 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092591124 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110545687 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.104852239 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.085152831 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104449376 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088889485 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114141383 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092243187 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.106208818 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.104547039 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.087383657 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108599968 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.091182248 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106003463 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090379641 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104969276 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.084715494 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.103564303 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.109625208 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092047379 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.103744756 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087978185 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108520779 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.107486845 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087798417 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10968491 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084960845 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100339256 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108651242 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085506447 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.104063548 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096573922 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103666853 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.088826621 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104120634 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115585755 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08598805 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.11112675 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08797965 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108967688 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092501223 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099584416 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104707368 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.087246448 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11346833 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08552098 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.104506834 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.084937038 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110547721 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081665514 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10775594 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099008463 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086684974 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.119363079 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.087870288 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.10816182 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084668293 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123080266 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119601561 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09241631 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109371872 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08925586 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.108066361 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107642289 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.089153108 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110878444 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.092306814 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.105303895 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107168108 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091449337 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10378651 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.090055322 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107870595 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093155161 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100445586 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.086409615 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099813478 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10864517 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093352298 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.109010555 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.091008482 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106228611 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088468569 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115000619 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.114069551 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.090198685 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101369861 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.09027905 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.11552469 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093499581 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111724638 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111560616 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087854607 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.105441317 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096327758 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106375732 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090588963 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.105404688 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100387146 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08350969 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.11110078 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.088261147 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103817609 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.084217475 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111649171 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110962582 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088069483 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100894614 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.090518894 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115284986 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084504731 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109025147 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104581486 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08917764 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118070516 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082621331 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10583403 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112872203 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.09172035 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.103212606 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089839982 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.108348156 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.09192472 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.108210888 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.088237074 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106105828 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113434366 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087279419 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.103523371 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.08524566 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.107894605 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082498045 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.107307151 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092235151 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105537387 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104591787 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095717675 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112287548 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09261075 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107362557 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.108555311 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.092222919 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.112414642 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08775388 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.111922874 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08623989 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101434575 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105780356 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081831469 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.105272147 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.085409869 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.110383806 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087592635 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107895593 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.089710991 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112513521 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106747539 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.092559455 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121060405 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103401912 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082794827 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10634094 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088745478 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.104396267 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105789889 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.087670254 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110640781 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09075689 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113222135 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086417021 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.103527497 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110292444 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087140354 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111254176 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.09198082 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.112364211 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085963434 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.110865673 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087066969 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114511895 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102553909 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.090075528 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108085028 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107804847 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087213065 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.107201805 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086137029 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101426669 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087968566 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.112344189 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.107386723 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.090925053 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108824502 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087490719 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.1052648 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08522906 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.112631006 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.10762793 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.09419301 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.104775121 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082871423 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101596463 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.091534828 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110727911 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.092589454 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105174099 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.108288478 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094105699 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.109184001 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.085672478 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11563878 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095277832 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.112542613 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117402453 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08346743 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.10654468 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096686091 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.105003479 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.088947946 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.107044387 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083104182 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112655157 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.111755333 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092371482 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.107099373 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082786932 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.105550153 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.111592688 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.089446587 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.108966151 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.088640093 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110509942 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085702064 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108643174 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.091714471 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.110280554 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112424602 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090967728 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.109250997 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086597839 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.111932919 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085793224 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102327709 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082030048 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106768354 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.11320821 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083586396 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.11057267 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.090164608 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.106501994 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087561915 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.109530449 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086466065 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112673731 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110350087 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087750857 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117799632 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.086972303 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107078407 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.091561678 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.110716633 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101569883 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089598467 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108655449 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093697746 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.10891728 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.110458287 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091917839 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110136732 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.087898156 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.112130448 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.091360592 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.11255861 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082220502 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.112267048 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114822615 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08829785 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107418499 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088790723 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104681049 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08864559 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.112976696 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.106944917 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09613829 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.113038925 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089365398 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.106750108 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.092786394 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108162106 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112241034 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086575726 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112723732 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083229073 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113712192 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.109500595 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.094094817 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10673321 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084085817 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110415991 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.0915051 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109514056 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.11279716 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.093977268 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103298464 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.083859599 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.108053031 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086675497 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118666711 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.1157667 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088800261 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108033429 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.088685144 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.106768082 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093779544 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103480069 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085732932 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110604718 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113595534 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088536781 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105182516 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08987272 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109759038 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113148506 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090330905 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102961419 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090200173 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.113690881 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107733223 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086559459 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106752289 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09633841 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.110292713 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.086489105 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103454637 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118116394 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.094061773 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.113638071 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086480494 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.110224933 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107880532 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.088815665 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.112816678 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088354776 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111589813 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08849201 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112007508 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118930697 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082092352 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.107255094 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100688765 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111626119 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11247752 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.088434396 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.108212874 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094765028 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113874283 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.088917571 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10395859 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084923229 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108320533 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103499313 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.089166741 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11804096 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.089291134 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10817786 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090618704 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110673229 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.088399243 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.108407635 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104741527 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094660896 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107295811 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095848228 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103485614 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084783811 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.10852043 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092705249 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11097215 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.11196629 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.088338485 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.109654127 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084175194 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.10795592 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09471244 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110937423 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.111704489 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090273918 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108850179 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.089017507 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120107774 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.086694558 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.108953733 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120965618 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.093851538 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111299081 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090708865 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1149645 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.113760789 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.089527527 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.113742893 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088852461 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.110143039 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.11446949 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.094242978 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122943434 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090589143 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103710986 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.090307255 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108273198 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104526685 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096052144 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115242249 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.093460499 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110739679 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106954231 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095430721 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116378432 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092080319 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108363482 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.108053761 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.09181203 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107642627 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.089649814 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.106779749 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.096408536 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.114972375 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092919076 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115147548 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.103564869 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098407926 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115314427 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.095795414 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.107457 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083894501 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104683747 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.0899026 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.114698874 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.113632431 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.090166917 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.110757098 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.090652029 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.111724655 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090890972 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107568292 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.115573448 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.091646337 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.108650043 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.093940004 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.110163658 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091412385 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.107938834 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.09228298 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.113664042 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.11323676 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099424561 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.114463523 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089122147 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107701384 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11160017 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.089382112 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112322294 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09138347 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107350038 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085222309 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112661941 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.09520471 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111172706 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.114637984 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097641871 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.109157135 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09496278 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116787803 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.112564126 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.08831002 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.112698441 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.089419363 seconds)
  done (took 61.137118922 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.168956598 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097283573 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109341396 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088770194 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.14074361 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111459739 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088582095 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111594564 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090944056 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122584011 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110099004 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088495872 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.135279531 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142552708 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138660066 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126168011 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108770236 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090662367 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109743816 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092316313 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133682334 seconds)
  done (took 3.215344622 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113963866 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.129558202 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128915838 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.131882807 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11954424 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.106921497 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.128884453 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127502278 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.1329074 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123065728 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110871957 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127043511 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.123638159 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.123440652 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10223989 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12267032 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.1317021 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.120932282 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127995471 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108893126 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122245944 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.128746511 seconds)
  done (took 3.496958707 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.098583935 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.11245228 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094133135 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.109359424 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.09157505 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.109330942 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.099370489 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.108967863 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.09950351 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.11001746 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105561902 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.087919646 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.114552972 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.0884609 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.107180642 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.088560522 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.118611567 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.092608757 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.115224625 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.088308926 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.126490857 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.109080942 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.089565345 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.106137012 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.123646799 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.094424246 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.114322123 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.092048193 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.105328188 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.092371183 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.109138858 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090578241 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11206384 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084988237 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.106158811 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.112697629 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.09272849 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.109700957 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.08968121 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.112893507 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.090979056 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.113886067 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.098486992 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.111003086 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.087695271 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.110870465 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.11311623 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.088644934 seconds)
  done (took 5.734848192 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.155778531 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.171749305 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.097665301 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.139257234 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134764482 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.130403913 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.116211013 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.163157764 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.096344406 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.116504396 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.13878118 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.136997676 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123204439 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106290245 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.119060893 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117954506 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100478827 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.120010449 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125495797 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100315779 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.124585058 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126215115 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.135766836 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.113739216 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.122416822 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.116785439 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10261173 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.126961999 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.13354168 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128222033 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.102935335 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.127051953 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.135478458 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.124185697 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096493321 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124341976 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.140171619 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.119204425 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.098946892 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.114192644 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103199441 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126707031 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.120421852 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.138473752 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.098438179 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.124086717 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117465729 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.092890404 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.136737798 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.125118273 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130380964 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.137764032 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101305798 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.118593293 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127902745 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.139115154 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.098958986 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.116358953 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.099711735 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.135080114 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.116457527 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121103543 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117814713 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.122964772 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.128829587 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.137197301 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.099738966 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121344159 seconds)
  done (took 9.243068136 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125834322 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.120924463 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137373989 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136587786 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100617789 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.121122844 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.121481806 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.100994669 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120666381 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129940506 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120526541 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.214798888 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.117446172 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.107600535 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122293626 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121628965 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.100472074 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121301293 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123842047 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09973564 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.122132492 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.135382358 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.121167219 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135779561 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13946816 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.096286476 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122055654 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100859214 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137420663 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120738516 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.139735397 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.121758105 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10123002 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136480972 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137918127 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.121999721 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093005261 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121858694 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.121972571 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100481166 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.117566305 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136930818 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121733808 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.096570745 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121070558 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120853502 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114702356 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138400155 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.12927498 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130527169 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.122013682 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136111222 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101624482 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.120342485 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.138081759 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146186877 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13797295 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.136163325 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101091545 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13627812 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135622376 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.148038163 seconds)
  done (took 8.497281406 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089735935 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.110178833 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089115344 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.109536909 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088934377 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111340707 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089718855 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.110930137 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090311015 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.110147615 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089624133 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110739398 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090055002 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110105282 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090870114 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110831027 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089410648 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109910553 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090163904 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.111418175 seconds)
  done (took 2.819658425 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.102717493 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.136788606 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.11464217 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104482054 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.115751568 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123902789 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.094067317 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115880777 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093706011 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115242281 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.126753779 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107368567 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11492722 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124009104 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.126907815 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103472163 seconds)
  done (took 2.636537273 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118518548 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.136504748 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.175310842 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.11916683 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.093955207 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.123592603 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.114722107 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.094490257 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.113237639 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.100306548 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.118798816 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.118076904 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.094659972 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.115187212 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.094287682 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.11951298 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.091976441 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.11963275 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.114392897 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.17611024 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100082948 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.118207363 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.117781069 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.097025882 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.118531855 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.100637625 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.124726627 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.115581186 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.095533117 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.115345353 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.097441599 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.124647722 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.113603025 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.099543767 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.115679039 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.096119868 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.114726546 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.116397956 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.099931697 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.115433479 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.094430255 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.117730065 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.093107215 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.119213806 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.112702451 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.094502098 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.112792437 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.101818051 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.116425797 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.118681378 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.09318566 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.122197758 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.098886197 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.126690646 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.124438548 seconds)
  done (took 7.019085182 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107424019 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11590596 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.109466415 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.112319788 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115861776 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.096777811 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.11667706 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.098300808 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.118531856 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090674448 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.118820269 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117985948 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098418642 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118054047 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096498344 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117070372 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.110736008 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0954928 seconds)
  done (took 2.777938922 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099811778 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114400511 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.100454328 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.114691923 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.093567863 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114991103 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092770331 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.11274212 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11238575 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095133759 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115752204 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.093886981 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112755161 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.093657334 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115385163 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09386532 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.115208762 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092086713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.11526466 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112575589 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094656368 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112687118 seconds)
  done (took 3.146042102 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.106258485 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.175220168 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.124930743 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.185672648 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.114485205 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.091083417 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.124793841 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.114648445 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.111732996 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.11259202 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.112377187 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.091617812 seconds)
  done (took 2.290320376 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123375731 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.159416762 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116730283 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094610324 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129425741 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121833324 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101040805 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122182375 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13532636 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139973802 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10099778 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136147767 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134205844 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135701555 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128612949 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129045951 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101589963 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12225638 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09410814 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167268576 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102264009 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134370931 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122236325 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100899639 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122475294 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136965701 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134478213 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141310354 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10094585 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134548963 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12841297 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122750544 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135241504 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118820679 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114607729 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135190063 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122188097 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148608784 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109744653 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136825313 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.114731752 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12941256 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113242357 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131764616 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13578349 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122567509 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131561273 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102057697 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123276651 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.156747753 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129417539 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136652975 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107166879 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135095547 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135804517 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15586025 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140702548 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137476095 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128788901 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14087999 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138004254 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107642535 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138013616 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141141314 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128934903 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138879472 seconds)
  done (took 9.235065851 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165528497 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09768268 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122165615 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140992782 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138031359 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102101076 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122453444 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122441093 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102371869 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117936857 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177179421 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12266571 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137548383 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115783301 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123513178 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121883924 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10154969 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136863835 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117130201 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.15723717 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123538979 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138036572 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137075321 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116104743 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140223297 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129573215 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121875296 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101518384 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123888686 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122703722 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131668453 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10257464 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13845073 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.117688638 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136804136 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101730098 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122261404 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133909252 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101679526 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131197973 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136416865 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.147751104 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122036651 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101687362 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141552608 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123388582 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123202762 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096619033 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121974421 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118381617 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118781097 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139066504 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141112988 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138307401 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122660814 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12288113 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10088469 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12311838 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123790091 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108762699 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137427354 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123915751 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156502734 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123573451 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102264703 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137514904 seconds)
  done (took 9.10892944 seconds)
done (took 166.796275258 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.159787788 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.18242739 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.15527127 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.151955229 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10944881 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.13168248 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.145088915 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.157578887 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.087663163 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.109643262 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.087844416 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.113752098 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.175053248 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.088118144 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108281795 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.093471413 seconds)
  done (took 2.892458587 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.212553506 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.310302247 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.132264841 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.09254376 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.119706579 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112139945 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092773775 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.116094056 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089064059 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.123853838 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.112270093 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091042657 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125436125 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090929929 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11089682 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.111712725 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.103467488 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.111925191 seconds)
  done (took 3.103176792 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117124272 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.164714991 seconds)
  done (took 1.124745122 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129738912 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.199244155 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.322484353 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171733768 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.142103758 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138760461 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151157827 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131729375 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.208051303 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137027723 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.136793001 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116653857 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144722701 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103908031 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.128536044 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116386068 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127114131 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.127318329 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.126016318 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098859391 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141419394 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.117989173 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103009709 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.126832181 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.196895711 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135232085 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.118585769 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.09649515 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120585186 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.103930424 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.125184791 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137351493 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.134671386 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.187161655 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124802752 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.202679127 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104933819 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.116205332 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.125068893 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096836642 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121902107 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.122118735 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112592002 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117140914 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.09614238 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126716945 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.119094452 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.09600634 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129402256 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127995038 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128192337 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.103052771 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.202448117 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.127507178 seconds)
  done (took 8.1478328 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.921521983 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137027445 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118048309 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.061580313 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151515699 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133358064 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.916216979 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142054579 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.285124821 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.931377885 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110113776 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131171736 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.266453591 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.298875162 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.199314716 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.377484338 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.046552695 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.131596859 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123955677 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.19413609 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103877339 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148590032 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.138342199 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.459914735 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118218353 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093357101 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.124201239 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129548958 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.1845014 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.115039925 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098554452 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.227955638 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.289618721 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23748034 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117140307 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091990234 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115421637 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.189934503 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.326675731 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.253520838 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.189465089 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08959014 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.114811437 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130371397 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118964299 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111850254 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186032931 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.219222118 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.196906006 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120367968 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129265057 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103677845 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129383247 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.206353996 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.090778375 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.374448114 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.404246511 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092919418 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127366421 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137040678 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.299094993 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.092217535 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.28601635 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123685677 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.246145421 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.115247206 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.825444904 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189345582 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115309387 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.125584871 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.102218656 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12339423 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128999204 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181961747 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39851288 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13426517 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097562166 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115001516 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.256403913 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.092502145 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115105818 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185826368 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119815628 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124918397 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112410092 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133055269 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.215380883 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.273208 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131982535 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125518378 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.100578067 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131446053 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117560782 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.239970819 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.258009876 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.201949362 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.237039016 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13098776 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186278359 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.210582792 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128939043 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194969592 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12568269 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135732712 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10973702 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.274561367 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.157822866 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.093043487 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121903652 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.101810775 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.18303939 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097405385 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.125925651 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192516423 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.522682442 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187531673 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.114755457 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.096069344 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12782644 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.206562117 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102676437 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.296371277 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126601336 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192248767 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124889608 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111250965 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.104217212 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.210586152 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132436465 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105130273 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13081231 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126614171 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.273792056 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.257391507 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133147508 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.272187064 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19972724 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127575879 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197818867 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127153828 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192843211 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128719724 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129526633 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117296866 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817756866 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108065611 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125324981 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122027156 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.209579128 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09233124 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116485852 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.092265037 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112787385 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.847347987 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.095637063 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.112440747 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.094003604 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127997784 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12533222 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123364917 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10114048 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.207688739 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.274259405 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130983766 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102546606 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.115139417 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183188859 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118390772 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.092629842 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.11608755 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.114927266 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.104462476 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12251335 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094303029 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.218938921 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.181916075 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.279070412 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.561979123 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115624462 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.092259981 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.292584594 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093914555 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.343671731 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126051128 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.261254082 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.213205277 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.090507643 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.400998486 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.192975657 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.209282542 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.11987186 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194959521 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11323094 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.10304024 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.207554048 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092488598 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.125255597 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182205997 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136709613 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134112782 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.203988703 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115556337 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251669938 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.11284787 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.1912408 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119696609 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130515636 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.347453966 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093001913 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139687976 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.206951694 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098689093 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.116336362 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.827871946 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.094096175 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12973699 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104586097 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.286628011 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.188878811 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.126956454 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126027767 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107758787 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.207035604 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23254587 seconds)
  done (took 48.840974972 seconds)
done (took 64.949394113 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.336524116 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.294386363 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.346722144 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242077819 seconds)
  done (took 2.173985032 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.244282873 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.167342796 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.224489499 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.091959197 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.233621686 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091106263 seconds)
  done (took 1.923947258 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.560008169 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.458577392 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.388344175 seconds)
  done (took 2.285609903 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.27293258 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.30536774 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.378939947 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.511399208 seconds)
  done (took 2.450448971 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.295828063 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116029601 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.135077625 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.191919866 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.264594287 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.292114736 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.162861813 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.18882239 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.14289214 seconds)
  done (took 2.71551378 seconds)
done (took 12.42459786 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.323246545 seconds)
    (2/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.211255339 seconds)
    (3/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.225270872 seconds)
    (4/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.228697061 seconds)
    (5/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.313905927 seconds)
    (6/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.349447963 seconds)
    (7/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.211968712 seconds)
    (8/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.260304435 seconds)
    (9/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.140381676 seconds)
    (10/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.337906948 seconds)
    (11/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.332560296 seconds)
    (12/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.122306102 seconds)
    (13/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.117149104 seconds)
    (14/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.171713592 seconds)
    (15/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.124308343 seconds)
    (16/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.1143817 seconds)
    (17/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139273732 seconds)
    (18/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.175132979 seconds)
    (19/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.101379642 seconds)
    (20/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.279498841 seconds)
    (21/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.126927767 seconds)
    (22/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.271593888 seconds)
    (23/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.221447863 seconds)
    (24/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.265513157 seconds)
    (25/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.106572107 seconds)
    (26/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.159475838 seconds)
    (27/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.135897115 seconds)
    (28/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.157549695 seconds)
    (29/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.213884546 seconds)
    (30/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.238964381 seconds)
    (31/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098261592 seconds)
    (32/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.322429836 seconds)
    (33/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.21802751 seconds)
    (34/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.294454371 seconds)
    (35/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.174538792 seconds)
    (36/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.140859157 seconds)
    (37/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.101238469 seconds)
    (38/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.130943081 seconds)
    (39/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.202560356 seconds)
    (40/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.202829746 seconds)
    (41/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.148039199 seconds)
    (42/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.138029151 seconds)
    (43/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.12006193 seconds)
    (44/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.136029898 seconds)
    (45/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.121075338 seconds)
    (46/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.084951643 seconds)
    (47/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.125807468 seconds)
    (48/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.195112944 seconds)
    (49/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.223151835 seconds)
    (50/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.107043324 seconds)
    (51/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.230843649 seconds)
    (52/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09275514 seconds)
    (53/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.115155486 seconds)
    (54/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097563374 seconds)
    (55/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.206340388 seconds)
    (56/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.163723227 seconds)
    (57/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.097548063 seconds)
    (58/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.223221536 seconds)
    (59/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.226576969 seconds)
    (60/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.174581298 seconds)
    (61/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.118837059 seconds)
    (62/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.178908242 seconds)
    (63/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.206002084 seconds)
    (64/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.106615984 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.130481701 seconds)
    (66/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.200999279 seconds)
    (67/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.155793586 seconds)
    (68/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.114861211 seconds)
    (69/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.13564192 seconds)
    (70/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.155846024 seconds)
    (71/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.174698515 seconds)
    (72/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.138825306 seconds)
    (73/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.098365729 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.123721995 seconds)
    (75/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.154733506 seconds)
    (76/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103274881 seconds)
    (77/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.138059003 seconds)
    (78/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.085969621 seconds)
    (79/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.170648958 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.157309454 seconds)
    (81/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.149805136 seconds)
    (82/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.138944345 seconds)
    (83/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.108314796 seconds)
    (84/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.100551567 seconds)
    (85/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.1069443 seconds)
    (86/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.196471869 seconds)
    (87/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.234566923 seconds)
    (88/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.108616009 seconds)
    (89/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.222177595 seconds)
    (90/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.084291069 seconds)
    (91/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.20085854 seconds)
    (92/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.18159665 seconds)
    (93/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.107632917 seconds)
    (94/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.138517001 seconds)
    (95/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.239750714 seconds)
    (96/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.083225592 seconds)
    (97/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.109130209 seconds)
    (98/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.083377984 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.123018962 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.113844194 seconds)
    (101/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12852654 seconds)
    (102/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.08413398 seconds)
    (103/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.107661448 seconds)
    (104/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.21885396 seconds)
    (105/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099781746 seconds)
    (106/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.158266855 seconds)
    (107/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.203809398 seconds)
    (108/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.148224746 seconds)
    (109/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.100462569 seconds)
    (110/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.116464505 seconds)
    (111/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.102232899 seconds)
    (112/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.204559853 seconds)
    (113/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.136011004 seconds)
    (114/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.083063944 seconds)
    (115/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.126386961 seconds)
    (116/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091615658 seconds)
    (117/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.125250606 seconds)
    (118/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.099864015 seconds)
    (119/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.106995421 seconds)
    (120/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123550446 seconds)
    (121/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.112036321 seconds)
    (122/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.108036999 seconds)
    (123/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.111328881 seconds)
    (124/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.11389647 seconds)
    (125/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.099543348 seconds)
    (126/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.15063337 seconds)
    (127/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092275077 seconds)
    (128/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.107866582 seconds)
    (129/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.08364604 seconds)
    (130/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.107326888 seconds)
    (131/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.139658063 seconds)
    (132/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12745183 seconds)
    (133/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.08826309 seconds)
    (134/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.125639323 seconds)
    (135/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.100899522 seconds)
    (136/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.106865733 seconds)
    (137/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.089909984 seconds)
    (138/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.10822885 seconds)
    (139/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.179617436 seconds)
    (140/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.110684056 seconds)
    (141/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.1310578 seconds)
    (142/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.133576684 seconds)
    (143/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.108060656 seconds)
    (144/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084701209 seconds)
    (145/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083003912 seconds)
    (146/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.108998503 seconds)
    (147/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.122714479 seconds)
    (148/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.101975732 seconds)
    (149/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084276295 seconds)
    (150/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.203819633 seconds)
    (151/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120901086 seconds)
    (152/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.138430062 seconds)
    (153/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.099511032 seconds)
    (154/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.139381795 seconds)
    (155/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.114426064 seconds)
    (156/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.125570715 seconds)
    (157/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083608212 seconds)
    (158/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.125969619 seconds)
    (159/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.127060553 seconds)
    (160/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.112638326 seconds)
    (161/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.108062885 seconds)
    (162/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.100245561 seconds)
    (163/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.108531008 seconds)
    (164/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.215229068 seconds)
    (165/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.129712457 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.126235093 seconds)
    (167/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.082996476 seconds)
    (168/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.169818161 seconds)
    (169/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.169188968 seconds)
    (170/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.097886452 seconds)
    (171/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.127936183 seconds)
    (172/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100056101 seconds)
    (173/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.109002163 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.100421423 seconds)
    (175/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.127159247 seconds)
    (176/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.085162159 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.124086108 seconds)
    (178/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.101452331 seconds)
    (179/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116567811 seconds)
    (180/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.090603906 seconds)
    (181/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.116974499 seconds)
    (182/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110246581 seconds)
    (183/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.124536563 seconds)
    (184/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.107617841 seconds)
    (185/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.086276787 seconds)
    (186/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.152523005 seconds)
    (187/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.100855384 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.125203248 seconds)
    (189/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.149605516 seconds)
    (190/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.139625457 seconds)
    (191/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.08442089 seconds)
    (192/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.130428878 seconds)
    (193/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.083639919 seconds)
    (194/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.109370784 seconds)
    (195/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.092304193 seconds)
    (196/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.186276152 seconds)
    (197/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.110247041 seconds)
    (198/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084701073 seconds)
    (199/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.125560406 seconds)
    (200/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.101962955 seconds)
    (201/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.110327473 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.099051517 seconds)
    (203/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.125193384 seconds)
    (204/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083940016 seconds)
    (205/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.113504195 seconds)
    (206/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.099824934 seconds)
    (207/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135939579 seconds)
    (208/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.203424152 seconds)
    (209/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.103136668 seconds)
    (210/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.126786366 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.139403764 seconds)
    (212/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.109634703 seconds)
    (213/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.108452686 seconds)
    (214/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.086201549 seconds)
    (215/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.083066307 seconds)
    (216/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.109297037 seconds)
    (217/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085157404 seconds)
    (218/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.120248826 seconds)
    (219/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.108107212 seconds)
    (220/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.114404978 seconds)
    (221/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092726506 seconds)
    (222/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.109434607 seconds)
    (223/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084986508 seconds)
    (224/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.108637696 seconds)
  done (took 32.599027358 seconds)
done (took 33.483306803 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.520318884 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134733611 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103270308 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.129674035 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.190026747 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106441524 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.139153759 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.134612446 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.109073113 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.125973209 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.094244927 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.135006248 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.129291003 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.19157213 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.106477797 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.122760001 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120471738 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.109904369 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.136142433 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.138668787 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.190815485 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095955184 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.134213871 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.095226031 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190257894 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122902259 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.128815234 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103852608 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.135513212 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.101016187 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.129885784 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120697245 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.113809799 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.137553591 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094369163 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.126129453 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095168707 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.117386614 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.126526457 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.103290242 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.135183843 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.103313733 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.132487064 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.122996259 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.102697948 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.126397253 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093601991 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.133014237 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.118422318 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.104847049 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.122434258 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.113383318 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.124655193 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.093510376 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.119645667 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.121710754 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.10910556 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119170581 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.109629695 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11842979 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.096085592 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118900975 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.129045814 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094177088 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.127288546 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096185199 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.125883216 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.104319055 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.126621985 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121108589 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094264254 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.125030732 seconds)
done (took 10.046008881 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.101128859 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186473884 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.191192748 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.196573796 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.154179941 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.139178814 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.142484616 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12587774 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138248255 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14636669 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.159118784 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.125184004 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.227435728 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.109726826 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.139545409 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.128795436 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111146513 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.130143253 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.200934396 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.14769431 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.159190006 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.108394943 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.161038269 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141331465 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.10284321 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.150802286 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.131335992 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.128051089 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.102018663 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.145164157 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.147051522 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103879961 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.129096179 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.118350746 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.140080761 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.133792147 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115009597 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.129782395 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.125858709 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.100715944 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142312127 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13942981 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.099826099 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.138405117 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.128907989 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.111891205 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.135640983 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.109306859 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.129717481 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.129888888 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.104722063 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.16017029 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.134503067 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.139388232 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.10997093 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.133338828 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.109762715 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.134987239 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.129485908 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.108850382 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.127568499 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.102771183 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130680951 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.156024317 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.128959294 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.1101487 seconds)
  done (took 9.779703809 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.122307037 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.161848121 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.13769457 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.138777684 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108774045 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.11810846 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091488032 seconds)
  done (took 1.812394007 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09434965 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.193907178 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.19152072 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.191599738 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.18597958 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.229920451 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117051806 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.119653625 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.159592631 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.104455533 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.193197934 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.252136955 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.101986572 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.139769795 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.195614138 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.11942666 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.197268745 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093200606 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.131415813 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.193152289 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138276048 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.152322069 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.109686608 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.121178408 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.18811614 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.094893421 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.278342757 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.136856469 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09978634 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.130630525 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.107649556 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.232757504 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.188831755 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.110427611 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.125612842 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.191785277 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.188509108 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.133696078 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.205397137 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09937234 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.188493114 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.132355648 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.134369185 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.107679685 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.132752709 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.175697514 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.139144289 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.107229982 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.131014597 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.195535154 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.106887534 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.215534967 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.102583861 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.13418591 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.105845572 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.135303132 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.138944177 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.106748409 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.194893316 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.135807495 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.191571715 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.189448977 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.18871132 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.190395331 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.164239781 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.191090496 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.187943796 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.130513211 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.103703423 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.13415737 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.192298594 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.132982448 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.106700949 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.17603055 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135428937 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.192170715 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.191361777 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.128797483 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.109350106 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.126568818 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.10307753 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.121268529 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.180322904 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.107892153 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.129904536 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141773349 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108733044 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.132969979 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.124922367 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.121949591 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.132290948 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.134123406 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.111103066 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.131773061 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138217445 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.19395797 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.13406066 seconds)
  done (took 15.411573037 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096421322 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.121548067 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.101884055 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.122226127 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.096474275 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.123099278 seconds)
  done (took 1.606880517 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.129944378 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.135640089 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.14663005 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.109422298 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.191873488 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.197794916 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.226817565 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10732595 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.152124293 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.145705071 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.20041126 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.202909443 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.196443115 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.156441471 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.202419897 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.137804774 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.202432752 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105668373 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.144933097 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131391906 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.114991187 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.137095981 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.130553994 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.191793815 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.138385137 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.11051317 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.134215448 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.143481096 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.116033964 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.134221907 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.137139044 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.111989556 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.129954119 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.132146718 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.202728318 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.103701111 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131271497 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.141242733 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110873996 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.138368731 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.201443475 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.13177063 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.143093009 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.115093534 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.134921926 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.130156691 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.116145001 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.134199589 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.201083878 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.142034069 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.142163741 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.108828932 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.138543796 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.14069888 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.130240034 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107384908 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.14117831 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.203639532 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.13976761 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.104563723 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.136445732 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.138928158 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132806016 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.115664579 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.138099474 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.141781044 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.105249579 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.137416929 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104179769 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.136969821 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.141549701 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.136492364 seconds)
  done (took 11.238233816 seconds)
done (took 40.772926739 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.110902174 seconds)
  done (took 2.057415589 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.99559031 seconds)
  done (took 1.943543632 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.608621286 seconds)
  done (took 19.594876331 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.575409984 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.688726399 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.987872754 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173795599 seconds)
  done (took 3.374669554 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.028301355 seconds)
  done (took 2.000802085 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.333137217 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.287592201 seconds)
  done (took 1.575742219 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.889313062 seconds)
  done (took 1.854100761 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.443761115 seconds)
  done (took 3.411588766 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.393525053 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.201597124 seconds)
  done (took 1.567975042 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.687158514 seconds)
  done (took 1.655700172 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.302540441 seconds)
  done (took 37.270940841 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.250650593 seconds)
  done (took 1.231173509 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.32026212 seconds)
  done (took 1.290584007 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.837450797 seconds)
  done (took 4.809025544 seconds)
done (took 84.592501299 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106850613 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.135476807 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108303526 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.133342431 seconds)
  done (took 1.450208542 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.116641121 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.133684678 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.112778747 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.1345761 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.144778611 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.108290208 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.133874671 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.140193489 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.108525367 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.135569536 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.10851506 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.133839396 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.134771611 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.107029676 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.13300664 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.111244775 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.138201848 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.134304424 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.10824121 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.134795172 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.10773605 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.135227276 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.137321293 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.108937867 seconds)
  done (took 3.97731673 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107262898 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.125690794 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102445769 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.1255346 seconds)
  done (took 1.442853575 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.116181933 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.15042634 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.149610928 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.115517958 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.15057572 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.149740425 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.104094388 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.127958954 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.105373209 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.14152814 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.104283114 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154820294 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.150285723 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.135377812 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.118155356 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.126037789 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.112440108 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.151705144 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.141800185 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.117693582 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.129099321 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.116025786 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.129863927 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.147237608 seconds)
  done (took 4.12525761 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.218591738 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.121690277 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.158740066 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.187226972 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.16044509 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.104255601 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.160417187 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.137884486 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.112684192 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.137327573 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.137126606 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.197260165 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.1107755 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.140825293 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.134755345 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.115606079 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.140486708 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.135462684 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.111224648 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.147670532 seconds)
  done (took 3.852990421 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108761191 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.126745416 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095057093 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.125440025 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106997545 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128671972 seconds)
  done (took 1.675872832 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096125651 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.119229908 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095390582 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.119384953 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.099243769 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.11944481 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.09299769 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.119770778 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094055903 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.119464037 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.094265003 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.117858902 seconds)
  done (took 2.271384659 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.31741692 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.098386539 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.129261197 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.126265529 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.104391676 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.125572061 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.142365291 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099206798 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.266049775 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.099821108 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.142886486 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.202938007 seconds)
  done (took 2.838613812 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23379338 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108510366 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295083221 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.404363304 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17764407 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187040275 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.295997268 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186674274 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.212363826 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157359245 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219087313 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174743002 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171742974 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20082566 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156730917 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.184057781 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198371711 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22498414 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166342541 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.257937088 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184822358 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188385532 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203073427 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16887396 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12595379 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177652349 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.134952802 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143440532 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195951147 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190864074 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196374743 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166402654 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15757665 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225696388 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272227234 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202093653 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.337897945 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149589586 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.211666686 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.202966574 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288824731 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156410022 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221379602 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172981681 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145832875 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203084354 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176472551 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.203998209 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149209007 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156332875 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211194437 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197009897 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.236436154 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127150619 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.343558887 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163104899 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.136835654 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195589533 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242950291 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213627162 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186318352 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.13553409 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202838269 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203554235 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202059461 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.16465371 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.192504893 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143244474 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196906917 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21895502 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230660025 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188588025 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.208663787 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149602095 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183679389 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190543379 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171445242 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199074479 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17884744 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.105911668 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168407146 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153295159 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141689729 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.20521875 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109116123 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258369389 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122700595 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.20789881 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25508799 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176459966 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181100026 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185826975 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188647361 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163066363 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.108703143 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164118162 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.181254176 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176936934 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145337279 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176391208 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134655342 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.14552909 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169805999 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.137536353 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176714949 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.123614731 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186416703 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183819775 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.146720723 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183558893 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167380493 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.179803438 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1929449 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208907972 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1484723 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118799459 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24329262 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174447858 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.12722969 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196057759 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238302601 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.185812311 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125395415 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219764765 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219981255 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160137047 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212939061 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159850755 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120759772 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.172324636 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17729199 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17600187 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.174270167 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143322895 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.172892284 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219221913 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.140784599 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123270802 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196021064 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14361485 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141958045 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160875762 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125761733 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.158237869 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.170921375 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.157524663 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171984772 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178568268 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170730199 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179112814 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130802195 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250303224 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145925689 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150464953 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164420571 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.1334311 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.206231566 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206030334 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144786733 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208866524 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.19416362 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243944587 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182884303 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116070169 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201238159 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144878531 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.134431303 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187719069 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18115329 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183148702 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.209573375 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211671761 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.220021567 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.172412253 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137944175 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216495063 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.195680188 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177461268 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.133532413 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183352543 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217019721 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.106966967 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140529699 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.116767094 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155614218 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146534707 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145438636 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20621118 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184878341 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207126125 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179283223 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155744252 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206103164 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.142141174 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185214934 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.196426797 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15425018 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211185437 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202014892 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186054225 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158316924 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191108554 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.13513919 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110052107 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.15232796 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18841418 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147466675 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120102622 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161895518 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23159911 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196589224 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166867841 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223222927 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189342508 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243765044 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.108244814 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.180038257 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193468332 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175794409 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.203327613 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122331507 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.179932387 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199166921 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162622102 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245543379 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183136695 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188524323 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224950851 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.17585785 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145804954 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165925604 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189479351 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127640355 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185270169 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163139972 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151780455 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171132828 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.153797558 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114803256 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235292923 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12958213 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233932444 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.175467838 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197534459 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139711095 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131301791 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151269469 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162524457 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.134239616 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192404671 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21226165 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164545834 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177396142 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195671382 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144489484 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.328542989 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213483272 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235268636 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125196585 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159723181 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181368019 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178960059 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183608613 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203453993 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160370873 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200824877 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177475439 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.159421525 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149524943 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16406238 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140332167 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.173056854 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152154481 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174995201 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.157583412 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209405808 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160744858 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179245095 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184395716 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.163914811 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145796888 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15690918 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223875569 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176810201 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228919907 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.145159684 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189812324 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237408948 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11074522 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142762683 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.113477776 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.23292053 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119245954 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177431843 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.200492908 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245109309 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178513343 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18991068 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153672356 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.110594758 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178322535 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165715947 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245577057 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130957515 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.153737738 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243112773 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140438321 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146032864 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184513834 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305320562 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161371194 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196195045 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.134844238 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.291016224 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113579297 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14569825 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178121831 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192865172 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.166136728 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176067035 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207000176 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132380639 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180335473 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154800393 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207775369 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259058319 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194162602 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1984298 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.160177532 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176637169 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183490317 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199484936 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1608038 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.16560358 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180422691 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206889316 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.212854778 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.150268679 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184261338 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180899962 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177823894 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19985873 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148641515 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209290382 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115857004 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217220404 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127165511 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142234522 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176122688 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.200148948 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147880556 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198448273 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176044169 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145919143 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113478867 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169051811 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175644788 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162291643 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.14320865 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204286853 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.111966889 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183258526 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200234225 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144410862 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175707503 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162092131 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120851479 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1611355 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161821621 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151648659 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16120884 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229965343 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.120217668 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226459503 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196881577 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185178396 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179289477 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160845278 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.651711309 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.146305059 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204343624 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164836283 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213453077 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168189547 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187752589 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180016605 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166007907 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191084677 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16745826 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.240738139 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188330018 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180838807 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116286109 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160921448 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163063045 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.15007507 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16952022 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181000467 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126795612 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.156014938 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178009189 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162360513 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.16234726 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125119194 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23638789 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135975357 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237283953 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207784565 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125567426 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186469563 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232591697 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114316784 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18388491 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223927032 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129921364 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17237832 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.149160632 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151974827 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198549184 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.108739582 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181370175 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178442403 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18165548 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184183587 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.153886206 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178916637 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160713124 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177912737 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113889601 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178004088 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176935367 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149051347 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.115257673 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173633471 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178770301 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.177401663 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143914655 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.164471368 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228179841 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.108833551 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149123513 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302938467 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177975316 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217042533 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.174186999 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150346513 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160759606 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146290387 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174152719 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178149844 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.146493212 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146869087 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.121195273 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.203118883 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.174069254 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173671736 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202480487 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180587394 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211668999 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.162824042 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.287160818 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153701669 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171023946 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.120025262 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.14766928 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15723563 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121433951 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163799028 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237270001 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199846078 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.141027263 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.161865419 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145072964 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.107553433 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147120268 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181958729 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1734369 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177543825 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164018341 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105468776 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163729101 seconds)
  done (took 86.65295609 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166434039 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.169101583 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.174320829 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.227991794 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19495996 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.28851834 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.234610157 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255552605 seconds)
  done (took 2.781880023 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.112161552 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.147482633 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.154281388 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.135060066 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.136208167 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.428901497 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.148884874 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.134429045 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.198191273 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150173818 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.131711381 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.686121275 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.135504344 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.132225692 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.102663645 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134080684 seconds)
  done (took 4.135222516 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.708188364 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.574575774 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.388097077 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.268464283 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.249642268 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.19563247 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.792743471 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.18336744 seconds)
  done (took 13.434994559 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.140040729 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.154085532 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.364033986 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.233697742 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.173070076 seconds)
  done (took 2.145990594 seconds)
done (took 131.751892379 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.111545242 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.156955947 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.110260079 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.158091059 seconds)
  done (took 1.602573481 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.16261973 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.12453303 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.097138503 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.123356751 seconds)
  done (took 1.586454839 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.550125979 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092492523 seconds)
  done (took 1.752444374 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.135503032 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.159583676 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.156448194 seconds)
  done (took 1.538868784 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.118740255 seconds)
  done (took 1.194280011 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.111020038 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.14423214 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.201427464 seconds)
  done (took 1.540325444 seconds)
done (took 10.293877624 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.133321853 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.441342065 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.423397374 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118070507 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.73458522 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.415992473 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.066785234 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.169966551 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20429109 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128756107 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148498976 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679458837 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.048157883 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.352816694 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.032729256 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.381180937 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.683690702 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129856569 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.106379032 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130912432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.071006987 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099365565 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12930831 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.101809226 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.709491908 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.413461706 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.129083665 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.395493341 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098710963 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133258117 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.390776108 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.128523472 seconds)
  done (took 17.402024116 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14592755 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.196703623 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137761229 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101493752 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.134245155 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.099260701 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.140289124 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144003438 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205097246 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098769078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.150742041 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.127851062 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104326115 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.128965846 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122751259 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12864633 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101326642 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.13199265 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.1368422 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102979586 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.149561742 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097832536 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13251301 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.130530461 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100619596 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.155870759 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099835871 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.144677418 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.126227349 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105174952 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.133333767 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.100532251 seconds)
  done (took 5.203743776 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151085327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.204742098 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.139352294 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.164830118 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.183668345 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101930134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.22121544 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170366702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20485354 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.128280462 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.121025212 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.129529419 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.168797296 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09986525 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.153058254 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098636773 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.13331539 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.10194142 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137570707 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.131194631 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120498297 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.128478125 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100888966 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.131746594 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.128361655 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.127307115 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128870232 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141674553 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100776082 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133014321 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.106507561 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129564607 seconds)
  done (took 5.516447459 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.112779339 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.143329053 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.12202027 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.153617047 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.138394724 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.11241437 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.142701553 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.107395988 seconds)
  done (took 2.122959925 seconds)
done (took 31.326136577 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12503698 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.149257199 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.119708554 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.143596601 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.210351982 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.102923051 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.148527586 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.10307624 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.143958847 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.121908058 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.129309703 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.105631975 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.150426793 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.139108772 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.193216129 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.115110185 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.198327042 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.194622736 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.136355312 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.114502423 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.137044281 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.202444597 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.110197269 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.136589964 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.204323489 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.102469119 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.189119301 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.141210682 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.109604143 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.132621289 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.194038612 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.111187623 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.135715599 seconds)
  done (took 5.833837118 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.215444998 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.223118327 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.106174049 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.135512395 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.224177432 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.105095764 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.214527985 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.136473301 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.103713645 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.13633297 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.103300303 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.213646585 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.253875313 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.204384305 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.283680683 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.224619852 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.212957019 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.221842652 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.210240096 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.229147825 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.212033324 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.104498127 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.225026552 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.226151605 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.13600867 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.103587825 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.248084684 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.220967022 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.279419626 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.177404989 seconds)
  done (took 6.786892855 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.114374083 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.14693523 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.127265019 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.204470176 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.175905167 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.145002314 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.114597792 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.155660641 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.127594887 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.130554333 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.111083266 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.169074218 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.148946462 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.111044806 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.136986004 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.120472385 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.157398063 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.131703341 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.107919812 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.153041211 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.119363961 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.150787881 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.146826343 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.112517478 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.131280831 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112316439 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.138080081 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.142600382 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.109464478 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.141100723 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.105957463 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.136393787 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.10478762 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.141001989 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.135396032 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.114992762 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.159573003 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111288492 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.144225736 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.167895902 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.110352942 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.137934841 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.152746545 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.150435797 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.133208962 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.112729613 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.146033467 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.140076508 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.100552281 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.151908745 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117083166 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.132544628 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.155433463 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.101536807 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129756714 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110532102 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.132370565 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.104279107 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.141224277 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.105671919 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.159576726 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.140293053 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108876386 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.134987847 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.106873872 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.131139272 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.100096234 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.139054364 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.156476898 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107152969 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164289431 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100804728 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.144739732 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.109574387 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13711419 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.140703541 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.101841304 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137422465 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109892934 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.139364087 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.110272397 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.135344942 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.105603208 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.153138798 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.154833169 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.115617209 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.143754377 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.143079667 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.105441712 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.133955715 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11575913 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.134711489 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.105662637 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.143426514 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.133626591 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.104278775 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.144632609 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.111624869 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.13101529 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121107494 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.139622992 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.131014511 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.120292915 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.133710138 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.10713695 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.143754511 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.113131471 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.133829805 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.110466364 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.144920986 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.13090579 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.107756692 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.136906413 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.101681155 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.149420963 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.112540451 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.137137996 seconds)
  done (took 16.367709168 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.315731416 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.327316889 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.212447546 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.417745036 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.127378747 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.211119791 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.320989393 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.241793022 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.133994816 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17968474 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.19685146 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.253440973 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.134339782 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.167133712 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.295795229 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.39144185 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.168106124 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.179797671 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.177853831 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.158941781 seconds)
  done (took 5.724459591 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.125218137 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.175953519 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165123304 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.166490249 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.109655831 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.148549798 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.101420361 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.158252471 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.139892822 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.110366506 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.130757017 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.148134351 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.111596912 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.142009651 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.121485234 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.182523281 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.137170756 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.110181482 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.157773004 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.138278302 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.114230565 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.16172197 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.144987331 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161025618 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.120377302 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.148500052 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101092551 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.140092758 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.105390343 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.137882412 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.137292676 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.126836154 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.141396505 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107625578 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.144255378 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.145346316 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.104849291 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.132690114 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.104148136 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.136434962 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.120384758 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.142378624 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105781035 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.129220994 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.115865445 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.135611628 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.114631025 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.143241838 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.145886281 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.119059592 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.143190073 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.114971338 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.14013421 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.152681285 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.105456161 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.150418857 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.115636629 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.145198231 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.140009247 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.101779621 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.131198801 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.107450622 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.13741291 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.114482324 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.142947836 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.159739497 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.117499642 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.136235024 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.139021497 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.107901981 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.137026789 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.122064769 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.158913561 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.138050422 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.105542787 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.155904285 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.105526767 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.125034404 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.113071421 seconds)
  done (took 11.557915354 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133860427 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.13791225 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.124287704 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.172061414 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.15433039 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.108205789 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.138300947 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.124181982 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.146717321 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.116895117 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.145148855 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.147978213 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12927177 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.146360625 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.137616878 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.118620258 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.143629698 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.177408415 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.123874211 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.169323252 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.149585144 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.108342398 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.148337676 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.115532551 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.169803818 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.114471938 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166917464 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.143827722 seconds)
  done (took 5.044414757 seconds)
done (took 52.410151244 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.265500537 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.423464807 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.194194916 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.195242358 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.243208594 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.238291095 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.192897728 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.387121395 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.942949138 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.181620238 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.195373827 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.193210662 seconds)
done (took 27.771175145 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.212208428 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.814091008 seconds)
    (2/2) benchmarking "String"...
    done (took 1.526852856 seconds)
  done (took 4.477224506 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.188035602 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.190853642 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.434273921 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.190311934 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.207479818 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.208862738 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.188743997 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.195030361 seconds)
  done (took 15.730491409 seconds)
done (took 25.725225957 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.242587188 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.55395766 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.496963642 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.2103874 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.191375855 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.190511853 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.187668874 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.265327616 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.190405161 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.186370292 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.222055487 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.471172041 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.183560071 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.602227519 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.18370497 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.209663956 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.209615473 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.543160849 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.1965483 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.266849284 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.182503404 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.20627143 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.203444586 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.218259862 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.202742695 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.203266963 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.213516898 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.184716202 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.477127472 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.200374434 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.184725429 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.210695243 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.232376382 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.197367164 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.324546209 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.215530174 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.492238281 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.199938381 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.192363223 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.202674951 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.485700497 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.628916367 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.200295213 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.184654092 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.196128922 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.249646902 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.189652687 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.978588552 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.195077875 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.184510339 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.219213426 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.628302774 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.197900265 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.21728598 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.1979131 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.523577475 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.200603924 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.274993684 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.230099854 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.218897592 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.194636435 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.20406821 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.272950549 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.198051961 seconds)
  done (took 143.940646474 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.195044373 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.1984764 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.196042758 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.216933594 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.198171609 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.197708833 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.194627752 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.194142458 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.199112556 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.202351622 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.19863463 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.195142556 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.197564159 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.15925259 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.199713575 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.217724171 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.200115497 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.214399601 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.19978148 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.195056341 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.220104912 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.196144746 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.215329848 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.19805788 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.197447877 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.287954073 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.227110516 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.199362619 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.2031004 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.19618987 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.206545944 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.208069176 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.858144998 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.057730421 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.216478931 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.240282396 seconds)
  done (took 80.017717142 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.196399879 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.197362348 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196058562 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.231902037 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.196912806 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.819105027 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.824058256 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.975855766 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.306995937 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.201063548 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.726829309 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.511115123 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.197170935 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292734299 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.210819511 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.197799656 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.212832745 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.241834841 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202068134 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.197056867 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797783542 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.210464334 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.325489151 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.379459906 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.216090486 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234026942 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.604142942 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.198634232 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233313642 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.540170456 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.251904054 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199575798 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.640827261 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.44943476 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.19992857 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.31633255 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200334744 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.234217615 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.199560426 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.486924371 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198611828 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.199692245 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.204168469 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.929590485 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.203748379 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.824471573 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.204298713 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.252380825 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.201578589 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200049624 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.625916573 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.079891255 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.220929323 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.198909244 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.203264331 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.198987313 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200214319 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.233878843 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.653262087 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.321495616 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.219418233 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.205260514 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234743383 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.200243094 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.426465858 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199747773 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.133296994 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.27693043 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.307903271 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.801678703 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199883776 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300829078 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322738262 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.202041504 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.200897141 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.201485714 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200216353 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.200368289 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.313543097 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.201119633 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.651409989 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.385568479 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.221442788 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.719910803 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.3051417 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.201471513 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.621012866 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.20156568 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.200555818 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.997406493 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301016908 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.201644511 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.201731508 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.200972918 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200680557 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.654150156 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.825920375 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.513363873 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205708408 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.245374619 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.223593786 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.660073173 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.798709858 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.913972205 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.20466079 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318174 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.385390386 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.221814857 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.203725362 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.754700606 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.206860842 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.262537446 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.203589002 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.603010558 seconds)
  done (took 367.903894986 seconds)
done (took 592.979082492 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.917585921 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.871208555 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.008402778 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.895020744 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.862681519 seconds)
  done (took 10.681896766 seconds)
done (took 11.807857469 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.407851573 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.403118531 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266394918 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.406220766 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237665339 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.422517943 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385739678 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.22305336 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.317310359 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.289571233 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.313287726 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.259227629 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238063041 seconds)
  done (took 18.297483276 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.486926761 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.211095543 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272404887 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.453640352 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247517444 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.479021096 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.520182795 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.209691686 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.362886225 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.220414746 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221554619 seconds)
  done (took 17.815735512 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.496872734 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.21169776 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.293836544 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.465867069 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251723177 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.492489047 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.527215471 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.212181108 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.358005571 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.223410416 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222184413 seconds)
  done (took 17.886051751 seconds)
done (took 55.125695708 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.250619669 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.386694753 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.235854364 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.224213349 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.219740415 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.218672312 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.22244192 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.217261215 seconds)
  done (took 11.105495223 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.21794991 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.216278406 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.216784589 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.216975787 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.217701797 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.217643621 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.217987769 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.217970031 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.216691041 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.216950388 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.217144584 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.216837085 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.216497054 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.218010382 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.216582137 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.218195848 seconds)
  done (took 20.607772765 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.220716432 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.217219886 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219122329 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.219269872 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.217651571 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.217422832 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.219755552 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.217465239 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.217564063 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.216596466 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.218991087 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.218450741 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.219181456 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.217884458 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.219406311 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.219518294 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.218138555 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.217994828 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.22295106 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.217812451 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.218052137 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.218612628 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.218271543 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.218153865 seconds)
  done (took 30.379979432 seconds)
done (took 63.222217035 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.210213896 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.230641998 seconds)
  done (took 5.572362448 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.279284148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.279550043 seconds)
  done (took 3.693116904 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.220084068 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.220076696 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.220365217 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.22034634 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.220187063 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.220273267 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.220490686 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.219746655 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.220142688 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.220126348 seconds)
  done (took 13.33484326 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.221095082 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.219914473 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.220541038 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.220415497 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.21990846 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.220193128 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.21951334 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.220192005 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.220483866 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.2199926 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.218985968 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.219615047 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.221320519 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.221435831 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.221215831 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.220092766 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.220601599 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.221956571 seconds)
  done (took 23.101886718 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.23641219 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.241582357 seconds)
  done (took 3.613188662 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.362784903 seconds)
    (2/7) benchmarking "second"...
    done (took 1.263786279 seconds)
    (3/7) benchmarking "month"...
    done (took 1.33659925 seconds)
    (4/7) benchmarking "year"...
    done (took 1.329019855 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.262894277 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.242671418 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.26386709 seconds)
  done (took 10.195416067 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.221801837 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.410812323 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.52302423 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.791319293 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.223539166 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.263485431 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.019444398 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.264993058 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.253339401 seconds)
  done (took 14.107390731 seconds)
done (took 74.749169171 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.212780564 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.280167662 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.225368721 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.250693426 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.559659386 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.248493081 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.211587518 seconds)
done (took 16.122883941 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.212869596 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.21599303 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.222922336 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.223324786 seconds)
  done (took 10.011093297 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.212667931 seconds)
    (2/2) benchmarking "read"...
    done (took 1.573588237 seconds)
  done (took 4.920034661 seconds)
done (took 16.066735456 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224430856 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.223437223 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.224245237 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.223202501 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.222596382 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.222830379 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.224123886 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.223428853 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.223584327 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.22456203 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.22305649 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.225734204 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224630251 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223676412 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224957482 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224505926 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223696493 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.225055476 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22380871 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.224951532 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224892839 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224215361 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.225653439 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.224475431 seconds)
  done (took 30.51743234 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.225174071 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.224698869 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.224608318 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.225008309 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.224925211 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.225115984 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.224769186 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.227494525 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.225081647 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.225162545 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224783173 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.224532985 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.22491338 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.225118979 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225571389 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.224596288 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.224859046 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225940707 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225117011 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.225725106 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.225150052 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22610842 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.226491301 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22556632 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.225476514 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226003096 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.22446844 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.226076149 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224072738 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.226714318 seconds)
  done (took 37.898353387 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.229552612 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231218643 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.227055491 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.224436055 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.227070412 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.227879244 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.227214743 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.22604495 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.225927566 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.226656214 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.227103392 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.226107772 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.227744518 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.225129885 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.227806094 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.226999434 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.226767491 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.22775561 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.226960296 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.228266088 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.228161876 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.227472667 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.226125214 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.229406523 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.226119423 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.227316115 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.228119871 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.227806854 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.227531047 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.226961937 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.22854977 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.228514985 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.226944236 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.228025544 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.228754623 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.228546181 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.233700368 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234301668 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.229374057 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.229143454 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.230114534 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.229881374 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.230413691 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.228467171 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.227157187 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.228943902 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.228942218 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.229179389 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.229776208 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.230417375 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.230163576 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.227702432 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.23056058 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.230160723 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.2290745 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.230141101 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.230550493 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.230672077 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.229972825 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.230130706 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.230777491 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.230284656 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.230468368 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.229139658 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.230944719 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.229282255 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.229896177 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.230558132 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.229350649 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.230835825 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.231167269 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.230160077 seconds)
  done (took 89.612396526 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.23175437 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.231658727 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.229522567 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.23150627 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232086288 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.229360103 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.233710401 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230851088 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231004077 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.231082113 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231921298 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.231368598 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231366619 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.232095794 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232915165 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.231315156 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.232621229 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23176674 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.232075381 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.231825365 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231772425 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.232130945 seconds)
  done (took 28.240201244 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231352164 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231911529 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.231353336 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233275019 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234181435 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232639295 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.232088113 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232464846 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231843053 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232706745 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232510088 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232764095 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233215861 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232202265 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232311888 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234836376 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232909165 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233729314 seconds)
  done (took 23.332019725 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.234184893 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.232741218 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.232044758 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.23225164 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.231905377 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23273681 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233757763 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232689562 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.233776619 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.234088961 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.232768239 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234145383 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.233352721 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233645115 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233438267 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232918077 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.233581572 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233517366 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234144956 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234806641 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.233081145 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23411403 seconds)
  done (took 28.277786018 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236132197 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.234055844 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.235563717 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233741887 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.234161395 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.234220797 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.235200437 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.233779561 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.235533658 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.234477336 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235600663 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.234263806 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.236403923 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.236468948 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.236183512 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235070954 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.23538624 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.236141056 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23502364 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.234981949 seconds)
  done (took 25.848289621 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235617163 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236876937 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.235706647 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.236885687 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236323263 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.238531582 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236143647 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.237079243 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236470708 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.235475926 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237023754 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.235843032 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.236526827 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.236540417 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.236130059 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238180627 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237841913 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237325274 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236979684 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23779761 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.23772641 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238052224 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237381461 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.237842593 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.237487904 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237350628 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.237702441 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237840621 seconds)
  done (took 35.784680138 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239044368 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.238279288 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.238175661 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.238721252 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.237862818 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.237520511 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.238117058 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.238519919 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.238213728 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.238759591 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.237906052 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.237936785 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.238509259 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.238350246 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.239327965 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.239071266 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239814381 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.239948122 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.238325002 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238468362 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.239900724 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.238736229 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.240693625 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.238671058 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23915416 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.239274672 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239290566 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240733306 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.239602888 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239969893 seconds)
  done (took 38.31624125 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.281728611 seconds)
    (2/2) benchmarking "in"...
    done (took 1.287725513 seconds)
  done (took 3.720217965 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.24102767 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239645679 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.240033783 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.241999016 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.241602958 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.242138214 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23952286 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240591046 seconds)
  done (took 11.077000354 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.236103625 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.241136976 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.240177615 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.240222299 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.239615172 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.236809301 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246914254 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.24753771 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.237491222 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.238646226 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.243630694 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.24155721 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.239747492 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241478671 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.23801672 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240608493 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.2442789 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.241574929 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.240920356 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.242554661 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239627918 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240874768 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244381107 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.245398446 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.239175076 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.249731523 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.247296928 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.245985908 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238625957 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.243291998 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240189388 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.243841814 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.243511136 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.243261352 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.2435993 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.242423005 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248607372 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264277674 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.245165857 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247140707 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.243963207 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.242751002 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.240548946 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.241664644 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241993414 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.244333039 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.245475207 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242928196 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.2404403 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.243147343 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.251587552 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240383347 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.24455551 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244330406 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.244845367 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250870855 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.270309641 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.242456056 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.247162672 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.249888997 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.257335304 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.254870588 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.244352051 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.247778783 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249571407 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.258094009 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251148043 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.251074263 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.245538256 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.245964543 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.248357258 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259222016 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.257216137 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.246016996 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245454613 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.246624042 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243064503 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24747114 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249380073 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.251534348 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.248557759 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244562793 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248118932 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257843178 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.242387706 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.245341942 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.245216036 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.245294974 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.243061825 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254721814 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.272444247 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.247374241 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.241102378 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.242795478 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.244677546 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.246994701 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.240534713 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243377671 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.248177631 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.247051019 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244950743 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246177509 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.250397554 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249865514 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245997877 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.249967958 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.25170179 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.243686672 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.25116611 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.251905391 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24664054 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.243780643 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.248648068 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.249179912 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245757812 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.250395058 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.248388324 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.245112554 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.24818366 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.248492007 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251311316 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.265215965 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.251228339 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.248593958 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.247275443 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.257362094 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246666802 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.248478942 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.252455434 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.248133965 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.246834622 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.244692639 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.25222125 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.244598128 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24828669 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245569671 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.249536581 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.248468403 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.248100198 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.247661797 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.250129755 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.245998557 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.247849771 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.250733744 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.250722332 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.247304364 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.254708716 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.250929823 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.248764317 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.248818641 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.251480737 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250654075 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.248268837 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.251060917 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.246474303 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249658407 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.24626646 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.250386778 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251580804 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.251411316 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250797467 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245903906 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250327486 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.250830962 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.252241053 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.248692895 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.251340713 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.250582251 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.24993625 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.246398899 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.250591492 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.245369212 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.250794282 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.256005897 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.251149353 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.251351779 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.250731348 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252171447 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.250586252 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251389943 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.249329953 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.254766533 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.253814288 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.255895847 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.256552605 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250776953 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.25234797 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.248856975 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.249802652 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252199207 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.250465967 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.258901507 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260471855 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264895703 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.249573225 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.25698559 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.248424474 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.255266797 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.253137964 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.256091741 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.253438821 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.252223094 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249249759 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.253078696 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.250522479 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.252085591 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.249946097 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.256609622 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.253186348 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.252166528 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255486146 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.24834806 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253035757 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.255342162 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254250174 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254605164 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.250054038 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.255050256 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.248351779 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.251384215 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.255447919 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.252674724 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.25984512 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.258243979 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251041228 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255845779 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.25532664 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.250480514 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.255071314 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254319836 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.25310942 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260892821 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.257448221 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.252753523 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262193664 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.278896543 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251194427 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.257699853 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.258614558 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.254881003 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.254124719 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.261473294 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.25762557 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.255115019 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.253418282 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251532329 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256412753 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.259867382 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.260938807 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.250719468 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.257134368 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.252680256 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.255839668 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.253433495 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.254714125 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.254120041 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257970116 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260189061 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.256554678 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253278408 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.256006253 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.256226784 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.25590498 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25554597 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.262605743 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.258385914 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.255420006 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.255542767 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.253820815 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.261112228 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.253446927 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.25699178 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.254273368 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268073965 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.271870423 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261629243 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.259154364 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.2579573 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267452692 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.258178983 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.256995648 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254365032 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256740073 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.254636688 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.254838007 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.259898379 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255978691 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.259467708 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256038888 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.257633575 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.262179113 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.259943847 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.254712623 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.259692484 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.257537713 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.258964733 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.251345168 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.259583804 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.257511366 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258647429 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.257023396 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.2559159 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263807727 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260894536 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.256288273 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.258241274 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.255786065 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.254293088 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.259820131 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.261055121 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.258252924 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.265442584 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.258281918 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.263428877 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.25773735 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.267399102 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.26076896 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.25859249 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.265991901 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.26005653 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.254692014 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.257275429 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.2602678 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263771917 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.265047534 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.255553514 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.264929088 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26010105 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.260447872 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.262174707 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.259081877 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263528289 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.259965606 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267405273 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.283672949 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.259299752 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261021085 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.262277482 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.261450442 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.262614557 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.256562874 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261650227 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.263176859 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.25806288 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.259721086 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.258780785 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.263740927 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.259861103 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.262709468 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.263149252 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.261806943 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266491571 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.265713571 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263634769 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.261487273 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.267546344 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266131037 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267782409 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.267225651 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.259908714 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.263084795 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.2641717 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.261014423 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.26010091 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.259842346 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.263825491 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.258463365 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.267394207 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.262623656 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.262093966 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.26154581 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.265749861 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.259282498 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268462448 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280913237 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.260743518 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.267012352 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.263031601 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.262081635 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.266313648 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.263477654 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.257852077 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.262298743 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268324308 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271761317 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.260636467 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.264181102 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260739489 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265234139 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.264294523 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.264210179 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.262501192 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.264341579 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.261962626 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.26426893 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265131265 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.266636343 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.262801567 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263774471 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.263012077 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.272765904 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.266871862 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.263654477 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2681735 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.268136856 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.262017309 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.263993259 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.266873335 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262390594 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266254582 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.261358779 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267212796 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.266895217 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.267706104 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.263629303 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.265779476 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.26046833 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.26409855 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265854209 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.265207021 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265197841 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.263635309 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.267634923 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.262491281 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.261192981 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.267194957 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.263272692 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268935725 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264259204 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.268531618 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264384314 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.26931749 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.267675791 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266782763 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.260953339 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.263529053 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.271605638 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271330678 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.270788013 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.269071394 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.269759487 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.265166193 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267012423 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.272141799 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.264742414 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.265325044 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.267978638 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.264286668 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.266600259 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.267363736 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269038376 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.273930508 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.267879248 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.264766727 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275573559 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.293440242 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.270872151 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.265415397 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.268960521 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.266749764 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.269018729 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269183259 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.264590158 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275264375 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.272047984 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271268485 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268344432 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.268775205 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.266009412 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271902037 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270234794 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.266796118 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.271367636 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.267324748 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.270805947 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270394123 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.269631432 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.264832453 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.266975223 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.269426764 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.270544715 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.271190401 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268836224 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.269090391 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.267788911 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272557893 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271228357 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.26893145 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.269921866 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.265143727 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268767091 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.265414261 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.269768409 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.267682528 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.266934913 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.273461941 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269387032 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266804807 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.275322179 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.276014753 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.27147021 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.266180511 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.267780367 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.272472524 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272751036 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.271477225 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265636421 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.269823995 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.273422278 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270345077 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271628468 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.269699991 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283215346 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.298777027 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266987894 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.270142638 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.272864695 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.274483204 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.272465203 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.273607909 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.271823722 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.273929996 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.277629109 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.271871839 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276054017 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296016525 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.270790014 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.276354165 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.27259081 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.276308037 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.274473094 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274784513 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.271921493 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.272436823 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.284762748 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278344069 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.278373857 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.294697142 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.27643493 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.27384685 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.274879388 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.269659086 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.274929033 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.273521102 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275736327 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.275756829 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275105529 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273790858 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.270713206 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.275907762 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.276597007 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.279962253 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.27527778 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.271093472 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.271730095 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.276042044 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.27430186 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.275434561 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.27415821 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.274195324 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.275044694 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.271257243 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286110912 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.289991822 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.27802302 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.274996762 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.275003885 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.276174752 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.276748151 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279393532 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.280659278 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275829517 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.275026802 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.273579837 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278626733 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.277140946 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.273216985 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.273276152 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271876642 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.277241714 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.286965458 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289808039 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.278861434 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.27599405 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277275862 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.278517035 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274238746 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.278451538 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276288439 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.273066137 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.274516636 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280374502 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.280207594 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.277650139 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.27624692 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.282565948 seconds)
  done (took 751.96631873 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.277534684 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278856466 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277099108 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277800322 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27744396 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277312249 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276689504 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278142705 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.279352825 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277142565 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.279187289 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279655897 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278593731 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279697568 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278649204 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278959114 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279696036 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.277018385 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279601698 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279963488 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27989445 seconds)
  done (took 28.031900877 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.279315688 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.279892733 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.279036063 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.279501687 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281744446 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.280848101 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.279329558 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278861521 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.27998205 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27890176 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278374321 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279431653 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.279450132 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.279597865 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27962511 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280009439 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279939071 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279389591 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.279232132 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.28144599 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280397451 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.280786823 seconds)
  done (took 29.341541608 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.279843446 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.27896114 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.274772723 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.280195041 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.280951941 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.281457988 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.28054546 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.280830196 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.280084106 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.276579669 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.275217089 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.277789215 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.283275198 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.285881956 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.279321214 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.281950325 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.279373904 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.280255252 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.278924468 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.281703516 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.285821375 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.287879056 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.28347017 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.277486825 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.283500279 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.282137115 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.283708638 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.281932609 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.279010519 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.283739918 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.280808452 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.277942507 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.281976589 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.281024635 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.280493558 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.285483842 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.282133769 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.282085938 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.282749727 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.287352068 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.300012503 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.282390431 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.285526933 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.28816766 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.282883385 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.281292375 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.288278424 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.281245484 seconds)
  done (took 62.726490809 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.901734178 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.003128171 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.979185623 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.933147947 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.97199502 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.923486175 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.934154278 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.01067169 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.991601789 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.999974679 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.9821898 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.993693734 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.987518306 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.001594505 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.923584006 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.979138561 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.946468949 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.94958707 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.999910394 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.920274122 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.914605231 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.912720281 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.913516775 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.935553039 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.925067875 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.914099685 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.919093998 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.915739883 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.950444787 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.961792814 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.989056349 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.988050902 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.957324143 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.98120969 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.929262158 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.91212021 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.924591041 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.914951037 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.002782974 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.965099192 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.982207808 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.973796913 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.945174057 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.920822159 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.925711902 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.950026297 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.967041358 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.920033374 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.920305102 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.93058973 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.917595959 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.934475933 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.007157476 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.01069367 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.938908833 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.9360743 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.949517178 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.945763623 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.916914371 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.918118454 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.932703835 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.936433967 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.935659009 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.916455435 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.91987185 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.014075852 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.950206957 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.966852674 seconds)
  done (took 133.834757517 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288207766 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.286765275 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286358217 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288590239 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287105936 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.287414603 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286632686 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.287797639 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.28710289 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.287014245 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287496878 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290024158 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.290566871 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.289900151 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287378013 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288236891 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287938358 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287140664 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288203806 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287688556 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.288307456 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.288870405 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.288731285 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.287592647 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28769283 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.289594182 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2885196 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.287999273 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289576189 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.28870195 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288304279 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.290048741 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.29023652 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.288434273 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.289664005 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.289191769 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288814442 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289700771 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.28956032 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.288514438 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.289105447 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288852552 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.289483553 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.290506447 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290390855 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.291372053 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290800731 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.290483423 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.29112484 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291362821 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.290459301 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.29043916 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290794398 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290980432 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.292404178 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.291504173 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292751089 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291002225 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29010814 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289056226 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291173095 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.293615949 seconds)
  done (took 81.130504471 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291859481 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.29212 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.292180112 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.292430273 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.29310817 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.291098547 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.293260039 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.290093276 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.291533856 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.291926611 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294615559 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292564145 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847441983 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292447244 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.29324984 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294569504 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.291857277 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292357915 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291424776 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293670418 seconds)
  done (took 27.601403974 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.294880951 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29232269 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.294417149 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294980408 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.292309028 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.29337841 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.293333378 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292651328 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294509168 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294620344 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294768952 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293830237 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294910326 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293281197 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.294378033 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294545109 seconds)
  done (took 21.901761971 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.294869771 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.293654225 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.294376561 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.292560485 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.292572852 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.292722718 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.293393221 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.293296285 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.295778273 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295726341 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.294839996 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.293690974 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.292538441 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.29333369 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.295563351 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.295477177 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.292983244 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.29542894 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.294553757 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.295208983 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.295622984 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.294714431 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.294811933 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.295396086 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.295939332 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.29704249 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.296351653 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.295711905 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.295811164 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.295928329 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.297012248 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.296975172 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.296776698 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.29720405 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.29564326 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.297556405 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.296609871 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.296308927 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.298203819 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.296966074 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.295870694 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.297487359 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.297412102 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.296947543 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.296871273 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.298007166 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.296699733 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.296458167 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.295544956 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.297439227 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.296159092 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.295653907 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.297002297 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.297505156 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.298411607 seconds)
  done (took 72.462726073 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297331296 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297564511 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.297656902 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.298571799 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297135041 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.297403516 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297117396 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.300227567 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299613769 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.298106585 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296918715 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299231384 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296936371 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295818218 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.2981448 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295794017 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.296171442 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297972545 seconds)
  done (took 24.558966566 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.298161283 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299434436 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.298814913 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.297764706 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.299509952 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.298219592 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298531762 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.298610312 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299309591 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.298782019 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298314237 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.298542241 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297744846 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.299870916 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.298428756 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299306474 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.297300492 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.298485283 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.299761722 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2988786 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.299198016 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299021727 seconds)
  done (took 29.77385582 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.292965978 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.294068866 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.292143614 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.309041127 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.31276761 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.293812582 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.293876604 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.293836608 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.31244022 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.335313967 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.334039505 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.312191163 seconds)
  done (took 16.878918468 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300965834 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300121725 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301738898 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301068011 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301685244 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299538181 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300558761 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301824353 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301171289 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301456021 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302047788 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302021835 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300952266 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300519468 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301407464 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301635044 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302227454 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30246392 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30184357 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302375995 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301415194 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301753785 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301314181 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30240271 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301432681 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301922137 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302754515 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302212719 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302079611 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300954743 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30509159 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30104917 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303477378 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302402012 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302646828 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302827251 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302950825 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303484619 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302332974 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303769759 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304104746 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302517763 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303323786 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3035421 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303557106 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302509992 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303733879 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303304611 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302794826 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30365757 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304188877 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30345071 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30443287 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304070304 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303759425 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306061486 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303964708 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303101264 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303496187 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30517711 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304042702 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305671348 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304993102 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302927826 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30462983 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304680073 seconds)
  done (took 87.185158495 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305739174 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304469551 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304052356 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305266348 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304861906 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305304906 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30514493 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305611981 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304799523 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30294254 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305125257 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305810167 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306658575 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30605301 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304202401 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304880541 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306349946 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304851155 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30486549 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305571859 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304656255 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305190823 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305683214 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306233692 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306779674 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305858244 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306605386 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305991384 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30514545 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305465621 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305390535 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306166424 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306895373 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305936149 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306108464 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30553829 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306504666 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306249022 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305759519 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306327713 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307554643 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307043084 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308597133 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306346411 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308012132 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305812434 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307478484 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307148713 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308216844 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307658678 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306573355 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30809647 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308571484 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30714029 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308084282 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308922417 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308016606 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307553819 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308503056 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309358389 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307433282 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308461433 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308906542 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30873852 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307365609 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308093265 seconds)
  done (took 87.437038637 seconds)
done (took 1808.591928418 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.470468764 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.421879079 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.301914965 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.32085077 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.302305899 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.308545132 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.31673162 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.303175855 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.302985252 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.303003076 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.303949583 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.496488988 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.301569148 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.30246066 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.303243192 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.401876774 seconds)
  done (took 26.673259122 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.337435877 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.310886188 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.434240707 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.330605329 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.336032276 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.525660627 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.367375209 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.310736216 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.505185616 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.330889585 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.303667153 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.333086875 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.308844324 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.300337397 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.329114418 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.526556395 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.584271494 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.302095348 seconds)
  done (took 28.98870781 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.825437775 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.331718374 seconds)
  done (took 5.368190114 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.3304429 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.309315911 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.309148839 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.308336335 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.302052484 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.304246302 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.307653397 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.303452737 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.313893385 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.455975348 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.31092645 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.322579232 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.330432709 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.310222327 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.313056962 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.357026053 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.452950854 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.313187683 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.31297587 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.315940942 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.309199062 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.419590989 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.360311617 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.316321434 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.453832078 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.319126046 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.316557954 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.31927694 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.462016333 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.315516486 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.310847302 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.310686894 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.311691709 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.305154902 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.782813473 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.33798293 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.321213214 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.339760405 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.314938633 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.468810954 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.312299488 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.317648309 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.303184958 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.792183939 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.454512772 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.442984863 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.3299014 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.311661326 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.314032664 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.381196625 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.312362147 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.312984497 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.372944663 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.154148287 seconds)
  done (took 84.318234524 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.306779355 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.305417464 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.485674176 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.326082551 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.304121354 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318687059 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.309586682 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.639586882 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.334493018 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.30654031 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.621865612 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.943363261 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.336311242 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.361248292 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.170358788 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.379647845 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.30592692 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.322857536 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.308473213 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.310930541 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898315735 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311363972 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.324312067 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.490186439 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.347700428 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.876312024 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.310253257 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.328150157 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.329769834 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.306637534 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.892837349 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.330737733 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.376827649 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.307436979 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.597516148 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.749372676 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.701987884 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.320009417 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.335769655 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.308039131 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.32495459 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.850201506 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.709505931 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.308756459 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.309057903 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.867491694 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.311899265 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.318515523 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.311599182 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.56485918 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.307674541 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.311310428 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.326339079 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.330193634 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.308456377 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.394963624 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.402202111 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.881855688 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31091023 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.308864809 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.338932141 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.308568424 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.313453881 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.313436382 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.325170984 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.711312133 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.461390959 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.31169434 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.710659616 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.884259433 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.331529547 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.945301597 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.332143486 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.311403429 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.523481692 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.312927387 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.309147944 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.884320151 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.328457684 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.309546042 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.692616878 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.312412848 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.620022006 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.341736295 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.311680823 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.915775759 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.323948101 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.317936407 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.309292514 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.310153907 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.309543999 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.315628245 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.605822855 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.375691536 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.309278291 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.310898332 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.340086464 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.325758761 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.314348685 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.320709545 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942268937 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.344055213 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.311068121 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.312522029 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311225743 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.316357714 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.31163935 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.31276076 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.583884196 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.310845404 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.332880853 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.313312204 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.311099631 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.317276999 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.492743261 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.315706772 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.685159056 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.31862727 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.312219827 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.338012884 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311007664 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.385370866 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320436054 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.315804864 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.243093741 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.576113167 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.332324208 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.315138387 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.313227716 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.311815478 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.312173466 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.334636572 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.318692159 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.315628069 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.156586234 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.357537458 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.325793148 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.3118396 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.313845956 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313001613 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.341905825 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.314285192 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622430586 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.609541539 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.470666396 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.329589238 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.313196881 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.15047105 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.38113487 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.497535505 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.334685078 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.314526186 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.566530967 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.540746233 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.313745594 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.313989609 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.314380592 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.582557154 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.313803692 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.635338925 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.910706695 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.334646913 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.315189846 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.156217478 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.034468887 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.318802389 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.316099368 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.617540745 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.333958319 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.315823901 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.314207429 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.315589541 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.333900344 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.338261197 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.323220159 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.317371183 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.316649076 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.368190335 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.510307464 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.335330566 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.320445618 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.868334813 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.334855617 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314728946 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.322354636 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.319351336 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.31470939 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.393841671 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.317301559 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.334989557 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.316330219 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.319267022 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.885747857 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.32441569 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.317548499 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.510481964 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070755167 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.341611615 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.318059348 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.337172649 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.212377973 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.895606512 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.360242943 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.683960094 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.32893185 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.358015508 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318212207 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.342850631 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.894043676 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.320064426 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.337695116 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.036451017 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.343327215 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.908792664 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.320252919 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.321390448 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.990735772 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.342901893 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.326454434 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.320283231 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.349702341 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.62532611 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.321753229 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.341640514 seconds)
  done (took 496.233271504 seconds)
done (took 642.791262308 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.321263215 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.326489968 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.317845266 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.324101266 seconds)
  done (took 10.521396703 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.333508282 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.325088309 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.332647223 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.325700945 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.332267483 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.326178346 seconds)
  done (took 9.207341479 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.319604478 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.325800198 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.325557843 seconds)
  done (took 8.203331793 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.558412906 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.345266896 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.700593069 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.350833291 seconds)
  done (took 9.187118571 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.331987112 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.3315212 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.331496826 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.332865697 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.334431592 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.3342518 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.335171019 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.333881178 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.335218809 seconds)
  done (took 13.23026437 seconds)
done (took 51.58008887 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.38405468 seconds)
    (2/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.376122062 seconds)
    (3/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.542891492 seconds)
    (4/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.380692304 seconds)
    (5/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.578827538 seconds)
    (6/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.505451877 seconds)
    (7/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.446171109 seconds)
    (8/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.316942924 seconds)
    (9/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.370596464 seconds)
    (10/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.601261382 seconds)
    (11/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.318281674 seconds)
    (12/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.407675484 seconds)
    (13/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.32860732 seconds)
    (14/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.391847446 seconds)
    (15/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.35743909 seconds)
    (16/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.339989826 seconds)
    (17/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.343794009 seconds)
    (18/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.41375888 seconds)
    (19/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.384299241 seconds)
    (20/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.425333208 seconds)
    (21/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.297015358 seconds)
    (22/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.270513774 seconds)
    (23/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.652698311 seconds)
    (24/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.31974983 seconds)
    (25/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.495333886 seconds)
    (26/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.549088129 seconds)
    (27/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.387205553 seconds)
    (28/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.410386406 seconds)
    (29/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.475460133 seconds)
    (30/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.174389105 seconds)
    (31/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.380327291 seconds)
    (32/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.457616325 seconds)
    (33/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.469074039 seconds)
    (34/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.31654291 seconds)
    (35/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.413698865 seconds)
    (36/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.344844948 seconds)
    (37/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.436705668 seconds)
    (38/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.326939483 seconds)
    (39/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.435967828 seconds)
    (40/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.320397922 seconds)
    (41/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.554291866 seconds)
    (42/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.401857444 seconds)
    (43/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.342071397 seconds)
    (44/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.359441083 seconds)
    (45/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.31672227 seconds)
    (46/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.316958283 seconds)
    (47/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.38131006 seconds)
    (48/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.044791684 seconds)
    (49/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.515314063 seconds)
    (50/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.486720873 seconds)
    (51/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.334308586 seconds)
    (52/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.40494544 seconds)
    (53/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.390106541 seconds)
    (54/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.330892996 seconds)
    (55/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.32166404 seconds)
    (56/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.430968754 seconds)
    (57/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.318021753 seconds)
    (58/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.324656902 seconds)
    (59/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.023272106 seconds)
    (60/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.448875041 seconds)
    (61/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.555185382 seconds)
    (62/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.409320464 seconds)
    (63/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.319475457 seconds)
    (64/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.124809305 seconds)
    (65/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.449309458 seconds)
    (66/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.161187849 seconds)
    (67/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.450398349 seconds)
    (68/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.319318739 seconds)
    (69/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.326757164 seconds)
    (70/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.482162959 seconds)
    (71/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.503889721 seconds)
    (72/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.400469258 seconds)
    (73/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.519368684 seconds)
    (74/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.482843052 seconds)
    (75/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.375908034 seconds)
    (76/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.53176888 seconds)
    (77/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.409192192 seconds)
    (78/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.986382454 seconds)
    (79/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.376452087 seconds)
    (80/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.481010513 seconds)
    (81/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.526300054 seconds)
    (82/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.414580148 seconds)
    (83/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.320235415 seconds)
    (84/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.567029879 seconds)
    (85/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.437375422 seconds)
    (86/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.332445172 seconds)
    (87/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.14646056 seconds)
    (88/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.446923792 seconds)
    (89/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.50159149 seconds)
    (90/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.474261735 seconds)
    (91/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.322447265 seconds)
    (92/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.370577196 seconds)
    (93/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.558131503 seconds)
    (94/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.40983997 seconds)
    (95/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.499051958 seconds)
    (96/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.320543988 seconds)
    (97/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.332995423 seconds)
    (98/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.49652958 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.463408253 seconds)
    (100/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.406497072 seconds)
    (101/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.375809528 seconds)
    (102/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.304139404 seconds)
    (103/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.167876682 seconds)
    (104/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.014438859 seconds)
    (105/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.440115655 seconds)
    (106/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.365941686 seconds)
    (107/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.104586106 seconds)
    (108/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.468126791 seconds)
    (109/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.330077781 seconds)
    (110/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.481931068 seconds)
    (111/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.365420891 seconds)
    (112/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.56249972 seconds)
    (113/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.71350605 seconds)
    (114/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.42713098 seconds)
    (115/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.390073756 seconds)
    (116/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.451083422 seconds)
    (117/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.361699021 seconds)
    (118/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.483767792 seconds)
    (119/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.063136528 seconds)
    (120/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.561214593 seconds)
    (121/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.373739632 seconds)
    (122/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.024456922 seconds)
    (123/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.368397215 seconds)
    (124/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.505224045 seconds)
    (125/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.383863446 seconds)
    (126/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.480549417 seconds)
    (127/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.454023105 seconds)
    (128/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.554143174 seconds)
    (129/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.389649692 seconds)
    (130/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.016940244 seconds)
    (131/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.368556216 seconds)
    (132/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.538496088 seconds)
    (133/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.327113727 seconds)
    (134/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.364580641 seconds)
    (135/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.36697268 seconds)
    (136/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.370623392 seconds)
    (137/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.455676346 seconds)
    (138/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.328373556 seconds)
    (139/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.352621474 seconds)
    (140/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.018975177 seconds)
    (141/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.347406724 seconds)
    (142/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.387699046 seconds)
    (143/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.992371205 seconds)
    (144/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.333401519 seconds)
    (145/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.254441759 seconds)
    (146/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.488880189 seconds)
    (147/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.430596304 seconds)
    (148/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.369891436 seconds)
    (149/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.0962134 seconds)
    (150/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.117168827 seconds)
    (151/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.359384518 seconds)
    (152/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.372020988 seconds)
    (153/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.363998161 seconds)
    (154/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.461599632 seconds)
    (155/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.408277767 seconds)
    (156/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.364998385 seconds)
    (157/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.506658144 seconds)
    (158/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.3928428 seconds)
    (159/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.372153967 seconds)
    (160/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.559956934 seconds)
    (161/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.530166619 seconds)
    (162/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.445249267 seconds)
    (163/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.324680112 seconds)
    (164/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.330549732 seconds)
    (165/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.380594686 seconds)
    (166/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.367955541 seconds)
    (167/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.367190479 seconds)
    (168/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.343845085 seconds)
    (169/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.386911319 seconds)
    (170/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.324221949 seconds)
    (171/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.461625439 seconds)
    (172/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.354400766 seconds)
    (173/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.357793157 seconds)
    (174/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.427479323 seconds)
    (175/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.369508962 seconds)
    (176/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.331301937 seconds)
    (177/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.481424466 seconds)
    (178/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.373871774 seconds)
    (179/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.443444928 seconds)
    (180/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.540389082 seconds)
    (181/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.395441359 seconds)
    (182/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.349961977 seconds)
    (183/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.452998191 seconds)
    (184/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.488258245 seconds)
    (185/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.026349172 seconds)
    (186/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.382150364 seconds)
    (187/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.368351418 seconds)
    (188/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.429781315 seconds)
    (189/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.510795698 seconds)
    (190/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.46698078 seconds)
    (191/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.326283179 seconds)
    (192/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.683189642 seconds)
    (193/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.09305305 seconds)
    (194/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.492016738 seconds)
    (195/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.339845412 seconds)
    (196/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.375847899 seconds)
    (197/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.327393906 seconds)
    (198/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.326858247 seconds)
    (199/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.335653397 seconds)
    (200/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.401259097 seconds)
    (201/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.150045766 seconds)
    (202/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.513531963 seconds)
    (203/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.369974582 seconds)
    (204/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.148733813 seconds)
    (205/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.423078203 seconds)
    (206/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.449961618 seconds)
    (207/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.386258643 seconds)
    (208/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.498291103 seconds)
    (209/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.387181432 seconds)
    (210/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.366082609 seconds)
    (211/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.52637437 seconds)
    (212/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.456861466 seconds)
    (213/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.130790919 seconds)
    (214/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.349574024 seconds)
    (215/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.433404763 seconds)
    (216/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.469871147 seconds)
    (217/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.327392097 seconds)
    (218/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.349327736 seconds)
    (219/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.567468431 seconds)
    (220/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.405804205 seconds)
    (221/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.52574449 seconds)
    (222/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.347000706 seconds)
    (223/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.340138178 seconds)
    (224/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.350235629 seconds)
  done (took 388.70901434 seconds)
done (took 389.941434804 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390829672 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.528272986 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.342837369 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.342450968 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388970279 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.336216539 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.411553244 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.362447479 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.353488114 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.35405886 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.335603444 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.361110802 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.356472624 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.382001728 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.458841017 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.351612281 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.34427007 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.35032842 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.392050708 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.411480441 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.389547396 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390377839 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.363077961 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.34361099 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394615568 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39168609 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.350330621 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.353574865 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.357770519 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.391796495 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.354064209 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.35564822 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.401455345 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.401907084 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.391257544 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.3523176 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390778872 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.526451049 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.388189353 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.385405701 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.35742359 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.402682394 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.360302919 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.357489408 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.400249394 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.365896849 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.394417762 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.470044289 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.355665246 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.359568004 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39854338 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.411882463 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.357427115 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.356544161 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.343256143 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.495559803 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.35240113 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397160457 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.354462747 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392817021 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.460849974 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394534796 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.413334029 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.395283983 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.354083757 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.361325672 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.353454259 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.412826158 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.354668845 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391285668 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.391990989 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.358176995 seconds)
done (took 108.803785899 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.475672191 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.340645958 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.490145155 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.354272317 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.515806137 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.500323948 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.353650295 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.354258165 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.352397258 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.204214101 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.354108587 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.353507319 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.344585013 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.352609485 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.477436706 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.354164324 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.353994655 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.091870282 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.356605118 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.496832021 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.347351939 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.354150991 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.354306309 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.214459814 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.345711705 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.345383019 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.49512941 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.355272734 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.110716583 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.344871876 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.34857824 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.105232102 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.499745437 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.37421057 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.363473001 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.365176578 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.517630306 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.375985322 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.479251574 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.478905842 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.492120584 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.391926209 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.344765635 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.349053665 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.35619045 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.354948491 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.355150818 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.384388545 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.353803435 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.356305285 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.096827026 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.365112794 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.355725733 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.356445008 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.356913049 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.384693127 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.35666405 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.356682648 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.499150325 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.356704284 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.479637535 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.217766323 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.20457344 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.357441331 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.349733154 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.358183631 seconds)
  done (took 110.097070164 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.418237714 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.430635589 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.469400424 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.371314241 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.403652051 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.475759663 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.371477402 seconds)
  done (took 11.192452213 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.358864698 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355645242 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.401187873 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.401642687 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.355935146 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.509401288 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357071519 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.364473855 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.357521459 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.404942596 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.358423894 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357714413 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.367286846 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.35270499 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.400873293 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.364649587 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.467859267 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.354541317 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.359050965 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.51100627 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35846816 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.369000694 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.407606506 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.366262141 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.35848043 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.361005885 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.128506011 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358011943 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357915854 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.358562683 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357741996 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.407373291 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.358910081 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.352695575 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359670003 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.470849871 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.361028012 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35924443 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.36018357 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.355986097 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.359549732 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.360323408 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.360569197 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.360010416 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.360759453 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.379868141 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.360037867 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.361108296 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.359667072 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.361168389 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.406540263 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.361040593 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.360627794 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.360666963 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.412418923 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370740698 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.361892911 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.362594433 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.363362291 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36206735 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.513545141 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.404907502 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.360738753 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.404117845 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.361953422 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.361589877 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.361470486 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.362159896 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.447244355 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.362662167 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.405499028 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.360888316 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.540017715 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.38222683 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364261665 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.360862066 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.360803815 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.360659008 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.355056807 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.363768561 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.363176188 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.36002269 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.364522311 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.364349762 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363185086 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.514949122 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468652827 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.363050684 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.380442663 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.365336474 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.363365253 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.412144124 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.363196084 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.362967062 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.410688485 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.473426984 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.413294071 seconds)
  done (took 140.032179096 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.371617458 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.370259615 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.363147433 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.387264951 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.36002302 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.35953804 seconds)
  done (took 9.470378526 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.361033163 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.366660021 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.36344269 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.364777237 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.363397552 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.363531706 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.364069452 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360592504 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.368758927 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.365332288 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.363676539 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.365409865 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.365068277 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.36340429 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.363956876 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.364697909 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.363150625 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.3646187 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.364692248 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364503434 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.357642299 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.364408751 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.365499215 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.361239821 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.368009529 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.364981679 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.382723821 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.366454927 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.366204681 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.367154471 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.387191295 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.364363955 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.361834506 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.367223746 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.369349466 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.36214053 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370850907 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.366799095 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.3651688 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.366275756 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.366306092 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36538726 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.366582835 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.36773694 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.364878968 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.366538841 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.370041495 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383958467 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.365269049 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.367518914 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.367679712 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.367667905 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.366329298 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.367966055 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.365996915 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387655114 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.372335743 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.368301601 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.367140581 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.366174136 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.371779057 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.368040878 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.365269455 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.371777964 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.367654325 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.369074102 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.365854188 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.373082479 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368440644 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.369598997 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.368750694 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.369265512 seconds)
  done (took 100.704000851 seconds)
done (took 372.744384949 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.371530359 seconds)
  done (took 4.635308048 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.634637054 seconds)
  done (took 3.901166879 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.491257808 seconds)
  done (took 25.761903454 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.391836435 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.424901065 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.382927349 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.36706935 seconds)
  done (took 10.830420841 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.792276335 seconds)
  done (took 4.055971559 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.379773919 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.377615583 seconds)
  done (took 6.024515046 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.686286967 seconds)
  done (took 3.950593553 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.848368843 seconds)
  done (took 4.121318489 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.373963066 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.383599874 seconds)
  done (took 6.032026843 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.363824118 seconds)
  done (took 3.628639464 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.75208897 seconds)
  done (took 39.017973717 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.369831328 seconds)
  done (took 3.638116062 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.403548373 seconds)
  done (took 3.668758869 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.56762227 seconds)
  done (took 6.831128597 seconds)
done (took 127.361489249 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.35940904 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.366212619 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.364713084 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.36417207 seconds)
  done (took 10.71928655 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.422903488 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.42338241 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.424496873 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.423442292 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.422386763 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.423830108 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.411826618 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.39576638 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.423007158 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.423232056 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.422748203 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.421375715 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.423038808 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.397345793 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.42217552 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.424360414 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.423936475 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.424901472 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.398432516 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.426061605 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.373628207 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.424161345 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.426121919 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.375688098 seconds)
  done (took 35.245807062 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.90255612 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.439520317 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.523668632 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.438019551 seconds)
  done (took 7.570409545 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.449656043 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.450239088 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.463860571 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.504031743 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.515120647 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.464380519 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.39808451 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.395293667 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.380573854 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.450814474 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.501789555 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.441408066 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.529723769 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.371955279 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.579265306 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.372756838 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.37478826 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.450777597 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.503378771 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.516103401 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.374522192 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.449367742 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.453202947 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.442705164 seconds)
  done (took 36.101878755 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.38473498 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.389376301 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.377051053 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.390734972 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.37610117 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.377242467 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.37536088 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.381182436 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.374447105 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.374506608 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.376025441 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.390326632 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.379029445 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.374923108 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.3832305 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.376578834 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.383252695 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.379596932 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.376741052 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.382764256 seconds)
  done (took 28.872415016 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.364713847 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.363494983 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.713551381 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.620600792 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.366217493 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.370638671 seconds)
  done (took 14.069137635 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.454439217 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.62769576 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.370435262 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.805245136 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.899856858 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.37666242 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.372308465 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.658822852 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.057287785 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.029607792 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.44526914 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.453990654 seconds)
  done (took 20.821919331 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.372929915 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.366965651 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.368163729 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.380072356 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.435494273 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.394027146 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.377976629 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.365769347 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.43522893 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.459549543 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.395582168 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.437433797 seconds)
  done (took 22.060534168 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466045973 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372662311 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.382921137 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463272988 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372212911 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220585149 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379123613 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.167733542 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.40425373 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648111219 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379820455 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471509811 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.627532315 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39169459 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375470229 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.360087752 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.602291026 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936836239 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38055895 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38660747 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403858747 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391031236 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385242899 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.619378453 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376633124 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373647489 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.635713237 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.372651629 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702338443 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.391931663 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383646579 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373578309 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648838002 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09205745 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495624708 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.621560354 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37774094 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37540073 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.383388365 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.393572279 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392412394 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376967978 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383676163 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373634655 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.374535813 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393928017 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151135837 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.405236346 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.375495536 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37506509 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67644873 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471964398 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.380606124 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.375112586 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399501512 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375161733 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.380264461 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509413127 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977227582 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375350543 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399137377 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.379941151 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389595884 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391236162 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060845344 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.382925097 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.38131994 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381402414 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37557442 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389331171 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392706772 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37687336 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.401637331 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377064666 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234351056 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380167128 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378019816 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98433589 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378977319 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.383343724 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608612689 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376314973 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375767362 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.376497801 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377158827 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163591124 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385785721 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.364263186 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419747213 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.166434389 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.6452178 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399181029 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408764792 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601268836 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.363928572 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378038753 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.377741243 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400675632 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400503085 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.149284579 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40085409 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.385144332 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636556808 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.588742302 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395511402 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.378406067 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913143825 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400848468 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.401298732 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379524765 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.654785181 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.045566452 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394781087 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39531635 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398990128 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.379807907 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233323395 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38486883 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.487156052 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380124638 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687877025 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.287689215 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386147627 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447848781 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383081624 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379505745 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379963439 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404416243 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37977219 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.617715398 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403709839 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.395748024 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.380031231 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379096619 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.396276248 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39631259 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.383119213 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604341705 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380681221 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662914751 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380456319 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38164203 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381345735 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.60245257 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.393212469 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.718792929 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643722339 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381227736 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.385804039 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416076848 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399840053 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48388302 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402506416 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.380764843 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.644758065 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.388895848 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.387628235 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380541773 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.402835225 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385902386 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.389948956 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390480953 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048762006 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366091948 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390278585 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.274014118 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.39817668 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448918182 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390005991 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630989143 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.395655492 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378194059 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.412390358 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.383444158 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608003308 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392463519 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.40248599 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461280935 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.916827179 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.070469411 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400878549 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.383497767 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.382340471 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.385607767 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386088199 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387212969 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388361355 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.632330859 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402856834 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391188184 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.060783417 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389666083 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384209772 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.410312024 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.395858722 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.390742651 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384407947 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.385388681 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389398643 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411684918 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.400086106 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527600483 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.400179268 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38546509 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902527446 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.392897277 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385353399 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384785525 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418437435 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384325995 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303019012 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669295717 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383627266 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.691287986 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402493834 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.402535223 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.385649045 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386736094 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388982644 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.409984212 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393830127 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.395495944 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385973885 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40834348 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9600268 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255833818 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999506239 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389139352 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.410437993 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391350281 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.163409928 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409236804 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38613125 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65072375 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180633802 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411069988 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924082851 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.423369486 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29353938 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700745748 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625360365 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388341859 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.415180713 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.697088151 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602987574 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422094606 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38818947 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391377587 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.373650136 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015409808 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408957687 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.471659087 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18922128 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4155541 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390216505 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.402565342 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.38975349 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85351373 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41134657 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389700798 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395245244 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396161939 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306894577 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417534854 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390328431 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077299597 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.391043479 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.929479529 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411616017 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637665586 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.400936328 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.393168901 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.390069858 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.421296307 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.643653113 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697184875 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392290909 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389998337 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011865251 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.262354608 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.397395809 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389769652 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215337097 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399728183 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726227226 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.400195666 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.413647763 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392716884 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.391273096 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390713517 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.391500675 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394254738 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371441189 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942820279 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.38946311 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405724511 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396943855 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396214744 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648128129 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.406897117 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071509507 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627001384 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408457385 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414906291 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.396790877 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407538645 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.3851374 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393793083 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392017826 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408781826 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.615741734 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406842923 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.379981993 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467701693 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604084894 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.392652146 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400102254 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668103904 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.39340022 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.396394476 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283351046 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444826277 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398195954 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395662691 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.413115466 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435177744 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462204617 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649606396 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.41024804 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.403292774 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864441 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429910626 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395693936 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.408699231 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489031682 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392971631 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.406525098 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.173730943 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.078891081 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317593499 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.082472481 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710081509 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40150442 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402952106 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394002361 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557793713 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394291072 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668741884 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393910182 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.389567181 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417751475 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408866723 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406717582 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609583689 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67215101 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395294629 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402524602 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399224414 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.39500095 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40470647 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.605523659 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951657923 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01627597 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398403282 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405825529 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.179035271 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694550005 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396445605 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396323728 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397099709 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.400057869 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.417726803 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.4039516 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414058909 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543943009 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703927669 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121267558 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.430459941 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.427388006 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.917073217 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397299715 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.653759031 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397712769 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.672267393 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07495822 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.201380224 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665252711 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468421125 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653512634 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.402753983 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559092852 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.401833709 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401333426 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399231339 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398043446 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.399430418 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.407220326 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.074328218 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667934708 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.404546523 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.400949941 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432890838 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.406976478 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622194077 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.220874371 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627999418 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40904158 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403899723 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399531912 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.088287309 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.717278144 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405786024 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.406803119 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682643743 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406554095 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429200047 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.097891018 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.400247697 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015198558 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.3752206 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422281002 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412796565 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.207393446 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08966167 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.424805491 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963125423 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402309541 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41301048 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681386113 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.407903212 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414379395 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682087405 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.406556816 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416976039 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657579514 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.087600321 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.330311687 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.410111816 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424586132 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.404147152 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401934537 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484393599 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4029891 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402621859 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.879887294 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424509523 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402025322 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414395349 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.408856513 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419549076 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.40648675 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401635561 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.409731649 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.433428882 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.41351489 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426112471 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536989812 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038695573 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42672001 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.089106268 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.728217408 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.659326291 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416021949 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.393264796 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.407829801 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402567366 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402877094 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403921369 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420146598 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054563834 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.42450656 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.417963639 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40806274 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.405360833 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614910772 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420551726 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667052226 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42589973 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427599616 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.391189417 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404014813 seconds)
  done (took 990.430794501 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.40831271 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.493048342 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.439554735 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.466053627 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.444621029 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.438525006 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.474167738 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.446083247 seconds)
  done (took 20.910569549 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.405172746 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.413298251 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.408294775 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.415185359 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.413013064 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.964316345 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.431210422 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.41394619 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.425007611 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.410064965 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.408720269 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.397342157 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.438244603 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.405601757 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.404668413 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.415821137 seconds)
  done (took 33.477857217 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.909691171 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.710840744 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.369163048 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.424925888 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.44811269 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.404694311 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.870313332 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.42378732 seconds)
  done (took 28.863792478 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.411485715 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.411651778 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.413191016 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.414932224 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.414024761 seconds)
  done (took 8.366851623 seconds)
done (took 1258.778371547 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.411806414 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.411473626 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.412487739 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.411443143 seconds)
  done (took 6.949883378 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.392323192 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.394212634 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.397951823 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.411690136 seconds)
  done (took 9.898505725 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.25112771 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.121831657 seconds)
  done (took 5.675336749 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.916370225 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.929885668 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.919016085 seconds)
  done (took 7.066900095 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.696989053 seconds)
  done (took 2.998988066 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.326908308 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.405543616 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.100411598 seconds)
  done (took 8.134507091 seconds)
done (took 42.025566837 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.401650447 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.656836131 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.561018326 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.403202695 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.56198963 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.559621072 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.25030361 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.417644204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.417751124 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423012682 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.404230781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.563940083 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.167201936 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.656208968 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.162401137 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.657736172 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.566163787 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.42263541 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.408909542 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.423078481 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.258906466 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.417140452 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.416642994 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.413353325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.570549091 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.550697937 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.42150797 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.659080214 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.404537439 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.404249181 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.575433536 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.404088861 seconds)
  done (took 83.884572075 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.414857097 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.405511555 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.426790635 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.424395183 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.423255951 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.410296475 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.424673897 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.428211104 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.422193365 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.40973871 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.426749356 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.424441543 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.422731897 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.406360251 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.405768109 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.427109374 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.415446252 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.405336475 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.427810303 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.426003718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.406137606 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.428859195 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.41597397 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.405150323 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.417217052 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.408592945 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.425445121 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.415007248 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.405421577 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.406619224 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.431937969 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.435571111 seconds)
  done (took 78.686332113 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.422180581 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.423447486 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.433252511 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.422663617 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.411383179 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.446003682 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.408392012 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.411442183 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.411599288 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.412972357 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.431524349 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.446632512 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.41321713 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.411789062 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.408644169 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.416869208 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.411521326 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.451460482 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.412740147 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.433036647 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.430964288 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.408083646 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413909231 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.413269956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.41264795 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.435031564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.427519561 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.409703338 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.413124424 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.413193122 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.415139342 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.434555253 seconds)
  done (took 78.777170532 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.694394746 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.420070722 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.422997287 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.414288953 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.424875065 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.421462884 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.415070134 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.697369505 seconds)
  done (took 15.220215541 seconds)
done (took 257.870345766 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.433773984 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.996906424 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.46660512 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.413294029 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.460202929 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.441659574 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.663049092 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.460495928 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.664102032 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.449663588 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.440280085 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.415704359 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.378548994 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.58187623 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.363929059 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.420460984 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.431051692 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.415113961 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.077952594 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.733365911 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.442698335 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.416910484 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.355811962 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.456511376 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.414854621 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.508278909 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.535488506 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.665939942 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.596442415 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.509954007 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.021260176 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.422273485 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.430433593 seconds)
  done (took 66.794635634 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.417276262 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.547989605 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.422395086 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.422214886 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.551209364 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.446705729 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.417900224 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.42308473 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.422485254 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.423245652 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.422866303 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.422905684 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.424175288 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.471743397 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.547545117 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.440816378 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.418745173 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.541382175 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.417366598 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.421842272 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.472051835 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.425295932 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.425396984 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.475029476 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.42488852 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.425574553 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.54549631 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.447420492 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.426294344 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.543444726 seconds)
  done (took 44.947062575 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.424605768 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.118360205 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.291510279 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.432060399 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.421449588 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.425116219 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.777498772 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.429872686 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.424568915 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.424105577 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.999535832 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.432570694 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.459111712 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.313113271 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.429388808 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.426368657 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.426828453 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.422045057 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.121881423 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.434899197 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.799458096 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.431823601 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.776813802 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.436166005 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.447855809 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.423322561 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.427560425 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.31272569 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.449689491 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.99772395 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.379868794 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.776675106 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.243278908 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.326064518 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.384870884 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.434967453 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.427758932 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.006963151 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.429004182 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.424480269 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.778062037 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.430031998 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.306301456 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.161193583 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.449566493 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.428973888 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.369138753 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.035181722 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.732174251 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.435928409 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.326482345 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.432052459 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.429881468 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.427011641 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.724705068 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.431089514 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.426187254 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.402340838 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.45874608 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.780993551 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.434902033 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.426329566 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.126411029 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.431435849 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.122128885 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.43283294 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.435306382 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.451302869 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.297295911 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.435884025 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.166086067 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.446711191 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.431210934 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.99812431 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.117343539 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.405561522 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.427227323 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.124590791 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.294097731 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.806241921 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.433255607 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.30460326 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.810283385 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.433844847 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.432027855 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.433214879 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.431591206 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.510244618 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.778578408 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.109397823 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.16162486 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.38251628 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.808166366 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.438944866 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.42888612 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.364321429 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.453952235 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.432521099 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.287019048 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.162156175 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.45221632 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.435463291 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.17658647 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.451347495 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.785586691 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.437975116 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.308062088 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.433841907 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.509602366 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.432175701 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.434872563 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.455571771 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.786575992 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.437850643 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.433044009 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.152570212 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.039037407 seconds)
  done (took 203.827957265 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.426573975 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.421954518 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.424420508 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.423381723 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.424307749 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.431283566 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.424154005 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.424348036 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.427972739 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.424652191 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.42190282 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.433253243 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.429136574 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.423393692 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.423876915 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.424232676 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.422905978 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.450687527 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.425642494 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.422149515 seconds)
  done (took 45.851999405 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.434268182 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.094121789 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.102271631 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.441500953 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.43457194 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.430839435 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.498084913 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.435617895 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.434636253 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.801781882 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.64718457 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.461878717 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.436247021 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.435679845 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.089686307 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.431882755 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.787726821 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.096299019 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.435968975 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.096235211 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.428330511 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.434983395 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.429655861 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.123792472 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.818705197 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.784642009 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.504605738 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.131854591 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.460912174 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.437556005 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.13240922 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.441474848 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.431581855 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.135026087 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.463389712 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.450273215 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.438005707 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.501069771 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.502886879 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.792400735 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.219450345 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.820706064 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.454375915 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.63670203 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.436783495 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.425980954 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.14584258 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.463026142 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.426959194 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.438245938 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.442763141 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.097903696 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.458882528 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.098870738 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.463570839 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.438188707 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.132096528 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.105360667 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.120720158 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.649329223 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.459260105 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.789433232 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.443619268 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.143032551 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.463713549 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.438112214 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.436923192 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.64450552 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.166638361 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.796422097 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.81728928 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.815068683 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.446201699 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.50982341 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.461173653 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.88988196 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.512679769 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.901553065 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.808252582 seconds)
  done (took 133.615747253 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.752015813 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.568065317 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.906307803 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.099673544 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.436458384 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.583116672 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.56357218 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.725250632 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.439836269 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.519884939 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.218038868 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.568750728 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.283991953 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.539646394 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.556088167 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.6044392 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.893572586 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.429737049 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.211602869 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.170231683 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.439027685 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.573054577 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.016333889 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.683178586 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.435554558 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.094572604 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.455464733 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.18982873 seconds)
  done (took 56.283973839 seconds)
done (took 552.629019906 seconds)
SAVING RESULT...
DONE!
