cset: moving following pidspec: 3531
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.535739614 seconds)
loading group "shootout"... done (took 1.177280043 seconds)
loading group "string"... done (took 0.398018372 seconds)
loading group "linalg"... done (took 7.491599881 seconds)
loading group "parallel"... done (took 0.142412677 seconds)
loading group "find"... done (took 1.248321364 seconds)
loading group "tuple"... done (took 1.799596327 seconds)
loading group "union"... done (took 11.893522771 seconds)
loading group "dates"... done (took 1.23865049 seconds)
loading group "micro"... done (took 0.189609727 seconds)
loading group "simd"... done (took 4.093748019 seconds)
loading group "io"... done (took 0.977294936 seconds)
loading group "random"... done (took 8.378290325 seconds)
loading group "problem"... done (took 1.531955747 seconds)
loading group "array"... done (took 18.04321648 seconds)
loading group "misc"... done (took 1.432329404 seconds)
loading group "scalar"... done (took 37.086703823 seconds)
loading group "sort"... done (took 2.929935166 seconds)
loading group "sparse"... done (took 11.092800426 seconds)
loading group "collection"... done (took 16.313917281 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.478499905 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119559432 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.123928385 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.112032289 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.137721913 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115081284 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.120081381 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.081352169 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.873660954 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.137247117 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.109262851 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.426170644 seconds)
done (took 5.132325586 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.161453431 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083012569 seconds)
    (2/2) benchmarking "String"...
    done (took 0.073901069 seconds)
  done (took 1.255932991 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.059730453 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126765675 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.060955911 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.061414953 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06196538 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06103193 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.060840652 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.060763477 seconds)
  done (took 1.59270037 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067192201 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.062487989 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.060469432 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06282078 seconds)
  done (took 1.353838254 seconds)
done (took 5.539880231 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.226742879 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.096319122 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.276034421 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.383292392 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.43912187 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.085504922 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.068725326 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.064518614 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.121531877 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.306862628 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.098389164 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.173799676 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.085008775 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.167401353 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.954990852 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.11353041 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080039107 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.116580189 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087854621 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.125636005 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.401407662 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.072494508 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.068905438 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.064713742 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06339337 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.644411215 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665658826 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.125523479 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078124889 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.096875429 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.11107798 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.637809664 seconds)
  done (took 10.23239706 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.088989096 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.086228756 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.063428108 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.118912478 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.087416026 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.064311958 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.06953001 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.062404496 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085272378 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.118686228 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.084079565 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.094070261 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.061115384 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.063684425 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.070566271 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.191181997 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.074078085 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.074799256 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.062864418 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07452532 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.101005183 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.072774364 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.073154954 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.073095406 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.122448008 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.162824068 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.091012552 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.092299884 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.062826887 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.074522913 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.110019839 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.122131176 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.061150449 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.060378182 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.114542712 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.089319193 seconds)
  done (took 4.331303904 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.919013804 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085248802 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.096976037 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.594583669 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06051724 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.1436866 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.23145247 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066920231 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.43701874 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.136218156 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.137619536 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.136893436 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.107859565 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064110785 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.193473988 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.107839524 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.328080259 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.061962831 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.060894942 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.059375698 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.063104529 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.0620654 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059045047 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06569248 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.08642174 seconds)
    (25/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077734073 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.079997142 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.161841573 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.913786587 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.238044289 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.062057072 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.153731233 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.082186107 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.357841905 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.066142204 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077847733 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.385567008 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.116997038 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.060133411 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.158740605 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.110297998 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064166067 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.11203139 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.074654571 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.065393065 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.065207199 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.064719269 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070404657 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.074628695 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097641926 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.06224302 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.060198714 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.155050765 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.059470285 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06105711 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.062225838 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.144608135 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061577348 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.135256034 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.059311195 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.063185692 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093057187 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.062858058 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.085140794 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.095971261 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.328804678 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.059563861 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.052828076 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062431081 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.225566591 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.071948755 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.060987955 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065251309 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061071184 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.062194659 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061596707 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.068271136 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.06408705 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.063039807 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.102703729 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.061197996 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.063971648 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.061099211 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066004032 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.092141399 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064741356 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.458880693 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.094074896 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063386967 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.073408543 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.101557854 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061902559 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.067485451 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.061443872 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.061682803 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061526104 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.062500227 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064904003 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.171570142 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.088368199 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.059211587 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.064336075 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.107487904 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.043151016 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063276252 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061711343 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066074263 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064420875 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.064039954 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061276979 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.063969002 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.062371865 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.059767932 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.105416208 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.061596754 seconds)
  done (took 21.10882185 seconds)
done (took 37.690107005 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.241320284 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076251086 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076563353 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076305168 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076268564 seconds)
  done (took 1.743331599 seconds)
done (took 2.931054004 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.101271749 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.05923971 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.095049492 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.095239351 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063135774 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060402488 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.093835984 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060710215 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.093312447 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.094995977 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.09698646 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.096353556 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060083668 seconds)
  done (took 2.263125713 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064360126 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.074965926 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.07719373 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058648875 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068280529 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.076305841 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058131832 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.074648296 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081359305 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.075682287 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.075536772 seconds)
  done (took 1.967400249 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064546803 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.075647502 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077607778 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057913614 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072851774 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077517411 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058367879 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077145003 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.080852291 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076739857 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077319022 seconds)
  done (took 1.969074333 seconds)
done (took 7.373877472 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.063562616 seconds)
  done (took 1.221001395 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.515146101 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.597162755 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064934855 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.083567705 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.176508428 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.092829065 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.220026321 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.068947663 seconds)
  done (took 8.151352591 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094837239 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.065054236 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.064804846 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.06562399 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.065802532 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064475453 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.06475396 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.06624453 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066560083 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065223399 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.064578661 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.064950147 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.064845974 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065322184 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.065523498 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.064507423 seconds)
  done (took 2.335057008 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091351952 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09121788 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.068303053 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.069159307 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.066649636 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.066363384 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.068447361 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.067964533 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.065236619 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.067014744 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.069248122 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.067310777 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.066864128 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.058736576 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.068474313 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.070154093 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.064869944 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.068580659 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.068918907 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.070054185 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.069013423 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.058822691 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.067218252 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.068063559 seconds)
  done (took 2.94152166 seconds)
done (took 15.82432946 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.10790396 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07041307 seconds)
  done (took 1.349383856 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.065407884 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06638818 seconds)
  done (took 1.315285909 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.072263497 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057219107 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.078748826 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.067837724 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.057710688 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.057134996 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.076136795 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.057593967 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.057308716 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.057571539 seconds)
  done (took 1.825182427 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.059483338 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.066445311 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.064171641 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.065957474 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.064225166 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.058442286 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.061571003 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.058990185 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.066105671 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.057497022 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.062806518 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.077123786 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06201025 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.078629819 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.061631218 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06303068 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.06459499 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06159963 seconds)
  done (took 2.341895232 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057895805 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.058098554 seconds)
  done (took 1.310646167 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062337354 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058343129 seconds)
    (3/7) benchmarking "month"...
    done (took 0.061217322 seconds)
    (4/7) benchmarking "year"...
    done (took 0.060800802 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.05790435 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.057406204 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.058040685 seconds)
  done (took 1.60247051 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.401171371 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113251662 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328205431 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.064704563 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.073688648 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.239057202 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.058820251 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.063542033 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.063920975 seconds)
  done (took 2.634678974 seconds)
done (took 13.577044813 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075481261 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.07824551 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.084397605 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.409023793 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.087156476 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062230379 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.107678923 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.17516734 seconds)
done (took 2.288297317 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208911628 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.385938247 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.936958669 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.061701698 seconds)
  done (took 3.580039084 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.314339662 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079449295 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07211161 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.061560998 seconds)
  done (took 1.737437529 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060357014 seconds)
    (2/2) benchmarking "read"...
    done (took 0.066598796 seconds)
  done (took 1.32742245 seconds)
done (took 8.063563074 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060250073 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083984457 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.059281789 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.059777883 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.059082195 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.059269759 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.059225672 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.059221824 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.059093152 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.058692749 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.058679742 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.058888209 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.058742275 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058744952 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.058755823 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.05917781 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058762654 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.059076502 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059068826 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.058932164 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059302913 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.05898079 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.059442845 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.058799418 seconds)
  done (took 2.666797679 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.075851811 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.061211046 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063130729 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.062609157 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.063303824 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.062675442 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.062589313 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.061365341 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.062808608 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.060739904 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063071648 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.062798366 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.060666674 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.062904836 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060893987 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.062833358 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.062643284 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061511673 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060909975 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.063265104 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06240553 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061187385 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.062829417 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062210005 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.062925112 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062856112 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.060692629 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.060989609 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062490616 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.062870263 seconds)
  done (took 3.09257861 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06033205 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.055737566 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057342334 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.06453825 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.056015248 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.056570678 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057395482 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056797167 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057288876 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058440253 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.057713275 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.056455617 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058159042 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.055585799 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.055913154 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.056467223 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.059685638 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.072691124 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.056071389 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.056525879 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.060911637 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057260003 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.056686468 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.056956358 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057502234 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056792278 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056763932 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.0567632 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.056440524 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.057798261 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057030676 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060668824 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061498016 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.056799609 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.065631219 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061389988 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.056567678 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.060079889 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.057577359 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056651818 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057375499 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057016381 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056898934 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.056230828 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.064575547 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.056472664 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.057546886 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057104531 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057351585 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056563837 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.055720381 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.05802977 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.060545804 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.057343297 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.055628712 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.057012675 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.05558343 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.056494014 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.055549258 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.055625144 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.055447954 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.058416164 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.057824527 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.056696072 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.072630813 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.057518515 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.064305118 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.055758584 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059354525 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.058591737 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.056322644 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.071303175 seconds)
  done (took 5.413669747 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081734823 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082539301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061124536 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060418877 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.056960704 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.056583817 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.063853374 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056242671 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060501869 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07516438 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.056646407 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061084705 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062088102 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061474898 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058318452 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061851266 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066125931 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057635596 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.056168004 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.059883012 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.056892219 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.063599234 seconds)
  done (took 2.605632703 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.13519935 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062145037 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.098395358 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072457886 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064418051 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072379344 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.061621616 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062053244 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062341746 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062231733 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063383401 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063434916 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066003473 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063874449 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063813001 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063776094 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063118853 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063641324 seconds)
  done (took 2.487376526 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073018061 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.061561765 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.083091111 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06162549 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062008996 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061241626 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065586593 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06627654 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.061003577 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.061888862 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.066377447 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061043696 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.061304301 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061231543 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061168411 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06162497 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.061320662 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061452622 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066073891 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065262626 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065361775 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066101496 seconds)
  done (took 2.638227927 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070952232 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.060576514 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073641474 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062440635 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056404449 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056887743 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.061616032 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06070549 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.061289372 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.059903903 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060841765 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.056513032 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.063023875 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.060960389 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.062492189 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060733859 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.060261103 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.061075649 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060368984 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.056481118 seconds)
  done (took 2.451278153 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082544633 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059442659 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059858409 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077924594 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059759453 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.059307187 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077281873 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.059637171 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.059684294 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079632322 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059502388 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059083225 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0772641 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077231204 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.059431414 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07765768 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07726757 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077368963 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.059457034 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059198798 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079600448 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.059730247 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077146364 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059319621 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059385116 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.05930187 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059754665 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07738082 seconds)
  done (took 3.115190696 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069313081 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.058834353 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.059184889 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059113243 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.059691993 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059227814 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.059584228 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060118199 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058556804 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.059546784 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.059252262 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.058778428 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058677906 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.058603719 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.059027033 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.058650818 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058594632 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.059039201 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059319755 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059323719 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.059030219 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058978406 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.058867532 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.059197441 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059243947 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.059046683 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.05957064 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.059642279 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.058727638 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.059125691 seconds)
  done (took 3.012746596 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.069500638 seconds)
    (2/2) benchmarking "in"...
    done (took 0.067828503 seconds)
  done (took 1.366994102 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058881701 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072006447 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056148021 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066205511 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.064815931 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.059308726 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.065602799 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064950743 seconds)
  done (took 1.732691866 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064017154 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.084842154 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.058261535 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.058815712 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.061729786 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112260026 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.071860047 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.066897389 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071952833 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.059330173 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.058502636 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.069178279 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.0574032 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.068112286 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059504387 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065081569 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063138697 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067839716 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.068289474 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.056295937 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067296419 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058724636 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.056814679 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.059279495 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.057831024 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.062953665 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.070797708 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.06739732 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.064601379 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.055212142 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074403974 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.056463727 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.057633698 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.064627704 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.061371683 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.056655267 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.089860529 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.057214092 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.062718753 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.056568298 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.067943455 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074385911 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.068404217 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.072513485 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.058701264 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.059672491 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057126971 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060522971 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060302149 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.065527597 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057672454 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062760812 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.056680503 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059506932 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.066032433 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.05712165 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.062659841 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.064566542 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067817303 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.065153358 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.063797979 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.069858144 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.064253185 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.065477929 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.05856377 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075280548 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.059601351 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.068214442 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069346883 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.058534784 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06905408 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.056553725 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.055758074 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.056852786 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086265522 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.058888354 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.057880184 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.056879101 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.057043819 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.058262184 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.064929021 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062686293 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062381659 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060578044 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070767345 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.064471335 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.056263051 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.064114224 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.072280588 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.058802592 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.056514663 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.070564956 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.058500916 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.056143202 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.072062441 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.064114234 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.058109519 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.056929613 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.058838301 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.068087011 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.057287028 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.054744466 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.061989746 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.057154652 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.058452539 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.060315245 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.061499507 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.055060797 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.063867162 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.060695529 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.057377019 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.054438533 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.058914833 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.056850776 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05430832 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063454115 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.055609071 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068902753 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.060784334 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.06758509 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.067688619 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.064371839 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069004241 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.055217444 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.054375812 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.070948843 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.194770803 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059672645 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074650857 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057289253 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.067851109 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058940672 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060521141 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.06731165 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058419697 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061032139 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059016874 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064839075 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060327978 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060995867 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.0619889 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065154733 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069569828 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.058599989 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06435598 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059074818 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072473677 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.065542505 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06093623 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061479583 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058080368 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069273565 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064008294 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066602275 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.057934606 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059142731 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058749279 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067458315 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066143054 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06041778 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.06732827 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062116984 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058878516 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058636449 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059827339 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06042669 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062605395 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059611148 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064572076 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065616044 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.071846938 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070356032 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065939071 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057085583 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057844876 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060486659 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057934701 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06097589 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.064567044 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069976507 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.067424164 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.074605932 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.057271461 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.064538982 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.058836673 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.071650739 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.067642681 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.057851089 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062478405 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.055850125 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.058740721 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.064407166 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0666733 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.069316322 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069201206 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.060386625 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061588306 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057298301 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.069528579 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.05717583 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063708041 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.064515419 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.062233791 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.057481137 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.058571216 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.064726797 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.060136094 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.057222202 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.07022561 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.063838728 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.056712396 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069026195 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.057088787 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.066024771 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.056325948 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.058922658 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.060404877 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.058862578 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.064204836 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069898327 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.055410959 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.056890267 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070135824 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.05865006 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.058287647 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.062778603 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.068895881 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.059694102 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.062697195 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065098799 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.064364861 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.059710892 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.064247011 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.057229968 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.063551296 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.058896798 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.065646792 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.05595728 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.071118469 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.054759862 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.06782992 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.055766783 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.064544745 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.055811521 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.062920323 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.05592014 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.070236549 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.056942939 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.05612471 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.065499283 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.054225012 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.063475006 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.055221064 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.059420861 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.060821677 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.063485678 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.057712561 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.198373254 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060256714 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06505796 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061673271 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065005842 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.065786345 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06150556 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.057024348 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.064460875 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066866043 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.064435815 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.058903265 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.058939012 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.057981566 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.065632399 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.058669 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059072717 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063899566 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.060452842 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.061944755 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059775547 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.05909501 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.059413195 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064082892 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065679873 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.072701932 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063909443 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.062848709 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.065459559 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.056714057 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070621605 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.057322645 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.063061408 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.056330694 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.064029164 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.064911618 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.057422245 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074193503 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.058637743 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.063629592 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06963716 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065264742 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060731945 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075212758 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062086158 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065551285 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065076358 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.061961169 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064075263 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060457748 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064689432 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066270099 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.066245647 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.057748826 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.062632954 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064053902 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.058692343 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.066094724 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.05916931 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064578207 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.05947274 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057056576 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.061835577 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.067520245 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06062095 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.060699305 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.056993864 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.055833587 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.057273111 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.065191239 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.060099847 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.063622669 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07133357 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.05697107 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.058296693 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.056655964 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06219634 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.073010177 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.065536536 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.063396883 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.060723427 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.056257268 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.058667653 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.059076469 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.057001723 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.060779454 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056318962 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.056881168 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065901898 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.058666167 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.060623517 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057347461 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.058517966 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.064596418 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062202286 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.057374704 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.061976261 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.056347213 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.060521224 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.055929405 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.058329364 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060207125 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.056466021 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.059004531 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.065138713 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.070826753 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.062095332 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.064049111 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.057647595 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06302184 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069428713 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064403253 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057120782 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.063761414 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.055325232 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071495858 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.063412602 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.061861983 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.063338875 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.056416401 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.06973594 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.058974547 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.063525716 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068351873 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.056768595 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.063088878 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.055136553 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068783426 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.058806263 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.054875691 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06216782 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.061321394 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.199285 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.068794088 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.05931286 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.064998012 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063481073 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.060715443 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.05913652 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059662991 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.064308601 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.070897076 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.058394472 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.062531673 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.063456836 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064185507 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.060650415 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0678849 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.064114224 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058702729 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.05935836 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.059912925 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.05799998 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.067215436 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058204524 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.060847049 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.060526916 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.056478512 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.062681854 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071611998 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06507356 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065903374 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.057074652 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.056402032 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.072746579 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.059847358 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.061448421 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.063651359 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065813754 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06977444 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.066416127 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07370972 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.05938684 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063867999 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069429154 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.059221898 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058239813 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061078481 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060349509 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065323378 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.06628724 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064130212 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060355071 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.063660222 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068787634 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.05872041 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.060688126 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.062716359 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.057713052 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.065613186 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.063475152 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064065623 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.058385039 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.056536456 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.059663963 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06591891 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064047974 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065800855 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059169206 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.064720243 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.069609217 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06284001 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060622052 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.056699473 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060842657 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064097017 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063346828 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.056894712 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.060707028 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.059286694 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065202417 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06494522 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.060433393 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.056578411 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072109483 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.063908426 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.064678708 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.058773232 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.059112954 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057453942 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.05655282 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.06666438 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.056458926 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.058780538 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.060458204 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.058754373 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.072435451 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.063931264 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070699573 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058046039 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.060566283 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.056698552 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06475545 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.060441158 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.056885852 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.065128515 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.056000944 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069969008 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.067140802 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.065209485 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.056353042 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.060282836 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.063500508 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.068321436 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06386681 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.063048588 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.05988552 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.063633535 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.057925461 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.06511775 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.05577034 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.054793456 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.064099789 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.062248224 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.065904159 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.055129559 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.063566639 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.057234224 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.061714875 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.062161524 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.057442548 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.057464751 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.057139773 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.200535383 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.061446692 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066025083 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.061490912 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072518394 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059155609 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.067279881 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065122565 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.066634608 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068890768 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068841601 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.064395621 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.058300336 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063513148 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.063649114 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.0588581 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.060892317 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.061342685 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07699305 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.059363034 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.058845872 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070516421 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.064854085 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057047001 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.065317373 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.061130987 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.065774123 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.058425309 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.065953383 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.062024258 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.058175238 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.060676221 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.060931136 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.056485278 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.057056239 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.057470276 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.065578564 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.061244355 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.057694713 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.0741958 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.059041465 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064160242 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.066561838 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.062431764 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.058735832 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.056812627 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.0586424 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067413805 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.06994376 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.059619832 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064729026 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060431291 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066063282 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057230726 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.065199028 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.063408329 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063833946 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.056737731 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057192174 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.069253509 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.06994739 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.060255319 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.064956796 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.064542837 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.058537774 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077949346 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06503107 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058894829 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.066409951 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059716199 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.056442998 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.056266736 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.058845092 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.067156267 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057145321 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062614244 seconds)
  done (took 39.041951382 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095026104 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058094137 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.056925398 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.056879839 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068733337 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058066054 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.05660487 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.05784293 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.057620353 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060318499 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.056659096 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.056903196 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068588939 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07096073 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067574115 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061143796 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.056824333 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.057802897 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.057029568 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.057804254 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067537446 seconds)
  done (took 2.653995446 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.064982188 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07258023 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068569767 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073846834 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065300396 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061815596 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068546478 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061572844 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069356289 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066720623 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069668563 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061763053 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067174695 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066884113 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067118301 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061926102 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069319532 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065420353 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.062016825 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068973921 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061923114 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068769627 seconds)
  done (took 2.786979038 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059229556 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.05769179 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.064109084 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.056474852 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.056177436 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060369771 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.05644463 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.059518184 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.059828717 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.05964434 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064111834 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.057466361 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.056166107 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.060853949 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.056309365 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.057159927 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.098505308 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.057787276 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.057381618 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.056367984 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062489941 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.063975202 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.0561998 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.056398236 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.059755426 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.060087404 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.056405576 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.059545782 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.057004577 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.059621776 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.057421676 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.055858088 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.063678091 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.063022543 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.060639857 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.060964916 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.059700155 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.05866051 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.057681828 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057528143 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06507356 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.058445367 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.056895662 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.057748554 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.064092957 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.056268106 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.056200021 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.063942602 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.055972005 seconds)
  done (took 4.258998114 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069585263 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.104771698 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.061910109 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085472161 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.070542252 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.063819072 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.062247531 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.085793126 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.057978607 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.05867388 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.071227435 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.071565979 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060084365 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.061449055 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.061880294 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.059784859 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.060795313 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.058997878 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063262442 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.059451693 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.063114828 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.063598994 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.070579776 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071459197 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061065218 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.058826659 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.059766586 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.061432604 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.070487246 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06414622 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.061969046 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062277185 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.071448628 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.062252205 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.059407968 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.059507614 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.071690668 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.060454196 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.060070346 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.058348416 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06048835 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06292778 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.063799841 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072113726 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060215056 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.065448894 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061876059 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.057522752 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.071017795 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.059794998 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.06494681 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.072478379 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061195239 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.060293267 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061692334 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.071087308 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.060033488 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.058678192 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.060222427 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.070648349 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.058599364 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061619964 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.071988657 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.059459379 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.06417837 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.072001465 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.064196545 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061255361 seconds)
  done (took 5.869858162 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070748032 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.087193061 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068484156 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068401845 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06780366 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.067798508 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067752711 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.067405177 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.067417732 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068155523 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067410748 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106106288 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.063126268 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072937984 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.067722753 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067867542 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.067582078 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067503112 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067631682 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067642865 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.067821261 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068615054 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068314967 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068392661 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.070712042 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063418745 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067424577 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.06729757 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068255883 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.067352625 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.070604983 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.067869933 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.067493225 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.06831516 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.070590405 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.067817891 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.057920193 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068111985 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.067883602 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067377095 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063286183 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068591244 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067494431 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.063253884 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068030821 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.067602442 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069645814 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.072547963 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.0783003 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068423133 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.067951222 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068402355 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067464419 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068156449 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068216368 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.076149406 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069376653 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068783487 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067672696 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068326855 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068492728 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.076070309 seconds)
  done (took 5.651190796 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074678809 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065609416 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07656437 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059331464 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.056490377 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066645248 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.056519238 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.056399674 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064771257 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.065310802 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067675447 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066669064 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069639457 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066767201 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066347501 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069128793 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066485121 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066324502 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064985555 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066308815 seconds)
  done (took 2.665028389 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070158173 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074729532 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063046699 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067038433 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.063352477 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06817042 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062457649 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064016073 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064283246 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063554763 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068045109 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067993951 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062852285 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066735728 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067903941 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066500607 seconds)
  done (took 2.404412183 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064223029 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066065463 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066472816 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060327602 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063168576 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059081204 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059255042 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.057763019 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058129123 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.070646524 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.058116934 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068843824 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.057973597 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.056773384 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.057570698 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.063322625 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.057209095 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.058108907 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.058059989 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063472856 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.064631834 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.05924861 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.061881808 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.057936333 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063188688 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.064927946 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.059772672 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.061350838 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058564356 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.058284572 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.063377364 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.064607993 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.058195005 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.058628153 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.057371265 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.057972109 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.058167367 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.058492525 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.063567023 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.058029047 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.056786931 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.062634087 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.058255817 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.059085418 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.057281662 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.05884787 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.057379631 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.063550181 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059224113 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064345835 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059294227 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061594832 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060040833 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.066644956 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062470568 seconds)
  done (took 4.684380416 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073155677 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061983727 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057902857 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058604658 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063670277 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063923826 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06325523 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063314014 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063395236 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.05830088 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063079193 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.061456642 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062337024 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061933281 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062550173 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06227111 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.05634107 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.062093385 seconds)
  done (took 2.478632395 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.069057003 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062908021 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.067717007 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06302981 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063388225 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062353198 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057866594 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058053826 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056979973 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061128367 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061050085 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.060921656 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.056968585 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.060996124 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.061362143 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061260256 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.060702626 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057180008 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06158292 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057119724 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061097106 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.05760034 seconds)
  done (took 2.68977168 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.084608566 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.07845605 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.11729788 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.074220951 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.081221711 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.066309777 seconds)
  done (took 1.853686859 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086110923 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098723055 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061587899 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.061641624 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071804025 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06476198 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065047098 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065192336 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071812938 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070156553 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065136923 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071919163 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071856726 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067320461 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071962495 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074999892 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065338267 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065199722 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06150669 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075045722 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065590278 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071661748 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06526654 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064892642 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065100327 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084972805 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075153762 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069829034 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067411872 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071825128 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074969028 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065190483 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071737529 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070418171 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.061483703 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072080496 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066037573 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077044069 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073774092 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067853829 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061794754 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072613496 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07335072 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069624976 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077133404 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065509598 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067340119 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065209598 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065299059 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077499632 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072232961 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067316185 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072268796 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075903436 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075257942 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077430979 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069828633 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067265838 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071882943 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069637513 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067150647 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072031847 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067396807 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069741847 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074806072 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067355004 seconds)
  done (took 5.999012846 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093658886 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062084661 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065222969 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070506362 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068400471 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066178806 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065370521 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065099348 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065329274 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.062155831 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099554246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066627999 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069245056 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068820857 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066704675 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067043478 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06710377 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068712711 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06300997 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079356364 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065151685 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067929598 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067561593 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067571592 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069835695 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075156397 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065143077 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065110903 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065032484 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065131479 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067219198 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065240586 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067296375 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061849815 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067080771 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06533202 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065061845 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067414482 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066128377 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073613224 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06926948 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076963686 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066884776 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066575579 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070684606 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065730841 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066059998 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06335223 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067011273 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063438151 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070062597 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070345749 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070211426 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067363008 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065587254 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065669905 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065372018 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065374832 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065387291 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075121686 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067374556 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065217408 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077553763 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065258331 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065303407 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067094871 seconds)
  done (took 5.880518329 seconds)
done (took 120.70320218 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204035134 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17938324 seconds)
  done (took 1.724382616 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06880759 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.091426436 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.069910267 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12788781 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065913333 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099501553 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098864907 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070168862 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065617725 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065640223 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065715967 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068174178 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130743864 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065804974 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065704964 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068326162 seconds)
  done (took 2.64734542 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098790885 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.175179339 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.103319009 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063449141 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09798659 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07057783 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063594382 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074107766 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.067082178 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066837838 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.070808147 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069099183 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066530609 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069094024 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.067114615 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.070641964 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066182598 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.070549485 seconds)
  done (took 2.796133139 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.08816229 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.080025342 seconds)
  done (took 1.534728671 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.147966836 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.099683391 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.138789993 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.31212788 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.129608908 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.269686541 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12506896 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.123511191 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.106424544 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120320301 seconds)
  done (took 2.93361022 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.095939257 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159406191 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.291302053 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11223522 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.069688017 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.081204474 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11435695 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.075781882 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.074551348 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.074202093 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.074422509 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074308369 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.091033892 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.070653998 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.070831744 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.071049958 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.094435345 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.070157701 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070108205 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.070678949 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.094673814 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064086656 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.070886482 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.070149561 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.072315547 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.072447703 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065507217 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064025649 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.070128796 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.06991069 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.072984136 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.078155067 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.072108692 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.09881476 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.068861306 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.098473035 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.0691851 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.068075402 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070174944 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.068393088 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07165745 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.072062345 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.0725237 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.070929779 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065451197 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.068967249 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065081683 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.063882063 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.073584425 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.064986095 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.073818365 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073024506 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.097306672 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065383279 seconds)
  done (took 5.772978329 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102161744 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102944943 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065758664 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107577466 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098745286 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064691419 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099841067 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093656036 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101234378 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064231924 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063691824 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063858949 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072440002 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.074983235 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110164965 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10279316 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066328506 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065041197 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102031765 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102087026 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063213755 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095552441 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091822188 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100771682 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.062771689 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064375133 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.062731391 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.063519279 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069783842 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.071367534 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063180469 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071810248 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.076793862 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071115195 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062506742 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.062954981 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.062918802 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.071927836 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072124643 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07322795 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.070588685 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062594134 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063214164 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.063423392 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064317548 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.062332516 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070878378 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.071812386 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.070741695 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063181336 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.063504714 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.062766802 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06457174 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073231975 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.070881214 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.072186897 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07186642 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.062810337 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062815631 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065058693 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074768556 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074066069 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07194538 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063841373 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.072554742 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.062978475 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072914845 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07629034 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.062614646 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063508072 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.062910978 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.062900081 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064184272 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070308154 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.070412949 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063530462 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.062934318 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062738597 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.072595894 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.070607388 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.062917795 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.069561286 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.062314966 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.062916575 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063234321 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063366023 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.069572822 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.071421042 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.063313908 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062847673 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063147243 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063032002 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.062195076 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.069663057 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.070489062 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.070367741 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.069136797 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.062392951 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.069402212 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.068677715 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06225129 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.068609012 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.061656786 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.061999194 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062082491 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.069076048 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.068195048 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.069955239 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06161272 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.061150607 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.068799304 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.205106889 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064490829 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07186979 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073891331 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.072155214 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.063282324 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076732793 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063743702 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.072713452 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064080363 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073038646 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063970866 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071492175 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063800383 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.062723622 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.063305364 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.071132508 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064620497 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063588946 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063941838 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063866445 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.071682719 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074689306 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064344104 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071414421 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.071175347 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064100521 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071063572 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063759657 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072111466 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063626388 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064238391 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062993702 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074097364 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063687556 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063162743 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.063302715 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.073175176 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063583826 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072532235 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070087816 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.062944021 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074482162 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072866552 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.06986538 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07423577 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063663708 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063695972 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.062905053 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063268005 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070163633 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07201488 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063951884 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063528557 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.070143515 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.073305412 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.062887105 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.0708779 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071599034 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.070753008 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.063412268 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063439869 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.073514783 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.073024737 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.070782208 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.071927145 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073474984 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063178882 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070288797 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.070525073 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062961641 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076876306 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06354378 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.074680485 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07099601 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069707932 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071140706 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.072453758 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.072686878 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.073031735 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.075182104 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.062802961 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.062957068 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.070889858 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.062993557 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06317691 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.070529103 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.063892642 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.063751994 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.075602506 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063808734 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.072567146 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.062770602 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.071157553 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.062770052 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063515998 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075186423 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.062940844 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.062877622 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.06970713 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.062558157 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.068653651 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.071224822 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.068645426 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.061908801 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.062018674 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.069422277 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.069449235 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.061713495 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.061392932 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.062278143 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.068365068 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.06770113 seconds)
  done (took 17.087558587 seconds)
done (took 35.874870445 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.201357269 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151647813 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.185810361 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.109990736 seconds)
  done (took 2.116759794 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.09364731 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.092983638 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.074833946 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.060067959 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.079481262 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.060280714 seconds)
  done (took 1.87374972 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27499286 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193152187 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170525871 seconds)
  done (took 2.044442515 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207967064 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187620177 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445002157 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280839638 seconds)
  done (took 2.623225024 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.127097087 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.077100927 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.059671123 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.069697191 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.10840498 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.140953683 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.086334714 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.110342393 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07055748 seconds)
  done (took 2.315323197 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.128776503 seconds)
done (took 12.5412217 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100740816 seconds)
    (2/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069903042 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.140886062 seconds)
    (4/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18876211 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067016323 seconds)
    (6/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115835267 seconds)
    (7/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.185870108 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113029589 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.062988838 seconds)
    (10/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065049795 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070688032 seconds)
    (12/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07180984 seconds)
    (13/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.104685181 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.107380257 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.075789763 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073208764 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.221770094 seconds)
    (18/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.45726873 seconds)
    (19/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.160334593 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072303156 seconds)
    (21/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.193516455 seconds)
    (22/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.059745879 seconds)
    (23/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.162224832 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.072495853 seconds)
    (25/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069938051 seconds)
    (26/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06671753 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.079770776 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069174195 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.109462289 seconds)
    (30/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068734191 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.208407121 seconds)
    (32/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.133090191 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067203299 seconds)
    (34/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.136689264 seconds)
    (35/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.071350539 seconds)
    (36/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.206197319 seconds)
    (37/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.073729259 seconds)
    (38/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071550092 seconds)
    (39/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060868235 seconds)
    (40/309) benchmarking ("sort", Float32, false)...
    done (took 0.127063767 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069064209 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141246169 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.104370225 seconds)
    (44/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.130271376 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.059420809 seconds)
    (46/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155148644 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.181038894 seconds)
    (48/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.210000817 seconds)
    (49/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.210215377 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.074062387 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.146030132 seconds)
    (52/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.060647085 seconds)
    (53/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.230324271 seconds)
    (54/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.088846348 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11645036 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.061014238 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.080984073 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.130740881 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072189584 seconds)
    (60/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.187252222 seconds)
    (61/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.068716562 seconds)
    (62/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078928873 seconds)
    (63/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.21025728 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.122391904 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.059190334 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.068357656 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.183238376 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.088273044 seconds)
    (69/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.15825668 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.059123707 seconds)
    (71/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.068340431 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065917108 seconds)
    (73/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.236364969 seconds)
    (74/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.132527546 seconds)
    (75/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.075233906 seconds)
    (76/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.061232752 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.058764612 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.069906812 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.083739018 seconds)
    (80/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.058517337 seconds)
    (81/309) benchmarking ("sort", BigInt, false)...
    done (took 0.227452786 seconds)
    (82/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.381602381 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073691936 seconds)
    (84/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06128567 seconds)
    (85/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091732208 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070482329 seconds)
    (87/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.067812541 seconds)
    (88/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070891303 seconds)
    (89/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069523649 seconds)
    (90/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061968369 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.074125529 seconds)
    (92/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.060317109 seconds)
    (93/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.16835016 seconds)
    (94/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.149280534 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.060881878 seconds)
    (96/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.154073274 seconds)
    (97/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06207673 seconds)
    (98/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131455604 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.084389539 seconds)
    (100/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.059828221 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.060125417 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.067551406 seconds)
    (103/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.200822633 seconds)
    (104/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080782855 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.060655537 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.080036725 seconds)
    (107/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.198739396 seconds)
    (108/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.070365678 seconds)
    (109/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07241324 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068168627 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.168429218 seconds)
    (112/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.071973429 seconds)
    (113/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.060218007 seconds)
    (114/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.132645439 seconds)
    (115/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069831462 seconds)
    (116/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.061758756 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069831404 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.082280611 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07272796 seconds)
    (120/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.166920404 seconds)
    (121/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.059882148 seconds)
    (122/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.071434181 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073097327 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070216973 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.062044642 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119013885 seconds)
    (127/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.063916521 seconds)
    (128/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.194041786 seconds)
    (129/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.068635985 seconds)
    (130/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.13072334 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133764313 seconds)
    (132/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.061583896 seconds)
    (133/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.151930864 seconds)
    (134/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.133424722 seconds)
    (135/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.061011351 seconds)
    (136/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087201431 seconds)
    (137/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069143842 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.210675933 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070107365 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086447431 seconds)
    (141/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.060772321 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089074016 seconds)
    (143/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.062845264 seconds)
    (144/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.061854046 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072954361 seconds)
    (146/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.060707573 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070614459 seconds)
    (148/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069422725 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067145414 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.178344863 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.068395385 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.061574985 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.165538671 seconds)
    (154/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.059841331 seconds)
    (155/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.060021489 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087281758 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.11240475 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.126611928 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.060317321 seconds)
    (160/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.201850624 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.1479321 seconds)
    (162/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.064641707 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059308178 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.155609028 seconds)
    (165/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.060496972 seconds)
    (166/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.059523313 seconds)
    (167/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.065334178 seconds)
    (168/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06228918 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.077403757 seconds)
    (170/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05973269 seconds)
    (171/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.132387646 seconds)
    (172/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.061155754 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.125675242 seconds)
    (174/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.133220972 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.135911405 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.059469727 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.156730123 seconds)
    (178/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06341223 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.156660994 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.152065909 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.058804985 seconds)
    (182/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.175827317 seconds)
    (183/309) benchmarking ("sort", Int8, false)...
    done (took 0.159631583 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.118152212 seconds)
    (185/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.059821825 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.064697436 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.058263968 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.112378519 seconds)
    (189/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.059559587 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.07866376 seconds)
    (191/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.148254498 seconds)
    (192/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.060018805 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.059432485 seconds)
    (194/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.130190859 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.059439471 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.065456755 seconds)
    (197/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05976834 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11040073 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.058970907 seconds)
    (200/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.058202671 seconds)
    (201/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.058537494 seconds)
    (202/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.058550825 seconds)
    (203/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06191195 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05864307 seconds)
    (205/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.067726896 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.156525247 seconds)
    (207/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.059787406 seconds)
    (208/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.059738093 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066255821 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066931743 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.081380481 seconds)
    (212/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.062620514 seconds)
    (213/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.058841239 seconds)
    (214/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.059357885 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065490824 seconds)
    (216/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.058789055 seconds)
    (217/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.063604735 seconds)
    (218/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.065796557 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.058561075 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.078579366 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069416963 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.069838739 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.069365223 seconds)
    (224/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.059074598 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.059661227 seconds)
    (226/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.082678489 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.12909531 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.059559232 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.082355197 seconds)
    (230/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.083350189 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.059957146 seconds)
    (232/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.111446984 seconds)
    (233/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.066758143 seconds)
    (234/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.059686953 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.083580827 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.067062815 seconds)
    (237/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.059406049 seconds)
    (238/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.12957361 seconds)
    (239/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.136543641 seconds)
    (240/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.060039202 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.08161747 seconds)
    (242/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.067171213 seconds)
    (243/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.060623158 seconds)
    (244/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.058155707 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.058422107 seconds)
    (246/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.070039679 seconds)
    (247/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.058930433 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.072388608 seconds)
    (249/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.071834958 seconds)
    (250/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067443019 seconds)
    (251/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.060996612 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.058430187 seconds)
    (253/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.05848511 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.057488394 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.065000152 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.060137616 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.059003717 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.061196707 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067186359 seconds)
    (260/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.12961114 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.136017925 seconds)
    (262/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.060045986 seconds)
    (263/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.065137547 seconds)
    (264/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.059530601 seconds)
    (265/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.069512706 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.061028598 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.059673157 seconds)
    (268/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.058817117 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.059048625 seconds)
    (270/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.059954219 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108447828 seconds)
    (272/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.058698731 seconds)
    (273/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.059419347 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.058823111 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.065474429 seconds)
    (276/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.059477889 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.058457352 seconds)
    (278/309) benchmarking ("sort", Float64, false)...
    done (took 0.122791276 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.05916339 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.067383716 seconds)
    (281/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.062446507 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.058918445 seconds)
    (283/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.059556317 seconds)
    (284/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.05851132 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.123498789 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.058771402 seconds)
    (287/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.070049979 seconds)
    (288/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.058694702 seconds)
    (289/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05903716 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119720321 seconds)
    (291/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.061045205 seconds)
    (292/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.059507449 seconds)
    (293/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.057846167 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.10857275 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.069537082 seconds)
    (296/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.060330994 seconds)
    (297/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05832806 seconds)
    (298/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.058440846 seconds)
    (299/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.059069156 seconds)
    (300/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.059778 seconds)
    (301/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05866104 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.066089964 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.059542377 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.059963493 seconds)
    (305/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.059588617 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.077793255 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.058691988 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.127658 seconds)
    (309/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.059018924 seconds)
  done (took 30.455028821 seconds)
done (took 31.881048661 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.093501494 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091688568 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073716838 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.087000659 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082145904 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098273415 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074861999 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080430836 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08306633 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082001048 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081109122 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.074195271 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074541775 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074914674 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072730511 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088088283 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079606318 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07346555 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072434513 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06366575 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073480357 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064015047 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.063328051 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070546293 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07565497 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071131467 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073241242 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073136143 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064059441 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063653222 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068786389 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072623652 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066293972 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076489058 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07292158 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071649968 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073106031 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075268433 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06226236 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062799335 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073202314 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062510655 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070583216 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.06931716 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067477824 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069498307 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070367625 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.074355705 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084534266 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066118926 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072431622 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072821863 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.073705964 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068362411 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068928687 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072584502 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070340737 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087146037 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072904633 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067209141 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07373254 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073241939 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.06892532 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.070101316 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.070333212 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.072609905 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075037513 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069524968 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07414009 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.068860136 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061436826 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.06993439 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066417717 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.061416998 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.072702389 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.074325516 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.060658304 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.066188573 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.069867825 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.069774982 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.061804765 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065574651 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.061458471 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.066385553 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064986996 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.067915275 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.066885421 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069192491 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061359988 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.070297614 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068922426 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069862373 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.061215173 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076435406 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062674749 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069903959 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06326992 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061699043 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061289185 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066996031 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061609191 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065701867 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070415743 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.060842542 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.066610399 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.074635631 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061398885 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.069045455 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.060909281 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06136623 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07305865 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.072026934 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061590391 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065267485 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061130878 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.067110838 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061035448 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061071201 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06120099 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061281019 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.066401879 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061723532 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065076083 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.066962694 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.074657671 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.061106624 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066631364 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065016777 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061404611 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068177118 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061615343 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061220756 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.060824113 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074602204 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065054395 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061265733 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067032487 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065039312 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.069285354 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.060926342 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.069737597 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.0669841 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.204271966 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068674976 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.060894951 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073377537 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065486245 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065375307 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.060852163 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.061674043 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061165397 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06164956 seconds)
done (took 12.425272517 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064506955 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.092104424 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072234487 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080110153 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.075395439 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062619176 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067971906 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.082384333 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066964698 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.083452258 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084672172 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.082652373 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.088794801 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.060830736 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06188409 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.063331575 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.060845869 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.068428968 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.077206488 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.082522106 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.090696748 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061521762 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.070638537 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.076644524 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.072035696 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.08063761 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.062774487 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.062738642 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.064268895 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.077070266 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.084690178 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.061742012 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.062839726 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.076556507 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.075684404 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.069964923 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062562011 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.065881573 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062257657 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.061653011 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063079917 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.076589604 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.065943877 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.070868277 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.062708505 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.063185807 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.062858065 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.065866439 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.072463158 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.06633404 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.070019905 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.074169309 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.064315988 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06222236 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060538095 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.066716398 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06172775 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.062730423 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062219193 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06218802 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062004949 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.063683476 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.062303045 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.062812441 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066393486 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067607638 seconds)
  done (took 6.118952425 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080021377 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089952149 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.078028063 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.078528551 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.061595436 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062459062 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.061975286 seconds)
  done (took 2.094909029 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064496411 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074557359 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078205696 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078407628 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.071830906 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.080445684 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063150308 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092360171 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.060990962 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.074028278 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.107263124 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078847485 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.065432009 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073408562 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.062186378 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.070312397 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.062187134 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069903274 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07074238 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078177728 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066435112 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088860934 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075434263 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.062839164 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.082843574 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.067289234 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.062055096 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.062925859 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063369185 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.063846657 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063324029 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.100506488 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.066832428 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076003658 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063465836 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.062007196 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.068605571 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065825844 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.065372111 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.068667669 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.067954264 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063809209 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.061280237 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.0639193 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.064922875 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.066191286 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.060962946 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063712755 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.063649396 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.074417161 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.061219411 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.066826048 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.065834326 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.067157614 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068158762 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066745368 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070162323 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.0636218 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074295166 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.070258242 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063489167 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.071590966 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.070745729 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.067963712 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.071879905 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068584974 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.067725716 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.068013194 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.063300856 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064390383 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.063537272 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07262169 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063875995 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.066193743 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067352299 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065840577 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068458887 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08047631 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.078771821 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074539126 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06401019 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063771183 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066407661 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.0785468 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066932695 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06370606 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065568357 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.061583492 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.066601443 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064923324 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069825368 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065468955 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.070786107 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.064671416 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.065609305 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07111468 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06179095 seconds)
  done (took 8.276994373 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.066931578 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.063764481 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.064747223 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063209498 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.063231986 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06345952 seconds)
  done (took 2.004173163 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.086741848 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.064421856 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078518479 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065625208 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.097610719 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.070627252 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.070756963 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071615048 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.075193242 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.074955056 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.070587296 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.073014095 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.069945604 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.064789163 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.070308547 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.064197372 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.070358046 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066803798 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074382107 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065339363 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.076133608 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064650052 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064797543 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.074309222 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.065966321 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.063938728 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.063104915 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.074182843 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.074276012 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074658995 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064632133 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.066159479 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070185106 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.071235489 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.070262688 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070487348 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.063179834 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068634201 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.065488938 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065945032 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.072547653 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065059597 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.065666036 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068439162 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07135212 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070182479 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.068716644 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066681385 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.070011918 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068481245 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068924865 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063964401 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.066178693 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.068851001 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070117041 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071339373 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068820636 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.070073525 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.064786339 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07021581 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06339679 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.065983015 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072929405 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067810939 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.068919314 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068859275 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070418684 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064763758 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064982091 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.062740606 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.06830595 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.062946895 seconds)
  done (took 6.574670122 seconds)
done (took 26.640252279 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.001689047 seconds)
  done (took 2.563523797 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.565879928 seconds)
  done (took 2.165806969 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.830411757 seconds)
  done (took 8.430712465 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.287624568 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.331451258 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.707434617 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128775814 seconds)
  done (took 3.082527828 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.709845797 seconds)
  done (took 2.319593579 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.229521687 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.217563618 seconds)
  done (took 2.063052869 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.342795825 seconds)
  done (took 1.945030233 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.088440477 seconds)
  done (took 2.690582725 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.228633193 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.154536529 seconds)
  done (took 1.99750299 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.449360201 seconds)
  done (took 2.058013617 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.288153208 seconds)
  done (took 5.899890085 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237194194 seconds)
  done (took 1.887260274 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.231738992 seconds)
  done (took 1.848519934 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.736053051 seconds)
  done (took 3.345022731 seconds)
done (took 43.909732053 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080567726 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080740378 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080127177 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07630302 seconds)
  done (took 1.900940179 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071049836 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065679237 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.069970696 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.070039979 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.067525035 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.068499174 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.068803316 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.06572262 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.067026609 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.065810344 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.064413878 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.065651706 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.068635394 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.06559417 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.068484307 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.069652508 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.065581508 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.065485376 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.068077268 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.065911219 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.068612534 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.065582871 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.063673448 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.064797891 seconds)
  done (took 3.218601676 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074542801 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.068199651 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.070187118 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.067714499 seconds)
  done (took 1.896746576 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.073846469 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.081630394 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083390062 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.088428699 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.072068383 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.072653531 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080104143 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.080745109 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.060938044 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084051478 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.063805879 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.062141016 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.061999826 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.082154592 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.079983882 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.05861605 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060377691 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.073104361 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.071729305 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.074068174 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.063456811 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.061423406 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07196371 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.072135124 seconds)
  done (took 3.34889165 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076723429 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061674093 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075399245 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087818207 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089656933 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061294769 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076101401 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089266547 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136624854 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061248532 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.067166878 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061375818 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101959462 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.061514872 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077269756 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10676621 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109935382 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065390484 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094633873 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061597487 seconds)
  done (took 3.248857242 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073523421 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.064492751 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065835159 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.060937364 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.072449549 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.06832599 seconds)
  done (took 2.035923963 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065156395 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063338089 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.062912639 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.062441942 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.067271692 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.062465852 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.061416319 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.062640455 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.062733216 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.062598926 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.062133233 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.061548397 seconds)
  done (took 2.378157142 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.156262067 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.064917949 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065687564 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064105587 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067025536 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062470878 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076690768 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064032397 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08005098 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062067151 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.062012181 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.064447471 seconds)
  done (took 2.512959754 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099187627 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12656963 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092329064 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069053684 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165449263 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090398998 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.086449506 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.118109519 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08923488 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.065448933 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089365493 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130932129 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091461312 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.094186877 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078245715 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120781512 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106383385 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084313534 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109680631 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078478072 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.067503303 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129244282 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067016541 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089619748 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098238335 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.094397594 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106034903 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129029074 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080639478 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086450704 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080936458 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073284125 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102076057 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.081272598 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.094266878 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090241746 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094756389 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081520383 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.083270967 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115987368 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149140018 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099015874 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098016611 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13072211 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075286619 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.104812904 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077876022 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095673448 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10052601 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089549678 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072058831 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087809719 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.102153281 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098706563 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.077850272 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077985054 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113215035 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.094853844 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092520169 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07641921 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102391376 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.082978737 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103267558 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26103718 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137296525 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098308868 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132845594 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120473933 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093158494 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.08568493 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.088878506 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07300572 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108017793 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095096157 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132920621 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106731728 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096522555 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.092713621 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079306857 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103992236 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11123411 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090668774 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090767151 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143090622 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105858357 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08695305 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087402039 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.142282796 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068177571 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142723872 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085876494 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118882006 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094254151 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134436241 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087719267 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.079936989 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101824242 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100177028 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086178483 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099106899 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081097897 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109738393 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09071539 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097059972 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.078310737 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088424638 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085640731 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.094358795 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.071619458 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10025175 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111710664 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110002913 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.071268394 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104559532 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082694478 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.073410352 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08931378 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134620466 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.07992103 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072156822 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145649892 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.089452467 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.112763885 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105680823 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.079406886 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26099061 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133036144 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089344704 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086141992 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073623264 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149979324 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073976499 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115940939 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078920384 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099120089 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101955463 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127540757 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134902166 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092501005 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075385197 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088681043 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.103549593 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083949165 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082618383 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073717636 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.105416568 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121525915 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.09647254 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077539053 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.089326247 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.066472204 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110104729 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072722414 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081638668 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092228892 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.084476006 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.086431348 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140751725 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083228709 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104028171 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094173852 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.064319629 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088311996 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148462245 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079582215 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.107069333 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114407897 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08095612 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065368672 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.092377161 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.070400274 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105015688 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.088746064 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102937602 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075240696 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102950371 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.065509859 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07087572 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124899211 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098117126 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085753385 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.128132365 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101191771 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.085225389 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.100808135 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.093475538 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092009504 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098824914 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.255030575 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103093355 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.070915062 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126400499 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090971641 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076178883 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084202841 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076068947 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.07540597 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098408514 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111304203 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08634335 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097982587 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100186177 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087528748 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.106755533 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085966485 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075737301 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128087697 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073518457 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.071633325 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08489019 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.102615351 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085737741 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.130549098 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.075944065 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132224869 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089985414 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079564459 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111960821 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06588559 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.066688719 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.077583727 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088450252 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113796699 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078403624 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075829647 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114955172 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128437391 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094289226 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09947716 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06552757 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087612185 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13126774 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.111348159 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07819369 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106161022 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080912729 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126061224 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094486002 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117072564 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102874327 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107196925 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.088316907 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.077859516 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070498185 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084392866 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106993751 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082754879 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078794663 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064869327 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071278034 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08892672 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087553397 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108564136 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083573761 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130152179 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069256319 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096934657 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.253783353 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104266609 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08758522 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093212901 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.089769022 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089111903 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088709339 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089919083 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.071192422 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122985702 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101046517 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075173848 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086517695 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092033896 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103600239 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105957138 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105902748 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090404161 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104001029 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119272863 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095616006 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079477855 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081218732 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.090534945 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.082060242 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07881597 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.101388284 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109232942 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095011648 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105587748 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.091993159 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.090162321 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104453999 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089770408 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08755538 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.114995459 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149319323 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.098742381 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100807331 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082055424 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103517667 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102390035 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109543538 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.107491897 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105602071 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067838286 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.072316571 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.068904657 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103384189 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076020353 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113650651 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073392775 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10308428 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093238126 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076681854 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.064178632 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097796706 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090507467 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.07901165 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119300851 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.109594188 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.069948642 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087366212 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10349884 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080572439 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119832907 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.098486868 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097258062 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068419084 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.086770287 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221665099 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107186086 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098521628 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07461011 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.073502321 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067841615 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1052158 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080702604 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105921308 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085596479 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097197431 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116081348 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127482799 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083600077 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094018135 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11455163 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109732385 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.079257657 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110178997 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131355378 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.11651359 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.077683014 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.081949553 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103699559 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102786855 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098829976 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073231222 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076449569 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105569992 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110245716 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065441934 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081761917 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067438336 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.081224242 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110791165 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092821184 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079256772 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11402431 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072013339 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103986909 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092072285 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119408478 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118860772 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14126643 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093444947 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082415174 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073861835 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120553985 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.067912133 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113381186 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108977116 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084570423 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.06584019 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081185279 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.092481707 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.623883911 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10550065 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.072992175 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131607989 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083899784 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111736622 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081487092 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.113560916 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086757375 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098874853 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.087363792 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277599686 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.080302643 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10653539 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.171554922 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107292479 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.104432594 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0710734 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.083321541 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.070777871 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.075651551 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078091129 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083784003 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10681221 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08213901 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102489759 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.077181722 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.104067821 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08769498 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086026926 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.095877932 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077930869 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134726361 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085097208 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120622987 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104097897 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075718301 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072128762 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.083805515 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.097927028 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079337452 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091348209 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07576101 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.073506608 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149543111 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099246224 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084454871 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099318089 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.088160664 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.083888986 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089105353 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114162709 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107137547 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070246242 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.086112783 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102547372 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076106596 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.072148949 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093664492 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.066727345 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08606896 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095414686 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093058022 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086804565 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.099356539 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075363437 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083891103 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106187732 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082613468 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.0737734 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073870339 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073386637 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.073419073 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100552859 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104771926 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110803587 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105077187 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087266896 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090220033 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.075215116 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.36951597 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077865371 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094583721 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.101956575 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073704217 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.127530251 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086453064 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085873336 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093272486 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098104587 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148279663 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071961515 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10648949 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091376145 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106877404 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084267235 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103695919 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092928849 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088948027 seconds)
  done (took 49.048059381 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.091553194 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.143806898 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151396172 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077251768 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091640396 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115823495 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204713384 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188052397 seconds)
  done (took 2.8103509 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.065472099 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077031676 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098978471 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078378763 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06169704 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.063606585 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.199112101 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.077199407 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.061945149 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098540634 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.071516609 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.063438387 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.409390156 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06181939 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.062200489 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070571632 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062304658 seconds)
  done (took 3.411134032 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.365720588 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.597793411 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.338817296 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.070571243 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.979185266 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.083793129 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.327430842 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131751517 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07582378 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.557312591 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.374081981 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130177 seconds)
  done (took 18.7760482 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072959759 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069549615 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.073617729 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.073560974 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069403648 seconds)
  done (took 2.094115224 seconds)
done (took 98.303434239 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078016017 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.163892772 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063223883 seconds)
  done (took 1.995789043 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.08111259 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.076469918 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.076716081 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074687098 seconds)
  done (took 2.052029737 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071333305 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07119427 seconds)
  done (took 1.878218111 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240456358 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.160217601 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.0881009 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079809813 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075653279 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075965158 seconds)
  done (took 1.983675143 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069672752 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.067834199 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.068315834 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.068002892 seconds)
  done (took 2.011885383 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065266566 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.061743844 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.063927042 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067132822 seconds)
  done (took 1.997006513 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08193196 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079358901 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073548713 seconds)
  done (took 1.975452097 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.092238204 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092495913 seconds)
  done (took 1.922715952 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.077295687 seconds)
  done (took 1.818842616 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.087882377 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094300752 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.149320149 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107754499 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.146549159 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.130931556 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.07353377 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075148951 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.069288517 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.068072595 seconds)
  done (took 2.744019028 seconds)
done (took 22.680737693 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076670114 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.361552838 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.355381022 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081433203 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667048476 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352526308 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.988977539 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.08960017 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.097876838 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06609328 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08222672 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645975603 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975015097 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322870225 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.96329604 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324245117 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.644269757 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.063289823 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.062801132 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063599417 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969807374 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06274545 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063795326 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06369207 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.682838577 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368365831 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064448225 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32414653 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063372393 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066089384 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.351453855 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064913199 seconds)
  done (took 16.147227611 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.06816037 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11604764 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.06784217 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.07859172 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.065598646 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.064902875 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.066347466 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.064100656 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.104135165 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063549007 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079650437 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06341259 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.067784749 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065282812 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083181788 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064575104 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06552443 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064630561 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064024957 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068065839 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082132757 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063946617 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064861387 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064258528 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064644169 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077065137 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065658797 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.063863148 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064318493 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066494853 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067678662 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065423603 seconds)
  done (took 4.009183033 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118007672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121874276 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.06866647 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102461392 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114427734 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066108324 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144012418 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089345611 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110436848 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064622917 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080314404 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.063763177 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098327296 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065653737 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084630192 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064422958 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065810089 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064982198 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064362465 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065170587 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082774253 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063829435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064789625 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064360841 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065464972 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079052685 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065598715 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064645914 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064171363 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06688929 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068282095 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065709364 seconds)
  done (took 4.289364551 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.067709584 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.068216709 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.075572998 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.076696993 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.062511027 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.06513706 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066402378 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.062735266 seconds)
  done (took 2.30304479 seconds)
done (took 28.510896189 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076391488 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063175808 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.066803893 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083081908 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.068827764 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.066336212 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.060360316 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.069627572 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.066844693 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.066960791 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.068617316 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.062298954 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.065548887 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.060609366 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.067255883 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.062096768 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.068826784 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.066501053 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.066898098 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.068080732 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.064974938 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.067959343 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070248911 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067572918 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.067256646 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067101144 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071307087 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.067740685 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06273376 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.065515017 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064407472 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.07273956 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069484162 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.069548788 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.062462672 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062365002 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066281942 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06414426 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.06855029 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071667771 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.063863173 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.071964322 seconds)
  done (took 4.549224419 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083207126 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.084317188 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.07760939 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.076303732 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094521989 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.077054604 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.081235834 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073530006 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.072108893 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.080398478 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.068666553 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075233065 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073314096 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067705064 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.072132088 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.069920139 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.073903258 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.068929234 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073286525 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.072842297 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081820284 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067697604 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074580056 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.074429052 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069299516 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.074822001 seconds)
  done (took 3.722489806 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070532668 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.07991568 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086731549 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143089305 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107121444 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.074946984 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.075667629 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089442598 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.093101831 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06341992 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.066980748 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.087961841 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087288289 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.069581648 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.102724239 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.079337156 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.078381441 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065351325 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.069915761 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092125153 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083672536 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080487345 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089514144 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079098947 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.062726864 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.065352156 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.06974012 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.076496694 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069662273 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.073941369 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.067497546 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.065822366 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.063946998 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.073998616 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.066694779 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.062094033 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086434018 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074579165 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.075753121 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105325355 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071930867 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.063890906 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090610627 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12323137 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.062364964 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.066309945 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.066090539 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.074732391 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.063782488 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090826217 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076892156 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.062851911 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.063375308 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.064081082 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.063827473 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077786405 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.064778951 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.064646676 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.073527955 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.068706192 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084164095 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.067938969 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081658881 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.062926152 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.072960636 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.063913728 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.063867286 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.061510293 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093185563 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069119369 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111668839 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065187107 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.061912403 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074307532 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073200152 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.068518809 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.062713891 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079675605 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07311205 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.065942433 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07370052 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.065344054 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.065455528 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093093001 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.062773774 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062031455 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.061711021 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.065689765 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.065439597 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.063305538 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.076059419 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.061828588 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.065548051 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.076852201 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063689117 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065269574 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068135584 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.065969021 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.062455479 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074905359 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.066536161 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.063975292 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.074368239 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.063669692 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.065565827 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.075897714 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.069737668 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.062481999 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064279859 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065705138 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.063968707 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.066399324 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.065622196 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.064829365 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069862977 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.069834622 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.06806609 seconds)
  done (took 10.356784197 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161133683 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.147071576 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065037524 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14037533 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.070843547 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.068479474 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14056414 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.082482502 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.063747465 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.064157088 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.063005406 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.091522013 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.087730711 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.097827842 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068089366 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.063608229 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086353293 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.094913094 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.143738799 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.138671002 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086239239 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.070543825 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.065876102 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.064787936 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.065210599 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.071694863 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.078460472 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07119782 seconds)
  done (took 4.316608404 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074527802 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.087603351 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.067603966 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.074816928 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.082890954 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06397292 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.065287657 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065114329 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.077645655 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.072388151 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064055768 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.067698295 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.067710839 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.065971784 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.064173639 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.069464521 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.069714581 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.062704273 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.067657993 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.068156872 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07335238 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088220318 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.067288093 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063461706 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.065539321 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.063094207 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071918213 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.075203896 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.063455125 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.07821884 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.061089915 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.06746077 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.076800449 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.063977033 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.062968622 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.063375439 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.063358198 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.063404706 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.063429625 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062000434 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.062027974 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.068021642 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06208588 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.071192131 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076903806 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070049849 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.065584383 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066045529 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066287427 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.060927938 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.0659351 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.065955078 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.06609129 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.070469064 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.067081562 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.0662794 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.066644266 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087859425 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069130473 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.062912059 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.062509589 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062029085 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.066021489 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073034946 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079474239 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.065576972 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.061816873 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.063583603 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068502987 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076796149 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.062471459 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067602518 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.060800996 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.063594411 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.066612497 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067147496 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065923364 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063818231 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063182415 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.063368005 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063845307 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.063255326 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.063052737 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.065485994 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.061347204 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.061987838 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.063886494 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.06510557 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.072328893 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062474786 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.066890114 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.064178809 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.062482659 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.065493301 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068685979 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.066115507 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.077424924 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075351885 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06346397 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.061858083 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.076223429 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.065958165 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.062863018 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.069265819 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.067324981 seconds)
  done (took 8.894854433 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088535583 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065579837 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.079238247 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.086389403 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.073365027 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.068526359 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.073834623 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06435463 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.079286295 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.062725582 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.071882655 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.062215092 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.074388154 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073286816 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.065129204 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.074060127 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.066008622 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.079929445 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.077462484 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.062103171 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.071955596 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.07530716 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.075602564 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.077729523 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.076719804 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.078111006 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.075402677 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.066054522 seconds)
  done (took 3.856952619 seconds)
done (took 37.449464993 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.853932226 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.006606837 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.832128992 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.026492 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.08117513 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.852006594 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.04086144 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.833507115 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.072743496 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.878781037 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.129426858 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.357231893 seconds)
done (took 66.790960463 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.859228033 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.9954655 seconds)
    (2/2) benchmarking "String"...
    done (took 2.087525449 seconds)
  done (took 5.848514433 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.096209426 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.636371161 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.111508957 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.832132977 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.83254241 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.358891583 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.627139463 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.280920268 seconds)
  done (took 31.446479458 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.996202559 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.060040927 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.509486316 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.546424412 seconds)
  done (took 15.918442127 seconds)
done (took 65.026439866 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.879413671 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.829213375 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.858004875 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.858343642 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.829323916 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.831914647 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.831931316 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.830737398 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.876821528 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.95937259 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.830170618 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.8437296 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.829004856 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.861277266 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.470621861 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.878824651 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.842074611 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.835099627 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.844217881 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.848349756 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.833538523 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 7.004995191 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.332913622 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.027605014 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.446116473 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.193379269 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.310987835 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.26306333 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.838430233 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.828448196 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.869015616 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.134332508 seconds)
  done (took 206.517029744 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.830685379 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.95246316 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.0017838 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.840191235 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.448272115 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.005179882 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.928986032 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.497068474 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.83061522 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.850272971 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.146410257 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.827775621 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.159231893 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.772431475 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.866932916 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.922171099 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.061448506 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.152636304 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.869171631 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.995654566 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.846668883 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.98251755 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.939381669 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.113427261 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.868227716 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.852525383 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.847791513 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.842960986 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.021764979 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.057430954 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.840779408 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.867054446 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.010083583 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.698302721 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.849361756 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.858738005 seconds)
  done (took 173.223870268 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.023801589 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.842868727 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.833404995 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.8910165 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.957273437 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.833931706 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.498093735 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.840536887 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.410974039 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.834450528 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.83273433 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.832416957 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.837073514 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.845252641 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.907559319 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.833820066 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.848636192 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.835557456 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.862676361 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.829349574 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.836719028 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.833605716 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.835189289 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.835298581 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.837167886 seconds)
    (25/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.835508045 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.835056294 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.159255816 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.07476266 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.833609724 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.834442227 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.526087208 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.848210038 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.067672992 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.832904302 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.928526293 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.888775546 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.96381288 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.834488645 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.052824318 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.907279465 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.830120594 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.832928367 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.898768403 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.843898379 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.832130362 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.837768546 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.84280937 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.899909384 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.079276115 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.83261276 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.955067766 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.326962412 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.834800781 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.837497215 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.835683824 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.439982736 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.834718973 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.836201721 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.840750863 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.840102245 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.835307688 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.838317895 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.222069503 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.902435993 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.431063862 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.831921561 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.140775801 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.835091869 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.119454155 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.056986705 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.833490529 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.836137866 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.833593402 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.836627931 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.834484411 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.836961403 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.955195054 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.843610403 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.963792661 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.915303874 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.955399453 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.835856596 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.847319311 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.657603208 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.90610889 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.870356603 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.66432515 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.837545935 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.209137177 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.621170857 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.83420011 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.835185178 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.847534259 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.833790194 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.835815053 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.836623776 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.915841243 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.838112322 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.834938489 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.835631094 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.958742228 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.560637493 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.127108187 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.836492487 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.835995551 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.843753003 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.918954107 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.955313005 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.835995228 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.903607549 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.839896716 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.83841234 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.924602271 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.83512081 seconds)
  done (took 408.080508584 seconds)
done (took 791.669848802 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.421705484 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.389517207 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.486510429 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.404147856 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.383586838 seconds)
  done (took 13.857376545 seconds)
done (took 15.629120119 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.849452037 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.842769855 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.895492584 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.918356663 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.851011236 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.857416761 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.921557188 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.856070575 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.886938931 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.890560977 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.9205221 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.922958607 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.859091942 seconds)
  done (took 26.245374153 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.844831283 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.994101089 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.073655595 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.874135637 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.846539892 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.081489298 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.90073013 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.993990531 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.992187527 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.081734744 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.084258775 seconds)
  done (took 23.542292947 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.846954846 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.007264428 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.072581243 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.881060225 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.84862261 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.07928985 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.907953211 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.990314718 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.992211107 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.075378422 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.089119035 seconds)
  done (took 23.574504679 seconds)
done (took 75.135595002 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.841873911 seconds)
  done (took 3.615731942 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.868501461 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.005469984 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.842354617 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.840916265 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.842015277 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.844322342 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.841075035 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.841046761 seconds)
  done (took 16.69838636 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.841599869 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.841428674 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.842442336 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.843273398 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.844199064 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.84226283 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.843375907 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.843288773 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.842959503 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.843375157 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.843432259 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.842910254 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.840609801 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.841846981 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.843701876 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.841384793 seconds)
  done (took 31.258107346 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.845616992 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.842889742 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.844127604 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.845139572 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.84221802 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.844179566 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.844581738 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.843352018 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.843593411 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.844100393 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.844768999 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.844548413 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.845313803 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.844714947 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.844430459 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.844472649 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.844456073 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.84514788 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.84861653 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.847203902 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.844166474 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.845131145 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.845043111 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.843872517 seconds)
  done (took 46.049800339 seconds)
done (took 99.405658258 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.566426663 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.549286024 seconds)
  done (took 9.891600619 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.845963932 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.847022931 seconds)
  done (took 5.474012898 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.844066666 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.847563916 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.846371207 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.845931999 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.847129842 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.845719577 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.846595336 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.847240162 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.845077653 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.845270542 seconds)
  done (took 20.236654777 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.847916955 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.848947407 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.845736902 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.847791768 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.849212751 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.847105216 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.84621588 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.848656137 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.848211374 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.848047882 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.846933226 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.849319141 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.845239387 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.849322741 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.848787904 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.84578025 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.845967356 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.848087534 seconds)
  done (took 35.034208686 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.846572436 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.84663469 seconds)
  done (took 5.469945222 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.846510097 seconds)
    (2/7) benchmarking "second"...
    done (took 1.849369514 seconds)
    (3/7) benchmarking "month"...
    done (took 1.845661917 seconds)
    (4/7) benchmarking "year"...
    done (took 1.847105966 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.845136494 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.846134155 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.847553227 seconds)
  done (took 14.704456043 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.846041006 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.005877198 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.072003075 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.701199039 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.849911685 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.849613744 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.200179848 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.849710352 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.850823452 seconds)
  done (took 21.003163388 seconds)
done (took 113.589952575 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.651258838 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.845313887 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.103774011 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.902555217 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.857440848 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.184160007 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.850190915 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.49294149 seconds)
done (took 42.667033995 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.864044654 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.845835164 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.871656272 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.872513786 seconds)
  done (took 22.36876215 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.854878359 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.30224564 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.867839711 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.716305001 seconds)
  done (took 22.744263367 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.228975177 seconds)
    (2/2) benchmarking "read"...
    done (took 2.188453189 seconds)
  done (took 6.201634291 seconds)
done (took 59.959938792 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.849783143 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.847022606 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.848734716 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.847949181 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.848251131 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.848184034 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.84877201 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.847912468 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.848212245 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.84840269 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.847284371 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.846149108 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.847778463 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849730589 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.847086036 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847090404 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84742038 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.849316398 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8458583 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.849008956 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.847157176 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.847687641 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.848942393 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.849299043 seconds)
  done (took 46.132204117 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.848587089 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.8501683 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.847265318 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.849508893 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.847813515 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.847210701 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.849810678 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.849147612 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.847827506 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.847236777 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847019771 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.848847441 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.850980998 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.849531154 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853225809 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.849644609 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.847203041 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.852244964 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849845196 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.849821005 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.850734656 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850758717 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.850217627 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.847964662 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.850200358 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.849473816 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.850569704 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.850037971 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.848241933 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.849302347 seconds)
  done (took 57.260031395 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.851086353 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.854200554 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.848776779 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.852689479 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.851722585 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.849211057 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.85282206 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.853413343 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.850760602 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.851310836 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.849397204 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.851418413 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.853908116 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.85069217 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.850032859 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.85095454 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.849827195 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.850078124 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.849276664 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.851668143 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.851019059 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.849939764 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.85220316 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.85129518 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.851695378 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.850020332 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.849815516 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.851175676 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.85167353 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.851672085 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.85076179 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.849667897 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.854394906 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.850785163 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.850970855 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.849604255 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.851702019 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.851849411 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.849271255 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.851769724 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.851812407 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.85139702 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.850943745 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.851206134 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.850952132 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.849721325 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.852151847 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.850309196 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.85062304 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.850308773 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.850621146 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.851544499 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.851985759 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.849943693 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.851461872 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.852187774 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.854984772 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.852264879 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.852603437 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.855659321 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.854118632 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.851459827 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.852978512 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.854815918 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.854155982 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.850266072 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.852333488 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.852102834 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.853587831 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.850928296 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.85448817 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.851783672 seconds)
  done (took 135.09614473 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.852031834 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.85285593 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.851563675 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.852923781 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.855249167 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.855133056 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.852584927 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.854548212 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854476013 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.856822242 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.855598821 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.852203384 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855174188 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.854448592 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.857426912 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.856241626 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.856140948 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.854134765 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.85561534 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.854236284 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.856509569 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.853859501 seconds)
  done (took 42.584526626 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.856354843 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.854460335 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.856548886 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.857171827 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.854403443 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.855105185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.855251834 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.854194017 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.854472627 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.854993096 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.856464594 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.855956865 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.855744262 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855023648 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.857820034 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.855030068 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.859042744 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.858836846 seconds)
  done (took 35.194270859 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.85735896 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.85761131 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.856761283 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.855167199 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.855800852 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.857914645 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.855351739 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.856856455 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.856132834 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.855125099 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.856721572 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.854487922 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.856423177 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.857995645 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.859453098 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.858114809 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.856702233 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857164212 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.856808726 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.857473222 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.856517383 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.856991232 seconds)
  done (took 42.637318028 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.85588452 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.856651824 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.854294607 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.85598432 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.857462868 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.856285705 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.858747433 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.856366481 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.856522504 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.858445473 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.856891756 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.859914542 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.855230481 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.855456102 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.854949964 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.854934216 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.855596673 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.856519985 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.859653786 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.857728003 seconds)
  done (took 38.921432436 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.860887003 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.859292283 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.858380905 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.859237275 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.858209602 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.85840071 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.85979249 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.859048539 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.859588463 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.859390496 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.860724397 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.85901042 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.861107163 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.858325602 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.861719746 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.860131471 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.861010845 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.859247815 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.859890108 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.860728292 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.859642058 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.861761402 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.859624341 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.862906833 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.862332506 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.862136077 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.861148258 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.860681771 seconds)
  done (took 53.875172698 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.860226947 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.85829383 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.857489687 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.858816086 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.858915817 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.857807377 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.86131871 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.859969487 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.858154132 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.858114354 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.859933197 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.859112946 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.861499388 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.86024203 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.857479984 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.858123877 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859893923 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.85824175 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.859920639 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860949208 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.860117097 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860756529 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.86301322 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.860776187 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860265799 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.858405239 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.858578321 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.860153767 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.861084025 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.859092092 seconds)
  done (took 57.576927796 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.881472559 seconds)
    (2/2) benchmarking "in"...
    done (took 1.882514595 seconds)
  done (took 5.555697396 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.860978316 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.862853262 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.861494719 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.860781157 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.862911723 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.861226577 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.861672442 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.860877242 seconds)
  done (took 16.686810305 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.861104916 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.865354259 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.86325017 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.863441785 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.863526575 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.870871259 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.86123751 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.865165488 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.865265778 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.864186273 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.86663234 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.869246202 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.87167645 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.86765608 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.861599972 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.862859536 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.864958412 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.86430848 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.868463903 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.860107651 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.868456882 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.864745796 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.86330022 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.8632936 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.862968489 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.869654383 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.8760137 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.867709059 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.866697988 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.864380981 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.873682698 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.864458907 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.86376797 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.866382896 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.862856156 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.864628229 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.872329833 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.864199776 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.865942007 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.862396306 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.868968638 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.866878686 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.87083343 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.87427114 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.863728823 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.864790818 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.862895487 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.863933398 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.864922504 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.868387546 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.8722115 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.867408696 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.862566656 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.863811807 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.866061261 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.862206579 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.865492273 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.866989427 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.872240108 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.874822775 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.869831223 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.88797659 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.877553422 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.863470922 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.866799978 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.878036395 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.89213881 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.86836587 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.86830147 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.862544167 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.873886496 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.863615713 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.864932494 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.864345665 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.880964262 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.875011982 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.86833308 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.867878049 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.869002098 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.87075637 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.871070385 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.864949215 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.867558611 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.866053705 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.879860737 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.894325994 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.866444061 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.866279331 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.867414567 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.866072412 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.870624054 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.872029317 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.869957036 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.867203457 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.869902156 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.869563411 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.867082066 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.866283867 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.864551272 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.878442046 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.86522175 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.866719504 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.87452089 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.876545472 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.867541908 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.86770596 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.871791974 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.866566878 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.878260575 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.868511143 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.868252639 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.868845493 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.869529674 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.873049581 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.870898248 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.873371896 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.877547977 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.878460412 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.868475696 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.871628327 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.872062311 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.872546374 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.880103176 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.89431613 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.867510542 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.876136508 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.87851158 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.882514741 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.87572755 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.870745338 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.873876255 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.868623127 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.868912044 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.873979582 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.867706387 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.871433905 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.867862544 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.86906772 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.868056736 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.866736606 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.872265223 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.868891573 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.870158819 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.867428416 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.871876513 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.86811342 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.873079958 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.878029109 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.86837072 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.868136289 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.869130738 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.875226398 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.870516309 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.871545519 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.868807376 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.868798748 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.870661039 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.871364876 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.875158477 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.869078549 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.870188791 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.871502228 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.876992313 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.870097044 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.870785544 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.870765502 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.868996346 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.869437165 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.874378973 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.872733438 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.873251661 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.868821646 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.878305808 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.869828994 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.870591812 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.86916647 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.870205449 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.871226285 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.874815444 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.884512507 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.87548869 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.881278507 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.872476759 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.878738396 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.869702375 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.872080562 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.870064918 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.87157077 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.872268481 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.872870131 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.871970588 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.876523783 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.896222781 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.885231036 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.873689505 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.872122258 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.876001524 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.874599011 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.88107668 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.871336961 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.875032291 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.875352909 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.871314532 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.871644005 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.875788038 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.879056806 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.873751759 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.8727183 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.877055966 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.874924417 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.872252843 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.874308651 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.872791548 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.875198773 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.869685994 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.871752708 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.871071935 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.872448622 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.882107582 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.878377336 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.876175771 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.875930815 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.8785986 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.877024611 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.873522508 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.877685871 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.878731515 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.874711401 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.876503376 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.88395759 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.873757556 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.874008929 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.873902868 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.871773168 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.877014675 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.874173586 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.880073133 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.883064589 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.878345783 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.875549446 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.880434161 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.873283215 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.875777173 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.87226528 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.87580378 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.872390014 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.877751421 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.872880732 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.873140272 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.882257683 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.873837551 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.875093373 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.875336294 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.877103347 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.874897361 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.877900581 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.872626962 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.880571985 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.883599242 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.883166302 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.875960311 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.876253465 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.878472296 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.876549022 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.880238286 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.878656737 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8881446 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.885908083 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.87472139 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.878858448 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.875614232 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.882148012 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.875389608 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.878358004 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.889240763 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.878390771 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.877656392 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.883122889 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.88013404 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.87777503 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.885382899 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.877215096 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.880423646 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.878661861 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.877290193 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.877014955 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.876375158 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.878100465 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.874772959 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.87913863 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.881063684 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.877084234 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.877787346 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.875011501 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.887306858 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.877817864 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.8793264 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.886402145 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.880830393 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.877591897 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.879779379 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.875883284 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.878329612 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.877306636 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.87583654 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.878753612 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.875128823 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.88148625 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.889882491 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.881201552 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.886108801 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.88287403 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.889574018 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.875183979 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.877271712 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.878045059 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.883885265 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.88672485 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.877758115 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.876792076 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.886770085 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.876515244 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.879104398 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.88248774 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.879447074 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.878869145 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.877134517 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.879244928 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.884130709 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.883228925 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.878373674 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.878895149 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.879860487 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.877912102 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.882981395 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.883244788 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.882248756 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.877892264 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.87814479 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.879380655 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.881180086 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.88029756 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.880002948 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.877874469 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.881180237 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.888787139 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.881344038 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.880405267 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.885178984 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.879229384 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.890984783 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.877607918 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.881580978 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.879799233 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.880028616 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.880015312 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.878031359 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.882034092 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.8792328 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.880233961 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.881003454 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.894643602 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.889954932 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.883004738 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.88431816 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.881821967 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.884391602 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.891470283 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.907391673 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.883800723 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.886163494 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.884282632 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.889370577 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.884255441 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.88885925 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.88641691 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.891537913 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.883525045 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.879543716 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.885140594 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.896269768 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.879677214 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.880855017 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.88120314 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.887690431 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.884861314 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.881119065 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.881792585 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.886319227 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.883342675 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.898597471 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.883746535 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.883994209 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.886027947 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.88137567 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.883969964 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.884079371 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.888132569 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.884053506 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.881847208 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.881132216 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.886037273 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.892036166 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.879595787 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.889114269 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.893891796 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.88382692 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.885789363 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.885121027 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.881728169 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.887680447 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.882674995 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.886567008 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.884349415 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.882490523 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.886506739 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.887884139 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.89379522 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.885716699 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.883442668 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.883252681 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.890171435 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.887137373 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.88232329 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.888024047 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.894529866 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.890496827 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.897053125 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.896701942 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.884623675 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.885559173 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.893528065 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.893370293 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.885384595 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.885288311 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.883843045 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.887711504 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.886863278 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.886782191 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.883984658 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.886556253 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.892076845 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.884904707 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.889482228 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.886036351 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.884932937 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.891547484 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.889424303 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.894799305 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.884539902 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.88568003 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.885416195 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.890095626 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.887600842 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.890987265 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.884907738 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.885144147 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.889729489 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.888104332 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.88936343 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.886680028 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.887842423 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.890409799 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.885317062 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.886806218 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.8881614 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.89109154 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.884646859 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.896884491 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.897081476 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.886700478 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.88981382 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.888167583 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.893547066 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.887095634 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.889018522 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.889038042 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.886902577 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.896013951 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.885279007 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.887454144 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.888782186 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.888714971 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.898609959 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.891517301 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.894500415 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.887816538 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.888507488 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.890279165 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.894798244 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.900139945 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.893510729 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.896995924 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.895753626 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.895250516 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.891933486 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.886849454 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.890011529 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.891608123 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.890137149 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.894557817 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.89296324 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.895338406 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.889955159 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.893558171 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.887921058 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.892974087 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.888501564 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.888512009 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.895010675 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.903655809 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.901350182 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.889050689 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.894352233 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.888947408 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.897407144 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.901835693 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.887737173 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.890691676 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.889939145 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.893002068 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.891365626 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.900704881 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.898985718 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.894547763 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.88910852 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.896878245 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.909184154 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.893715792 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.902503306 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.926012536 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.890738613 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.888606514 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.89362302 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.894804159 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.890416103 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.896004491 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.889840473 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.899684018 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.8954955 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.889895777 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.903856442 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.889764838 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.892202555 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.892275551 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.890624279 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.897645106 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.891006989 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.900331053 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.89227499 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.891174827 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.890959073 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.892670155 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.889820785 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.886716044 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.89076851 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.896079716 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.88806367 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.890836342 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.902792885 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.889512901 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.89543195 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.907764188 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.901518411 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.890413001 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.892135504 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.893188891 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.900864732 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.895482184 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.890742628 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.895689774 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.903161711 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.89625821 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.903448393 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.894489556 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.894613332 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.894368603 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.890742126 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.892883607 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.907477475 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.907087247 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.894212891 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.89387338 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.90319512 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.893624177 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.900894266 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.900979755 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.89277854 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.896089726 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.892319497 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.893412298 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.896726227 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.89429693 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.900286428 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.905800209 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.898386233 seconds)
  done (took 1122.730539982 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.894305543 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.89577242 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.895243524 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.898058544 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.894872314 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.898088954 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.898915383 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.89704119 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.894727741 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.893747493 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.896206743 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.897793667 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.895773072 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.893900451 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.894025146 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.892609972 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.895889399 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.897976096 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.896020429 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.894842236 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.891602735 seconds)
  done (took 41.633351835 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.891581962 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.889502556 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.889064231 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.889436937 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.891041527 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.889809692 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.890338535 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.890112805 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.888547503 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.890793505 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.888994715 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.890391918 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.890149967 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.88994693 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.891142587 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.890824992 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.891016378 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.88971504 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.890136667 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.889598322 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.892509299 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.88956327 seconds)
  done (took 43.406038046 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.889828172 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.890322507 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.895317566 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.889331447 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.889461508 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.890616657 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.889281147 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.892066576 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.890460617 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.891349832 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.899664235 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.899144535 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.88980288 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.891978582 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.886290597 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.887972665 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.03572046 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.887888961 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.887731358 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.888164421 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.887373776 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.895032159 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.88741431 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.888755831 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.883219052 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.883128227 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.883369011 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.883356659 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.883183505 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.885473739 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.887548227 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.882081917 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.885642108 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.887191231 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.884794726 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.882658088 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.887247455 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.881737399 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.883505384 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.884868812 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.894741671 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.908612283 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.881301189 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.883043871 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.891908073 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.881644814 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.883427429 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.887543288 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.890815556 seconds)
  done (took 94.49326948 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.882911769 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.882675977 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.881510771 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.88360975 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.880547338 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.885862042 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.87471595 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.876131905 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.875928351 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.876731689 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.877163611 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.874975651 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.876444113 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.874480319 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.874526664 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.875640301 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.876075057 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.875529415 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.875093263 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.87672017 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.877072154 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.876785574 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.874485923 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.875832297 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.875552001 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.874427953 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.87409389 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.876424749 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.874782211 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.874652695 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.874463096 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.874849871 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.875247541 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.872762142 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.877179382 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.875244606 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.874995274 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.877203328 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.87660708 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.876442064 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.876077374 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.876708537 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.874814026 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.881458217 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.880725521 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.881115991 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.881692915 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.881452787 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.882433653 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.881367785 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.882068932 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.882266839 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.880232062 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.882532422 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.883124664 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.881915909 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.881455631 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.882375351 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.886128764 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.882420613 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.882970027 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.882633753 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.882415693 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.883027568 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.886698401 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.883095877 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.881923544 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.883198642 seconds)
  done (took 129.569049786 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.885611456 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.883691545 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.882788788 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.883265154 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.883097297 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.885621397 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.882620015 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.884729488 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.88256583 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.883189388 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.882428356 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.879803985 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.877982836 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.877669263 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.876834505 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.875992289 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.880001735 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.877882949 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.877945855 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.877247382 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.877501205 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.878876794 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.877164774 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.878598814 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.878659541 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.876075968 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.878202086 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.880278522 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.87655949 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.875650662 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.877338356 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.877532336 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.8788497 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.873863467 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.874819787 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.872940915 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.873772524 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.876038976 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.873023564 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.873976028 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.87258673 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.873060048 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.873067089 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.877282128 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.87378099 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.873078472 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.873954812 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.873097276 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.875337993 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.872444421 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.871956335 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.871796521 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.871684721 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.874229786 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.872084013 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.871709711 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.872173254 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.872103093 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.873427494 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.874334679 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.870946297 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.870721054 seconds)
  done (took 118.169084119 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.87138729 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.870908917 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.87012189 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.8692528 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.868394693 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.868974778 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.872001544 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.868124265 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.868863248 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.868983517 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.86904234 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.868838205 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.872753392 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.867816861 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.86902294 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.868710381 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.867981754 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.870604215 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.867355358 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.868600107 seconds)
  done (took 39.188588103 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.865774154 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.866961742 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.868164681 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.866545228 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.867017482 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.866783223 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.866232214 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867460447 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865674407 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.865909174 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.866774778 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.86692401 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.867399943 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.865631276 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.865620978 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.865704077 seconds)
  done (took 31.661413869 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.866870534 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.868268584 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.86665434 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.865734579 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.86559027 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.864795578 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.869224271 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.86621769 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.86633481 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.866176162 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.866174104 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.866747261 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.866211749 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.866422675 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.865723762 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.865363227 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.864378981 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.867168558 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.864433054 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.865170031 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.864908849 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.864583908 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.864759755 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.86444026 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.864244915 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.865356059 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.86423125 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.866739274 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.864624429 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.86589271 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.863135696 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.864344278 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.86449535 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.86528535 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.864608297 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.86429543 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.864395454 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.8642958 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.865149525 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.863941741 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.864464627 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.864620161 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.865061051 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.863312442 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.864535306 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.86461086 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.86280557 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.862843942 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.863188184 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.864499878 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.863008141 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.863165541 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.863054457 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.863208675 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.864020732 seconds)
  done (took 104.372023436 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.861863547 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.862439398 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.862846432 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.862350815 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.864244091 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.862832544 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.86264189 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.862162939 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.862522186 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.86368505 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.862141407 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.862232924 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.86194105 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.863076627 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.864010246 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.861870073 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.861821127 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.861326736 seconds)
  done (took 35.319831535 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.861068958 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.863263899 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.861891613 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.860424805 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.861599576 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.861905313 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.866836762 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.860883098 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862592599 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.861116641 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861764701 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.861986256 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.863478693 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.860716297 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.860816981 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860378024 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.860774209 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.864849923 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.860708922 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.86026878 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.860882556 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.862122868 seconds)
  done (took 42.752691771 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.861023673 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.860936707 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.874569948 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.881648456 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.880327402 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.89794882 seconds)
  done (took 13.047272452 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860966673 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861497383 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.860345477 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862942593 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860913079 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861985733 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861387572 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861247229 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862458809 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86165292 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860946328 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861308601 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860884027 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861997325 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862184955 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861325663 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860819003 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861677989 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861610039 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864745917 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860853291 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861106079 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860528854 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861572323 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862023019 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863097641 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859711962 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861381331 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860308188 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861435707 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862542765 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860456854 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860138894 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859568242 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861185373 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86149152 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856902817 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858584918 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858805466 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858873838 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.857961012 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861833691 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858334456 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858515856 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857325536 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857504142 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860394011 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858589423 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859139425 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860408873 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859378464 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861341814 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858750948 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859829817 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85969411 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85933075 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859012114 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859949092 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858774104 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858974152 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860597215 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859549738 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862267078 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861054672 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859618344 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859950881 seconds)
  done (took 124.584231041 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86040929 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.861338681 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861200224 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861498471 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859793165 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860733473 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861428226 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860622401 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860140589 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8600628 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860630189 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861938295 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86017201 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861021715 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86190782 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860092876 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860931579 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863466464 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86063238 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863345308 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86079839 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861669425 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863022946 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860597786 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860746348 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861311845 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859562801 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863084719 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860384613 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860418294 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861095864 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862093493 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861626643 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.862570689 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861721301 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863665688 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861951762 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86181974 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864075246 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862592969 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86192973 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861092521 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863311221 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861503353 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864025237 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861546814 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861678384 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861292281 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861878606 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864627655 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861965104 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864908694 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860584467 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862794426 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86433687 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862609359 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863640778 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863183035 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863565998 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862837709 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864494298 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863343007 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863512857 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863697797 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862594636 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862973466 seconds)
  done (took 124.68379573 seconds)
done (took 2598.918127577 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.895758554 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.864706389 seconds)
  done (took 15.553130101 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.031269508 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.981232869 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.866832323 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.880308705 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.865546929 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.88870176 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.884978994 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.865364552 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.866641472 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.866716242 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.867439725 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.051246352 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.865082873 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.864439878 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.868658723 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.959782916 seconds)
  done (took 52.271323921 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.871268228 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.87117895 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.883026994 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.871160862 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.876679465 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.88565198 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.899549514 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.877278235 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.908002603 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.887738282 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.943208637 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.883898166 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.87243697 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.925454966 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.885386193 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.888561469 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.968395637 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.947739776 seconds)
  done (took 35.941339884 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.953388424 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.875590419 seconds)
  done (took 10.632663705 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.895981175 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.867647801 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.872403653 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.862545982 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.876035473 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.875237646 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.85999564 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.890979067 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.888048536 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.887859276 seconds)
  done (took 70.575742333 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.875296534 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.871442769 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.874106826 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.869913764 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.866707076 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.86793138 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.867910638 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.870424831 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.553748592 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.903655278 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.876094938 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.887003144 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.876190139 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.877680048 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.874325558 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.903820973 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.018359261 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.872587539 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.874839095 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.881512294 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.879450959 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.927307789 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.888328002 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.874495824 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.90838802 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.554857651 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.884091909 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.882092119 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.988928992 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.874504451 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.877172617 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.087861777 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.881566779 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.347195443 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.161898924 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.882695523 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.888424469 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.882450411 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.875525557 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.987759293 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.879043478 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.886909635 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.87479277 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.138951138 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.969491915 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.921612849 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.204180623 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.874948246 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.881199155 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.910801167 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.881233623 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.877346166 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.895391969 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.399779772 seconds)
  done (took 133.292856368 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.87487699 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.232531703 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.040585281 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.873005066 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.156404718 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07675725 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.873324651 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.919008666 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.873596205 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.101136892 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.126938045 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.977815739 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.876192665 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.874418376 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.874160253 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.871544295 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.026957087 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.941413999 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.875403276 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.873430674 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.901228036 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.114088005 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.99202591 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.875763747 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.90071263 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.084102282 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.990803494 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.975377754 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.664901128 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.874962923 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.936571936 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.875609797 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.872765313 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.873888498 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.029463909 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.966756651 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953073823 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.874163783 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.875556244 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.875460638 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.531377106 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072718519 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.970553861 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.000910473 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.123389211 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.074815562 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.648389261 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.874655089 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.604595233 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.036933269 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.103419804 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.104150641 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.991002315 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.878413275 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.133306469 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.874070728 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.872345971 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.11929041 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.092118791 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.97062653 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.875664919 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.877750894 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.873839336 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.114018228 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.876233086 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.966909952 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875490994 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.874844255 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.971284151 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.976323565 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.10116526 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082745445 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.903557473 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.211757673 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.375380863 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.122137418 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.937946587 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.126632274 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.879610379 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.873272555 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.953779273 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.715585161 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.128591301 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.117854057 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.117955531 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.906380906 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.593999194 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.876761979 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.102254965 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.096662914 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.13453794 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.119377808 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.107681015 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.19409504 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.877201494 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.877368044 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.10268666 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.997246649 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.877127897 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.225647306 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.10656366 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.438081932 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.901656228 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.182106875 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00788008 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.881564249 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.50311289 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.87708737 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.104758686 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.915457707 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.877280651 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.880307136 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.092445326 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.862124515 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.879253759 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.741456204 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.935872061 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.878939481 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107650287 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.88002464 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.143060103 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.880875215 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.108798404 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.081888523 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.908018374 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.051214613 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.123898096 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.879591232 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.122204742 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.116354446 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.99083873 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.148372204 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.75960506 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.878503491 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.166536457 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.876950361 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.879829308 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.048646507 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.883166213 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.018812079 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.882153957 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.172001293 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896002469 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107548554 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.88269343 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.131693002 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.906671466 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.925721607 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.879391537 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00163297 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.882893861 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.700742532 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.036190941 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.880517383 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.877223344 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.41979891 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.877686403 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.03092987 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.107875877 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898344138 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.950538877 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.535287882 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.881824106 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.96398284 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.899102911 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.266367993 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.88200619 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.130656937 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.882751656 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.881595846 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.882412098 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.116488916 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.112842918 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.882765951 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.880402805 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.784725026 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.882620773 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.881413463 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.062324888 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.218542568 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.87998818 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08106771 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.883890922 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004947707 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.883266562 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.952327059 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.214420325 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.881239031 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.881650735 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.880568732 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.883950175 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.884003727 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.090390191 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.903727844 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.414696742 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.017243069 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.153865606 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.187063048 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.122437922 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.920070586 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.883005216 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.130763335 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.88276657 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.938307379 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.884001445 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.902149414 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111436675 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.88326429 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.142908618 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.149878823 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.754265268 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928158746 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.884013762 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.884912264 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.881204971 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.028304736 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969266759 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.883976535 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.884623443 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.997351953 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.00042343 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.091389643 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.885199495 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.943894656 seconds)
  done (took 905.403981993 seconds)
done (took 1225.465003421 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.883860335 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.879229721 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.884717391 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.882864131 seconds)
  done (took 29.34353338 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.889645052 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.88573929 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.88627852 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.88626015 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.886235683 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.884709687 seconds)
  done (took 13.133960432 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.049660287 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.881484321 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.884005724 seconds)
  done (took 21.630744843 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.96414057 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.297738252 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.024753024 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.322062356 seconds)
  done (took 10.42407827 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.885830724 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.88596597 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.887063785 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.888752879 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.889834951 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.890739903 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.88629022 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.888543663 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.89248924 seconds)
  done (took 18.811809518 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.64702707 seconds)
done (took 99.805889231 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.893999729 seconds)
    (2/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.962524306 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.013845741 seconds)
    (4/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.883899216 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.948529293 seconds)
    (6/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.905548877 seconds)
    (7/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.067198648 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.009309995 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.019077011 seconds)
    (10/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.945367425 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.644024567 seconds)
    (12/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.969458271 seconds)
    (13/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.833927852 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.888267671 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 4.017935567 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.90215378 seconds)
    (17/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.889669799 seconds)
    (18/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.175635213 seconds)
    (19/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.138822497 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.069815041 seconds)
    (21/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.088742553 seconds)
    (22/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.339461702 seconds)
    (23/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.886606354 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.521616004 seconds)
    (25/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.054089671 seconds)
    (26/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.967561195 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.202927868 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.912034447 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.012820767 seconds)
    (30/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.04114389 seconds)
    (31/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.349257827 seconds)
    (32/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.963136792 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.975979193 seconds)
    (34/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.890043261 seconds)
    (35/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.351719886 seconds)
    (36/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.88656918 seconds)
    (37/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.0835791 seconds)
    (38/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.973556596 seconds)
    (39/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.029978289 seconds)
    (40/309) benchmarking ("sort", Float32, false)...
    done (took 6.043681182 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.060154572 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.88951556 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.011864177 seconds)
    (44/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.181908093 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.992290796 seconds)
    (46/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.967740755 seconds)
    (47/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.201359962 seconds)
    (48/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.890470065 seconds)
    (49/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.169244538 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.308444091 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 2.10463873 seconds)
    (52/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.061466029 seconds)
    (53/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.208117486 seconds)
    (54/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.930518902 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.013062341 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.616286859 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.853733435 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.895051395 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.22762354 seconds)
    (60/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.263844876 seconds)
    (61/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.909956331 seconds)
    (62/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.368948546 seconds)
    (63/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.894442825 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.622279289 seconds)
    (65/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.038756468 seconds)
    (66/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.907110004 seconds)
    (67/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.185249603 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.864653196 seconds)
    (69/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.103667499 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.980749804 seconds)
    (71/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.910431584 seconds)
    (72/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.094134156 seconds)
    (73/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.224794213 seconds)
    (74/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.063817441 seconds)
    (75/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.671095059 seconds)
    (76/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.88712234 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 4.091073754 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.903860531 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.655404032 seconds)
    (80/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.07763065 seconds)
    (81/309) benchmarking ("sort", BigInt, false)...
    done (took 6.89087939 seconds)
    (82/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.300242914 seconds)
    (83/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.88848678 seconds)
    (84/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.142326024 seconds)
    (85/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.919889025 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.967497049 seconds)
    (87/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.89390101 seconds)
    (88/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.891164526 seconds)
    (89/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.911646067 seconds)
    (90/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.927224085 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.147320172 seconds)
    (92/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.985010329 seconds)
    (93/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.990614363 seconds)
    (94/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.000455303 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.213494203 seconds)
    (96/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.998628568 seconds)
    (97/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.106709199 seconds)
    (98/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.371879387 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.919083243 seconds)
    (100/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.024476706 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.120052467 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.905865804 seconds)
    (103/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.292724994 seconds)
    (104/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.712029791 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.192904838 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.896229642 seconds)
    (107/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.37202542 seconds)
    (108/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.040070227 seconds)
    (109/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.894305693 seconds)
    (110/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.191339947 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.890497983 seconds)
    (112/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.889028497 seconds)
    (113/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.348631085 seconds)
    (114/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.990446939 seconds)
    (115/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.916626043 seconds)
    (116/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.154515664 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.91260443 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.770032815 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.006951927 seconds)
    (120/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.968461711 seconds)
    (121/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.039912269 seconds)
    (122/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.02655087 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.185100183 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.913147279 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.150454734 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.019813921 seconds)
    (127/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.990353569 seconds)
    (128/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.890550413 seconds)
    (129/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 3.969103416 seconds)
    (130/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.050944557 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.896234726 seconds)
    (132/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.17894789 seconds)
    (133/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.335775427 seconds)
    (134/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.973488882 seconds)
    (135/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.030019412 seconds)
    (136/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.579603221 seconds)
    (137/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.065463228 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.896440379 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.56744458 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.646483424 seconds)
    (141/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.531707674 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.503956543 seconds)
    (143/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.381858115 seconds)
    (144/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.897779379 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.145487688 seconds)
    (146/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.07164658 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.251556254 seconds)
    (148/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.904310599 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.156178267 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.077662639 seconds)
    (151/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.923154306 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.894170212 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.899653755 seconds)
    (154/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.223511192 seconds)
    (155/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.89466483 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.606451107 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.897827602 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.094928853 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.204264417 seconds)
    (160/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.211091828 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.159345627 seconds)
    (162/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.974959143 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.909846072 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.89415184 seconds)
    (165/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.974172675 seconds)
    (166/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.039578235 seconds)
    (167/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.977969057 seconds)
    (168/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.750178178 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.38548299 seconds)
    (170/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.295648705 seconds)
    (171/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.011246469 seconds)
    (172/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.88373459 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.989992485 seconds)
    (174/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.159566611 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.891856472 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.22152724 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.89613247 seconds)
    (178/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.95746662 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.00002947 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.054695619 seconds)
    (181/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.01242339 seconds)
    (182/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.270293858 seconds)
    (183/309) benchmarking ("sort", Int8, false)...
    done (took 4.786207329 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.997038095 seconds)
    (185/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.187995625 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.916265161 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.994272907 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.035399732 seconds)
    (189/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.090768993 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.056097319 seconds)
    (191/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.155107638 seconds)
    (192/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.156465762 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.897724658 seconds)
    (194/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.415523444 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.796875046 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.994994337 seconds)
    (197/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.136536576 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.899298007 seconds)
    (199/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.094595797 seconds)
    (200/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.995138691 seconds)
    (201/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.16038492 seconds)
    (202/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.647805001 seconds)
    (203/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.031514333 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.08106626 seconds)
    (205/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.923432615 seconds)
    (206/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.038803771 seconds)
    (207/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.007105263 seconds)
    (208/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.177741431 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.960678893 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.535184024 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.966593837 seconds)
    (212/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.964689808 seconds)
    (213/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.213174789 seconds)
    (214/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.895937613 seconds)
    (215/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.187250716 seconds)
    (216/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.285056806 seconds)
    (217/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.984845134 seconds)
    (218/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.913025055 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.292359431 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.791124248 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.492215482 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.730591196 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.198876966 seconds)
    (224/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.587177583 seconds)
    (225/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.892507445 seconds)
    (226/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 3.657704369 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.894597527 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.207456125 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.790904845 seconds)
    (230/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.91924699 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.906281318 seconds)
    (232/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.902715721 seconds)
    (233/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.917315 seconds)
    (234/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.20496032 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.578579694 seconds)
    (236/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.935966513 seconds)
    (237/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.896414014 seconds)
    (238/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.251820121 seconds)
    (239/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.095820135 seconds)
    (240/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.69985677 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.26283185 seconds)
    (242/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.918521435 seconds)
    (243/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.898761195 seconds)
    (244/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.006765947 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.148773134 seconds)
    (246/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.389917073 seconds)
    (247/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.058893511 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.187585364 seconds)
    (249/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.705461538 seconds)
    (250/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.98432134 seconds)
    (251/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.688707201 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.213737956 seconds)
    (253/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.042961006 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.999424367 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.910841451 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.898769372 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.877419619 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.448989645 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.676518349 seconds)
    (260/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.091127169 seconds)
    (261/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.898780253 seconds)
    (262/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.180200261 seconds)
    (263/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.907720715 seconds)
    (264/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.898083365 seconds)
    (265/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.629346764 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.978966775 seconds)
    (267/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.992071696 seconds)
    (268/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.301217505 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.549318925 seconds)
    (270/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.3079623 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.719400794 seconds)
    (272/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.002978072 seconds)
    (273/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.153159984 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.257505176 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.916596168 seconds)
    (276/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.044072543 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.11549629 seconds)
    (278/309) benchmarking ("sort", Float64, false)...
    done (took 5.631153827 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.305132607 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.922860705 seconds)
    (281/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.958714927 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.231374956 seconds)
    (283/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.320415665 seconds)
    (284/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.991191102 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.898356662 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.24989379 seconds)
    (287/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.456730519 seconds)
    (288/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.603596629 seconds)
    (289/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.121275694 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.937594262 seconds)
    (291/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.939569615 seconds)
    (292/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.672585401 seconds)
    (293/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.112729156 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.691483508 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.903315429 seconds)
    (296/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.35608031 seconds)
    (297/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.214828318 seconds)
    (298/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.660605746 seconds)
    (299/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.187636657 seconds)
    (300/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.109361031 seconds)
    (301/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.009466393 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.933028613 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.326634476 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.218284625 seconds)
    (305/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.421633731 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.84185347 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.119966166 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.037597614 seconds)
    (309/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.338597762 seconds)
  done (took 1020.279846808 seconds)
done (took 1022.163489302 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.928930077 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.92091234 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.903198622 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.925622392 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.015415098 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.948347218 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.916233523 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.909883299 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.954598329 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.954636415 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.904566178 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.944128444 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.902937062 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.904607046 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.905064371 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.922650983 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.208560181 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.927040663 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.923924757 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.915497265 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.922779866 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.905057614 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.956493098 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.94555314 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.908190291 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.910093367 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.909173999 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.923792781 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.019902216 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.907841605 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.914277684 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.921525675 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.209391755 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.926131469 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.904181498 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.92659956 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.919934519 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.919395856 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.909843133 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.939471498 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.343716438 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.908109683 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.907712867 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.907593929 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.90565632 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.915079358 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.908837156 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.914639302 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.923161239 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.924133851 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.340368853 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.926153993 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.910536183 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.9071428 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.920052781 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.909113121 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.911629569 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.923992889 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.926998855 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.925725607 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.198077987 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.937249922 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.912188336 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.926091643 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.916849201 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.374420075 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.908970109 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.915475898 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.342442031 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.918837965 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.374227732 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.922779639 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.910867604 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.923801009 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.941415177 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.212775523 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.928193852 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.907742195 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.916945276 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.907419335 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.921206542 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.926163365 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.913720748 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.908797748 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.928638207 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.952367249 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.922067672 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.90873475 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.921121351 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.928206454 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.918595856 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.924454638 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.913214152 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.908234845 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.922086446 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.914790857 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.913198132 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.91368699 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.914801741 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.923090301 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.342773355 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.929281094 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.908171922 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.907364276 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.909474373 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.924838933 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.342785444 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.912922086 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.932719852 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.959344442 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.911417079 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.199236441 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.938911625 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.926995928 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.922678226 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.913996676 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.909229652 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.199827838 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.362897921 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.927790335 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.912637511 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.910164066 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.929326846 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.911821656 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.908689424 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.213927857 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.934430708 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.931100648 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.034164249 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.924483025 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.943954786 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.909996385 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.917119007 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.957992151 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.929107556 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.944186529 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.915300097 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.93002278 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.929835196 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.908911612 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.924497093 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.925194987 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.913917694 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.919186062 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.909883567 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.957872848 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.927093763 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.93111022 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.933248634 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.034471908 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.90898512 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.199820109 seconds)
done (took 299.994786209 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.986201276 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.908175725 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.028679293 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.90994745 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.998559772 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.98278114 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.914843834 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.909593633 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.909397475 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.406231715 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.910055051 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.916040404 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.904567268 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.906444825 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.976422907 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.906100463 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.905890981 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.348590312 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.907816576 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.987265503 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.906303889 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.912680173 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.9067277 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.420736025 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.906178146 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.906739988 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.987471328 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.906522592 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.351113209 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.905303966 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.905100426 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.367644608 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.985582867 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.934708476 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.916008269 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.914745198 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.997150685 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.91244198 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.972447552 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.972452517 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.024305181 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.942931567 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.905867245 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.906454789 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.910116889 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.90693507 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.908313262 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.943337092 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.908686059 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.917427114 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.350465339 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.912794347 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.912751766 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.90685001 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.911047555 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.937220937 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.908260091 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.906788243 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.985125642 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.91108517 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.975653878 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.403800085 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.406294347 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.908319365 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.910363739 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.908880242 seconds)
  done (took 187.880591878 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.978805975 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.983067253 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.973963356 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.911150468 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.958925585 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.976324434 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.913078799 seconds)
  done (took 15.531276642 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.915435579 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.909160479 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.959748883 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.957094578 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.90950804 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.087529929 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.919454383 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.915561171 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.935559535 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.909547744 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.575154369 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.957459745 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.917308244 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.908174979 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.922772456 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.965638184 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.912370935 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.911198929 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.02346968 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.057614035 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.914655849 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.917407811 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.936613449 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.921685799 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.908176446 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.912145769 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.9118697 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.91713715 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.910193297 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.91000741 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.910232994 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.961796008 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.909706292 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.90756606 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.909064889 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.909579383 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.910692277 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.91088448 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.909164706 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.908785319 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.910663494 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.911304487 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.910734552 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.909031986 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.910697045 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.934547011 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.909962115 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.911069158 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.911362561 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.909187815 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.935604165 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.911648077 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.911350469 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.915983165 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.953938359 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.917232441 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.913525947 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.910652428 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.909849189 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.910876905 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.911535624 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.0617616 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.960527912 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.911669425 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.965986388 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.066830447 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.911344801 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.912793537 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.910789862 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.999916289 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.911867731 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.960772867 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.912667709 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.025492567 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.911748711 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.092811406 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.934989141 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.916127165 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.916482373 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.911568879 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.916568504 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.912167156 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.914160791 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.919939929 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.917162535 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.911883159 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.911756491 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.914047845 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.919407233 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.912825083 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.960265966 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.913578483 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.913419708 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.051479735 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.913357507 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.028566704 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.939839979 seconds)
  done (took 210.014566641 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.919826465 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.921865318 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.915900391 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.926803651 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.913347504 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.91390502 seconds)
  done (took 13.350003734 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.915359389 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.917028856 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.913543183 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.91374653 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.914295015 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.913291661 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.912628084 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.913506903 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.91626818 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.911982744 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.917845918 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.913563234 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.913059679 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.912397341 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.91281302 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.912251373 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.914282342 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.912835833 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.914392883 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.914782773 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.120167261 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.914742402 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.916658159 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.917768131 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.919086259 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.915652685 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.927792807 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.912488154 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.913655948 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.921023393 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.918939859 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.916449081 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.916479426 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.920077664 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.916591893 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.916975042 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.917835098 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.91640253 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.913898462 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.915972729 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.917467047 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.919166774 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.913127296 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.91556037 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.917065573 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.92083451 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.918127769 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.928628399 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.914794099 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.916720912 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.91660738 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.916452577 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.916968347 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.915047627 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.920588863 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.922373149 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.921842532 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.920330241 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.916979223 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.921384009 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.91986982 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.919644799 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.917596342 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.919576708 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.924014152 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.916697193 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.920442747 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.921088634 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.917868673 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.914879875 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.925189006 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.919939359 seconds)
  done (took 141.076975327 seconds)
done (took 569.709535974 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.963556976 seconds)
  done (took 8.808689143 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.096062674 seconds)
  done (took 9.039997999 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.453945311 seconds)
  done (took 10.302104511 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.928700875 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.930441546 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.924809505 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.916619836 seconds)
  done (took 29.557818678 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.307586937 seconds)
  done (took 9.154335453 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.933021273 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.916821098 seconds)
  done (took 15.770578941 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.945383666 seconds)
  done (took 8.792976291 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.313627876 seconds)
  done (took 9.171388211 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.923050158 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.933965002 seconds)
  done (took 15.724950775 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.922193295 seconds)
  done (took 8.769813751 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.164740452 seconds)
  done (took 10.098590445 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.928249389 seconds)
  done (took 8.816616126 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.978047871 seconds)
  done (took 8.825615485 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.107183867 seconds)
  done (took 9.954359541 seconds)
done (took 164.635919314 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.923662222 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.920259668 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.918943038 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.917303562 seconds)
  done (took 29.526689991 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.95803542 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.957629206 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.966373763 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.955693192 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.946666228 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.948315225 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.956365503 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.959708395 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.946825458 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.953416499 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.956849924 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.955185515 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.957021572 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.965147561 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.966421281 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.955432725 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.957362034 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.959203085 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.946405676 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.965007763 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.953726867 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.956220946 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.925835075 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.922622772 seconds)
  done (took 48.740621813 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.113074119 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.989997543 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.079574967 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.975414621 seconds)
  done (took 10.005580601 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.922028299 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.985493618 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.975409808 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.970794202 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.972296799 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.025808982 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.975453034 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.063776848 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.050783911 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.048887679 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.93034346 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.943630342 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.947193837 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.971168343 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.028372186 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.923572122 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.923786845 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.039081277 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.986493332 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.111122532 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.923327584 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.977557798 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.975257183 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.977627465 seconds)
  done (took 49.498230147 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.924880894 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.93213536 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.931798734 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.926641758 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.924726768 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.926553983 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.932956751 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.927608406 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.948432644 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.926107776 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.924014509 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.925352481 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.930750481 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.926177312 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.925709022 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.938797725 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.939517379 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.925496792 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.930333017 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.931879721 seconds)
  done (took 40.44908555 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.92289213 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.769702665 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.26901431 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.179780248 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.924044564 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.921899088 seconds)
  done (took 31.83728417 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.938124342 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.930313884 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.925388736 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.980408754 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.059967181 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.928278288 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.926691318 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.935050453 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.968571047 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.987778751 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.939574682 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.955353764 seconds)
  done (took 25.327886876 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.93303808 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.927338604 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.927012948 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.939367744 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.939862404 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.935533178 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.937748201 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.928601209 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.93717 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.947525704 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.934260536 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.936596152 seconds)
  done (took 45.083539795 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.632184775 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997464765 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.924066344 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.800455177 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.380401141 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.474248066 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.818061259 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.717791184 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.39056222 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.852041097 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.128656385 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.925580719 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.009509094 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.927169212 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19687284 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.308715 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11687806 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.167507729 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.660463143 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.95281074 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.128671753 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144512863 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.211035628 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927130975 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929984509 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.933625414 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.4756145 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.734921591 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958934333 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.233517685 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164475901 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.851171458 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983150705 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.931281711 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.939901213 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931035583 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930218631 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200213031 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.928160702 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170529131 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003726386 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175928655 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932603921 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.347354852 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.636531116 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.247836942 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.041685981 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.927336607 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930389532 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927098002 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.853386243 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011101188 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.930136149 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932820373 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.627838078 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.927769788 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001582875 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.927747906 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130786337 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.737204949 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.618045962 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.92876517 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93044323 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.502476363 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.037198583 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.041106929 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.717330733 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.307422235 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.345199649 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.028129995 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.930209672 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929583539 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.065419207 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891172788 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.655876511 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96318383 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066032147 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.943670966 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.570199668 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226003929 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.368332548 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.483013236 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.850932624 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204355872 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.6317379 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.913081481 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146905735 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.776615197 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.855773273 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146817405 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962349516 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934120366 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.193912134 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713902484 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.0363906 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.941920375 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362621111 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946164471 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.934800073 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932810897 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.144477999 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328020487 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956554343 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.051770354 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944601015 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.013301649 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857976185 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.941684302 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.931889013 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.835364235 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.938231917 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8651353 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.971318747 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.595263517 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.964475903 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.883301325 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.934409563 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.04557139 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967468039 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.883523093 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190374532 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.23172237 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.600554413 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890623485 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.058689371 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.326662695 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1524546 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.935037736 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.145453278 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.449625365 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.37544489 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.975485282 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224412441 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.992580539 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.22666327 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357688263 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008746519 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.723346724 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.730971828 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.150509667 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946633564 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.936499247 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935220371 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937961773 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86896335 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.571884455 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.345017012 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.096781219 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.148541478 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.245192132 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.910809614 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.8885327 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234712755 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.071254692 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.909371696 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.595451581 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.335666587 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.744286216 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.956315893 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.074235828 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.098834008 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.891206334 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946614693 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009999493 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950394049 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.94407845 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.323966077 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.294362978 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.935358292 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.936486138 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.883527379 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943752618 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.936694663 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.469870475 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902719014 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.93370508 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.946161202 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.810017205 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008545806 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939682694 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937291444 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.472145229 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.437044683 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.938335083 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.59314109 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.935479593 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121574623 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.208542568 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.341241803 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058447064 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.634310801 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.380385598 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.044011362 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.635264162 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.861352074 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.934268465 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.875005824 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937187254 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.936661343 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940640191 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.123335712 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.2127899 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237083251 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.40957385 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.001276558 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139186077 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.66491032 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.887212517 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.937075756 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942242991 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.939438287 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936243837 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.446843593 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.227018047 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.049362784 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.962120545 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.941053495 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064285066 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.947831291 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.864108264 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.937364863 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939450024 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.353214848 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.959596212 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.883398628 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.263203634 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.834700103 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060893074 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982407684 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.94876501 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942414877 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.661747635 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.976467995 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865000871 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399495196 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967903037 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.720689543 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423783219 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.524123674 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234451786 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.256482996 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.267936793 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.004435662 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.151103663 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.023561053 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991544697 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.024560066 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875551411 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.861067565 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.604281018 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2744429 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205574104 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943536829 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155605871 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.667870318 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.163792218 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966984827 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.614524383 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241628285 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.913842898 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955054621 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.253011356 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038743467 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02109544 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940913058 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.889045525 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.279827912 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974031127 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.640075218 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954471406 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.291966665 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357572084 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.000950113 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.356347244 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149576115 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.939970408 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295205529 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.134932272 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.970285287 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.944894959 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.92796298 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.152060559 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.520742039 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.81315362 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942910115 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.083879573 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230462857 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.843675253 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.941590714 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.080927065 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193271451 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941275948 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.327127232 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301537719 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.039471167 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998606632 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166655631 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.627454773 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241770713 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.494424003 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.422265484 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944198299 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.865551134 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.639910297 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.144413466 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.942127808 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.906131017 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151802883 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171312802 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.624289593 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159388172 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.183080476 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.952624771 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.215045726 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012150013 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.039505515 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.279517306 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.365683954 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.183697814 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167241304 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.483581933 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.155722753 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.395916394 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.101203001 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.943294356 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146392228 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160446376 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.155587393 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.367177695 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109323238 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.651864433 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.946704379 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.149769104 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24390796 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000371003 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.366789098 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.109959381 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.026304455 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948408281 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007326882 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.947621442 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951085918 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.362742016 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.470934322 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.957377524 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021306359 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.073846986 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.442520178 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.943615971 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.948702761 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216077205 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.296837756 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.276993396 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.923961234 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.942386625 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949478858 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072126386 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.870442104 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950355459 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215750411 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.947517582 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338108109 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.08690523 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959299697 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.286633067 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.327922106 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.612020922 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.900856876 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949908526 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162494152 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247155732 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.11426362 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.052089295 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217308111 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.284243417 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.974384075 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.357692068 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185568635 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949243568 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.819934903 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.948957117 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074865705 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.142945916 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222430863 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.45092816 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.695245006 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.209288674 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.816018994 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.949635871 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.730594745 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214771829 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.218744248 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.99634557 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011053086 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950797026 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370586998 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.663529067 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079164105 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.887950101 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872162567 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.947508654 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.269544987 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.188803231 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.656315276 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.951641068 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.225463331 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249064005 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220600005 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.997299557 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.864819443 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160623553 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9491997 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.951897576 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.203599622 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.170903386 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188806114 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950914593 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.949084237 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.755615041 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874745318 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.947868602 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001508922 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174359223 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970427153 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.462552192 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.647795894 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227077131 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993552509 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951267411 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.220504272 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.466691053 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.499936619 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.950318525 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172117699 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.92267896 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243433113 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.951165827 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369405393 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246643297 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.95025164 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.46649639 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.188833658 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21647745 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877906366 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955993582 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163387999 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.836236029 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.948332024 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.964476249 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371964328 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177152555 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.685171344 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506476095 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.949569543 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.952500725 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377050962 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975088603 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389131913 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976747753 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968295072 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.467349233 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.643343387 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.238233437 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.192502752 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.482570397 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.536611415 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.952001831 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.951282715 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953110719 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.869653129 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301856089 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.137342308 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231150459 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.979233694 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.37926548 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978341043 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.367144757 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061814008 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.095554449 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982368091 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.472706543 seconds)
  done (took 1692.677610217 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.980373147 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.018377948 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.962297198 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.954511114 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.955518369 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.960787413 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.024218548 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.947774332 seconds)
  done (took 57.681462346 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.947568226 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.959025589 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.951535824 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.947491827 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.955238102 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.947456072 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.103263478 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.954061494 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.95862631 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.954250535 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.948282832 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.947779343 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.230208673 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.96231646 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.947342358 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.950144502 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.950519857 seconds)
  done (took 75.49486341 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.948266415 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.183485462 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.003307446 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.949982036 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.890732673 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.959851687 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.901486931 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.975339808 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.95078633 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.174476887 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.246250567 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.95436236 seconds)
  done (took 91.0135015 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.951834856 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.949141846 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.948442338 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.949607146 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.94990725 seconds)
  done (took 11.628155454 seconds)
done (took 2210.84578385 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.179172521 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.007176009 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.041832963 seconds)
  done (took 5.925158385 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.095657929 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.141076132 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.25702898 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.015658646 seconds)
  done (took 10.390802314 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.256062856 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.340715178 seconds)
  done (took 6.471962433 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.299841102 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.955473603 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.356650784 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.951565695 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.949214144 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.951132683 seconds)
  done (took 22.734472746 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.950765441 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.952357481 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.949510049 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.951144044 seconds)
  done (took 9.681006576 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.949838024 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.664384781 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.947578211 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.961942079 seconds)
  done (took 21.398730263 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.0979134 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.083599576 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.094334584 seconds)
  done (took 8.151628367 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.092432032 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.787934326 seconds)
  done (took 6.756509745 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.102262916 seconds)
  done (took 3.980082805 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.981359305 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.224533261 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.446267958 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.904681707 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.650731751 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.079048148 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.339955431 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.221943735 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.37828806 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.420638067 seconds)
  done (took 26.52515671 seconds)
done (took 137.681813233 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.508915388 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.002657597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.172868796 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.383031817 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.196502059 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.172509682 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.194066667 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.376428543 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.036775193 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.033344587 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.36234253 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.200539404 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.138807474 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.99360406 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.141809255 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.991815441 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.20220621 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.358631149 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.024149723 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.262644382 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.196572228 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.999960124 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.199230275 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.003185266 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.198287786 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.123956955 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.558567697 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.992120059 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.187136529 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.543919093 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.124840624 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.411143465 seconds)
  done (took 172.185054178 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.972131521 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.97309928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.970146617 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.967783094 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.457706111 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.967734702 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.967912114 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.974200803 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.438709376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.446813439 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.967153005 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.462500946 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.971644225 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.971100632 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.968050834 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.972966015 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.618745874 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.969124298 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.971848444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.969044416 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.969554672 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.295280758 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.969476708 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.288552587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.618501998 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.969386364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.968013014 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.96861375 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.97241094 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.968134068 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.973879678 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.971136906 seconds)
  done (took 212.810264885 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.973525614 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.971181361 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.972349968 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.970557672 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.971213674 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.971980576 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.972645627 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.971779436 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.810160057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.813173292 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.972843543 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.972770005 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.973405798 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.971540001 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.98037221 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.981110273 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.977322173 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.999483037 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.978673228 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.980238945 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.980724621 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.724305723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.980445827 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.834874677 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.976511618 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.971996393 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.978620032 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.975955793 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.973859123 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.975752913 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.977007181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.97761228 seconds)
  done (took 224.413638733 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.215478215 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.975271639 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.980864651 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.963269458 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.975073977 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.975176343 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.951603149 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.222726312 seconds)
  done (took 20.159718984 seconds)
done (took 631.480389586 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.35799899 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.196230583 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.155864684 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.997750657 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.250151811 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.043661947 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.994657766 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.062431844 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.834916892 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.069924399 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.638390818 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.02024757 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.736980535 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.02530995 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.120595241 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.051676613 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.571749053 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.665871512 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.139465589 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.063242003 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.179390544 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.924165625 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.072719954 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.862158354 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.650973959 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.973388044 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.036915153 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.579252788 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.008987063 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.156766021 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.694018487 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.319588126 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.009214807 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.994982762 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.045148175 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.025392799 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.24578463 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.005989952 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.11963452 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.713032752 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.068052056 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.743791287 seconds)
  done (took 107.323963575 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.989164725 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.985830514 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.984940709 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.985383378 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.992868014 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.984686051 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.986274025 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.986255927 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.98467332 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.985093936 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.986238072 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.996272101 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.984872653 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.998212803 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.985230271 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.986434275 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.987048152 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.994699806 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.990228071 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.988101907 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.986487667 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.988346138 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.981596116 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.988754016 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.98959919 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.991191595 seconds)
  done (took 53.6066939 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.979813838 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.142795767 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.228606437 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.008333085 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.989553195 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.989855552 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.00935171 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.993192936 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.988708621 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.986944598 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.077802748 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.990277445 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.003725564 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.225429435 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.99824578 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.981140934 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.983326984 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.985526743 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.140743843 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.994797919 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.000560712 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.986437806 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.001799716 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.990636782 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.983621835 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.986057145 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.983976385 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.457510245 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.989913331 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.074200005 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.054355321 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.001092242 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.395464953 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.231876214 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.038405473 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.989574205 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.981736063 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.072567944 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.986025563 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.983516888 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.006729739 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.988678463 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.229284519 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.521317117 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.000761603 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.991105137 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.46750257 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.089272233 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.024472562 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.996580975 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.233071712 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.004101083 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.983329101 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.987859889 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.021964209 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.998255034 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.984876076 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.354718719 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.997865267 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.004102253 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.989086128 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.988848679 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.149162366 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.992533368 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.140172059 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.992939556 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.994057436 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.987561866 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.23174302 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.003850115 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.532095765 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.999627055 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.986756409 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.079714771 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.144097694 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.493755957 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.002397032 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.152847786 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.416400725 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.010829574 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.99571586 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.451965922 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.015610379 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.996505198 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.990382594 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.99235583 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.990644158 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.035071145 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.005120023 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.437687654 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.522827274 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.3699562 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.013891107 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.995124588 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.986346965 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.351360989 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.989531512 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.987381927 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.219923265 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.539475294 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.000640863 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.993505925 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.51085001 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.001341814 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.006725335 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.989463846 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.238913041 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.000814805 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.03229699 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.988594197 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.994321221 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.996315451 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.00931441 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.999409141 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.99358471 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.506081156 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.103845522 seconds)
  done (took 246.224797517 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.991877255 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.991155635 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.990718943 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.990905114 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.989029259 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.990659326 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.992786249 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.992867872 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.994930025 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.991317297 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.991957172 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.992638693 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.995850178 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.00065052 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.038217447 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.000323292 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.602381951 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.995795174 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.990438587 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.993948971 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.636379994 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.99891585 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.99636531 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.995778727 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.997647178 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.99621177 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.998190868 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.036234378 seconds)
  done (took 171.094110348 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.997520125 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.112720596 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.019328959 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.030036003 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.00453236 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.999907132 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.098555109 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.015708462 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.999370541 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.998581403 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.001694303 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.059780557 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.016469479 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.097255304 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.026385221 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.10391883 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.095732581 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.003501047 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.000202817 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.001052819 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.027491635 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.004998575 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.061039285 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.124718214 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.015525358 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.112333166 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.021775374 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.001632502 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.999846977 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.111238511 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.019354615 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.059461259 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.033926989 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.016952711 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.115631428 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.115056739 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.101704551 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.104313461 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.002240699 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.000894359 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.000298626 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.002946189 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.117214944 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.019085157 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.002591706 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.117840636 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.018929584 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.002472109 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.001338493 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.00129979 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.014919759 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.016338757 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.06233034 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.130303698 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.03733944 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.02334552 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.103265541 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.126396117 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.002298842 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.099727155 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.005242029 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.117449679 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.020365573 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.002766967 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.003677789 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.004898257 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.03537414 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.106493189 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.105324003 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.00679401 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.100973166 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.037130423 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.008635724 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.003259655 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.005110989 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.116247416 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.12014465 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.034518162 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.038736317 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.029381247 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.008999523 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.002480189 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.006132982 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.019688606 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.006842876 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.117100697 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.119588124 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.008864698 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.004759339 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.008654566 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.006758749 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.031349774 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.123713172 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.03970447 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.108635582 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.066667928 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.078550051 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.019000336 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.017265442 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.004470573 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.067759422 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.020547377 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.017873225 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.302057504 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.065642889 seconds)
  done (took 216.735177297 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.40120547 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.048703878 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.057264926 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.333381575 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.375752772 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.975707884 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.052968519 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.057211096 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.083972946 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.278951926 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.128675996 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.069239601 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.037136256 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.025200072 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.048666555 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.08446636 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.056775594 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.40084133 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.255075812 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.526080287 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.043920105 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.315428959 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.363654023 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.629027831 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.108275888 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.475676062 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.655271508 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.219318913 seconds)
  done (took 67.046373029 seconds)
done (took 863.929694982 seconds)
SAVING RESULT...
DONE!
